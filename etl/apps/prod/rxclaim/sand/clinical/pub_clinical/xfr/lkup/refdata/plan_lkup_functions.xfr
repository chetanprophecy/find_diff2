/******************************************************************************************************************************************
 * pub_clinical -> $PUB_CLINICAL_LKUP_XFR/refdata/plan_lkup_functions.xfr
 * 
 * Change Log:
 * 
 *  Date        Author                  Description
 * ---------------------------------------------------------------------------------------------------------------------------------------
 *  2016/08/29  Gaurav Mirje            Initial version, create lookup functions for plan process. 
 *  2016/10/11  Paul Thompson           Switched to cli_hash_lkup_types.dml
 *                                      Added get functions and global lookup variables
 *  2016/11/12  Paul Thompson           Added usage of indexes (when available) and also lookups on serial partitions
 ******************************************************************************************************************************************/

include "~$PUB_CLINICAL_DML/cli_msg_types.dml";
include "~$PUB_CLINICAL_DML/cli_hash_lkup_types.dml";

constant cli_string_t  PUB_CLINICAL_SERIAL_REFDATA  parameter;
constant cli_string_t  PUB_CLINICAL_MFS_REFDATA     parameter;

cli_string_t out :: get_plan_lkup_path() inline =
begin
  out :1: if (this_partition() == -1) PUB_CLINICAL_SERIAL_REFDATA + '/plan.dat';
  out  ::        this_partition_path( PUB_CLINICAL_MFS_REFDATA    + '/plan.dat' );
end;

cli_string_t out :: get_plan_indx_path(cli_string_t lkup_path, cli_string_t index_nm) inline =
begin
  out :1: re_replace(lkup_path, '\\.dat$', '.' + index_nm + '.idx');
end;

/*********************************************/
/* Source Environment Lookup (ids surrogate key) */
/*********************************************/

type plan_lkup_t =
record
  lookup_identifier_type  id             = -1; 
  plan_hash_lkup_t        RecordFormat() = allocate_with_defaults();
  string('')              key()          = {plan.plan_cd; plan.pln_eff_dt};
  
  // Optional function field. This an example technical repository
  // location referenced using dollar substitution in PDL.
  // You can specify a different technical repository location.
  //string('') eme_dataset_location() = "$DATA_LOOKUP/lookup.dat"; 
end;

let plan_lkup_t GLKUP_PLAN = allocate_with_nulls();

plan_lkup_t out :: load_plan_lkup() inline =
begin
  if (GLKUP_PLAN.id == lookup_not_loaded())
  begin
    let lkup_path  = get_plan_lkup_path();
    let indx_path  = get_plan_indx_path(lkup_path, 'plan');
    let indx_found = file_information(indx_path).found;
    
    GLKUP_PLAN = if (indx_found) lookup_load(lkup_path, indx_path)
                 else            lookup_load(lkup_path);
  end;
  
  out :: GLKUP_PLAN;
end;

plan_t out :: get_plan(plan_cd, pln_eff_dt) inline =
begin
  let plan_lkup_t lkup = load_plan_lkup();
  out :: lookup(lkup, plan_cd, pln_eff_dt).plan;
end;
