/******************************************************************************************************************************************
 * pub_clinical -> $PUB_CLINICAL_LKUP_XFR/refdata/clt_lkup_functions.xfr
 * 
 * Change Log:
 * 
 *  Date        Author                  Description
 * ---------------------------------------------------------------------------------------------------------------------------------------
 *  2016/08/29  Gaurav Mirje            Initial version, create lookup functions for client process. 
 *  2016/09/27  Sundari Kala            Modified the lookup name type and corrected the process.
 *  2016/10/11  Paul Thompson           Switched to cli_hash_lkup_types.dml
 *                                      Added get functions and global lookup variables
 *  2016/11/12  Paul Thompson           Added usage of indexes (when available) and also lookups on serial partitions
 ******************************************************************************************************************************************/

include "~$PUB_CLINICAL_DML/cli_msg_types.dml";
include "~$PUB_CLINICAL_DML/cli_hash_lkup_types.dml";

constant cli_string_t  PUB_CLINICAL_SERIAL_REFDATA  parameter;
constant cli_string_t  PUB_CLINICAL_MFS_REFDATA     parameter;

cli_string_t out :: get_clt_lkup_path() inline =
begin
  out :1: if (this_partition() == -1) PUB_CLINICAL_SERIAL_REFDATA + '/clt.dat';
  out  ::        this_partition_path( PUB_CLINICAL_MFS_REFDATA    + '/clt.dat' );
end;

cli_string_t out :: get_clt_indx_path(cli_string_t lkup_path, cli_string_t index_nm) inline =
begin
  out :1: re_replace(lkup_path, '\\.dat$', '.' + index_nm + '.idx');
end;

/*******************************************/
/* Source Environment Lookup (natural key) */
/*******************************************/

type clt_lkup_t =
record
  lookup_identifier_type  id             = -1; 
  client_hash_lkup_t      RecordFormat() = allocate_with_defaults();
  string('')              key()          = {clt.client_id};
  
  // Optional function field. This an example technical repository
  // location referenced using dollar substitution in PDL.
  // You can specify a different technical repository location.
  //string('') eme_dataset_location() = "$DATA_LOOKUP/lookup.dat"; 
end;

let clt_lkup_t GLKUP_CLT = allocate_with_nulls();

clt_lkup_t out :: load_clt_lkup() inline =
begin
  if (GLKUP_CLT.id == lookup_not_loaded())
  begin
    let lkup_path  = get_clt_lkup_path();
    let indx_path  = get_clt_indx_path(lkup_path, 'clt');
    let indx_found = file_information(indx_path).found;
    
    GLKUP_CLT = if (indx_found) lookup_load(lkup_path, indx_path)
                else            lookup_load(lkup_path);
  end;
  
  out :: GLKUP_CLT;
end;

clt_t out :: get_clt(client_id) inline =
begin
  let clt_lkup_t lkup = load_clt_lkup();
  out :: lookup(lkup, client_id).clt;
end;
