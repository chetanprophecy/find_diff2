/******************************************************************************************************************************************
 * pub_clinical -> $PUB_CLINICAL_LKUP_XFR/refdata/prescriber_alias_lkup_functions.xfr
 * 
 * Change Log:
 * 
 *  Date        Author                  Description
 * ---------------------------------------------------------------------------------------------------------------------------------------
 *  2016/08/29  Gaurav Mirje            Initial version, create lookup functions for prescriber_alias process. 
 *  2016/10/11  Paul Thompson           Switched to cli_hash_lkup_types.dml
 *                                      Added get functions and global lookup variables
 ******************************************************************************************************************************************/

include "~$PUB_CLINICAL_DML/cli_msg_types.dml";
include "~$PUB_CLINICAL_DML/cli_hash_lkup_types.dml";

constant cli_string_t PUB_CLINICAL_MFS_LOOKUP parameter;

cli_string_t out :: get_prescriber_alias_lkup_path() inline =
begin
  out :: PUB_CLINICAL_MFS_LOOKUP + '/cli_prescriber_alias.dat';
end;

/*****************************************/
/* Prescriber Alias Lookup (natural key) */
/*****************************************/

type prescriber_alias_lkup_t =
record
  lookup_identifier_type        id             = -1; 
  prescriber_alias_hash_lkup_t  RecordFormat() = allocate_with_defaults();
  string('')                    key()          = {prescriber_alias.cli_prescriber_id; prescriber_alias.prescriber_id_qlfr_cd};    
  
  // Optional function field. This an example technical repository
  // location referenced using dollar substitution in PDL.
  // You can specify a different technical repository location.
  //string('') eme_dataset_location() = "$DATA_LOOKUP/lookup.dat"; 
end;

let prescriber_alias_lkup_t GLKUP_PRESCRIBER_ALIAS = allocate_with_nulls();

prescriber_alias_lkup_t out :: load_prescriber_alias_lkup() inline =
begin
  if (GLKUP_PRESCRIBER_ALIAS.id == lookup_not_loaded())
    GLKUP_PRESCRIBER_ALIAS = lookup_load(this_partition_path(get_prescriber_alias_lkup_path()));
  
  out :: GLKUP_PRESCRIBER_ALIAS;
end;

prescriber_alias_t out :: get_prescriber_alias(cli_prescriber_id, prescriber_id_qlfr_cd) inline =
begin
  let prescriber_alias_lkup_t lkup = load_prescriber_alias_lkup();
  out :: lookup(lkup, cli_prescriber_id, prescriber_id_qlfr_cd).prescriber_alias;
end;
