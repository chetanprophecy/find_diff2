@
{18|Type|XXGrepository|Primary_Name|XXGgraph|_ab_object_schema|0|_ab_semantic_schema|6|eme_flatten_format|1|schema_version|34|root_id|0|ent_count|30|rel_count|46|}
{2010001002|XXGdirectory|0|1|1|0|{@{}@}}
{2010600005|XXGgraph|1|0|1|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|!ab_compatibility|3.2.6.4|3|9|P|@{0|}}
{30001002|XXparameter|_UseNewErrorLogDML|True|13|1|Hl||{0|}}
}}@0|@0|0|0|0|0|0|0|convert_to_excel_sk|nkrish14|@1|100|-1|@9|@34817|{0|}0|0|{0|}{0|}{0|}{0|}1.0|656000|176000|7|}}
{2010703001|XXGgraphinfo|2|0|3|0|{@{}@1|3.2.6|{1|1|}Job 'convert_to_excel_sk' Execution Status Report


Job "convert_to_excel_sk" Execution started at Thursday, June 14, 2018 15:40:53
Job completed successfully at Thursday, June 14, 2018 15:50:18

------------------------------
Job Statistics:

Job status at termination: Done
Run time (wall clock): 0:09:25
Run performed by user nkrish14
Total data moved through all flows: 106092 records (675487764 bytes)
Total CPU time (all processes): 855 seconds
Average CPU utilization across all nodes: 0.00 percent
||||@@33207807|}}
{2010705002|XXGrunsettings|3|0|5|0|{@{}@computer based training sandbox||||1|60|0|1|1|0|0|0|0|1|1|0|0|1|2|1|1|0|0|0|@16|}}
{2010242002|XXGface|4|0|7|0|{@{}@Arial|0|100|0|}}
{2010210004|XXGflow|5|0|9|0|{@{}@384|.5|.5|{0|}32|17|}}
{2010243001|XXGwatcher|6|0|11|0|{@{}@1|100|-1||0|}}
{2010210004|XXGflow|7|0|13|0|{@{}@384|.5|.5|{0|}34|17|}}
{2010243001|XXGwatcher|8|0|15|0|{@{}@1|100|-1||0|}}
{2010503005|XXGfvertex|9|0|17|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Input_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|read_metadata|record
decimal(15) RXCLMNBR;
decimal(3) CLMSEQNBR;
string(1) CLAIMSTS;
string(9) CARRIERID;
string(9) SCARRIERID;
decimal(10) CARRPROC;
string(3) CLNTID;
string(3) CLNTSGMNT;
string(2) CLNTREGION;
string(15) ACCOUNTID;
string(10) ACCTBENCDE;
string(2) VERSIONNBR;
string(15) GROUPID;
string(10) GROUPPLAN;
string(10) GRPCLIBENF;
string(4) GROUPSIC;
string(1) CLMRESPSTS;
string(20) MEMBERID;
string(25) MBRLSTNME;
string(15) MBRFSTNME;
string(1) MBRMDINIT;
string(3) MBRPRSNCDE;
string(1) MBRRELCDE;
string(1) MBRSEX;
decimal(8) MBRBIRTH;
decimal(3) MBRAGE;
string(15) MBRZIP;
string(9) SOCSECNBR;
string(18) DURKEY;
string(1) DURFLAG;
string(20) MBRFAMLYID;
string(1) MBRFAMLIND;
string(1) MBRFAMLTYP;
string(2) COBIND;
string(10) MBRPLAN;
string(6) MBRPRODCDE;
string(6) MBRRIDERCD;
string(10) CARENETID;
string(10) CAREQUALID;
string(10) CAREFACID;
string(25) CAREFACNAM;
string(15) MBRPCPHYS;
string(15) PPRSFSTNME;
string(25) PPRSLSTNME;
string(1) PPRSMDINIT;
string(6) PPRSSPCCDE;
string(3) PPRSTATE;
string(1) MBRALTINFL;
string(10) MBRALTINCD;
string(20) MBRALTINID;
decimal(8) MBRMEDDTE;
string(1) MBRMEDTYPE;
string(11) MBRHICCDE;
string(20) CARDHOLDER;
string(15) PATLASTNME;
string(12) PATFRSTNME;
string(3) PERSONCDE;
string(1) RELATIONCD;
string(1) SEXCODE;
decimal(8) BIRTHDTE;
string(1) ELIGCLARIF;
string(2) CUSTLOC;
string(2) SBMPLSRVCE;
string(2) SBMPATRESD;
string(15) PRMCAREPRV;
string(2) PRMCAREPRQ;
string(10) FACILITYID;
string(2) OTHCOVERAG;
string(6) BINNUMBER;
string(10) PROCESSOR;
string(15) GROUPNBR;
string(2) TRANSCDE;
decimal(8) DATESBM;
decimal(6) TIMESBM;
decimal(7) CHGDATE;
decimal(6) CHGTIME;
decimal(8) ORGPDSBMDT;
decimal(8) RVDATESBM;
decimal(2) CLMCOUNTER;
decimal(2) GENERICCTR;
decimal(2) FORMLRYCTR;
string(12) RXNUMBER;
string(1) RXNUMBERQL;
string(2) REFILL;
string(1) DISPSTATUS;
decimal(8) DTEFILLED;
string(1) COMPOUNDCD;
string(2) SBMCMPDTYP;
string(2) PRODTYPCDE;
string(20) PRODUCTID;
decimal(9) PRODUCTKEY;
decimal(6) METRIQTY;
decimal(13) DECIMALQTY;
decimal(3) DAYSSUPPLY;
string(1) PSC;
decimal(8) WRITTENDTE;
decimal(2) NBRFLSAUTH;
string(1) ORIGINCDE;
string(2) SBMCLARCD1;
string(2) SBMCLARCD2;
string(2) SBMCLARCD3;
string(11) PAMCNBR;
string(2) PAMCCDE;
string(11) PRAUTHNBR;
string(2) PRAUTHRSN;
decimal(7) PRAUTHFDTE;
decimal(7) PRAUTHTDTE;
string(30) LABELNAME;
string(70) PRODNAME;
string(5) DRUGMFGRID;
string(10) DRUGMFGR;
string(14) GPINUMBER;
string(60) GENERICNME;
string(2) PRDPACUOM;
decimal(12) PRDPACSIZE;
decimal(6) DDID;
decimal(5) GCN;
decimal(6) GCNSEQ;
decimal(10) KDC;
string(8) AHFS;
string(1) DRUGDEACOD;
string(1) RXOTCIND;
string(1) MULTSRCCDE;
string(1) GENINDOVER;
string(1) PRDREIMIND;
string(1) BRNDTRDNME;
string(2) FDATHERAEQ;
decimal(12) METRICSTRG;
string(10) DRGSTRGUOM;
string(2) ADMINROUTE;
string(11) ADMINRTESN;
string(4) DOSAGEFORM;
string(1) NDA;
string(1) ANDA;
string(1) ANDAOR;
string(10) RXNORMCODE;
string(1) MNTDRUGCDE;
string(1) MNTSOURCE;
string(1) MNTCARPROR;
string(1) MNTGPILIST;
string(10) CPQSPCPRG;
string(1) CPQSPCPGIN;
string(10) CPQSPCSCHD;
string(1) THRDPARTYX;
string(1) DRGUNITDOS;
string(1) SBMUNITDOS;
string(1) ALTPRODTYP;
string(13) ALTPRODCDE;
string(6) SRXNETWRK;
string(2) SRXNETTYPE;
string(6) RXNETWORK;
string(25) RXNETWRKNM;
string(9) RXNETCARR;
string(1) RXNETWRKQL;
string(1) RXNETPRCQL;
string(10) REGIONCDE;
string(10) PHRAFFIL;
string(3) NETPRIOR;
string(2) NETTYPE;
decimal(5) NETSEQ;
string(10) PAYCNTR;
string(10) PHRNDCLST;
string(10) PHRGPILST;
string(15) SRVPROVID;
string(2) SRVPROVIDQ;
string(10) NPIPROV;
string(12) PRVNCPDPID;
string(15) SBMSRVPRID;
string(2) SBMSRVPRQL;
string(55) SRVPROVNME;
string(1) PROVLOCKQL;
string(15) PROVLOCKID;
string(15) STORENBR;
string(6) AFFILIATIN;
string(12) PAYEEID;
string(3) DISPRCLASS;
string(3) DISPROTHER;
string(10) PHARMZIP;
string(6) PRESNETWID;
string(15) PRESCRIBER;
string(2) PRESCRIDQL;
string(10) NPIPRESCR;
string(15) PRESCDEAID;
string(25) PRESLSTNME;
string(15) PRESFSTNME;
string(1) PRESMDINIT;
string(6) PRESSPCCDE;
string(3) PRESSPCCDQ;
string(3) PRSSTATE;
string(15) SBMRPHID;
string(2) SBMRPHIDQL;
string(10) FNLPLANCDE;
decimal(7) FNLPLANDTE;
string(8) PLANTYPE;
string(10) PLANQUAL;
string(10) PLNNDCLIST;
string(10) LSTQUALNDC;
string(10) PLNGPILIST;
string(10) LSTQUALGPI;
string(10) PLNPNDCLST;
string(10) PLNPGPILST;
string(1) PLANDRUGST;
string(1) PLANFRMLRY;
string(10) PLNFNLPSCH;
string(13) PHRDCSCHID;
decimal(3) PHRDCSCHSQ;
string(13) CLTDCSCHID;
decimal(3) CLTDCSCHSQ;
string(14) PHRDCCSCID;
decimal(3) PHRDCCSCSQ;
string(14) CLTDCCSCID;
decimal(3) CLTDCCSCSQ;
string(13) PHRPRTSCID;
string(13) CLTPRTSCID;
string(10) PHRRMSCHID;
string(10) CLTRMSCHID;
string(10) PRDPFLSTID;
string(10) PRFPRDSCID;
string(1) FORMULARY;
string(1) FORMLRFLAG;
decimal(2) TIERVALUE;
string(1) CONTHERAPY;
string(20) CTSCHEDID;
string(10) PRBASISCHD;
string(10) REGDISOR;
string(13) DRUGSTSTBL;
string(10) TRANSBEN;
string(10) MESSAGECD1;
string(40) MESSAGE1;
string(10) MESSAGECD2;
string(40) MESSAGE2;
string(10) MESSAGECD3;
string(40) MESSAGE3;
decimal(2) REJCNT;
string(3) REJCDE1;
string(3) REJCDE2;
string(3) REJCDE3;
string(8) RJCPLANID;
string(2) DURCONFLCT;
string(2) DURINTERVN;
string(2) DUROUTCOME;
string(2) LVLSERVICE;
string(2) PHARSRVTYP;
string(15) DIAGNOSIS;
string(2) DIAGNOSISQ;
string(2) RVDURCNFLC;
string(2) RVDURINTRV;
string(2) RVDUROUTCM;
string(2) RVLVLSERVC;
string(2) DRGCNFLCT1;
string(1) SEVERITY1;
string(1) OTHRPHARM1;
decimal(8) DTEPRVFIL1;
decimal(12) QTYPRVFIL1;
string(1) DATABASE1;
string(1) OTHRPRESC1;
string(30) FREETEXT1;
string(2) DRGCNFLCT2;
string(1) SEVERITY2;
string(1) OTHRPHARM2;
decimal(8) DTEPRVFIL2;
decimal(12) QTYPRVFIL2;
string(1) DATABASE2;
string(1) OTHRPRESC2;
string(30) FREETEXT2;
string(2) DRGCNFLCT3;
string(1) SEVERITY3;
string(1) OTHRPHARM3;
decimal(8) DTEPRVFIL3;
decimal(12) QTYPRVFIL3;
string(1) DATABASE3;
string(1) OTHRPRESC3;
string(30) FREETEXT3;
string(2) FEETYPE;
decimal(14) BENUNITCST;
decimal(14) AWPUNITCST;
decimal(14) WACUNITCST;
decimal(14) GEAPUNTCST;
decimal(14) CTYPEUCOST;
string(2) BASISCOST;
decimal(13) PRICEQTY;
decimal(3) PRODAYSSUP;
decimal(12) PROQTY;
decimal(11) RVINCNTVSB;
decimal(11) SBMINGRCST;
decimal(11) SBMDISPFEE;
decimal(11) SBMPSLSTX;
decimal(11) SBMFSLSTX;
decimal(11) SBMSLSTAX;
decimal(11) SBMPATPAY;
decimal(11) SBMAMTDUE;
decimal(11) SBMINCENTV;
decimal(11) SBMPROFFEE;
decimal(11) SBMTOTHAMT;
decimal(1) SBMOPAMTCT;
string(2) SBMOPAMTQL;
decimal(11) USUALNCUST;
decimal(8) DENIALDTE;
decimal(11) OTHRPAYOR;
decimal(11) SBMMDPDAMT;
decimal(11) CALINGRCST;
decimal(11) CALDISPFEE;
decimal(11) CALPSTAX;
decimal(11) CALFSTAX;
decimal(11) CALSLSTAX;
decimal(11) CALPATPAY;
decimal(11) CALDUEAMT;
decimal(11) CALWITHHLD;
decimal(11) CALFCOPAY;
decimal(11) CALPCOPAY;
decimal(11) CALCOPAY;
decimal(11) CALPRODSEL;
decimal(11) CALATRTAX;
decimal(11) CALEXCEBFT;
decimal(11) CALINCENTV;
decimal(11) CALATRDED;
decimal(11) CALCOB;
decimal(11) CALTOTHAMT;
decimal(11) CALPROFFEE;
decimal(11) CALOTHPAYA;
string(1) CALCOSTSRC;
decimal(11) CALADMNFEE;
decimal(11) CALPROCFEE;
decimal(11) CALPATSTAX;
decimal(11) CALPLNSTAX;
decimal(11) CALPRVNSEL;
decimal(11) CALPSCBRND;
decimal(11) CALPSCNONP;
decimal(11) CALPSCBRNP;
decimal(11) CALCOVGAP;
decimal(11) CALINGCSTC;
decimal(11) CALDSPFEEC;
decimal(11) PHRINGRCST;
decimal(11) PHRDISPFEE;
decimal(11) PHRPPSTAX;
decimal(11) PHRFSTAX;
decimal(11) PHRSLSTAX;
decimal(11) PHRPATPAY;
decimal(11) PHRDUEAMT;
decimal(11) PHRWITHHLD;
string(10) PHRPPRCS;
string(10) PHRPRCST;
string(10) PHRPTPS;
string(13) PHRPTPST;
string(10) PHRCOPAYSC;
decimal(2) PHRCOPAYSS;
decimal(11) PHRFCOPAY;
decimal(11) PHRPCOPAY;
decimal(11) PHRCOPAY;
decimal(11) PHRPRODSEL;
decimal(11) PHRATRTAX;
decimal(11) PHREXCEBFT;
decimal(11) PHRINCENTV;
decimal(11) PHRATRDED;
decimal(11) PHRCOB;
decimal(11) PHRTOTHAMT;
decimal(11) PHRPROFFEE;
decimal(11) PHROTHPAYA;
string(1) PHRCOSTSRC;
string(10) PHRCOSTTYP;
string(10) PHRPRCTYPE;
decimal(8) PHRRATE;
decimal(11) PHRPROCFEE;
decimal(11) PHRPATSTAX;
decimal(11) PHRPLNSTAX;
decimal(11) PHRPRVNSEL;
decimal(11) PHRPSCBRND;
decimal(11) PHRPSCNONP;
decimal(11) PHRPSCBRNP;
decimal(11) PHRCOVGAP;
decimal(11) PHRINGCSTC;
decimal(11) PHRDSPFEEC;
decimal(11) POSINGRCST;
decimal(11) POSDISPFEE;
decimal(11) POSPSLSTAX;
decimal(11) POSFSLSTAX;
decimal(11) POSSLSTAX;
decimal(11) POSPATPAY;
decimal(11) POSDUEAMT;
decimal(11) POSWITHHLD;
decimal(11) POSCOPAY;
decimal(11) POSPRODSEL;
decimal(11) POSATRTAX;
decimal(11) POSEXCEBFT;
decimal(11) POSINCENTV;
decimal(11) POSATRDED;
decimal(11) POSTOTHAMT;
decimal(11) POSPROFFEE;
decimal(11) POSOTHPAYA;
string(1) POSCOSTSRC;
decimal(11) POSPROCFEE;
decimal(11) POSPATSTAX;
decimal(11) POSPLNSTAX;
decimal(11) POSPRVNSEL;
decimal(11) POSPSCBRND;
decimal(11) POSPSCNONP;
decimal(11) POSPSCBRNP;
decimal(11) POSCOVGAP;
decimal(11) POSINGCSTC;
decimal(11) POSDSPFEEC;
string(1) CLIENTFLAG;
decimal(11) CLTINGRCST;
decimal(11) CLTDISPFEE;
decimal(11) CLTSLSTAX;
decimal(11) CLTPATPAY;
decimal(11) CLTDUEAMT;
decimal(11) CLTWITHHLD;
string(10) CLTPRCS;
string(10) CLTPRCST;
string(10) CLTPTPS;
string(13) CLTPTPST;
string(10) CLTCOPAYS;
decimal(2) CLTCOPAYSS;
decimal(11) CLTFCOPAY;
decimal(11) CLTPCOPAY;
decimal(11) CLTCOPAY;
decimal(11) CLTPRODSEL;
decimal(11) CLTPSTAX;
decimal(11) CLTFSTAX;
decimal(11) CLTATRTAX;
decimal(11) CLTEXCEBFT;
decimal(11) CLTINCENTV;
decimal(11) CLTATRDED;
decimal(11) CLTTOTHAMT;
decimal(11) CLTPROFFEE;
decimal(11) CLTCOB;
decimal(11) CLTOTHPAYA;
string(1) CLTCOSTSRC;
string(10) CLTCOSTTYP;
string(10) CLTPRCTYPE;
decimal(8) CLTRATE;
decimal(3) CLTPRSCSTP;
string(18) CLTPRSCHNM;
decimal(11) CLTPROCFEE;
decimal(11) CLTPATSTAX;
decimal(11) CLTPLNSTAX;
decimal(11) CLTPRVNSEL;
decimal(11) CLTPSCBRND;
decimal(11) CLTPSCNONP;
decimal(11) CLTPSCBRNP;
decimal(11) CLTCOVGAP;
decimal(11) CLTINGCSTC;
decimal(11) CLTDSPFEEC;
string(2) RSPREIMBUR;
decimal(11) RSPINGRCST;
decimal(11) RSPDISPFEE;
decimal(11) RSPPSLSTAX;
decimal(11) RSPFSLSTAX;
decimal(11) RSPSLSTAX;
decimal(11) RSPPATPAY;
decimal(11) RSPDUEAMT;
decimal(11) RSPFCOPAY;
decimal(11) RSPPCOPAY;
decimal(11) RSPCOPAY;
decimal(11) RSPPRODSEL;
decimal(11) RSPATRTAX;
decimal(11) RSPEXCEBFT;
decimal(11) RSPINCENTV;
decimal(11) RSPATRDED;
decimal(11) RSPTOTHAMT;
decimal(11) RSPPROFEE;
decimal(11) RSPOTHPAYA;
decimal(11) RSPACCUDED;
decimal(11) RSPREMBFT;
decimal(11) RSPREMDED;
decimal(11) RSPPROCFEE;
decimal(11) RSPPATSTAX;
decimal(11) RSPPLNSTAX;
decimal(11) RSPPRVNSEL;
decimal(11) RSPPSCBRND;
decimal(11) RSPPSCNONP;
decimal(11) RSPPSCBRNP;
decimal(11) RSPCOVGAP;
decimal(11) RSPINGCSTC;
decimal(11) RSPDSPFEEC;
string(8) RSPPLANID;
string(2) BENSTGQL1;
decimal(11) BENSTGAMT1;
string(2) BENSTGQL2;
decimal(11) BENSTGAMT2;
string(2) BENSTGQL3;
decimal(11) BENSTGAMT3;
string(2) BENSTGQL4;
decimal(11) BENSTGAMT4;
decimal(11) ESTGENSAV;
decimal(11) SPDACCTREM;
decimal(11) HLTHPLNAMT;
decimal(11) INDDEDPTD;
decimal(11) INDDEDREM;
decimal(11) FAMDEDPTD;
decimal(11) FAMDEDREM;
string(10) DEDSCHED;
string(10) DEDACCC;
string(1) DEDFLAG;
decimal(11) INDLBFTUT;
decimal(11) INDLBFTPTD;
decimal(11) INDLBFTREM;
decimal(11) FAMLBFTUT;
decimal(11) FAMLBFTPTD;
decimal(11) FAMLBFTREM;
string(10) LFTBFTMSCH;
string(10) LFTBFTACCC;
string(1) LFTBFTFLAG;
decimal(11) INDBFTUT;
decimal(11) INDBMAXPTD;
decimal(11) FAMBFTUT;
decimal(11) FAMBMAXPTD;
decimal(11) INDBMAXREM;
decimal(11) FAMBMAXREM;
string(10) BFTMAXSCHD;
string(10) BFTMAXACCC;
string(1) BFTMAXFLAG;
decimal(11) INDOOPPTD;
decimal(11) FAMOOPPTD;
decimal(11) INDOOPREM;
decimal(11) FAMOOPREM;
string(10) OOPSCHED;
string(10) OOPACCC;
string(1) OOPFLAG;
decimal(11) CONTRIBUT;
string(2) CONTBASIS;
string(10) CONTSCHED;
string(10) CONTACCCD;
string(1) CONTFLAG;
string(1) RXTFLAG;
string(1) REIMBURSMT;
string(1) CLMORIGIN;
string(1) HLDCLMFLAG;
decimal(3) HLDCLMDAYS;
string(1) PARTDFLAG;
string(1) COBEXTFLG;
string(1) PAEXTFLG;
string(1) HSAEXTIND;
string(1) FFPMEDRMST;
string(1) FFPMEDPXST;
string(1) FFPMEDMSST;
string(25) INCIDENTID;
string(30) ETCNBR;
decimal(8) DTEINJURY;
string(10) ADDUSER;
string(10) CHGUSER;
string(10) DMRUSERID;
string(10) PRAUSERID;
string(30) CLAIMREFID;
string(3) EOBDNOV;
string(3) EOBPDOV;
string(14) MANTRKNBR;
decimal(8) MANRECVDTE;
string(2) PASAUTHTYP;
string(11) PASAUTHID;
string(1) PASREQTYPE;
decimal(8) PASREQFROM;
decimal(8) PASREQTHRU;
string(2) PASBASISRQ;
string(12) PASREPFN;
string(15) PASREPLN;
string(30) PASSTREET;
string(20) PASCITY;
string(2) PASSTATE;
string(15) PASZIP;
string(11) PASPANBR;
string(20) PASAUTHNBR;
decimal(3) PASSDOCCT;
string(1) PAYERTYPE;
string(2) DELAYRSNCD;
string(2) MEDCDIND;
string(20) MEDCDID;
string(15) MEDCDAGNBR;
string(20) MEDCDTCN;
string(2) FMSTIER;
string(2) FMSSTATUS;
string(1) FMSDFLTIND;
string(10) FMSBENLST;
string(10) FMSLSTLVL3;
string(10) FMSLSTLVL2;
string(10) FMSLSTLVL1;
string(10) FMSRULESET;
string(10) FMSRULE;
string(2) FMSPROCCD;
string(10) CLIENTDEF1;
string(10) CLIENTDEF2;
string(10) CLIENTDEF3;
string(10) CLIENTDEF4;
string(10) CLIENTDEF5;
string(10) CCTRESERV1;
string(10) CCTRESERV2;
string(10) CCTRESERV3;
string(10) CCTRESERV4;
string(10) CCTRESERV5;
string(10) CCTRESERV6;
string(10) CCTRESERV7;
string(10) CCTRESERV8;
string(20) CCTRESERV9;
string(20) CCTRESRV10;
decimal(11) CCTRESRV11;
decimal(11) CCTRESRV12;
decimal(11) CCTRESRV13;
decimal(11) CCTRESRV14;
string(10) USERFIELD;
decimal(8) EXTRACTDTE;
string(21) BATCHCTRL;
decimal(14) CLTTYPUCST;
string (15) Pharmacist_License;
string (55) PHA_Pharmacy_Address1;
string (55) PHA_Pharmacy_Address2;
string (30) PHA_Pharmacy_City;
string (2) PHA_Pharmacy_State;
string (9) PHA_Pharmacy_Zip;
string (55) PHY_Address_Line_1;
string (55) PHY_Address_Line_2;
string (30) PHY_City;
string (2) PHY_State;
string (11) PHY_Zip_Code;
string (14) Product_Cost;
string (15) Prescriber_ID;
string (15) PHA_Federal_Tax_ID;
string(40) MBR_Address1;
string(20) MBR_City;
string(2) MBR_State;
decimal(5) MBR_Zip;
decimal(10) MBR_Phone;
string(30) WCB_Sbm_Emp_Name;
string(30) WCB_SBm_Emp_Street_Addrs;
string(20) WCB_Sbm_Emp_City_Addrs;
string(2) WCB_Sbm_Emp_State_Addrs;
decimal(15) WCB_Sbm_Emp_Zip_Cde;
decimal(14) PUC_Unit_Cost_Redbook;
decimal(14) PUC_Unit_Cost_Medispan;
decimal(14) PUC_Unit_Cost_Deductible;
string(10) DED_ACCUM_CODE;
decimal(11) DED_ACCUM_AMT;
decimal(8) DED_PER_BEG_DATE;
decimal(8) DED_PER_END_DATE;
decimal(11) DED_ACCUM_TO_DATE;
string(10) OOP_ACCUM_CODE;
decimal(11) OOP_ACCUM_AMT;
decimal(8) OOP_PER_BEG_DATE;
decimal(8) OOP_PER_END_DATE;
decimal(11) OOP_ACCUM_TO_DATE;
string(10) BEN_MAX_ACCUM_CODE;
decimal(11) BEN_MAX_ACCUM_AMT;
decimal(8) BEN_MAX_PER_BEG_DATE;
decimal(8) BEN_MAX_PER_END_DATE;
decimal(11) BEN_MAX_ACCUM_TO_DATE;
string(10) LIFE_BEN_MAX_ACCUM_CODE;
decimal(11) LIFE_BEN_MAX_ACCUM_AMT;
decimal(8) LIFE_BEN_MAX_PER_BEG_DATE;
decimal(8) LIFE_BEN_MAX_PER_END_DATE;
decimal(11) LIFE_BEN_MAX_ACCUM_TO_DATE;
decimal(14) AWP_Cost;
decimal(14) MAC_Cost;
decimal(8) MAC_Pricing_Update_Date;
decimal(8) Effective_Date_of_NDC;
decimal(8) AWP_Pricing_Update_Date;
decimal(1) Final_Disposition_Flag;
string(60) Drug_Class_Name;
string(15) Billing_Cycle;
decimal(8) Admin_Fee;
string ('\\n') newline;
end;|3|1|l|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("read", "pdl") map_dataset 1 mapping [record dataset_path _interp_("/etl/data/dev/serial/orca/rxclaim/main/nkrish14/IRXBBV_BBVARX_V80A_20180101_20180430.txt", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|/etl/data/dev/serial/orca/rxclaim/main/nkrish14/IRXBBV_BBVARX_V80A_20180101_20180430.txt|3|2|$|@{0|}}
}}@0|@80000|80000|0|0|0|0|33|Input File|Ab Initio Software|@1|2000000|-1|@6||257|-1|-1|}}
{2010203004|XXGoport|10|0|19|0|{@{}@0|0|0|0|read|0.0|@@@2164|0|}}
{2010503005|XXGfvertex|11|0|22|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|read_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010203004|XXGoport|12|0|24|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|read|0.0|@@@2164|0|}}
{2010501005|XXGpvertex|13|0|27|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|transform0|out :: reformat(in) =
begin
  out.* :: in.*;
  out.sheet :: 'Test';
end;|3|1|l|@{0|}}
{30001002|XXparameter|out0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|275000|87000|0|0|0|0|31|Reformat|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|14|0|29|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|15|0|32|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|16|0|34|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|17|0|36|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|18|0|38|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|19|0|41|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|20|0|43|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|21|0|47|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|22|0|50|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|23|0|53|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|24|0|56|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|25|0|61|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Interchange/Excel/Write_Excel.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|in_metadata|utf8 record
string("\\t") sheet;
decimal("\\t") RXCLMNBR;
decimal("\\t") CLMSEQNBR;
string("\\t") CLAIMSTS;
string("\\t") CARRIERID;
string("\\t") SCARRIERID;
decimal("\\t") CARRPROC;
string("\\t") CLNTID;
string("\\t") CLNTSGMNT;
string("\\t") CLNTREGION;
string("\\t") ACCOUNTID;
string("\\t") ACCTBENCDE;
string("\\t") VERSIONNBR;
string("\\t") GROUPID;
string("\\t") GROUPPLAN;
string("\\t") GRPCLIBENF;
string("\\t") GROUPSIC;
string("\\t") CLMRESPSTS;
string("\\t") MEMBERID;
string("\\t") MBRLSTNME;
string("\\t") MBRFSTNME;
string("\\t") MBRMDINIT;
string("\\t") MBRPRSNCDE;
string("\\t") MBRRELCDE;
string("\\t") MBRSEX;
decimal("\\t") MBRBIRTH;
decimal("\\t") MBRAGE;
string("\\t") MBRZIP;
string("\\t") SOCSECNBR;
string("\\t") DURKEY;
string("\\t") DURFLAG;
string("\\t") MBRFAMLYID;
string("\\t") MBRFAMLIND;
string("\\t") MBRFAMLTYP;
string("\\t") COBIND;
string("\\t") MBRPLAN;
string("\\t") MBRPRODCDE;
string("\\t") MBRRIDERCD;
string("\\t") CARENETID;
string("\\t") CAREQUALID;
string("\\t") CAREFACID;
string("\\t") CAREFACNAM;
string("\\t") MBRPCPHYS;
string("\\t") PPRSFSTNME;
string("\\t") PPRSLSTNME;
string("\\t") PPRSMDINIT;
string("\\t") PPRSSPCCDE;
string("\\t") PPRSTATE;
string("\\t") MBRALTINFL;
string("\\t") MBRALTINCD;
string("\\t") MBRALTINID;
decimal("\\t") MBRMEDDTE;
string("\\t") MBRMEDTYPE;
string("\\t") MBRHICCDE;
string("\\t") CARDHOLDER;
string("\\t") PATLASTNME;
string("\\t") PATFRSTNME;
string("\\t") PERSONCDE;
string("\\t") RELATIONCD;
string("\\t") SEXCODE;
decimal("\\t") BIRTHDTE;
string("\\t") ELIGCLARIF;
string("\\t") CUSTLOC;
string("\\t") SBMPLSRVCE;
string("\\t") SBMPATRESD;
string("\\t") PRMCAREPRV;
string("\\t") PRMCAREPRQ;
string("\\t") FACILITYID;
string("\\t") OTHCOVERAG;
string("\\t") BINNUMBER;
string("\\t") PROCESSOR;
string("\\t") GROUPNBR;
string("\\t") TRANSCDE;
decimal("\\t") DATESBM;
decimal("\\t") TIMESBM;
decimal("\\t") CHGDATE;
decimal("\\t") CHGTIME;
decimal("\\t") ORGPDSBMDT;
decimal("\\t") RVDATESBM;
decimal("\\t") CLMCOUNTER;
decimal("\\t") GENERICCTR;
decimal("\\t") FORMLRYCTR;
string("\\t") RXNUMBER;
string("\\t") RXNUMBERQL;
string("\\t") REFILL;
string("\\t") DISPSTATUS;
decimal("\\t") DTEFILLED;
string("\\t") COMPOUNDCD;
string("\\t") SBMCMPDTYP;
string("\\t") PRODTYPCDE;
string("\\t") PRODUCTID;
decimal("\\t") PRODUCTKEY;
decimal("\\t") METRIQTY;
decimal("\\t") DECIMALQTY;
decimal("\\t") DAYSSUPPLY;
string("\\t") PSC;
decimal("\\t") WRITTENDTE;
decimal("\\t") NBRFLSAUTH;
string("\\t") ORIGINCDE;
string("\\t") SBMCLARCD1;
string("\\t") SBMCLARCD2;
string("\\t") SBMCLARCD3;
string("\\t") PAMCNBR;
string("\\t") PAMCCDE;
string("\\t") PRAUTHNBR;
string("\\t") PRAUTHRSN;
decimal("\\t") PRAUTHFDTE;
decimal("\\t") PRAUTHTDTE;
string("\\t") LABELNAME;
string("\\t") PRODNAME;
string("\\t") DRUGMFGRID;
string("\\t") DRUGMFGR;
string("\\t") GPINUMBER;
string("\\t") GENERICNME;
string("\\t") PRDPACUOM;
decimal("\\t") PRDPACSIZE;
decimal("\\t") DDID;
decimal("\\t") GCN;
decimal("\\t") GCNSEQ;
decimal("\\t") KDC;
string("\\t") AHFS;
string("\\t") DRUGDEACOD;
string("\\t") RXOTCIND;
string("\\t") MULTSRCCDE;
string("\\t") GENINDOVER;
string("\\t") PRDREIMIND;
string("\\t") BRNDTRDNME;
string("\\t") FDATHERAEQ;
decimal("\\t") METRICSTRG;
string("\\t") DRGSTRGUOM;
string("\\t") ADMINROUTE;
string("\\t") ADMINRTESN;
string("\\t") DOSAGEFORM;
string("\\t") NDA;
string("\\t") ANDA;
string("\\t") ANDAOR;
string("\\t") RXNORMCODE;
string("\\t") MNTDRUGCDE;
string("\\t") MNTSOURCE;
string("\\t") MNTCARPROR;
string("\\t") MNTGPILIST;
string("\\t") CPQSPCPRG;
string("\\t") CPQSPCPGIN;
string("\\t") CPQSPCSCHD;
string("\\t") THRDPARTYX;
string("\\t") DRGUNITDOS;
string("\\t") SBMUNITDOS;
string("\\t") ALTPRODTYP;
string("\\t") ALTPRODCDE;
string("\\t") SRXNETWRK;
string("\\t") SRXNETTYPE;
string("\\t") RXNETWORK;
string("\\t") RXNETWRKNM;
string("\\t") RXNETCARR;
string("\\t") RXNETWRKQL;
string("\\t") RXNETPRCQL;
string("\\t") REGIONCDE;
string("\\t") PHRAFFIL;
string("\\t") NETPRIOR;
string("\\t") NETTYPE;
decimal("\\t") NETSEQ;
string("\\t") PAYCNTR;
string("\\t") PHRNDCLST;
string("\\t") PHRGPILST;
string("\\t") SRVPROVID;
string("\\t") SRVPROVIDQ;
string("\\t") NPIPROV;
string("\\t") PRVNCPDPID;
string("\\t") SBMSRVPRID;
string("\\t") SBMSRVPRQL;
string("\\t") SRVPROVNME;
string("\\t") PROVLOCKQL;
string("\\t") PROVLOCKID;
string("\\t") STORENBR;
string("\\t") AFFILIATIN;
string("\\t") PAYEEID;
string("\\t") DISPRCLASS;
string("\\t") DISPROTHER;
string("\\t") PHARMZIP;
string("\\t") PRESNETWID;
string("\\t") PRESCRIBER;
string("\\t") PRESCRIDQL;
string("\\t") NPIPRESCR;
string("\\t") PRESCDEAID;
string("\\t") PRESLSTNME;
string("\\t") PRESFSTNME;
string("\\t") PRESMDINIT;
string("\\t") PRESSPCCDE;
string("\\t") PRESSPCCDQ;
string("\\t") PRSSTATE;
string("\\t") SBMRPHID;
string("\\t") SBMRPHIDQL;
string("\\t") FNLPLANCDE;
decimal("\\t") FNLPLANDTE;
string("\\t") PLANTYPE;
string("\\t") PLANQUAL;
string("\\t") PLNNDCLIST;
string("\\t") LSTQUALNDC;
string("\\t") PLNGPILIST;
string("\\t") LSTQUALGPI;
string("\\t") PLNPNDCLST;
string("\\t") PLNPGPILST;
string("\\t") PLANDRUGST;
string("\\t") PLANFRMLRY;
string("\\t") PLNFNLPSCH;
string("\\t") PHRDCSCHID;
decimal("\\t") PHRDCSCHSQ;
string("\\t") CLTDCSCHID;
decimal("\\t") CLTDCSCHSQ;
string("\\t") PHRDCCSCID;
decimal("\\t") PHRDCCSCSQ;
string("\\t") CLTDCCSCID;
decimal("\\t") CLTDCCSCSQ;
string("\\t") PHRPRTSCID;
string("\\t") CLTPRTSCID;
string("\\t") PHRRMSCHID;
string("\\t") CLTRMSCHID;
string("\\t") PRDPFLSTID;
string("\\t") PRFPRDSCID;
string("\\t") FORMULARY;
string("\\t") FORMLRFLAG;
decimal("\\t") TIERVALUE;
string("\\t") CONTHERAPY;
string("\\t") CTSCHEDID;
string("\\t") PRBASISCHD;
string("\\t") REGDISOR;
string("\\t") DRUGSTSTBL;
string("\\t") TRANSBEN;
string("\\t") MESSAGECD1;
string("\\t") MESSAGE1;
string("\\t") MESSAGECD2;
string("\\t") MESSAGE2;
string("\\t") MESSAGECD3;
string("\\t") MESSAGE3;
decimal("\\t") REJCNT;
string("\\t") REJCDE1;
string("\\t") REJCDE2;
string("\\t") REJCDE3;
string("\\t") RJCPLANID;
string("\\t") DURCONFLCT;
string("\\t") DURINTERVN;
string("\\t") DUROUTCOME;
string("\\t") LVLSERVICE;
string("\\t") PHARSRVTYP;
string("\\t") DIAGNOSIS;
string("\\t") DIAGNOSISQ;
string("\\t") RVDURCNFLC;
string("\\t") RVDURINTRV;
string("\\t") RVDUROUTCM;
string("\\t") RVLVLSERVC;
string("\\t") DRGCNFLCT1;
string("\\t") SEVERITY1;
string("\\t") OTHRPHARM1;
decimal("\\t") DTEPRVFIL1;
decimal("\\t") QTYPRVFIL1;
string("\\t") DATABASE1;
string("\\t") OTHRPRESC1;
string("\\t") FREETEXT1;
string("\\t") DRGCNFLCT2;
string("\\t") SEVERITY2;
string("\\t") OTHRPHARM2;
decimal("\\t") DTEPRVFIL2;
decimal("\\t") QTYPRVFIL2;
string("\\t") DATABASE2;
string("\\t") OTHRPRESC2;
string("\\t") FREETEXT2;
string("\\t") DRGCNFLCT3;
string("\\t") SEVERITY3;
string("\\t") OTHRPHARM3;
decimal("\\t") DTEPRVFIL3;
decimal("\\t") QTYPRVFIL3;
string("\\t") DATABASE3;
string("\\t") OTHRPRESC3;
string("\\t") FREETEXT3;
string("\\t") FEETYPE;
decimal("\\t") BENUNITCST;
decimal("\\t") AWPUNITCST;
decimal("\\t") WACUNITCST;
decimal("\\t") GEAPUNTCST;
decimal("\\t") CTYPEUCOST;
string("\\t") BASISCOST;
decimal("\\t") PRICEQTY;
decimal("\\t") PRODAYSSUP;
decimal("\\t") PROQTY;
decimal("\\t") RVINCNTVSB;
decimal("\\t") SBMINGRCST;
decimal("\\t") SBMDISPFEE;
decimal("\\t") SBMPSLSTX;
decimal("\\t") SBMFSLSTX;
decimal("\\t") SBMSLSTAX;
decimal("\\t") SBMPATPAY;
decimal("\\t") SBMAMTDUE;
decimal("\\t") SBMINCENTV;
decimal("\\t") SBMPROFFEE;
decimal("\\t") SBMTOTHAMT;
decimal("\\t") SBMOPAMTCT;
string("\\t") SBMOPAMTQL;
decimal("\\t") USUALNCUST;
decimal("\\t") DENIALDTE;
decimal("\\t") OTHRPAYOR;
decimal("\\t") SBMMDPDAMT;
decimal("\\t") CALINGRCST;
decimal("\\t") CALDISPFEE;
decimal("\\t") CALPSTAX;
decimal("\\t") CALFSTAX;
decimal("\\t") CALSLSTAX;
decimal("\\t") CALPATPAY;
decimal("\\t") CALDUEAMT;
decimal("\\t") CALWITHHLD;
decimal("\\t") CALFCOPAY;
decimal("\\t") CALPCOPAY;
decimal("\\t") CALCOPAY;
decimal("\\t") CALPRODSEL;
decimal("\\t") CALATRTAX;
decimal("\\t") CALEXCEBFT;
decimal("\\t") CALINCENTV;
decimal("\\t") CALATRDED;
decimal("\\t") CALCOB;
decimal("\\t") CALTOTHAMT;
decimal("\\t") CALPROFFEE;
decimal("\\t") CALOTHPAYA;
string("\\t") CALCOSTSRC;
decimal("\\t") CALADMNFEE;
decimal("\\t") CALPROCFEE;
decimal("\\t") CALPATSTAX;
decimal("\\t") CALPLNSTAX;
decimal("\\t") CALPRVNSEL;
decimal("\\t") CALPSCBRND;
decimal("\\t") CALPSCNONP;
decimal("\\t") CALPSCBRNP;
decimal("\\t") CALCOVGAP;
decimal("\\t") CALINGCSTC;
decimal("\\t") CALDSPFEEC;
decimal("\\t") PHRINGRCST;
decimal("\\t") PHRDISPFEE;
decimal("\\t") PHRPPSTAX;
decimal("\\t") PHRFSTAX;
decimal("\\t") PHRSLSTAX;
decimal("\\t") PHRPATPAY;
decimal("\\t") PHRDUEAMT;
decimal("\\t") PHRWITHHLD;
string("\\t") PHRPPRCS;
string("\\t") PHRPRCST;
string("\\t") PHRPTPS;
string("\\t") PHRPTPST;
string("\\t") PHRCOPAYSC;
decimal("\\t") PHRCOPAYSS;
decimal("\\t") PHRFCOPAY;
decimal("\\t") PHRPCOPAY;
decimal("\\t") PHRCOPAY;
decimal("\\t") PHRPRODSEL;
decimal("\\t") PHRATRTAX;
decimal("\\t") PHREXCEBFT;
decimal("\\t") PHRINCENTV;
decimal("\\t") PHRATRDED;
decimal("\\t") PHRCOB;
decimal("\\t") PHRTOTHAMT;
decimal("\\t") PHRPROFFEE;
decimal("\\t") PHROTHPAYA;
string("\\t") PHRCOSTSRC;
string("\\t") PHRCOSTTYP;
string("\\t") PHRPRCTYPE;
decimal("\\t") PHRRATE;
decimal("\\t") PHRPROCFEE;
decimal("\\t") PHRPATSTAX;
decimal("\\t") PHRPLNSTAX;
decimal("\\t") PHRPRVNSEL;
decimal("\\t") PHRPSCBRND;
decimal("\\t") PHRPSCNONP;
decimal("\\t") PHRPSCBRNP;
decimal("\\t") PHRCOVGAP;
decimal("\\t") PHRINGCSTC;
decimal("\\t") PHRDSPFEEC;
decimal("\\t") POSINGRCST;
decimal("\\t") POSDISPFEE;
decimal("\\t") POSPSLSTAX;
decimal("\\t") POSFSLSTAX;
decimal("\\t") POSSLSTAX;
decimal("\\t") POSPATPAY;
decimal("\\t") POSDUEAMT;
decimal("\\t") POSWITHHLD;
decimal("\\t") POSCOPAY;
decimal("\\t") POSPRODSEL;
decimal("\\t") POSATRTAX;
decimal("\\t") POSEXCEBFT;
decimal("\\t") POSINCENTV;
decimal("\\t") POSATRDED;
decimal("\\t") POSTOTHAMT;
decimal("\\t") POSPROFFEE;
decimal("\\t") POSOTHPAYA;
string("\\t") POSCOSTSRC;
decimal("\\t") POSPROCFEE;
decimal("\\t") POSPATSTAX;
decimal("\\t") POSPLNSTAX;
decimal("\\t") POSPRVNSEL;
decimal("\\t") POSPSCBRND;
decimal("\\t") POSPSCNONP;
decimal("\\t") POSPSCBRNP;
decimal("\\t") POSCOVGAP;
decimal("\\t") POSINGCSTC;
decimal("\\t") POSDSPFEEC;
string("\\t") CLIENTFLAG;
decimal("\\t") CLTINGRCST;
decimal("\\t") CLTDISPFEE;
decimal("\\t") CLTSLSTAX;
decimal("\\t") CLTPATPAY;
decimal("\\t") CLTDUEAMT;
decimal("\\t") CLTWITHHLD;
string("\\t") CLTPRCS;
string("\\t") CLTPRCST;
string("\\t") CLTPTPS;
string("\\t") CLTPTPST;
string("\\t") CLTCOPAYS;
decimal("\\t") CLTCOPAYSS;
decimal("\\t") CLTFCOPAY;
decimal("\\t") CLTPCOPAY;
decimal("\\t") CLTCOPAY;
decimal("\\t") CLTPRODSEL;
decimal("\\t") CLTPSTAX;
decimal("\\t") CLTFSTAX;
decimal("\\t") CLTATRTAX;
decimal("\\t") CLTEXCEBFT;
decimal("\\t") CLTINCENTV;
decimal("\\t") CLTATRDED;
decimal("\\t") CLTTOTHAMT;
decimal("\\t") CLTPROFFEE;
decimal("\\t") CLTCOB;
decimal("\\t") CLTOTHPAYA;
string("\\t") CLTCOSTSRC;
string("\\t") CLTCOSTTYP;
string("\\t") CLTPRCTYPE;
decimal("\\t") CLTRATE;
decimal("\\t") CLTPRSCSTP;
string("\\t") CLTPRSCHNM;
decimal("\\t") CLTPROCFEE;
decimal("\\t") CLTPATSTAX;
decimal("\\t") CLTPLNSTAX;
decimal("\\t") CLTPRVNSEL;
decimal("\\t") CLTPSCBRND;
decimal("\\t") CLTPSCNONP;
decimal("\\t") CLTPSCBRNP;
decimal("\\t") CLTCOVGAP;
decimal("\\t") CLTINGCSTC;
decimal("\\t") CLTDSPFEEC;
string("\\t") RSPREIMBUR;
decimal("\\t") RSPINGRCST;
decimal("\\t") RSPDISPFEE;
decimal("\\t") RSPPSLSTAX;
decimal("\\t") RSPFSLSTAX;
decimal("\\t") RSPSLSTAX;
decimal("\\t") RSPPATPAY;
decimal("\\t") RSPDUEAMT;
decimal("\\t") RSPFCOPAY;
decimal("\\t") RSPPCOPAY;
decimal("\\t") RSPCOPAY;
decimal("\\t") RSPPRODSEL;
decimal("\\t") RSPATRTAX;
decimal("\\t") RSPEXCEBFT;
decimal("\\t") RSPINCENTV;
decimal("\\t") RSPATRDED;
decimal("\\t") RSPTOTHAMT;
decimal("\\t") RSPPROFEE;
decimal("\\t") RSPOTHPAYA;
decimal("\\t") RSPACCUDED;
decimal("\\t") RSPREMBFT;
decimal("\\t") RSPREMDED;
decimal("\\t") RSPPROCFEE;
decimal("\\t") RSPPATSTAX;
decimal("\\t") RSPPLNSTAX;
decimal("\\t") RSPPRVNSEL;
decimal("\\t") RSPPSCBRND;
decimal("\\t") RSPPSCNONP;
decimal("\\t") RSPPSCBRNP;
decimal("\\t") RSPCOVGAP;
decimal("\\t") RSPINGCSTC;
decimal("\\t") RSPDSPFEEC;
string("\\t") RSPPLANID;
string("\\t") BENSTGQL1;
decimal("\\t") BENSTGAMT1;
string("\\t") BENSTGQL2;
decimal("\\t") BENSTGAMT2;
string("\\t") BENSTGQL3;
decimal("\\t") BENSTGAMT3;
string("\\t") BENSTGQL4;
decimal("\\t") BENSTGAMT4;
decimal("\\t") ESTGENSAV;
decimal("\\t") SPDACCTREM;
decimal("\\t") HLTHPLNAMT;
decimal("\\t") INDDEDPTD;
decimal("\\t") INDDEDREM;
decimal("\\t") FAMDEDPTD;
decimal("\\t") FAMDEDREM;
string("\\t") DEDSCHED;
string("\\t") DEDACCC;
string("\\t") DEDFLAG;
decimal("\\t") INDLBFTUT;
decimal("\\t") INDLBFTPTD;
decimal("\\t") INDLBFTREM;
decimal("\\t") FAMLBFTUT;
decimal("\\t") FAMLBFTPTD;
decimal("\\t") FAMLBFTREM;
string("\\t") LFTBFTMSCH;
string("\\t") LFTBFTACCC;
string("\\t") LFTBFTFLAG;
decimal("\\t") INDBFTUT;
decimal("\\t") INDBMAXPTD;
decimal("\\t") FAMBFTUT;
decimal("\\t") FAMBMAXPTD;
decimal("\\t") INDBMAXREM;
decimal("\\t") FAMBMAXREM;
string("\\t") BFTMAXSCHD;
string("\\t") BFTMAXACCC;
string("\\t") BFTMAXFLAG;
decimal("\\t") INDOOPPTD;
decimal("\\t") FAMOOPPTD;
decimal("\\t") INDOOPREM;
decimal("\\t") FAMOOPREM;
string("\\t") OOPSCHED;
string("\\t") OOPACCC;
string("\\t") OOPFLAG;
decimal("\\t") CONTRIBUT;
string("\\t") CONTBASIS;
string("\\t") CONTSCHED;
string("\\t") CONTACCCD;
string("\\t") CONTFLAG;
string("\\t") RXTFLAG;
string("\\t") REIMBURSMT;
string("\\t") CLMORIGIN;
string("\\t") HLDCLMFLAG;
decimal("\\t") HLDCLMDAYS;
string("\\t") PARTDFLAG;
string("\\t") COBEXTFLG;
string("\\t") PAEXTFLG;
string("\\t") HSAEXTIND;
string("\\t") FFPMEDRMST;
string("\\t") FFPMEDPXST;
string("\\t") FFPMEDMSST;
string("\\t") INCIDENTID;
string("\\t") ETCNBR;
decimal("\\t") DTEINJURY;
string("\\t") ADDUSER;
string("\\t") CHGUSER;
string("\\t") DMRUSERID;
string("\\t") PRAUSERID;
string("\\t") CLAIMREFID;
string("\\t") EOBDNOV;
string("\\t") EOBPDOV;
string("\\t") MANTRKNBR;
decimal("\\t") MANRECVDTE;
string("\\t") PASAUTHTYP;
string("\\t") PASAUTHID;
string("\\t") PASREQTYPE;
decimal("\\t") PASREQFROM;
decimal("\\t") PASREQTHRU;
string("\\t") PASBASISRQ;
string("\\t") PASREPFN;
string("\\t") PASREPLN;
string("\\t") PASSTREET;
string("\\t") PASCITY;
string("\\t") PASSTATE;
string("\\t") PASZIP;
string("\\t") PASPANBR;
string("\\t") PASAUTHNBR;
decimal("\\t") PASSDOCCT;
string("\\t") PAYERTYPE;
string("\\t") DELAYRSNCD;
string("\\t") MEDCDIND;
string("\\t") MEDCDID;
string("\\t") MEDCDAGNBR;
string("\\t") MEDCDTCN;
string("\\t") FMSTIER;
string("\\t") FMSSTATUS;
string("\\t") FMSDFLTIND;
string("\\t") FMSBENLST;
string("\\t") FMSLSTLVL3;
string("\\t") FMSLSTLVL2;
string("\\t") FMSLSTLVL1;
string("\\t") FMSRULESET;
string("\\t") FMSRULE;
string("\\t") FMSPROCCD;
string("\\t") CLIENTDEF1;
string("\\t") CLIENTDEF2;
string("\\t") CLIENTDEF3;
string("\\t") CLIENTDEF4;
string("\\t") CLIENTDEF5;
string("\\t") CCTRESERV1;
string("\\t") CCTRESERV2;
string("\\t") CCTRESERV3;
string("\\t") CCTRESERV4;
string("\\t") CCTRESERV5;
string("\\t") CCTRESERV6;
string("\\t") CCTRESERV7;
string("\\t") CCTRESERV8;
string("\\t") CCTRESERV9;
string("\\t") CCTRESRV10;
decimal("\\t") CCTRESRV11;
decimal("\\t") CCTRESRV12;
decimal("\\t") CCTRESRV13;
decimal("\\t") CCTRESRV14;
string("\\t") USERFIELD;
decimal("\\t") EXTRACTDTE;
string("\\t") BATCHCTRL;
decimal("\\t") CLTTYPUCST;
string ("\\t") Pharmacist_License;
string ("\\t") PHA_Pharmacy_Address1;
string ("\\t") PHA_Pharmacy_Address2;
string ("\\t") PHA_Pharmacy_City;
string ("\\t") PHA_Pharmacy_State;
string ("\\t") PHA_Pharmacy_Zip;
string ("\\t") PHY_Address_Line_1;
string ("\\t") PHY_Address_Line_2;
string ("\\t") PHY_City;
string ("\\t") PHY_State;
string ("\\t") PHY_Zip_Code;
string ("\\t") Product_Cost;
string ("\\t") Prescriber_ID;
string ("\\t") PHA_Federal_Tax_ID;
string("\\t") MBR_Address1;
string("\\t") MBR_City;
string("\\t") MBR_State;
decimal("\\t") MBR_Zip;
decimal("\\t") MBR_Phone;
string("\\t") WCB_Sbm_Emp_Name;
string("\\t") WCB_SBm_Emp_Street_Addrs;
string("\\t") WCB_Sbm_Emp_City_Addrs;
string("\\t") WCB_Sbm_Emp_State_Addrs;
decimal("\\t") WCB_Sbm_Emp_Zip_Cde;
decimal("\\t") PUC_Unit_Cost_Redbook;
decimal("\\t") PUC_Unit_Cost_Medispan;
decimal("\\t") PUC_Unit_Cost_Deductible;
string("\\t") DED_ACCUM_CODE;
decimal("\\t") DED_ACCUM_AMT;
decimal("\\t") DED_PER_BEG_DATE;
decimal("\\t") DED_PER_END_DATE;
decimal("\\t") DED_ACCUM_TO_DATE;
string("\\t") OOP_ACCUM_CODE;
decimal("\\t") OOP_ACCUM_AMT;
decimal("\\t") OOP_PER_BEG_DATE;
decimal("\\t") OOP_PER_END_DATE;
decimal("\\t") OOP_ACCUM_TO_DATE;
string("\\t") BEN_MAX_ACCUM_CODE;
decimal("\\t") BEN_MAX_ACCUM_AMT;
decimal("\\t") BEN_MAX_PER_BEG_DATE;
decimal("\\t") BEN_MAX_PER_END_DATE;
decimal("\\t") BEN_MAX_ACCUM_TO_DATE;
string("\\t") LIFE_BEN_MAX_ACCUM_CODE;
decimal("\\t") LIFE_BEN_MAX_ACCUM_AMT;
decimal("\\t") LIFE_BEN_MAX_PER_BEG_DATE;
decimal("\\t") LIFE_BEN_MAX_PER_END_DATE;
decimal("\\t") LIFE_BEN_MAX_ACCUM_TO_DATE;
decimal("\\t") AWP_Cost;
decimal("\\t") MAC_Cost;
decimal("\\t") MAC_Pricing_Update_Date;
decimal("\\t") Effective_Date_of_NDC;
decimal("\\t") AWP_Pricing_Update_Date;
decimal("\\t") Final_Disposition_Flag;
string("\\t") Drug_Class_Name;
string("\\t") Billing_Cycle;
string ("\\t") Admin_Fee;
string("\\0") record_delimiter = "";
end;|3|1|l|@{0|}}
{30001002|XXparameter|xls|$AI_SERIAL/IRXBBV_BBVARX_V80A_20180101_20180430.xlsx|3|2|$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
{30001002|XXparameter|JAVA_HOME|$JAVA_HOME|3|2|$|@{0|}}
{30001002|XXparameter|write_mode|append-records|3|1|l|@{0|}}
{30001002|XXparameter|source_xls|$AI_SERIAL/test_1.xlsx|3|2|$|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Write Excel Spreadsheet|472000|16000|0|0|0|0|35|Write Excel Spreadsheet|Ab Initio Software|Built-in 2.13.m8:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|26|0|63|0|{@{}@0|0|0|0|in|0.0|@@@1984|0|}}
{2010501005|XXGpvertex|27|0|66|0|{Writes an Excel spreadsheet|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|Write_Excel|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/excel-connector.ksh|3|2|H$||{0|}}
{30001002|XXparameter|numDateFormats|1|1|1|Fl|Number of date formats understood on input.  Strings not matching one of these formats will be written as strings or numbers.|{0|}}
{30001002|XXparameter|numDateFormats.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|xls||18|2|RFK$|Excel file to write. Note that 'Location:' must be set to 'Host', not 'Local'.|{0|}}
{30001002|XXparameter|write_mode|new-workbook|15|1|FKl|Whether to completely overwrite or append to an existing workbook|{2|new-workbook|append-records|}}
{30001002|XXparameter|write_mode.display_name|write-mode|3|9|P|@{0|}}
{30001002|XXparameter|write_mode.keyword|write-mode|3|9|P|@{0|}}
{30001002|XXparameter|source_xls||18|2|RFK$|Workbook to read; input data appended to worksheets and written to xls; if same value as xls, does in-place append|{0|}}
{30001002|XXparameter|source_xls.display_name|source-xls|3|9|P|@{0|}}
{30001002|XXparameter|source_xls.keyword|source-xls|3|9|P|@{0|}}
{30001002|XXparameter|source_xls.condition|param write-mode append-records|3|15|P?|@{0|}}
{30001002|XXparameter|streaming_xlsx|True|13|1|FKl|Use the low-memory footprint streaming model to create xlsx file. If true, formula evaluation is not generally supported, and autosized column widths will only account for final rows in each sheet.|{0|}}
{30001002|XXparameter|streaming_xlsx.display_name|streaming-xlsx|3|9|P|@{0|}}
{30001002|XXparameter|streaming_xlsx.keyword|streaming-xlsx|3|9|P|@{0|}}
{30001002|XXparameter|streaming_xlsx.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|utf8|True|13|1|FKl|Use UTF-8 encoding for input (recommended).  Otherwise, encoding will be locale specific.|{0|}}
{30001002|XXparameter|utf8.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|dateFormat0||3|2|FK$|Cells matching
this format will be treated as dates.  The following subset of DML datetime formats is supported:
YYYY, MM, DD, HH24, MI, SS, N[NN].  For example, 'YYYY-MM-DD HH24:MI:SS.NNN'.|{0|}}
{30001002|XXparameter|dateFormat0.index|numDateFormats|3|9|P|@{0|}}
{30001002|XXparameter|dateFormat0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|dateFormat0.index_name|dateFormat|3|9|P|@{0|}}
{30001002|XXparameter|leading_quote_special|True|13|1|FKl|If true, leading quote stripped off and rest of value placed in text cell.|{0|}}
{30001002|XXparameter|leading_quote_special.display_name|leading-quote-special|3|9|P|@{0|}}
{30001002|XXparameter|leading_quote_special.keyword|leading-quote-special|3|9|P|@{0|}}
{30001002|XXparameter|leading_quote_special.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|numbersAsStrings|False|13|1|RFKl|Write input that looks like numbers as strings, not as Excel numbers.|{0|}}
{30001002|XXparameter|numbersAsStrings.condition|param leading-quote-special False|3|15|P?|@{0|}}
{30001002|XXparameter|record_delimiter_type|explicit|15|1|Fl|Enter an explicit delimiter or accept any newline. (\\n, \\r\\n or \\r)|{2|explicit|any-newline|}}
{30001002|XXparameter|record_delimiter_type.display_name|record-delimiter-type|3|9|P|@{0|}}
{30001002|XXparameter|record_delimiter_type.update_clauses|update_value any-newline|3|9|P|@{0|}}
{30001002|XXparameter|record_delimiter|\\0|3|2|FK$|Delimiter of last field or record. Must not occur in the data.|{0|}}
{30001002|XXparameter|record_delimiter.display_name|record-delimiter|3|9|P|@{0|}}
{30001002|XXparameter|record_delimiter.keyword|record-delimiter|3|9|P|@{0|}}
{30001002|XXparameter|record_delimiter.condition|param record-delimiter-type explicit|3|15|P?|@{0|}}
{30001002|XXparameter|autoSizeColumn|False|13|1|FKl|Adjusts the column width to fit the contents. This can be slow on large sheets.|{0|}}
{30001002|XXparameter|autoSizeColumn.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|use_format|False|13|1|FKl|Load format information associated with the cell. Use gendml after changing this.|{0|}}
{30001002|XXparameter|use_format.display_name|use-format|3|9|P|@{0|}}
{30001002|XXparameter|use_format.keyword|use-format|3|9|P|@{0|}}
{30001002|XXparameter|use_format.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|format_attributes|*|3|2|RFK$|Format attributes of the cell. See $AB_COMPONENTS/Interchange/Excel/excel_utils.dml for syntax.|{0|}}
{30001002|XXparameter|format_attributes.display_name|format-attributes|3|9|P|@{0|}}
{30001002|XXparameter|format_attributes.keyword|format-attributes|3|9|P|@{0|}}
{30001002|XXparameter|format_attributes.condition|param use-format True|3|15|P?|@{0|}}
{30001002|XXparameter|abort_on_format_error|True|13|1|RFKl|If false, ignore errors from cell format attributes|{0|}}
{30001002|XXparameter|abort_on_format_error.display_name|abort-on-format-error|3|9|P|@{0|}}
{30001002|XXparameter|abort_on_format_error.keyword|abort-on-format-error|3|9|P|@{0|}}
{30001002|XXparameter|abort_on_format_error.condition|param use-format True|3|15|P?|@{0|}}
{30001002|XXparameter|JAVA_HOME||3|2|FK$|Home directory for Java installation; if unset, $JAVA_HOME is used.|{0|}}
{30001002|XXparameter|command_options||3|2|FK$|Advanced options that are only required in unusual situations|{0|}}
{30001002|XXparameter|command_options.display_name|command-options|3|9|P|@{0|}}
{30001002|XXparameter|command_options.keyword|command-options|3|9|P|@{0|}}
{30001002|XXparameter|java_options|-Xmx768m|3|2|FK$|Options passed directly to Java, e.g. '-Xmx512m'|{0|}}
{30001002|XXparameter|java_options.display_name|java-options|3|9|P|@{0|}}
{30001002|XXparameter|java_options.keyword|java-options|3|9|P|@{0|}}
{30001002|XXparameter|writeit|-write|3|2|$||{0|}}
{30001002|XXparameter|print_dml|-print-dml|3|2|$||{0|}}
{30001002|XXparameter|print_dml.display_name|print-dml|3|9|P|@{0|}}
{30001002|XXparameter|cmd_dml|excel-connector.ksh|3|2|$||{0|}}
{30001002|XXparameter|cmd_dml_params|writeit positional print-dml positional utf8 keyword record-delimiter keyword use-format keyword format-attributes keyword JAVA_HOME keyword|3|2|$||{0|}}
{30001002|XXparameter|in_metadata|generated cmd_dml manual|7|13|RFv|Record Format|{0|}}
{30001002|XXparameter|dataset_analysis|eme_dataset(file)=in,w|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|eme_dataset_mapping|@40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: in = "utf8 record string('\\\\t') sheet; string('\\\\0') line; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
}}@0|Write Excel Spreadsheet|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|28|0|68|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=|Record Format|{0|}}
}}@0|0|0|0|in|0.0|@@@1984|0|}}
{2010110002|XXGconstant|29|0|74|0|{@{}@{1|7166808|}}}
{2010002001|XXGdirectory_object_object|0|1|2|0|{XXGgraph|}0|1|}
{2010704001|XXGgraph_graphinfo_graphinfo|1|0|2|0|{}1|2|}
{2010706001|XXGgraphinfo_runsettings_runsettings|2|0|4|0|{}2|3|}
{2010109001|XXGobject_property_value|3|0|6|0|{0|legend_face|92|}2|4|}
{2010604001|XXGgraph_flow_flow|4|0|8|0|{Flow_1|}1|5|}
{2010244001|XXGflow_watcher_watcher|5|0|10|0|{}5|6|}
{2010604001|XXGgraph_flow_flow|6|0|12|0|{Flow_2|}1|7|}
{2010244001|XXGflow_watcher_watcher|7|0|14|0|{}7|8|}
{2010601001|XXGgraph_vertex_vertex|8|0|16|0|{Input_File|}1|9|}
{2010212001|XXGvertex_oport_oport|9|0|18|0|{0|read|}9|10|}
{2010213001|XXGoport_dst_flow|10|0|20|0|{0|}10|5|}
{2010007001|XXGobject_proto_object|11|0|21|0|{}9|11|}
{2010212001|XXGvertex_oport_oport|12|0|23|0|{0|read|}11|12|}
{2010006001|XXGobject_psameas_object|13|0|25|0|{metadata|read_metadata|1|0|}12|11|}
{2010601001|XXGgraph_vertex_vertex|14|0|26|0|{Reformat|}1|13|}
{2010212001|XXGvertex_oport_oport|15|0|28|0|{0|out0|}13|14|}
{2010213001|XXGoport_dst_flow|16|0|30|0|{0|}14|7|}
{2010212001|XXGvertex_oport_oport|17|0|31|0|{1|reject0|}13|15|}
{2010212001|XXGvertex_oport_oport|18|0|33|0|{2|error0|}13|16|}
{2010212001|XXGvertex_oport_oport|19|0|35|0|{3|log|}13|17|}
{2010211001|XXGvertex_iport_iport|20|0|37|0|{0|in|}13|18|}
{2010214001|XXGiport_src_flow|21|0|39|0|{0|}18|5|}
{2010007001|XXGobject_proto_object|22|0|40|0|{}13|19|}
{2010212001|XXGvertex_oport_oport|23|0|42|0|{0|out0|}19|20|}
{2010006001|XXGobject_psameas_object|24|0|44|0|{metadata|out0_metadata|1|0|}20|19|}
{2010006001|XXGobject_psameas_object|25|0|45|0|{transform0|transform0|1|0|}20|19|}
{2010212001|XXGvertex_oport_oport|26|0|46|0|{1|reject0|}19|21|}
{2010006001|XXGobject_psameas_object|27|0|48|0|{metadata|reject0_metadata|1|0|}21|19|}
{2010212001|XXGvertex_oport_oport|28|0|49|0|{2|error0|}19|22|}
{2010006001|XXGobject_psameas_object|29|0|51|0|{metadata|error0_metadata|1|0|}22|19|}
{2010212001|XXGvertex_oport_oport|30|0|52|0|{3|log|}19|23|}
{2010006001|XXGobject_psameas_object|31|0|54|0|{metadata|log_metadata|1|0|}23|19|}
{2010211001|XXGvertex_iport_iport|32|0|55|0|{0|in|}19|24|}
{2010006001|XXGobject_psameas_object|33|0|57|0|{metadata|in_metadata|1|0|}24|19|}
{2010006001|XXGobject_psameas_object|34|0|58|0|{Layout|Layout|0|0|}13|9|}
{2010006001|XXGobject_psameas_object|35|0|59|0|{in_metadata|read_metadata|0|0|}13|9|}
{2010006001|XXGobject_psameas_object|36|0|60|0|{out0_metadata|in_metadata|0|0|}13|25|}
{2010211001|XXGvertex_iport_iport|37|0|62|0|{0|in|}25|26|}
{2010214001|XXGiport_src_flow|38|0|64|0|{0|}26|7|}
{2010007001|XXGobject_proto_object|39|0|65|0|{}25|27|}
{2010211001|XXGvertex_iport_iport|40|0|67|0|{0|in|}27|28|}
{2010006001|XXGobject_psameas_object|41|0|69|0|{metadata|in_metadata|1|0|}28|27|}
{2010006001|XXGobject_psameas_object|42|0|70|0|{Layout|Layout|0|0|}25|9|}
{2010006001|XXGobject_psameas_object|43|0|71|0|{reject0_metadata|read_metadata|0|0|}13|9|}
{2010601001|XXGgraph_vertex_vertex|44|0|72|0|{Write_Excel_Spreadsheet|}1|25|}
{2010109001|XXGobject_property_value|45|0|73|0|{0|TrackingThumbprint|72|}1|29|}
