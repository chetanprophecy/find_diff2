/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5a530e09_24db_1 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_prov_folup.comments,[passthrough],in0.cmmt]
  [out0.c_prov_folup.parent_case_id,[passthrough],in0.parent_case_id]
  [out0.c_prov_folup.src_env_sk,[transform],]
  [out0.c_prov_folup.cpp_provider_followup_call_hist_sk,[transform],]
  [out0.c_prov_folup.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_prov_folup.called_by,[passthrough],in0.called_by]
  [out0.c_prov_folup.provider_call_type,[passthrough],in0.provider_call_type]
  [out0.c_prov_folup.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_prov_folup.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_prov_folup.spoke_with,[passthrough],in0.spoke_with]
  [out0.c_prov_folup.call_attempt_num,[passthrough],in0.call_attempt_num]
  [out0.c_prov_folup.case_id,[passthrough],in0.case_id]
  [out0.c_prov_folup.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_prov_folup.record_dt,[passthrough],in0.record_dt]
  [out0.c_prov_folup.provider_id,[passthrough],in0.provider_id]
  [out0.c_prov_folup.provider_followup_call_hist_id,[passthrough],in0.provider_followup_call_hist_id]
  [out0.c_prov_folup.reason,[passthrough],in0.reason]
  [out0.c_prov_folup.cpp_provider_sk,[transform],in0.provider_id,
     'lookup("C_Provider").dxf_sk']
  [out0.c_prov_folup.sequence_num,[passthrough],in0.sequence_num]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_prov_folup.comments,'c_prov_folup.comments',1,0]
     [out0.c_prov_folup.parent_case_id,'c_prov_folup.parent_case_id',1,0]
     [out0.c_prov_folup.src_env_sk,'c_prov_folup.src_env_sk',1,0]
     [out0.c_prov_folup.cpp_provider_followup_call_hist_sk,'c_prov_folup.cpp_provider_followup_call_hist_sk',1,0]
     [out0.c_prov_folup.cpp_created_by,'c_prov_folup.cpp_created_by',1,0]
     [out0.c_prov_folup.called_by,'c_prov_folup.called_by',1,0]
     [out0.c_prov_folup.provider_call_type,'c_prov_folup.provider_call_type',1,0]
     [out0.c_prov_folup.cpp_updated_by,'c_prov_folup.cpp_updated_by',1,0]
     [out0.c_prov_folup.cpp_update_ts,'c_prov_folup.cpp_update_ts',1,0]
     [out0.c_prov_folup.spoke_with,'c_prov_folup.spoke_with',1,0]
     [out0.c_prov_folup.call_attempt_num,'c_prov_folup.call_attempt_num',1,0]
     [out0.c_prov_folup.case_id,'c_prov_folup.case_id',1,0]
     [out0.c_prov_folup.cpp_create_ts,'c_prov_folup.cpp_create_ts',1,0]
     [out0.c_prov_folup.record_dt,'c_prov_folup.record_dt',1,0]
     [out0.c_prov_folup.provider_id,'c_prov_folup.provider_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_prov_folup.provider_followup_call_hist_id,'c_prov_folup.provider_followup_call_hist_id',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_prov_folup.reason,'c_prov_folup.reason',1,0]
     [out0.c_prov_folup.cpp_provider_sk,'c_prov_folup.cpp_provider_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_prov_folup.sequence_num,'c_prov_folup.sequence_num',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.record_dt,'record_dt',1,1]
     [in0.spoke_with,'spoke_with',1,1]
     ['lookup("C_Provider").dxf_sk','dxf_sk',1,1]
     [in0.called_by,'called_by',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.call_attempt_num,'call_attempt_num',1,1]
     [in0.sequence_num,'sequence_num',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.parent_case_id,'parent_case_id',1,1]
     [in0.provider_id,'provider_id',2,2]
     [in0.case_id,'case_id',1,1]
     [in0.cmmt,'cmmt',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.provider_followup_call_hist_id,'provider_followup_call_hist_id',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.reason,'reason',1,1]
     [in0.provider_call_type,'provider_call_type',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_prov_folup_cpp_provider_followup_call_hist_sk = -1;
let decimal("\x01",0, maximum_length=39, sign_reserved) c_prov_folup_provider_followup_call_hist_id = fail_if_error(in0.provider_followup_call_hist_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_prov_folup_sequence_num = fail_if_error(in0.sequence_num);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_prov_folup_provider_id = fail_if_error(in0.provider_id);
let decimal("\x01",0) c_prov_folup_cpp_provider_sk;
let string("\x01",charset="iso-8859-15", maximum_length=15) c_prov_folup_case_id = fail_if_error(in0.case_id);
let string("\x01",charset="iso-8859-15", maximum_length=15) c_prov_folup_parent_case_id = fail_if_error(in0.parent_case_id);
let string("\x01",charset="iso-8859-15", maximum_length=10) c_prov_folup_provider_call_type = fail_if_error(in0.provider_call_type);
let decimal("\x01",0, maximum_length=3, sign_reserved) c_prov_folup_call_attempt_num = fail_if_error(in0.call_attempt_num);
let utf8 string("\x01", maximum_length=200) c_prov_folup_reason = fail_if_error(in0.reason);
let utf8 string("\x01", maximum_length=8192) c_prov_folup_comments = fail_if_error(in0.cmmt);
let utf8 string("\x01", maximum_length=80) c_prov_folup_called_by = fail_if_error(in0.called_by);
let utf8 string("\x01", maximum_length=120) c_prov_folup_spoke_with = fail_if_error(in0.spoke_with);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prov_folup_record_dt = fail_if_error(in0.record_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prov_folup_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_prov_folup_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prov_folup_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_prov_folup_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_prov_folup_src_env_sk = 710;



/*   Default value   */
c_prov_folup_cpp_provider_sk=fail_if_error(lookup("C_Provider",in0.provider_id).dxf_sk);

  out0.c_prov_folup.cpp_provider_followup_call_hist_sk::c_prov_folup_cpp_provider_followup_call_hist_sk;
  out0.c_prov_folup.provider_followup_call_hist_id::c_prov_folup_provider_followup_call_hist_id;
  out0.c_prov_folup.sequence_num::c_prov_folup_sequence_num;
  out0.c_prov_folup.provider_id::c_prov_folup_provider_id;
  out0.c_prov_folup.cpp_provider_sk::c_prov_folup_cpp_provider_sk;
  out0.c_prov_folup.case_id::c_prov_folup_case_id;
  out0.c_prov_folup.parent_case_id::c_prov_folup_parent_case_id;
  out0.c_prov_folup.provider_call_type::c_prov_folup_provider_call_type;
  out0.c_prov_folup.call_attempt_num::c_prov_folup_call_attempt_num;
  out0.c_prov_folup.reason::c_prov_folup_reason;
  out0.c_prov_folup.comments::c_prov_folup_comments;
  out0.c_prov_folup.called_by::c_prov_folup_called_by;
  out0.c_prov_folup.spoke_with::c_prov_folup_spoke_with;
  out0.c_prov_folup.record_dt::c_prov_folup_record_dt;
  out0.c_prov_folup.cpp_update_ts::c_prov_folup_cpp_update_ts;
  out0.c_prov_folup.cpp_updated_by::c_prov_folup_cpp_updated_by;
  out0.c_prov_folup.cpp_create_ts::c_prov_folup_cpp_create_ts;
  out0.c_prov_folup.cpp_created_by::c_prov_folup_cpp_created_by;
  out0.c_prov_folup.src_env_sk::c_prov_folup_src_env_sk;
  out0.*::in0.*;

end;
