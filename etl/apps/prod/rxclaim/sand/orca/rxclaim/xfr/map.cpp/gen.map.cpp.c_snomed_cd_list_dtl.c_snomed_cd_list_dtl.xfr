/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5818773c_71ec_9 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_snmd_ls_dl.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_snmd_ls_dl.snomed_ct_concept,[passthrough],in0.snomed_ct_concept]
  [out0.c_snmd_ls_dl.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_snmd_ls_dl.idntfn_cd,[passthrough],in0.idntfn_cd]
  [out0.c_snmd_ls_dl.cpp_snomed_cd_list_dtl_sk,[transform],]
  [out0.c_snmd_ls_dl.snomed_ct_id,[passthrough],in0.snomed_ct_id]
  [out0.c_snmd_ls_dl.snomed_cd_list_version,[passthrough],in0.snomed_cd_list_version]
  [out0.c_snmd_ls_dl.eff_end_dt,[passthrough],in0.eff_end_dt]
  [out0.c_snmd_ls_dl.src_env_sk,[transform],]
  [out0.c_snmd_ls_dl.eff_start_dt,[passthrough],in0.eff_start_dt]
  [out0.c_snmd_ls_dl.cpp_snomed_cd_list_sk,[transform],in0.snomed_cd_list_version,
     in0.snomed_cd_list_id,
     'lookup("c_snomed_cd_list").dxf_sk']
  [out0.c_snmd_ls_dl.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_snmd_ls_dl.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_snmd_ls_dl.snomed_cd_list_id,[passthrough],in0.snomed_cd_list_id]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_snmd_ls_dl.cpp_updated_by,'c_snmd_ls_dl.cpp_updated_by',1,0]
     [out0.c_snmd_ls_dl.snomed_ct_concept,'c_snmd_ls_dl.snomed_ct_concept',1,0]
     [out0.c_snmd_ls_dl.cpp_created_by,'c_snmd_ls_dl.cpp_created_by',1,0]
     [out0.c_snmd_ls_dl.idntfn_cd,'c_snmd_ls_dl.idntfn_cd',1,0]
     [out0.c_snmd_ls_dl.cpp_snomed_cd_list_dtl_sk,'c_snmd_ls_dl.cpp_snomed_cd_list_dtl_sk',1,0]
     [out0.c_snmd_ls_dl.snomed_ct_id,'c_snmd_ls_dl.snomed_ct_id',1,0]
     [out0.c_snmd_ls_dl.snomed_cd_list_version,'c_snmd_ls_dl.snomed_cd_list_version',1,0]
     [out0.c_snmd_ls_dl.eff_end_dt,'c_snmd_ls_dl.eff_end_dt',1,0]
     [out0.c_snmd_ls_dl.src_env_sk,'c_snmd_ls_dl.src_env_sk',1,0]
     [out0.c_snmd_ls_dl.eff_start_dt,'c_snmd_ls_dl.eff_start_dt',1,0]
     [out0.c_snmd_ls_dl.cpp_snomed_cd_list_sk,'c_snmd_ls_dl.cpp_snomed_cd_list_sk',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_snmd_ls_dl.cpp_create_ts,'c_snmd_ls_dl.cpp_create_ts',1,0]
     [out0.c_snmd_ls_dl.cpp_update_ts,'c_snmd_ls_dl.cpp_update_ts',1,0]
     [out0.c_snmd_ls_dl.snomed_cd_list_id,'c_snmd_ls_dl.snomed_cd_list_id',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     ['lookup("c_snomed_cd_list").dxf_sk','dxf_sk',1,1]
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.snomed_cd_list_version,'snomed_cd_list_version',2,2]
     [in0.snomed_ct_id,'snomed_ct_id',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.snomed_ct_concept,'snomed_ct_concept',1,1]
     [in0.eff_start_dt,'eff_start_dt',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.idntfn_cd,'idntfn_cd',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.eff_end_dt,'eff_end_dt',1,1]
     [in0.snomed_cd_list_id,'snomed_cd_list_id',2,2]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_snmd_ls_dl_cpp_snomed_cd_list_dtl_sk = -1;
let utf8 string("\x01", maximum_length=60) c_snmd_ls_dl_snomed_cd_list_id = fail_if_error(in0.snomed_cd_list_id);
let decimal("\x01",0) c_snmd_ls_dl_snomed_cd_list_version = fail_if_error(in0.snomed_cd_list_version);
let decimal("\x01",0) c_snmd_ls_dl_cpp_snomed_cd_list_sk;
let utf8 string("\x01", maximum_length=40) c_snmd_ls_dl_idntfn_cd = fail_if_error(in0.idntfn_cd);
let utf8 string("\x01", maximum_length=200) c_snmd_ls_dl_snomed_ct_id = fail_if_error(in0.snomed_ct_id);
let utf8 string("\x01", maximum_length=1600) c_snmd_ls_dl_snomed_ct_concept = fail_if_error(in0.snomed_ct_concept);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_snmd_ls_dl_eff_start_dt = fail_if_error(in0.eff_start_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_snmd_ls_dl_eff_end_dt = fail_if_error(in0.eff_end_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_snmd_ls_dl_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_snmd_ls_dl_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_snmd_ls_dl_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_snmd_ls_dl_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_snmd_ls_dl_src_env_sk = 710;



/*   Default value   */
c_snmd_ls_dl_cpp_snomed_cd_list_sk=fail_if_error(first_defined(lookup("c_snomed_cd_list",in0.snomed_cd_list_id,in0.snomed_cd_list_version).dxf_sk,-1));

  out0.c_snmd_ls_dl.cpp_snomed_cd_list_dtl_sk::c_snmd_ls_dl_cpp_snomed_cd_list_dtl_sk;
  out0.c_snmd_ls_dl.snomed_cd_list_id::c_snmd_ls_dl_snomed_cd_list_id;
  out0.c_snmd_ls_dl.snomed_cd_list_version::c_snmd_ls_dl_snomed_cd_list_version;
  out0.c_snmd_ls_dl.cpp_snomed_cd_list_sk::c_snmd_ls_dl_cpp_snomed_cd_list_sk;
  out0.c_snmd_ls_dl.idntfn_cd::c_snmd_ls_dl_idntfn_cd;
  out0.c_snmd_ls_dl.snomed_ct_id::c_snmd_ls_dl_snomed_ct_id;
  out0.c_snmd_ls_dl.snomed_ct_concept::c_snmd_ls_dl_snomed_ct_concept;
  out0.c_snmd_ls_dl.eff_start_dt::c_snmd_ls_dl_eff_start_dt;
  out0.c_snmd_ls_dl.eff_end_dt::c_snmd_ls_dl_eff_end_dt;
  out0.c_snmd_ls_dl.cpp_update_ts::c_snmd_ls_dl_cpp_update_ts;
  out0.c_snmd_ls_dl.cpp_updated_by::c_snmd_ls_dl_cpp_updated_by;
  out0.c_snmd_ls_dl.cpp_create_ts::c_snmd_ls_dl_cpp_create_ts;
  out0.c_snmd_ls_dl.cpp_created_by::c_snmd_ls_dl_cpp_created_by;
  out0.c_snmd_ls_dl.src_env_sk::c_snmd_ls_dl_src_env_sk;
  out0.*::in0.*;

end;
