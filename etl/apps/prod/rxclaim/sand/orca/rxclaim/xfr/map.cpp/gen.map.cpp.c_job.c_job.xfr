/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_581716c5_134c_5 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_job.job_id,[passthrough],in0.job_id]
  [out0.c_job.src_env_sk,[transform],]
  [out0.c_job.num_of_identified_prescribers,[passthrough],in0.num_of_identified_prescribers]
  [out0.c_job.cycel_yr,[passthrough],in0.cycle_yr]
  [out0.c_job.num_of_triggered_claim,[passthrough],in0.num_of_triggered_claim]
  [out0.c_job.product_id,[passthrough],in0.product_id]
  [out0.c_job.cpp_program_sk,[transform],in0.program_id,
     'lookup("c_program").dxf_sk']
  [out0.c_job.num_of_targeted_members,[passthrough],in0.num_of_targeted_members]
  [out0.c_job.num_of_identified_members,[passthrough],in0.num_of_identified_members]
  [out0.c_job.cpp_client_sk,[transform],in0.client_id,
     'lookup("c_client").dxf_sk']
  [out0.c_job.cpp_product_sk,[transform],in0.product_id,
     'lookup("c_product").dxf_sk']
  [out0.c_job.run_stts,[passthrough],in0.run_stts]
  [out0.c_job.program_id,[passthrough],in0.program_id]
  [out0.c_job.client_id,[passthrough],in0.client_id]
  [out0.c_job.num_of_members,[passthrough],in0.num_of_members]
  [out0.c_job.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_job.exec_dt,[passthrough],in0.exec_dt]
  [out0.c_job.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_job.intvns_created_count,[passthrough],in0.intvns_created_count]
  [out0.c_job.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_job.num_of_claim_received,[passthrough],in0.num_of_claim_received]
  [out0.c_job.cpp_job_sk,[transform],]
  [out0.c_job.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_job.num_of_identified_pharmacies,[passthrough],in0.num_of_identified_pharmacies]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_job.job_id,'c_job.job_id',1,0]
     [out0.c_job.src_env_sk,'c_job.src_env_sk',1,0]
     [out0.c_job.num_of_identified_prescribers,'c_job.num_of_identified_prescribers',1,0]
     [out0.c_job.cycel_yr,'c_job.cycel_yr',1,0]
     [out0.c_job.num_of_triggered_claim,'c_job.num_of_triggered_claim',1,0]
     [out0.c_job.product_id,'c_job.product_id',1,0]
     [out0.c_job.cpp_program_sk,'c_job.cpp_program_sk',1,0]
     [out0.c_job.num_of_targeted_members,'c_job.num_of_targeted_members',1,0]
     [out0.c_job.cycle_num,'c_job.cycle_num',1,0]
     [out0.c_job.num_of_identified_members,'c_job.num_of_identified_members',1,0]
     [out0.c_job.cpp_client_sk,'c_job.cpp_client_sk',1,0]
     [out0.c_job.cpp_product_sk,'c_job.cpp_product_sk',1,0]
     [out0.c_job.run_stts,'c_job.run_stts',1,0]
     [out0.c_job.program_id,'c_job.program_id',1,0]
     [out0.c_job.client_id,'c_job.client_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_job.num_of_members,'c_job.num_of_members',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_job.cpp_updated_by,'c_job.cpp_updated_by',1,0]
     [out0.c_job.exec_dt,'c_job.exec_dt',1,0]
     [out0.c_job.cpp_create_ts,'c_job.cpp_create_ts',1,0]
     [out0.c_job.intvns_created_count,'c_job.intvns_created_count',1,0]
     [out0.c_job.cpp_update_ts,'c_job.cpp_update_ts',1,0]
     [out0.c_job.num_of_claim_received,'c_job.num_of_claim_received',1,0]
     [out0.c_job.cpp_job_sk,'c_job.cpp_job_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_job.cycle_freq,'c_job.cycle_freq',1,0]
     [out0.c_job.cpp_created_by,'c_job.cpp_created_by',1,0]
     [out0.c_job.num_of_identified_pharmacies,'c_job.num_of_identified_pharmacies',1,0]
  ]
  impacts:
  [
     [in0.cycle_freq,'cycle_freq',1,1]
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.cycle_yr,'cycle_yr',1,1]
     [in0.run_stts,'run_stts',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.num_of_identified_pharmacies,'num_of_identified_pharmacies',1,1]
     [in0.num_of_identified_prescribers,'num_of_identified_prescribers',1,1]
     [in0.cycle_num,'cycle_num',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.program_id,'program_id',2,2]
     [in0.num_of_claim_received,'num_of_claim_received',1,1]
     [in0.client_id,'client_id',2,2]
     ['lookup("c_product").dxf_sk','dxf_sk',1,1]
     [in0.num_of_identified_members,'num_of_identified_members',1,1]
     [in0.num_of_members,'num_of_members',1,1]
     [in0.exec_dt,'exec_dt',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.job_id,'job_id',1,1]
     [in0.intvns_created_count,'intvns_created_count',1,1]
     [in0.num_of_triggered_claim,'num_of_triggered_claim',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.num_of_targeted_members,'num_of_targeted_members',1,1]
     [in0.product_id,'product_id',2,2]
     ['lookup("c_client").dxf_sk','dxf_sk',1,1]
     ['lookup("c_program").dxf_sk','dxf_sk',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_job_cpp_job_sk = -1;
let decimal("\x01",0) c_job_job_id = fail_if_error(in0.job_id);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_job_exec_dt = fail_if_error(in0.exec_dt);
let utf8 string("\x01", maximum_length=60) c_job_client_id = fail_if_error(in0.client_id);
let utf8 string("\x01", maximum_length=60) c_job_product_id = fail_if_error(in0.product_id);
let utf8 string("\x01", maximum_length=100) c_job_program_id = fail_if_error(in0.program_id);
let utf8 string("\x01", maximum_length=20) c_job_run_stts = fail_if_error(in0.run_stts);
let decimal("\x01",0) c_job_num_of_members = fail_if_error(in0.num_of_members);
let decimal("\x01",0) c_job_num_of_identified_members = fail_if_error(in0.num_of_identified_members);
let decimal("\x01",0) c_job_num_of_targeted_members = fail_if_error(in0.num_of_targeted_members);
let decimal("\x01",0) c_job_num_of_claim_received = fail_if_error(in0.num_of_claim_received);
let decimal("\x01",0) c_job_num_of_triggered_claim = fail_if_error(in0.num_of_triggered_claim);
let decimal("\x01",0) c_job_intvns_created_count = fail_if_error(in0.intvns_created_count);
let decimal("\x01",0) c_job_num_of_identified_prescribers = fail_if_error(in0.num_of_identified_prescribers);
let decimal("\x01",0) c_job_num_of_identified_pharmacies = fail_if_error(in0.num_of_identified_pharmacies);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_job_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_job_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_job_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_job_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_job_src_env_sk = 710;
let decimal("\x01",0) c_job_cpp_program_sk;
let decimal("\x01",0) c_job_cpp_product_sk;
let decimal("\x01",0) c_job_cpp_client_sk;
let decimal("\x01",0, maximum_length=11, sign_reserved) c_job_cycle_num = fail_if_error(in0.cycle_num);
let string("\x01",charset="iso-8859-15", maximum_length=4) c_job_cycel_yr = fail_if_error(in0.cycle_yr);
let string("\x01",charset="iso-8859-15", maximum_length=10) c_job_cycle_freq = fail_if_error(in0.cycle_freq);



/*   Default value   */
c_job_cpp_program_sk=fail_if_error(first_defined(lookup("c_program",in0.program_id).dxf_sk,-1));

/*   Default value   */
c_job_cpp_client_sk=fail_if_error(first_defined(lookup("c_client",in0.client_id).dxf_sk,-1));

/*   Default value   */
c_job_cpp_product_sk=fail_if_error(first_defined(lookup("c_product",in0.product_id).dxf_sk,-1));

  out0.c_job.cpp_job_sk::c_job_cpp_job_sk;
  out0.c_job.job_id::c_job_job_id;
  out0.c_job.exec_dt::c_job_exec_dt;
  out0.c_job.client_id::c_job_client_id;
  out0.c_job.product_id::c_job_product_id;
  out0.c_job.program_id::c_job_program_id;
  out0.c_job.run_stts::c_job_run_stts;
  out0.c_job.num_of_members::c_job_num_of_members;
  out0.c_job.num_of_identified_members::c_job_num_of_identified_members;
  out0.c_job.num_of_targeted_members::c_job_num_of_targeted_members;
  out0.c_job.num_of_claim_received::c_job_num_of_claim_received;
  out0.c_job.num_of_triggered_claim::c_job_num_of_triggered_claim;
  out0.c_job.intvns_created_count::c_job_intvns_created_count;
  out0.c_job.num_of_identified_prescribers::c_job_num_of_identified_prescribers;
  out0.c_job.num_of_identified_pharmacies::c_job_num_of_identified_pharmacies;
  out0.c_job.cpp_update_ts::c_job_cpp_update_ts;
  out0.c_job.cpp_updated_by::c_job_cpp_updated_by;
  out0.c_job.cpp_create_ts::c_job_cpp_create_ts;
  out0.c_job.cpp_created_by::c_job_cpp_created_by;
  out0.c_job.src_env_sk::c_job_src_env_sk;
  out0.c_job.cpp_program_sk::c_job_cpp_program_sk;
  out0.c_job.cpp_product_sk::c_job_cpp_product_sk;
  out0.c_job.cpp_client_sk::c_job_cpp_client_sk;
  out0.c_job.cycle_num::c_job_cycle_num;
  out0.c_job.cycel_yr::c_job_cycel_yr;
  out0.c_job.cycle_freq::c_job_cycle_freq;
  out0.*::in0.*;

end;
