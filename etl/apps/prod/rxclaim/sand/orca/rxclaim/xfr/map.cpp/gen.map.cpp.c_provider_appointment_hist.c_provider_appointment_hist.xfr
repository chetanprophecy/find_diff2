/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5a548a16_1672_1 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_prov_apnt.case_id,[passthrough],in0.case_id]
  [out0.c_prov_apnt.cpp_provider_appointment_hist_sk,[transform],]
  [out0.c_prov_apnt.src_env_sk,[transform],]
  [out0.c_prov_apnt.sceduled_by,[passthrough],in0.sceduled_by]
  [out0.c_prov_apnt.timezone,[passthrough],in0.timezone]
  [out0.c_prov_apnt.provider_id,[passthrough],in0.provider_id]
  [out0.c_prov_apnt.cpp_provider_followup_call_hist_sk,[transform],in0.sequence_num,
     in0.provider_followup_call_hist_id,
     'lookup("c_provider_appt_hist").dxf_sk']
  [out0.c_prov_apnt.scheduled_with,[passthrough],in0.scheduled_with]
  [out0.c_prov_apnt.sequence_num,[passthrough],in0.sequence_num]
  [out0.c_prov_apnt.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_prov_apnt.appointment_duration,[passthrough],in0.appointment_duration]
  [out0.c_prov_apnt.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_prov_apnt.appointment_end_dt,[passthrough],in0.appointment_end_dt]
  [out0.c_prov_apnt.cpp_provider_sk,[transform],in0.provider_id,
     'lookup("c_provider").dxf_sk']
  [out0.c_prov_apnt.appointment_start_dt,[passthrough],in0.appointment_start_dt]
  [out0.c_prov_apnt.parent_case_id,[passthrough],in0.parent_case_id]
  [out0.c_prov_apnt.provider_followup_call_hist_id,[passthrough],in0.provider_followup_call_hist_id]
  [out0.c_prov_apnt.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_prov_apnt.provider_appointment_hist_id,[passthrough],in0.provider_appointment_hist_id]
  [out0.c_prov_apnt.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_prov_apnt.case_id,'c_prov_apnt.case_id',1,0]
     [out0.c_prov_apnt.cpp_provider_appointment_hist_sk,'c_prov_apnt.cpp_provider_appointment_hist_sk',1,0]
     [out0.c_prov_apnt.src_env_sk,'c_prov_apnt.src_env_sk',1,0]
     [out0.c_prov_apnt.sceduled_by,'c_prov_apnt.sceduled_by',1,0]
     [out0.c_prov_apnt.timezone,'c_prov_apnt.timezone',1,0]
     [out0.c_prov_apnt.provider_id,'c_prov_apnt.provider_id',1,0]
     [out0.c_prov_apnt.cpp_provider_followup_call_hist_sk,'c_prov_apnt.cpp_provider_followup_call_hist_sk',1,0]
     [out0.c_prov_apnt.scheduled_with,'c_prov_apnt.scheduled_with',1,0]
     [out0.c_prov_apnt.sequence_num,'c_prov_apnt.sequence_num',1,0]
     [out0.c_prov_apnt.cpp_updated_by,'c_prov_apnt.cpp_updated_by',1,0]
     [out0.c_prov_apnt.appointment_duration,'c_prov_apnt.appointment_duration',1,0]
     [out0.c_prov_apnt.cpp_created_by,'c_prov_apnt.cpp_created_by',1,0]
     [out0.c_prov_apnt.appointment_end_dt,'c_prov_apnt.appointment_end_dt',1,0]
     [out0.c_prov_apnt.cpp_provider_sk,'c_prov_apnt.cpp_provider_sk',1,0]
     [out0.c_prov_apnt.appointment_start_dt,'c_prov_apnt.appointment_start_dt',1,0]
     [out0.c_prov_apnt.parent_case_id,'c_prov_apnt.parent_case_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_prov_apnt.provider_followup_call_hist_id,'c_prov_apnt.provider_followup_call_hist_id',1,0]
     [out0.c_prov_apnt.cpp_update_ts,'c_prov_apnt.cpp_update_ts',1,0]
     [out0.c_prov_apnt.provider_appointment_hist_id,'c_prov_apnt.provider_appointment_hist_id',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_prov_apnt.cpp_create_ts,'c_prov_apnt.cpp_create_ts',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.appointment_start_dt,'appointment_start_dt',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     ['lookup("c_provider").dxf_sk','dxf_sk',1,1]
     [in0.sequence_num,'sequence_num',2,2]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.sceduled_by,'sceduled_by',1,1]
     [in0.parent_case_id,'parent_case_id',1,1]
     [in0.provider_id,'provider_id',2,2]
     [in0.case_id,'case_id',1,1]
     [in0.provider_followup_call_hist_id,'provider_followup_call_hist_id',2,2]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.appointment_end_dt,'appointment_end_dt',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.scheduled_with,'scheduled_with',1,1]
     ['lookup("c_provider_appt_hist").dxf_sk','dxf_sk',1,1]
     [in0.timezone,'timezone',1,1]
     [in0.appointment_duration,'appointment_duration',1,1]
     [in0.provider_appointment_hist_id,'provider_appointment_hist_id',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_prov_apnt_cpp_provider_appointment_hist_sk = -1;
let decimal("\x01",0, maximum_length=39, sign_reserved) c_prov_apnt_provider_appointment_hist_id = fail_if_error(in0.provider_appointment_hist_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_prov_apnt_provider_followup_call_hist_id = fail_if_error(in0.provider_followup_call_hist_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_prov_apnt_sequence_num = fail_if_error(in0.sequence_num);
let decimal("\x01",0) c_prov_apnt_cpp_provider_followup_call_hist_sk;
let decimal("\x01",0, maximum_length=39, sign_reserved) c_prov_apnt_provider_id = fail_if_error(in0.provider_id);
let decimal("\x01",0) c_prov_apnt_cpp_provider_sk;
let string("\x01",charset="iso-8859-15", maximum_length=15) c_prov_apnt_case_id = fail_if_error(in0.case_id);
let string("\x01",charset="iso-8859-15", maximum_length=15) c_prov_apnt_parent_case_id = fail_if_error(in0.parent_case_id);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_prov_apnt_scheduled_with = fail_if_error(in0.scheduled_with);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prov_apnt_appointment_start_dt = fail_if_error(in0.appointment_start_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prov_apnt_appointment_end_dt = fail_if_error(in0.appointment_end_dt);
let decimal("\x01",0, maximum_length=4, sign_reserved) c_prov_apnt_appointment_duration = fail_if_error(in0.appointment_duration);
let string("\x01",charset="iso-8859-15", maximum_length=3) c_prov_apnt_timezone = fail_if_error(in0.timezone);
let utf8 string("\x01", maximum_length=80) c_prov_apnt_sceduled_by = fail_if_error(in0.sceduled_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prov_apnt_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_prov_apnt_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prov_apnt_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_prov_apnt_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_prov_apnt_src_env_sk = 710;



/*   Default value   */
c_prov_apnt_cpp_provider_followup_call_hist_sk=fail_if_error(lookup("c_provider_appt_hist",in0.provider_followup_call_hist_id,in0.sequence_num).dxf_sk);

/*   Default value   */
c_prov_apnt_cpp_provider_sk=fail_if_error(lookup("c_provider",in0.provider_id).dxf_sk);

  out0.c_prov_apnt.cpp_provider_appointment_hist_sk::c_prov_apnt_cpp_provider_appointment_hist_sk;
  out0.c_prov_apnt.provider_appointment_hist_id::c_prov_apnt_provider_appointment_hist_id;
  out0.c_prov_apnt.provider_followup_call_hist_id::c_prov_apnt_provider_followup_call_hist_id;
  out0.c_prov_apnt.sequence_num::c_prov_apnt_sequence_num;
  out0.c_prov_apnt.cpp_provider_followup_call_hist_sk::c_prov_apnt_cpp_provider_followup_call_hist_sk;
  out0.c_prov_apnt.provider_id::c_prov_apnt_provider_id;
  out0.c_prov_apnt.cpp_provider_sk::c_prov_apnt_cpp_provider_sk;
  out0.c_prov_apnt.case_id::c_prov_apnt_case_id;
  out0.c_prov_apnt.parent_case_id::c_prov_apnt_parent_case_id;
  out0.c_prov_apnt.scheduled_with::c_prov_apnt_scheduled_with;
  out0.c_prov_apnt.appointment_start_dt::c_prov_apnt_appointment_start_dt;
  out0.c_prov_apnt.appointment_end_dt::c_prov_apnt_appointment_end_dt;
  out0.c_prov_apnt.appointment_duration::c_prov_apnt_appointment_duration;
  out0.c_prov_apnt.timezone::c_prov_apnt_timezone;
  out0.c_prov_apnt.sceduled_by::c_prov_apnt_sceduled_by;
  out0.c_prov_apnt.cpp_update_ts::c_prov_apnt_cpp_update_ts;
  out0.c_prov_apnt.cpp_updated_by::c_prov_apnt_cpp_updated_by;
  out0.c_prov_apnt.cpp_create_ts::c_prov_apnt_cpp_create_ts;
  out0.c_prov_apnt.cpp_created_by::c_prov_apnt_cpp_created_by;
  out0.c_prov_apnt.src_env_sk::c_prov_apnt_src_env_sk;
  out0.*::in0.*;

end;
