/*   Do not edit. Generated file - BRE 4.0.2.6;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_ctrx_cdur_overides_rcdpsp_to_the_ctrx_cdur_overides_rcdpsp_ILM_documentation(in)=
begin

out0.ctrx_cdr_psp.aoi1cj::depends_on(
         in.aoi1cj
         );


out0.ctrx_cdr_psp.aooinb::depends_on(
         in.aooinb
         );


out0.ctrx_cdr_psp.src_env_sk::depends_on(
         in.rxt_src_envrt_id
         );


out0.ctrx_cdr_psp.aolast::depends_on(
         in.aolast
         );


out0.ctrx_cdr_psp.aoi2cj::depends_on(
         in.aoi2cj
         );


out0.ctrx_cdr_psp.aolcst::depends_on(
         in.aolcst
         );


out0.ctrx_cdr_psp.aop2nb::depends_on(
         in.aop2nb
         );


out0.ctrx_cdr_psp.aor5n2::depends_on(
         in.aor5n2
         );


out0.ctrx_cdr_psp.aor7c4::depends_on(
         in.aor7c4
         );


out0.ctrx_cdr_psp.aolbst::depends_on(
         in.aolbst
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_ctrx_cdur_overides_rcdpsp_to_the_ctrx_cdur_overides_rcdpsp_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.ctrx_cdr_psp.aoi1cj,'ctrx_cdr_psp.aoi1cj',1,0]
     [out0.ctrx_cdr_psp.aooinb,'ctrx_cdr_psp.aooinb',1,0]
     [out0.ctrx_cdr_psp.src_env_sk,'ctrx_cdr_psp.src_env_sk',1,0]
     [out0.ctrx_cdr_psp.aolast,'ctrx_cdr_psp.aolast',1,0]
     [out0.ctrx_cdr_psp.aoi2cj,'ctrx_cdr_psp.aoi2cj',1,0]
     [out0.ctrx_cdr_psp.aolcst,'ctrx_cdr_psp.aolcst',1,0]
     [out0.ctrx_cdr_psp.aop2nb,'ctrx_cdr_psp.aop2nb',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.ctrx_cdr_psp.aor5n2,'ctrx_cdr_psp.aor5n2',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.ctrx_cdr_psp.aor7c4,'ctrx_cdr_psp.aor7c4',1,0]
     [out0.ctrx_cdr_psp.aolbst,'ctrx_cdr_psp.aolbst',1,0]
  ]
  impacts:
  [
     [in0.aolcst,'aolcst',1,1]
     [in0.aoi1cj,'aoi1cj',1,1]
     [in0.aor7c4,'aor7c4',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',1,1]
     [in0.aolbst,'aolbst',1,1]
     [in0.aolast,'aolast',1,1]
     [in0.aor5n2,'aor5n2',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.aooinb,'aooinb',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.aoi2cj,'aoi2cj',1,1]
     [in0.aop2nb,'aop2nb',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01", maximum_length=18) ctrx_cdr_psp_aop2nb = fail_if_error(in0.aop2nb);
let decimal("\x01", maximum_length=6) ctrx_cdr_psp_aooinb = fail_if_error(in0.aooinb);
let decimal("\x01", maximum_length=6) ctrx_cdr_psp_aor5n2 = fail_if_error(in0.aor5n2);
let string("\x01", maximum_length=2) ctrx_cdr_psp_aolast = fail_if_error(in0.aolast);
let string("\x01", maximum_length=2) ctrx_cdr_psp_aolbst = fail_if_error(in0.aolbst);
let string("\x01", maximum_length=2) ctrx_cdr_psp_aolcst = fail_if_error(in0.aolcst);
let string("\x01", maximum_length=2) ctrx_cdr_psp_aoi1cj = fail_if_error(in0.aoi1cj);
let string("\x01", maximum_length=2) ctrx_cdr_psp_aoi2cj = fail_if_error(in0.aoi2cj);
let string("\x01", maximum_length=20) ctrx_cdr_psp_aor7c4 = fail_if_error(in0.aor7c4);
let decimal("\x01",0) ctrx_cdr_psp_src_env_sk = fail_if_error((decimal(''))(in0.rxt_src_envrt_id));



  out0.ctrx_cdr_psp.aop2nb::ctrx_cdr_psp_aop2nb;
  out0.ctrx_cdr_psp.aooinb::ctrx_cdr_psp_aooinb;
  out0.ctrx_cdr_psp.aor5n2::ctrx_cdr_psp_aor5n2;
  out0.ctrx_cdr_psp.aolast::ctrx_cdr_psp_aolast;
  out0.ctrx_cdr_psp.aolbst::ctrx_cdr_psp_aolbst;
  out0.ctrx_cdr_psp.aolcst::ctrx_cdr_psp_aolcst;
  out0.ctrx_cdr_psp.aoi1cj::ctrx_cdr_psp_aoi1cj;
  out0.ctrx_cdr_psp.aoi2cj::ctrx_cdr_psp_aoi2cj;
  out0.ctrx_cdr_psp.aor7c4::ctrx_cdr_psp_aor7c4;
  out0.ctrx_cdr_psp.src_env_sk::ctrx_cdr_psp_src_env_sk;
  out0.*::in0.*;
end;
