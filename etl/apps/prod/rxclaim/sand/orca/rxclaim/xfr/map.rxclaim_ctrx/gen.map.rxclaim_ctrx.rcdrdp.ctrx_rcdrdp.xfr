/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_58a3e3f5_3570_0 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.ctrx_rcdrdp.d3bmdt,[transform],in0.d3bmdt]
  [out0.ctrx_rcdrdp.src_env_sk,[passthrough],in0.rxt_src_envrt_id]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.ctrx_rcdrdp.d3aeda,'ctrx_rcdrdp.d3aeda',1,0]
     [out0.ctrx_rcdrdp.d3nkcd,'ctrx_rcdrdp.d3nkcd',1,0]
     [out0.ctrx_rcdrdp.d3p2nb,'ctrx_rcdrdp.d3p2nb',1,0]
     [out0.ctrx_rcdrdp.d3iqhr,'ctrx_rcdrdp.d3iqhr',1,0]
     [out0.ctrx_rcdrdp.d3aeh6,'ctrx_rcdrdp.d3aeh6',1,0]
     [out0.ctrx_rcdrdp.d3aevn,'ctrx_rcdrdp.d3aevn',1,0]
     [out0.ctrx_rcdrdp.d3jjnb,'ctrx_rcdrdp.d3jjnb',1,0]
     [out0.ctrx_rcdrdp.d3l2st,'ctrx_rcdrdp.d3l2st',1,0]
     [out0.ctrx_rcdrdp.d3alvn,'ctrx_rcdrdp.d3alvn',1,0]
     [out0.ctrx_rcdrdp.d3jgnb,'ctrx_rcdrdp.d3jgnb',1,0]
     [out0.ctrx_rcdrdp.d3bmdt,'ctrx_rcdrdp.d3bmdt',1,0]
     [out0.ctrx_rcdrdp.d3c2dt,'ctrx_rcdrdp.d3c2dt',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.ctrx_rcdrdp.d3abtm,'ctrx_rcdrdp.d3abtm',1,0]
     [out0.ctrx_rcdrdp.d3l7st,'ctrx_rcdrdp.d3l7st',1,0]
     [out0.ctrx_rcdrdp.d3l3st,'ctrx_rcdrdp.d3l3st',1,0]
     [out0.ctrx_rcdrdp.d3lvtx,'ctrx_rcdrdp.d3lvtx',1,0]
     [out0.ctrx_rcdrdp.d3afh6,'ctrx_rcdrdp.d3afh6',1,0]
     [out0.ctrx_rcdrdp.d3jdhr,'ctrx_rcdrdp.d3jdhr',1,0]
     [out0.ctrx_rcdrdp.d3l1st,'ctrx_rcdrdp.d3l1st',1,0]
     [out0.ctrx_rcdrdp.d3l8st,'ctrx_rcdrdp.d3l8st',1,0]
     [out0.ctrx_rcdrdp.d3ishr,'ctrx_rcdrdp.d3ishr',1,0]
     [out0.ctrx_rcdrdp.d3iohr,'ctrx_rcdrdp.d3iohr',1,0]
     [out0.ctrx_rcdrdp.d3b0ik,'ctrx_rcdrdp.d3b0ik',1,0]
     [out0.ctrx_rcdrdp.d3advn,'ctrx_rcdrdp.d3advn',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.ctrx_rcdrdp.src_env_sk,'ctrx_rcdrdp.src_env_sk',1,0]
     [out0.ctrx_rcdrdp.d3bzik,'ctrx_rcdrdp.d3bzik',1,0]
     [out0.ctrx_rcdrdp.d3akvn,'ctrx_rcdrdp.d3akvn',1,0]
     [out0.ctrx_rcdrdp.d3r2ip,'ctrx_rcdrdp.d3r2ip',1,0]
     [out0.ctrx_rcdrdp.d3adtm,'ctrx_rcdrdp.d3adtm',1,0]
     [out0.ctrx_rcdrdp.d3iphr,'ctrx_rcdrdp.d3iphr',1,0]
     [out0.ctrx_rcdrdp.d3irhr,'ctrx_rcdrdp.d3irhr',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.ctrx_rcdrdp.d3z5ha,'ctrx_rcdrdp.d3z5ha',1,0]
     [out0.ctrx_rcdrdp.d3oinb,'ctrx_rcdrdp.d3oinb',1,0]
     [out0.ctrx_rcdrdp.d3ithr,'ctrx_rcdrdp.d3ithr',1,0]
  ]
  impacts:
  [
     [in0.d3l3st,'d3l3st',1,1]
     [in0.d3ithr,'d3ithr',1,1]
     [in0.d3z5ha,'d3z5ha',1,1]
     [in0.d3bzik,'d3bzik',1,1]
     [in0.d3l8st,'d3l8st',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.d3aeda,'d3aeda',1,1]
     [in0.d3alvn,'d3alvn',1,1]
     [in0.d3l7st,'d3l7st',1,1]
     [in0.d3l1st,'d3l1st',1,1]
     [in0.d3jdhr,'d3jdhr',1,1]
     [in0.d3iohr,'d3iohr',1,1]
     [in0.d3abtm,'d3abtm',1,1]
     [in0.d3jjnb,'d3jjnb',1,1]
     [in0.d3c2dt,'d3c2dt',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.d3iphr,'d3iphr',1,1]
     [in0.d3akvn,'d3akvn',1,1]
     [in0.d3oinb,'d3oinb',1,1]
     [in0.d3advn,'d3advn',1,1]
     [in0.d3bmdt,'d3bmdt',1,1]
     [in0.d3aevn,'d3aevn',1,1]
     [in0.d3b0ik,'d3b0ik',1,1]
     [in0.d3r2ip,'d3r2ip',1,1]
     [in0.d3jgnb,'d3jgnb',1,1]
     [in0.d3aeh6,'d3aeh6',1,1]
     [in0.d3irhr,'d3irhr',1,1]
     [in0.d3p2nb,'d3p2nb',1,1]
     [in0.d3adtm,'d3adtm',1,1]
     [in0.d3iqhr,'d3iqhr',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.d3lvtx,'d3lvtx',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.d3afh6,'d3afh6',1,1]
     [in0.d3nkcd,'d3nkcd',1,1]
     [in0.d3ishr,'d3ishr',1,1]
     [in0.d3l2st,'d3l2st',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01", maximum_length=18) ctrx_rcdrdp_d3p2nb = fail_if_error(in0.d3p2nb);
let decimal("\x01", maximum_length=6) ctrx_rcdrdp_d3oinb = fail_if_error(in0.d3oinb);
let decimal("\x01", maximum_length=6) ctrx_rcdrdp_d3jjnb = fail_if_error(in0.d3jjnb);
let string("\x01", maximum_length=2) ctrx_rcdrdp_d3l7st = fail_if_error(in0.d3l7st);
let string("\x01", maximum_length=1) ctrx_rcdrdp_d3l1st = fail_if_error(in0.d3l1st);
let string("\x01", maximum_length=1) ctrx_rcdrdp_d3l2st = fail_if_error(in0.d3l2st);
let decimal("\x01", maximum_length=11) ctrx_rcdrdp_d3aeda = fail_if_error(in0.d3aeda);
let decimal("\x01".3, maximum_length=18) ctrx_rcdrdp_d3jgnb = fail_if_error(in0.d3jgnb);
let string("\x01", maximum_length=1) ctrx_rcdrdp_d3l3st = fail_if_error(in0.d3l3st);
let string("\x01", maximum_length=1) ctrx_rcdrdp_d3l8st = fail_if_error(in0.d3l8st);
let string("\x01", maximum_length=30) ctrx_rcdrdp_d3lvtx = fail_if_error(in0.d3lvtx);
let string("\x01", maximum_length=1) ctrx_rcdrdp_d3aeh6 = fail_if_error(in0.d3aeh6);
let string("\x01", maximum_length=1) ctrx_rcdrdp_d3afh6 = fail_if_error(in0.d3afh6);
let decimal("\x01", maximum_length=5) ctrx_rcdrdp_d3jdhr = fail_if_error(in0.d3jdhr);
let string("\x01", maximum_length=8) ctrx_rcdrdp_d3nkcd = fail_if_error(in0.d3nkcd);
let decimal("\x01", maximum_length=18) ctrx_rcdrdp_d3iqhr = fail_if_error(in0.d3iqhr);
let decimal("\x01", maximum_length=6) ctrx_rcdrdp_d3irhr = fail_if_error(in0.d3irhr);
let decimal("\x01", maximum_length=5) ctrx_rcdrdp_d3ithr = fail_if_error(in0.d3ithr);
let decimal("\x01", maximum_length=4) ctrx_rcdrdp_d3bzik = fail_if_error(in0.d3bzik);
let decimal("\x01", maximum_length=4) ctrx_rcdrdp_d3b0ik = fail_if_error(in0.d3b0ik);
let decimal("\x01", maximum_length=5) ctrx_rcdrdp_d3ishr = fail_if_error(in0.d3ishr);
let string("\x01", maximum_length=1) ctrx_rcdrdp_d3z5ha = fail_if_error(in0.d3z5ha);
let decimal("\x01", maximum_length=5) ctrx_rcdrdp_d3iohr = fail_if_error(in0.d3iohr);
let decimal("\x01", maximum_length=5) ctrx_rcdrdp_d3iphr = fail_if_error(in0.d3iphr);
let string("\x01", maximum_length=100) ctrx_rcdrdp_d3r2ip = fail_if_error(in0.d3r2ip);
let string("\x01", maximum_length=10) ctrx_rcdrdp_d3akvn = fail_if_error(in0.d3akvn);
let decimal("\x01", maximum_length=10) ctrx_rcdrdp_d3c2dt = fail_if_error(in0.d3c2dt);
let decimal("\x01", maximum_length=9) ctrx_rcdrdp_d3adtm = fail_if_error(in0.d3adtm);
let string("\x01", maximum_length=10) ctrx_rcdrdp_d3alvn = fail_if_error(in0.d3alvn);
let string("\x01", maximum_length=10) ctrx_rcdrdp_d3advn = fail_if_error(in0.d3advn);
let decimal("\x01", maximum_length=10) ctrx_rcdrdp_d3bmdt;
let decimal("\x01", maximum_length=9) ctrx_rcdrdp_d3abtm = fail_if_error(in0.d3abtm);
let string("\x01", maximum_length=10) ctrx_rcdrdp_d3aevn = fail_if_error(in0.d3aevn);
let decimal("\x01",0) ctrx_rcdrdp_src_env_sk = fail_if_error(in0.rxt_src_envrt_id);



/*   Default value   */
ctrx_rcdrdp_d3bmdt=fail_if_error(date_check(in0.d3bmdt));

  out0.ctrx_rcdrdp.d3p2nb::ctrx_rcdrdp_d3p2nb;
  out0.ctrx_rcdrdp.d3oinb::ctrx_rcdrdp_d3oinb;
  out0.ctrx_rcdrdp.d3jjnb::ctrx_rcdrdp_d3jjnb;
  out0.ctrx_rcdrdp.d3l7st::ctrx_rcdrdp_d3l7st;
  out0.ctrx_rcdrdp.d3l1st::ctrx_rcdrdp_d3l1st;
  out0.ctrx_rcdrdp.d3l2st::ctrx_rcdrdp_d3l2st;
  out0.ctrx_rcdrdp.d3aeda::ctrx_rcdrdp_d3aeda;
  out0.ctrx_rcdrdp.d3jgnb::ctrx_rcdrdp_d3jgnb;
  out0.ctrx_rcdrdp.d3l3st::ctrx_rcdrdp_d3l3st;
  out0.ctrx_rcdrdp.d3l8st::ctrx_rcdrdp_d3l8st;
  out0.ctrx_rcdrdp.d3lvtx::ctrx_rcdrdp_d3lvtx;
  out0.ctrx_rcdrdp.d3aeh6::ctrx_rcdrdp_d3aeh6;
  out0.ctrx_rcdrdp.d3afh6::ctrx_rcdrdp_d3afh6;
  out0.ctrx_rcdrdp.d3jdhr::ctrx_rcdrdp_d3jdhr;
  out0.ctrx_rcdrdp.d3nkcd::ctrx_rcdrdp_d3nkcd;
  out0.ctrx_rcdrdp.d3iqhr::ctrx_rcdrdp_d3iqhr;
  out0.ctrx_rcdrdp.d3irhr::ctrx_rcdrdp_d3irhr;
  out0.ctrx_rcdrdp.d3ithr::ctrx_rcdrdp_d3ithr;
  out0.ctrx_rcdrdp.d3bzik::ctrx_rcdrdp_d3bzik;
  out0.ctrx_rcdrdp.d3b0ik::ctrx_rcdrdp_d3b0ik;
  out0.ctrx_rcdrdp.d3ishr::ctrx_rcdrdp_d3ishr;
  out0.ctrx_rcdrdp.d3z5ha::ctrx_rcdrdp_d3z5ha;
  out0.ctrx_rcdrdp.d3iohr::ctrx_rcdrdp_d3iohr;
  out0.ctrx_rcdrdp.d3iphr::ctrx_rcdrdp_d3iphr;
  out0.ctrx_rcdrdp.d3r2ip::ctrx_rcdrdp_d3r2ip;
  out0.ctrx_rcdrdp.d3akvn::ctrx_rcdrdp_d3akvn;
  out0.ctrx_rcdrdp.d3c2dt::ctrx_rcdrdp_d3c2dt;
  out0.ctrx_rcdrdp.d3adtm::ctrx_rcdrdp_d3adtm;
  out0.ctrx_rcdrdp.d3alvn::ctrx_rcdrdp_d3alvn;
  out0.ctrx_rcdrdp.d3advn::ctrx_rcdrdp_d3advn;
  out0.ctrx_rcdrdp.d3bmdt::ctrx_rcdrdp_d3bmdt;
  out0.ctrx_rcdrdp.d3abtm::ctrx_rcdrdp_d3abtm;
  out0.ctrx_rcdrdp.d3aevn::ctrx_rcdrdp_d3aevn;
  out0.ctrx_rcdrdp.src_env_sk::ctrx_rcdrdp_src_env_sk;
  out0.*::in0.*;

end;
