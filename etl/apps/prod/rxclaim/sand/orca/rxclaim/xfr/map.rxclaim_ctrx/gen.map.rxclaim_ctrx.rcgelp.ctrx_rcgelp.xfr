/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@
dependency_analysis:
[
  [out0.ctrx_rcgelp.account_id,[passthrough],in0.g3accd]
  [out0.ctrx_rcgelp.gel_clt_benefit_cd,[passthrough],in0.g3aecd]
  [out0.ctrx_rcgelp.gel_brand_copay,[passthrough],in0.g3l4pr]
  [out0.ctrx_rcgelp.carrier_id,[passthrough],in0.g3aacd]
  [out0.ctrx_rcgelp.pln_cd,[passthrough],in0.g3akdt]
  [out0.ctrx_rcgelp.gel_copay4,[passthrough],in0.g3gqp4]
  [out0.ctrx_rcgelp.gel_seq_nbr,[passthrough],in0.g3c0n1]
  [out0.ctrx_rcgelp.gel_copay7,[passthrough],in0.g3gtp4]
  [out0.ctrx_rcgelp.gel_copay3,[passthrough],in0.g3l6pr]
  [out0.ctrx_rcgelp.employer_group_id,[passthrough],in0.g3adcd]
  [out0.ctrx_rcgelp.src_env_sk,[passthrough],in0.rxt_src_envrt_id]
  [out0.ctrx_rcgelp.pln_eff_dt,[transform],in0.g3akdt]
  [out0.ctrx_rcgelp.gel_copay5,[passthrough],in0.g3grp4]
  [out0.ctrx_rcgelp.gel_thru_dt,[transform],in0.g3cnda]
  [out0.ctrx_rcgelp.gel_copay8,[transform],in0.g3pgc2]
  [out0.ctrx_rcgelp.gel_copay6,[passthrough],in0.g3gsp4]
  [out0.ctrx_rcgelp.gel_generic_copay,[passthrough],in0.g3l5pr]
  [out0.ctrx_rcgelp.gel_eff_dt,[transform],in0.g3cmda]
  [out0.ctrx_rcgelp.gel_status,[passthrough],in0.g3bws2]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.ctrx_rcgelp.account_id,'ctrx_rcgelp.account_id',1,0]
     [out0.ctrx_rcgelp.gel_clt_benefit_cd,'ctrx_rcgelp.gel_clt_benefit_cd',1,0]
     [out0.ctrx_rcgelp.gel_brand_copay,'ctrx_rcgelp.gel_brand_copay',1,0]
     [out0.ctrx_rcgelp.carrier_id,'ctrx_rcgelp.carrier_id',1,0]
     [out0.ctrx_rcgelp.pln_cd,'ctrx_rcgelp.pln_cd',1,0]
     [out0.ctrx_rcgelp.gel_copay4,'ctrx_rcgelp.gel_copay4',1,0]
     [out0.ctrx_rcgelp.gel_seq_nbr,'ctrx_rcgelp.gel_seq_nbr',1,0]
     [out0.ctrx_rcgelp.gel_copay7,'ctrx_rcgelp.gel_copay7',1,0]
     [out0.ctrx_rcgelp.gel_copay3,'ctrx_rcgelp.gel_copay3',1,0]
     [out0.ctrx_rcgelp.employer_group_id,'ctrx_rcgelp.employer_group_id',1,0]
     [out0.ctrx_rcgelp.src_env_sk,'ctrx_rcgelp.src_env_sk',1,0]
     [out0.ctrx_rcgelp.pln_eff_dt,'ctrx_rcgelp.pln_eff_dt',3,2]
     [out0.ctrx_rcgelp.gel_copay5,'ctrx_rcgelp.gel_copay5',1,0]
     [out0.ctrx_rcgelp.gel_thru_dt,'ctrx_rcgelp.gel_thru_dt',3,2]
     [out0.ctrx_rcgelp.gel_copay8,'ctrx_rcgelp.gel_copay8',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.ctrx_rcgelp.gel_copay6,'ctrx_rcgelp.gel_copay6',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.ctrx_rcgelp.gel_generic_copay,'ctrx_rcgelp.gel_generic_copay',1,0]
     [out0.ctrx_rcgelp.gel_eff_dt,'ctrx_rcgelp.gel_eff_dt',3,2]
     [out0.ctrx_rcgelp.gel_status,'ctrx_rcgelp.gel_status',1,0]
  ]
  impacts:
  [
     [in0.g3akdt,'g3akdt',6,4]
     [in0.g3cnda,'g3cnda',5,3]
     [in0.g3l5pr,'g3l5pr',1,1]
     [in0.g3gsp4,'g3gsp4',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',1,1]
     [in0.g3grp4,'g3grp4',1,1]
     [in0.g3cmda,'g3cmda',5,3]
     [in0.g3bws2,'g3bws2',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.g3aacd,'g3aacd',1,1]
     [in0.g3gtp4,'g3gtp4',1,1]
     [in0.g3pgc2,'g3pgc2',1,1]
     [in0.g3gqp4,'g3gqp4',1,1]
     [in0.g3adcd,'g3adcd',1,1]
     [in0.g3aecd,'g3aecd',1,1]
     [in0.g3c0n1,'g3c0n1',1,1]
     [in0.g3l6pr,'g3l6pr',1,1]
     [in0.g3l4pr,'g3l4pr',1,1]
     [in0.g3accd,'g3accd',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let int bzt_0 = 0;
let int bzt_1 = 0;
let int bzt_2 = 0;
let string("\x01",charset="iso-8859-15", maximum_length=30) ctrx_rcgelp_carrier_id = fail_if_error(in0.g3aacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) ctrx_rcgelp_account_id = fail_if_error(in0.g3accd);
let string("\x01",charset="iso-8859-15", maximum_length=30) ctrx_rcgelp_employer_group_id = fail_if_error(in0.g3adcd);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_seq_nbr = fail_if_error(in0.g3c0n1);
let string("\x01",charset="iso-8859-15", maximum_length=1) ctrx_rcgelp_gel_status = fail_if_error(in0.g3bws2);
let datetime("YYYYMMDDHH24MISS")("\x01") ctrx_rcgelp_gel_eff_dt;
let datetime("YYYYMMDDHH24MISS")("\x01") ctrx_rcgelp_gel_thru_dt;
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_brand_copay = fail_if_error(in0.g3l4pr);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_generic_copay = fail_if_error(in0.g3l5pr);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_copay3 = fail_if_error(in0.g3l6pr);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_copay4 = fail_if_error(in0.g3gqp4);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_copay5 = fail_if_error(in0.g3grp4);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_copay6 = fail_if_error(in0.g3gsp4);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_copay7 = fail_if_error(in0.g3gtp4);
let decimal("\x01",maximum_length=10) ctrx_rcgelp_gel_copay8 = fail_if_error(decimal_strip(in0.g3pgc2));
let string("\x01",charset="iso-8859-15", maximum_length=10) ctrx_rcgelp_gel_clt_benefit_cd = fail_if_error(in0.g3aecd);
let string("\x01",charset="iso-8859-15", maximum_length=10) ctrx_rcgelp_pln_cd = fail_if_error(in0.g3akdt);
let datetime("YYYYMMDDHH24MISS")("\x01") ctrx_rcgelp_pln_eff_dt;
let decimal("\x01",0) ctrx_rcgelp_src_env_sk = fail_if_error(in0.rxt_src_envrt_id);



/*   Rule:Compute ctrx_rcgelp.gel_eff_dt  (#1)   */
if(first_defined(fail_if_error(((length_of(in0.g3cmda) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000+in0.g3cmda))) ==1)),0))begin
  bzt_0=1;
  ctrx_rcgelp_gel_eff_dt=YYYYMMDD(19000000+in0.g3cmda);
end
else if(first_defined(fail_if_error(((length_of(in0.g3cmda)) ==8) && ((is_valid(YYYYMMDD(in0.g3cmda))) ==1)),0))begin
  bzt_0=1;
  ctrx_rcgelp_gel_eff_dt=(date("YYYYMMDD"))in0.g3cmda;
end

/*   Default value   */
if(!bzt_0)begin
  ctrx_rcgelp_gel_eff_dt=fail_if_error(low_date());
end

/*   Rule:Compute ctrx_rcgelp.gel_thru_dt  (#2)   */
if(first_defined(fail_if_error(((length_of(in0.g3cnda) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000+in0.g3cnda))) ==1)),0))begin
  bzt_1=1;
  ctrx_rcgelp_gel_thru_dt=YYYYMMDD(19000000+in0.g3cnda);
end
else if(first_defined(fail_if_error(((length_of(in0.g3cnda)) ==8) && (is_valid(in0.g3cnda) ==1)),0))begin
  bzt_1=1;
  ctrx_rcgelp_gel_thru_dt=(date("YYYYMMDD"))in0.g3cnda;
end

/*   Default value   */
if(!bzt_1)begin
  ctrx_rcgelp_gel_thru_dt=fail_if_error(high_date());
end

/*   Rule:Compute ctrx_rcgelp.pln_eff_dt  (#3)   */
if(first_defined(fail_if_error(((length_of(in0.g3akdt) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000+in0.g3akdt))) ==1)),0))begin
  bzt_2=1;
  ctrx_rcgelp_pln_eff_dt=YYYYMMDD(19000000+in0.g3akdt);
end
else if(first_defined(fail_if_error(((length_of(in0.g3akdt)) ==8) && ((is_valid(YYYYMMDD(in0.g3akdt))) ==1)),0))begin
  bzt_2=1;
  ctrx_rcgelp_pln_eff_dt=(date("YYYYMMDD"))in0.g3akdt;
end

/*   Default value   */
if(!bzt_2)begin
  ctrx_rcgelp_pln_eff_dt=fail_if_error(low_date());
end

  out0.ctrx_rcgelp.carrier_id::ctrx_rcgelp_carrier_id;
  out0.ctrx_rcgelp.account_id::ctrx_rcgelp_account_id;
  out0.ctrx_rcgelp.employer_group_id::ctrx_rcgelp_employer_group_id;
  out0.ctrx_rcgelp.gel_seq_nbr::ctrx_rcgelp_gel_seq_nbr;
  out0.ctrx_rcgelp.gel_status::ctrx_rcgelp_gel_status;
  out0.ctrx_rcgelp.gel_eff_dt::ctrx_rcgelp_gel_eff_dt;
  out0.ctrx_rcgelp.gel_thru_dt::ctrx_rcgelp_gel_thru_dt;
  out0.ctrx_rcgelp.gel_brand_copay::ctrx_rcgelp_gel_brand_copay;
  out0.ctrx_rcgelp.gel_generic_copay::ctrx_rcgelp_gel_generic_copay;
  out0.ctrx_rcgelp.gel_copay3::ctrx_rcgelp_gel_copay3;
  out0.ctrx_rcgelp.gel_copay4::ctrx_rcgelp_gel_copay4;
  out0.ctrx_rcgelp.gel_copay5::ctrx_rcgelp_gel_copay5;
  out0.ctrx_rcgelp.gel_copay6::ctrx_rcgelp_gel_copay6;
  out0.ctrx_rcgelp.gel_copay7::ctrx_rcgelp_gel_copay7;
  out0.ctrx_rcgelp.gel_copay8::ctrx_rcgelp_gel_copay8;
  out0.ctrx_rcgelp.gel_clt_benefit_cd::ctrx_rcgelp_gel_clt_benefit_cd;
  out0.ctrx_rcgelp.pln_cd::ctrx_rcgelp_pln_cd;
  out0.ctrx_rcgelp.pln_eff_dt::ctrx_rcgelp_pln_eff_dt;
  out0.ctrx_rcgelp.src_env_sk::ctrx_rcgelp_src_env_sk;
  out0.*::in0.*;

end;
