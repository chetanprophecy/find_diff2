/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_581085c2_18c1_2 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_cag_filter.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_cag_filter.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_cag_filter.plan_cd,[passthrough],in0.plan_cd]
  [out0.c_cag_filter.acct_filter,[passthrough],in0.acct_filter]
  [out0.c_cag_filter.cpp_cag_filter_sk,[transform],]
  [out0.c_cag_filter.contract_num,[passthrough],in0.contract_num]
  [out0.c_cag_filter.src_env_sk,[transform],]
  [out0.c_cag_filter.group_filter,[passthrough],in0.group_filter]
  [out0.c_cag_filter.excl_flag,[passthrough],in0.excl_flag]
  [out0.c_cag_filter.carrier_filter,[passthrough],in0.carrier_filter]
  [out0.c_cag_filter.client_id,[passthrough],in0.client_id]
  [out0.c_cag_filter.cag_filter_id,[passthrough],in0.cag_filter_id]
  [out0.c_cag_filter.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_cag_filter.cpp_client_sk,[transform],in0.client_id,
     'lookup("c_client").dxf_sk']
  [out0.c_cag_filter.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_cag_filter.cpp_created_by,'c_cag_filter.cpp_created_by',1,0]
     [out0.c_cag_filter.cpp_updated_by,'c_cag_filter.cpp_updated_by',1,0]
     [out0.c_cag_filter.pbp,'c_cag_filter.pbp',1,0]
     [out0.c_cag_filter.plan_cd,'c_cag_filter.plan_cd',1,0]
     [out0.c_cag_filter.acct_filter,'c_cag_filter.acct_filter',1,0]
     [out0.c_cag_filter.cpp_cag_filter_sk,'c_cag_filter.cpp_cag_filter_sk',1,0]
     [out0.c_cag_filter.contract_num,'c_cag_filter.contract_num',1,0]
     [out0.c_cag_filter.src_env_sk,'c_cag_filter.src_env_sk',1,0]
     [out0.c_cag_filter.group_filter,'c_cag_filter.group_filter',1,0]
     [out0.c_cag_filter.excl_flag,'c_cag_filter.excl_flag',1,0]
     [out0.c_cag_filter.carrier_filter,'c_cag_filter.carrier_filter',1,0]
     [out0.c_cag_filter.client_id,'c_cag_filter.client_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_cag_filter.cag_filter_id,'c_cag_filter.cag_filter_id',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_cag_filter.cpp_update_ts,'c_cag_filter.cpp_update_ts',1,0]
     [out0.c_cag_filter.cpp_client_sk,'c_cag_filter.cpp_client_sk',1,0]
     [out0.c_cag_filter.cpp_create_ts,'c_cag_filter.cpp_create_ts',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.cag_filter_id,'cag_filter_id',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.contract_num,'contract_num',1,1]
     [in0.plan_cd,'plan_cd',1,1]
     [in0.excl_flag,'excl_flag',1,1]
     [in0.acct_filter,'acct_filter',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.carrier_filter,'carrier_filter',1,1]
     [in0.pbp,'pbp',1,1]
     [in0.client_id,'client_id',2,2]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.group_filter,'group_filter',1,1]
     ['lookup("c_client").dxf_sk','dxf_sk',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_cag_filter_cpp_cag_filter_sk = -1;
let utf8 string("\x01", maximum_length=60) c_cag_filter_client_id = fail_if_error(in0.client_id);
let decimal("\x01",0) c_cag_filter_cpp_client_sk;
let utf8 string("\x01", maximum_length=60) c_cag_filter_cag_filter_id = fail_if_error(in0.cag_filter_id);
let utf8 string("\x01", maximum_length=120) c_cag_filter_carrier_filter = fail_if_error(in0.carrier_filter);
let utf8 string("\x01", maximum_length=160) c_cag_filter_acct_filter = fail_if_error(in0.acct_filter);
let utf8 string("\x01", maximum_length=120) c_cag_filter_group_filter = fail_if_error(in0.group_filter);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_cag_filter_excl_flag = fail_if_error(in0.excl_flag);
let utf8 string("\x01", maximum_length=80) c_cag_filter_plan_cd = fail_if_error(in0.plan_cd);
let utf8 string("\x01", maximum_length=20) c_cag_filter_contract_num = fail_if_error(in0.contract_num);
let utf8 string("\x01", maximum_length=12) c_cag_filter_pbp = fail_if_error(in0.pbp);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_cag_filter_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_cag_filter_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_cag_filter_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_cag_filter_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_cag_filter_src_env_sk = 710;



/*   Default value   */
c_cag_filter_cpp_client_sk=fail_if_error(first_defined(lookup("c_client",in0.client_id).dxf_sk,-1));

  out0.c_cag_filter.cpp_cag_filter_sk::c_cag_filter_cpp_cag_filter_sk;
  out0.c_cag_filter.client_id::c_cag_filter_client_id;
  out0.c_cag_filter.cpp_client_sk::c_cag_filter_cpp_client_sk;
  out0.c_cag_filter.cag_filter_id::c_cag_filter_cag_filter_id;
  out0.c_cag_filter.carrier_filter::c_cag_filter_carrier_filter;
  out0.c_cag_filter.acct_filter::c_cag_filter_acct_filter;
  out0.c_cag_filter.group_filter::c_cag_filter_group_filter;
  out0.c_cag_filter.excl_flag::c_cag_filter_excl_flag;
  out0.c_cag_filter.plan_cd::c_cag_filter_plan_cd;
  out0.c_cag_filter.contract_num::c_cag_filter_contract_num;
  out0.c_cag_filter.pbp::c_cag_filter_pbp;
  out0.c_cag_filter.cpp_update_ts::c_cag_filter_cpp_update_ts;
  out0.c_cag_filter.cpp_updated_by::c_cag_filter_cpp_updated_by;
  out0.c_cag_filter.cpp_create_ts::c_cag_filter_cpp_create_ts;
  out0.c_cag_filter.cpp_created_by::c_cag_filter_cpp_created_by;
  out0.c_cag_filter.src_env_sk::c_cag_filter_src_env_sk;
  out0.*::in0.*;

end;
