/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_582d5140_4fba_19 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_mem_pr_cgr.middle_name,[passthrough],in0.middle_name]
  [out0.c_mem_pr_cgr.eff_dt,[passthrough],in0.eff_dt]
  [out0.c_mem_pr_cgr.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_mem_pr_cgr.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_mem_pr_cgr.cpp_member_sk,[transform],in0.member_id,
     in0.emplyr_group_id,
     in0.acct_id,
     in0.carrier_id,
     'lookup("c_member").dxf_sk']
  [out0.c_mem_pr_cgr.fax,[passthrough],in0.fax]
  [out0.c_mem_pr_cgr.relationship_with,[passthrough],in0.relationship_with]
  [out0.c_mem_pr_cgr.end_dt,[passthrough],in0.end_dt]
  [out0.c_mem_pr_cgr.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_mem_pr_cgr.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_mem_pr_cgr.src_env_sk,[transform],]
  [out0.c_mem_pr_cgr.email,[passthrough],in0.email]
  [out0.c_mem_pr_cgr.relationship_type,[passthrough],in0.relationship_type]
  [out0.c_mem_pr_cgr.member_consent_flag,[passthrough],in0.member_consent_flag]
  [out0.c_mem_pr_cgr.cpp_member_prmry_caregiver_sk,[transform],]
  [out0.c_mem_pr_cgr.cmmt,[passthrough],in0.cmmt]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_mem_pr_cgr.middle_name,'c_mem_pr_cgr.middle_name',1,0]
     [out0.c_mem_pr_cgr.cli_acct_id,'c_mem_pr_cgr.cli_acct_id',1,0]
     [out0.c_mem_pr_cgr.cntry,'c_mem_pr_cgr.cntry',1,0]
     [out0.c_mem_pr_cgr.member_prmry_caregiver_id,'c_mem_pr_cgr.member_prmry_caregiver_id',1,0]
     [out0.c_mem_pr_cgr.eff_dt,'c_mem_pr_cgr.eff_dt',1,0]
     [out0.c_mem_pr_cgr.cpp_created_by,'c_mem_pr_cgr.cpp_created_by',1,0]
     [out0.c_mem_pr_cgr.cli_carrier_id,'c_mem_pr_cgr.cli_carrier_id',1,0]
     [out0.c_mem_pr_cgr.cpp_updated_by,'c_mem_pr_cgr.cpp_updated_by',1,0]
     [out0.c_mem_pr_cgr.cli_member_id,'c_mem_pr_cgr.cli_member_id',1,0]
     [out0.c_mem_pr_cgr.cpp_member_sk,'c_mem_pr_cgr.cpp_member_sk',1,0]
     [out0.c_mem_pr_cgr.fax,'c_mem_pr_cgr.fax',1,0]
     [out0.c_mem_pr_cgr.city,'c_mem_pr_cgr.city',1,0]
     [out0.c_mem_pr_cgr.carrier_id,'c_mem_pr_cgr.carrier_id',1,0]
     [out0.c_mem_pr_cgr.relationship_with,'c_mem_pr_cgr.relationship_with',1,0]
     [out0.c_mem_pr_cgr.end_dt,'c_mem_pr_cgr.end_dt',1,0]
     [out0.c_mem_pr_cgr.src_env_id,'c_mem_pr_cgr.src_env_id',1,0]
     [out0.c_mem_pr_cgr.cpp_update_ts,'c_mem_pr_cgr.cpp_update_ts',1,0]
     [out0.c_mem_pr_cgr.case_id,'c_mem_pr_cgr.case_id',1,0]
     [out0.c_mem_pr_cgr.cpp_create_ts,'c_mem_pr_cgr.cpp_create_ts',1,0]
     [out0.c_mem_pr_cgr.member_id,'c_mem_pr_cgr.member_id',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_mem_pr_cgr.src_env_sk,'c_mem_pr_cgr.src_env_sk',1,0]
     [out0.c_mem_pr_cgr.contact_num,'c_mem_pr_cgr.contact_num',1,0]
     [out0.c_mem_pr_cgr.cli_src_env_id,'c_mem_pr_cgr.cli_src_env_id',1,0]
     [out0.c_mem_pr_cgr.email,'c_mem_pr_cgr.email',1,0]
     [out0.c_mem_pr_cgr.addr_2,'c_mem_pr_cgr.addr_2',1,0]
     [out0.c_mem_pr_cgr.relationship_type,'c_mem_pr_cgr.relationship_type',1,0]
     [out0.c_mem_pr_cgr.member_consent_flag,'c_mem_pr_cgr.member_consent_flag',1,0]
     [out0.c_mem_pr_cgr.reported_dt,'c_mem_pr_cgr.reported_dt',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_mem_pr_cgr.cpp_member_prmry_caregiver_sk,'c_mem_pr_cgr.cpp_member_prmry_caregiver_sk',1,0]
     [out0.c_mem_pr_cgr.member_consent_reason,'c_mem_pr_cgr.member_consent_reason',1,0]
     [out0.c_mem_pr_cgr.addr_1,'c_mem_pr_cgr.addr_1',1,0]
     [out0.c_mem_pr_cgr.init,'c_mem_pr_cgr.init',1,0]
     [out0.c_mem_pr_cgr.st,'c_mem_pr_cgr.st',1,0]
     [out0.c_mem_pr_cgr.emplyr_group_id,'c_mem_pr_cgr.emplyr_group_id',1,0]
     [out0.c_mem_pr_cgr.cmmt,'c_mem_pr_cgr.cmmt',1,0]
     [out0.c_mem_pr_cgr.cli_emplyr_group_id,'c_mem_pr_cgr.cli_emplyr_group_id',1,0]
     [out0.c_mem_pr_cgr.acct_id,'c_mem_pr_cgr.acct_id',1,0]
     [out0.c_mem_pr_cgr.first_name,'c_mem_pr_cgr.first_name',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_mem_pr_cgr.member_consent_reason_descr,'c_mem_pr_cgr.member_consent_reason_descr',1,0]
     [out0.c_mem_pr_cgr.zip,'c_mem_pr_cgr.zip',1,0]
     [out0.c_mem_pr_cgr.last_name,'c_mem_pr_cgr.last_name',1,0]
  ]
  impacts:
  [
     [in0.city,'city',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.cmmt,'cmmt',1,1]
     [in0.eff_dt,'eff_dt',1,1]
     [in0.cli_carrier_id,'cli_carrier_id',1,1]
     [in0.fax,'fax',1,1]
     [in0.member_consent_reason_descr,'member_consent_reason_descr',1,1]
     [in0.member_prmry_caregiver_id,'member_prmry_caregiver_id',1,1]
     [in0.src_env_id,'src_env_id',1,1]
     [in0.addr_1,'addr_1',1,1]
     [in0.member_id,'member_id',2,2]
     [in0.cntry,'cntry',1,1]
     [in0.first_name,'first_name',1,1]
     [in0.email,'email',1,1]
     [in0.carrier_id,'carrier_id',2,2]
     [in0.case_id,'case_id',1,1]
     [in0.contact_num,'contact_num',1,1]
     [in0.last_name,'last_name',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.cli_member_id,'cli_member_id',1,1]
     [in0.emplyr_group_id,'emplyr_group_id',2,2]
     [in0.st,'st',1,1]
     [in0.member_consent_flag,'member_consent_flag',1,1]
     [in0.zip,'zip',1,1]
     [in0.reported_dt,'reported_dt',1,1]
     [in0.relationship_with,'relationship_with',1,1]
     [in0.init,'init',1,1]
     [in0.created_by,'created_by',1,1]
     [in0.relationship_type,'relationship_type',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.cli_emplyr_group_id,'cli_emplyr_group_id',1,1]
     ['lookup("c_member").dxf_sk','dxf_sk',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.updated_by,'updated_by',1,1]
     [in0.cli_src_env_id,'cli_src_env_id',1,1]
     [in0.end_dt,'end_dt',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.member_consent_reason,'member_consent_reason',1,1]
     [in0.cli_acct_id,'cli_acct_id',1,1]
     [in0.middle_name,'middle_name',1,1]
     [in0.addr_2,'addr_2',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.acct_id,'acct_id',2,2]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_mem_pr_cgr_cpp_member_prmry_caregiver_sk = -1;
let utf8 string("\x01", maximum_length=60) c_mem_pr_cgr_member_prmry_caregiver_id = fail_if_error(in0.member_prmry_caregiver_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_pr_cgr_cli_src_env_id = fail_if_error(in0.cli_src_env_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_pr_cgr_cli_carrier_id = fail_if_error(in0.cli_carrier_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_pr_cgr_cli_acct_id = fail_if_error(in0.cli_acct_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_pr_cgr_cli_emplyr_group_id = fail_if_error(in0.cli_emplyr_group_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_pr_cgr_cli_member_id = fail_if_error(in0.cli_member_id);
let string("\x01",charset="iso-8859-15", maximum_length=4) c_mem_pr_cgr_src_env_id = fail_if_error(in0.src_env_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_mem_pr_cgr_carrier_id = fail_if_error(in0.carrier_id);
let string("\x01",charset="iso-8859-15", maximum_length=40) c_mem_pr_cgr_acct_id = fail_if_error(in0.acct_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_mem_pr_cgr_emplyr_group_id = fail_if_error(in0.emplyr_group_id);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_mem_pr_cgr_member_id = fail_if_error(in0.member_id);
let decimal("\x01",0) c_mem_pr_cgr_cpp_member_sk;
let utf8 string("\x01", maximum_length=60) c_mem_pr_cgr_case_id = fail_if_error(in0.case_id);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_pr_cgr_reported_dt = fail_if_error(in0.reported_dt);
let utf8 string("\x01", maximum_length=200) c_mem_pr_cgr_first_name = fail_if_error(in0.first_name);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_mem_pr_cgr_init = fail_if_error(in0.init);
let utf8 string("\x01", maximum_length=200) c_mem_pr_cgr_last_name = fail_if_error(in0.last_name);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_pr_cgr_contact_num = fail_if_error(in0.contact_num);
let utf8 string("\x01", maximum_length=400) c_mem_pr_cgr_addr_1 = fail_if_error(in0.addr_1);
let utf8 string("\x01", maximum_length=400) c_mem_pr_cgr_addr_2 = fail_if_error(in0.addr_2);
let utf8 string("\x01", maximum_length=120) c_mem_pr_cgr_city = fail_if_error(in0.city);
let utf8 string("\x01", maximum_length=8) c_mem_pr_cgr_st = fail_if_error(in0.st);
let utf8 string("\x01", maximum_length=40) c_mem_pr_cgr_zip = fail_if_error(in0.zip);
let utf8 string("\x01", maximum_length=120) c_mem_pr_cgr_cntry = fail_if_error(in0.cntry);
let utf8 string("\x01", maximum_length=120) c_mem_pr_cgr_fax = fail_if_error(in0.fax);
let utf8 string("\x01", maximum_length=400) c_mem_pr_cgr_email = fail_if_error(in0.email);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_pr_cgr_eff_dt = fail_if_error(in0.eff_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_pr_cgr_end_dt = fail_if_error(in0.end_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_pr_cgr_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_mem_pr_cgr_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_pr_cgr_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_mem_pr_cgr_cpp_created_by = fail_if_error(in0.created_by);
let utf8 string("\x01", maximum_length=200) c_mem_pr_cgr_middle_name = fail_if_error(in0.middle_name);
let utf8 string("\x01", maximum_length=200) c_mem_pr_cgr_relationship_with = fail_if_error(in0.relationship_with);
let utf8 string("\x01", maximum_length=8192) c_mem_pr_cgr_cmmt = fail_if_error(in0.cmmt);
let utf8 string("\x01", maximum_length=4) c_mem_pr_cgr_member_consent_flag = fail_if_error(in0.member_consent_flag);
let utf8 string("\x01", maximum_length=200) c_mem_pr_cgr_relationship_type = fail_if_error(in0.relationship_type);
let decimal("\x01",0) c_mem_pr_cgr_src_env_sk = 710;
let utf8 string("\x01", maximum_length=128) c_mem_pr_cgr_member_consent_reason = fail_if_error(in0.member_consent_reason);
let utf8 string("\x01", maximum_length=512) c_mem_pr_cgr_member_consent_reason_descr = fail_if_error(in0.member_consent_reason_descr);



/*   Default value   */
c_mem_pr_cgr_cpp_member_sk=fail_if_error(first_defined(lookup("c_member",in0.carrier_id,in0.acct_id,in0.emplyr_group_id,in0.member_id).dxf_sk,-1));

  out0.c_mem_pr_cgr.cpp_member_prmry_caregiver_sk::c_mem_pr_cgr_cpp_member_prmry_caregiver_sk;
  out0.c_mem_pr_cgr.member_prmry_caregiver_id::c_mem_pr_cgr_member_prmry_caregiver_id;
  out0.c_mem_pr_cgr.cli_src_env_id::c_mem_pr_cgr_cli_src_env_id;
  out0.c_mem_pr_cgr.cli_carrier_id::c_mem_pr_cgr_cli_carrier_id;
  out0.c_mem_pr_cgr.cli_acct_id::c_mem_pr_cgr_cli_acct_id;
  out0.c_mem_pr_cgr.cli_emplyr_group_id::c_mem_pr_cgr_cli_emplyr_group_id;
  out0.c_mem_pr_cgr.cli_member_id::c_mem_pr_cgr_cli_member_id;
  out0.c_mem_pr_cgr.src_env_id::c_mem_pr_cgr_src_env_id;
  out0.c_mem_pr_cgr.carrier_id::c_mem_pr_cgr_carrier_id;
  out0.c_mem_pr_cgr.acct_id::c_mem_pr_cgr_acct_id;
  out0.c_mem_pr_cgr.emplyr_group_id::c_mem_pr_cgr_emplyr_group_id;
  out0.c_mem_pr_cgr.member_id::c_mem_pr_cgr_member_id;
  out0.c_mem_pr_cgr.cpp_member_sk::c_mem_pr_cgr_cpp_member_sk;
  out0.c_mem_pr_cgr.case_id::c_mem_pr_cgr_case_id;
  out0.c_mem_pr_cgr.reported_dt::c_mem_pr_cgr_reported_dt;
  out0.c_mem_pr_cgr.first_name::c_mem_pr_cgr_first_name;
  out0.c_mem_pr_cgr.init::c_mem_pr_cgr_init;
  out0.c_mem_pr_cgr.last_name::c_mem_pr_cgr_last_name;
  out0.c_mem_pr_cgr.contact_num::c_mem_pr_cgr_contact_num;
  out0.c_mem_pr_cgr.addr_1::c_mem_pr_cgr_addr_1;
  out0.c_mem_pr_cgr.addr_2::c_mem_pr_cgr_addr_2;
  out0.c_mem_pr_cgr.city::c_mem_pr_cgr_city;
  out0.c_mem_pr_cgr.st::c_mem_pr_cgr_st;
  out0.c_mem_pr_cgr.zip::c_mem_pr_cgr_zip;
  out0.c_mem_pr_cgr.cntry::c_mem_pr_cgr_cntry;
  out0.c_mem_pr_cgr.fax::c_mem_pr_cgr_fax;
  out0.c_mem_pr_cgr.email::c_mem_pr_cgr_email;
  out0.c_mem_pr_cgr.eff_dt::c_mem_pr_cgr_eff_dt;
  out0.c_mem_pr_cgr.end_dt::c_mem_pr_cgr_end_dt;
  out0.c_mem_pr_cgr.cpp_update_ts::c_mem_pr_cgr_cpp_update_ts;
  out0.c_mem_pr_cgr.cpp_updated_by::c_mem_pr_cgr_cpp_updated_by;
  out0.c_mem_pr_cgr.cpp_create_ts::c_mem_pr_cgr_cpp_create_ts;
  out0.c_mem_pr_cgr.cpp_created_by::c_mem_pr_cgr_cpp_created_by;
  out0.c_mem_pr_cgr.middle_name::c_mem_pr_cgr_middle_name;
  out0.c_mem_pr_cgr.relationship_with::c_mem_pr_cgr_relationship_with;
  out0.c_mem_pr_cgr.cmmt::c_mem_pr_cgr_cmmt;
  out0.c_mem_pr_cgr.member_consent_flag::c_mem_pr_cgr_member_consent_flag;
  out0.c_mem_pr_cgr.relationship_type::c_mem_pr_cgr_relationship_type;
  out0.c_mem_pr_cgr.src_env_sk::c_mem_pr_cgr_src_env_sk;
  out0.c_mem_pr_cgr.member_consent_reason::c_mem_pr_cgr_member_consent_reason;
  out0.c_mem_pr_cgr.member_consent_reason_descr::c_mem_pr_cgr_member_consent_reason_descr;
  out0.*::in0.*;

end;
