/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_59ce35b3_729f_9 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_prog_trgt.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_prog_trgt.cpp_program_targeting_sk,[transform],]
  [out0.c_prog_trgt.cpp_program_sk,[transform],in0.program_id,
     'lookup("c_program").dxf_sk']
  [out0.c_prog_trgt.src_env_sk,[transform],]
  [out0.c_prog_trgt.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_prog_trgt.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_prog_trgt.cpp_created_by,[passthrough],in0.created_by]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_prog_trgt.pt_prev_targ_member_flag,'c_prog_trgt.pt_prev_targ_member_flag',1,0]
     [out0.c_prog_trgt.pt_prev_targ_rule_name,'c_prog_trgt.pt_prev_targ_rule_name',1,0]
     [out0.c_prog_trgt.pt_member_dob_flag,'c_prog_trgt.pt_member_dob_flag',1,0]
     [out0.c_prog_trgt.targ_prescriber_option,'c_prog_trgt.targ_prescriber_option',1,0]
     [out0.c_prog_trgt.cpp_create_ts,'c_prog_trgt.cpp_create_ts',1,0]
     [out0.c_prog_trgt.gpi_list_id,'c_prog_trgt.gpi_list_id',1,0]
     [out0.c_prog_trgt.mt_prev_targ_member_flag,'c_prog_trgt.mt_prev_targ_member_flag',1,0]
     [out0.c_prog_trgt.mt_excl_member_addr,'c_prog_trgt.mt_excl_member_addr',1,0]
     [out0.c_prog_trgt.mt_prev_targ_rule_name,'c_prog_trgt.mt_prev_targ_rule_name',1,0]
     [out0.c_prog_trgt.cpp_program_targeting_sk,'c_prog_trgt.cpp_program_targeting_sk',1,0]
     [out0.c_prog_trgt.deid_prescriber_demog_flag,'c_prog_trgt.deid_prescriber_demog_flag',1,0]
     [out0.c_prog_trgt.mt_member_dob_flag,'c_prog_trgt.mt_member_dob_flag',1,0]
     [out0.c_prog_trgt.program_targeting_type,'c_prog_trgt.program_targeting_type',1,0]
     [out0.c_prog_trgt.cpp_program_sk,'c_prog_trgt.cpp_program_sk',1,0]
     [out0.c_prog_trgt.src_env_sk,'c_prog_trgt.src_env_sk',1,0]
     [out0.c_prog_trgt.targ_prescriber_rule_flag,'c_prog_trgt.targ_prescriber_rule_flag',1,0]
     [out0.c_prog_trgt.cpp_update_ts,'c_prog_trgt.cpp_update_ts',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_prog_trgt.pt_member_name_flag,'c_prog_trgt.pt_member_name_flag',1,0]
     [out0.c_prog_trgt.cpp_updated_by,'c_prog_trgt.cpp_updated_by',1,0]
     [out0.c_prog_trgt.mt_excl_member_phone,'c_prog_trgt.mt_excl_member_phone',1,0]
     [out0.c_prog_trgt.pt_retarg_times_count,'c_prog_trgt.pt_retarg_times_count',1,0]
     [out0.c_prog_trgt.mt_member_name_flag,'c_prog_trgt.mt_member_name_flag',1,0]
     [out0.c_prog_trgt.evdnce_to_provider,'c_prog_trgt.evdnce_to_provider',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_prog_trgt.program_id,'c_prog_trgt.program_id',1,0]
     [out0.c_prog_trgt.mt_retarg_times_count,'c_prog_trgt.mt_retarg_times_count',1,0]
     [out0.c_prog_trgt.cpp_created_by,'c_prog_trgt.cpp_created_by',1,0]
     [out0.c_prog_trgt.pt_cal_days,'c_prog_trgt.pt_cal_days',1,0]
     [out0.c_prog_trgt.mt_member_addr_flag,'c_prog_trgt.mt_member_addr_flag',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_prog_trgt.mt_cal_days,'c_prog_trgt.mt_cal_days',1,0]
  ]
  impacts:
  [
     [in0.pt_prev_targ_rule_name,'pt_prev_targ_rule_name',1,1]
     [in0.mt_member_addr_flag,'mt_member_addr_flag',1,1]
     [in0.mt_member_name_flag,'mt_member_name_flag',1,1]
     [in0.deid_prescriber_demog_flag,'deid_prescriber_demog_flag',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.mt_excl_member_addr,'mt_excl_member_addr',1,1]
     [in0.pt_prev_targ_member_flag,'pt_prev_targ_member_flag',1,1]
     [in0.targ_prescriber_option,'targ_prescriber_option',1,1]
     [in0.mt_prev_targ_member_flag,'mt_prev_targ_member_flag',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.pt_member_name_flag,'pt_member_name_flag',1,1]
     [in0.program_targeting_type,'program_targeting_type',1,1]
     [in0.mt_prev_targ_rule_name,'mt_prev_targ_rule_name',1,1]
     [in0.created_by,'created_by',1,1]
     [in0.pt_cal_days,'pt_cal_days',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.mt_retarg_times_count,'mt_retarg_times_count',1,1]
     [in0.program_id,'program_id',2,2]
     [in0.evdnce_to_provider,'evdnce_to_provider',1,1]
     [in0.gpi_list_id,'gpi_list_id',1,1]
     [in0.pt_member_dob_flag,'pt_member_dob_flag',1,1]
     ['lookup("c_program").dxf_sk','dxf_sk',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.updated_by,'updated_by',1,1]
     [in0.mt_member_dob_flag,'mt_member_dob_flag',1,1]
     [in0.targ_prescriber_rule_flag,'targ_prescriber_rule_flag',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.mt_excl_member_phone,'mt_excl_member_phone',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.mt_cal_days,'mt_cal_days',1,1]
     [in0.pt_retarg_times_count,'pt_retarg_times_count',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_prog_trgt_cpp_program_targeting_sk = -1;
let utf8 string("\x01", maximum_length=100) c_prog_trgt_program_id = fail_if_error(in0.program_id);
let decimal("\x01",0) c_prog_trgt_cpp_program_sk;
let utf8 string("\x01", maximum_length=32) c_prog_trgt_program_targeting_type = fail_if_error(in0.program_targeting_type);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_pt_member_name_flag = fail_if_error(in0.pt_member_name_flag);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_pt_member_dob_flag = fail_if_error(in0.pt_member_dob_flag);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_pt_prev_targ_member_flag = fail_if_error(in0.pt_prev_targ_member_flag);
let utf8 string("\x01", maximum_length=100) c_prog_trgt_pt_prev_targ_rule_name = fail_if_error(in0.pt_prev_targ_rule_name);
let decimal("\x01",0) c_prog_trgt_pt_retarg_times_count = fail_if_error(in0.pt_retarg_times_count);
let decimal("\x01",0) c_prog_trgt_pt_cal_days = fail_if_error(in0.pt_cal_days);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_targ_prescriber_rule_flag = fail_if_error(in0.targ_prescriber_rule_flag);
let utf8 string("\x01", maximum_length=200) c_prog_trgt_targ_prescriber_option = fail_if_error(in0.targ_prescriber_option);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_deid_prescriber_demog_flag = fail_if_error(in0.deid_prescriber_demog_flag);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prog_trgt_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_prog_trgt_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_prog_trgt_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_prog_trgt_cpp_created_by = fail_if_error(in0.created_by);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_mt_member_name_flag = fail_if_error(in0.mt_member_name_flag);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_mt_member_dob_flag = fail_if_error(in0.mt_member_dob_flag);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_mt_prev_targ_member_flag = fail_if_error(in0.mt_prev_targ_member_flag);
let utf8 string("\x01", maximum_length=100) c_prog_trgt_mt_prev_targ_rule_name = fail_if_error(in0.mt_prev_targ_rule_name);
let decimal("\x01",0) c_prog_trgt_mt_retarg_times_count = fail_if_error(in0.mt_retarg_times_count);
let decimal("\x01",0) c_prog_trgt_mt_cal_days = fail_if_error(in0.mt_cal_days);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_mt_excl_member_addr = fail_if_error(in0.mt_excl_member_addr);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_mt_excl_member_phone = fail_if_error(in0.mt_excl_member_phone);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_prog_trgt_mt_member_addr_flag = fail_if_error(in0.mt_member_addr_flag);
let utf8 string("\x01", maximum_length=60) c_prog_trgt_gpi_list_id = fail_if_error(in0.gpi_list_id);
let utf8 string("\x01", maximum_length=200) c_prog_trgt_evdnce_to_provider = fail_if_error(in0.evdnce_to_provider);
let decimal("\x01",0) c_prog_trgt_src_env_sk = 710;



/*   Default value   */
c_prog_trgt_cpp_program_sk=fail_if_error(first_defined(lookup("c_program",in0.program_id).dxf_sk,-1));

  out0.c_prog_trgt.cpp_program_targeting_sk::c_prog_trgt_cpp_program_targeting_sk;
  out0.c_prog_trgt.program_id::c_prog_trgt_program_id;
  out0.c_prog_trgt.cpp_program_sk::c_prog_trgt_cpp_program_sk;
  out0.c_prog_trgt.program_targeting_type::c_prog_trgt_program_targeting_type;
  out0.c_prog_trgt.pt_member_name_flag::c_prog_trgt_pt_member_name_flag;
  out0.c_prog_trgt.pt_member_dob_flag::c_prog_trgt_pt_member_dob_flag;
  out0.c_prog_trgt.pt_prev_targ_member_flag::c_prog_trgt_pt_prev_targ_member_flag;
  out0.c_prog_trgt.pt_prev_targ_rule_name::c_prog_trgt_pt_prev_targ_rule_name;
  out0.c_prog_trgt.pt_retarg_times_count::c_prog_trgt_pt_retarg_times_count;
  out0.c_prog_trgt.pt_cal_days::c_prog_trgt_pt_cal_days;
  out0.c_prog_trgt.targ_prescriber_rule_flag::c_prog_trgt_targ_prescriber_rule_flag;
  out0.c_prog_trgt.targ_prescriber_option::c_prog_trgt_targ_prescriber_option;
  out0.c_prog_trgt.deid_prescriber_demog_flag::c_prog_trgt_deid_prescriber_demog_flag;
  out0.c_prog_trgt.cpp_update_ts::c_prog_trgt_cpp_update_ts;
  out0.c_prog_trgt.cpp_updated_by::c_prog_trgt_cpp_updated_by;
  out0.c_prog_trgt.cpp_create_ts::c_prog_trgt_cpp_create_ts;
  out0.c_prog_trgt.cpp_created_by::c_prog_trgt_cpp_created_by;
  out0.c_prog_trgt.mt_member_name_flag::c_prog_trgt_mt_member_name_flag;
  out0.c_prog_trgt.mt_member_dob_flag::c_prog_trgt_mt_member_dob_flag;
  out0.c_prog_trgt.mt_prev_targ_member_flag::c_prog_trgt_mt_prev_targ_member_flag;
  out0.c_prog_trgt.mt_prev_targ_rule_name::c_prog_trgt_mt_prev_targ_rule_name;
  out0.c_prog_trgt.mt_retarg_times_count::c_prog_trgt_mt_retarg_times_count;
  out0.c_prog_trgt.mt_cal_days::c_prog_trgt_mt_cal_days;
  out0.c_prog_trgt.mt_excl_member_addr::c_prog_trgt_mt_excl_member_addr;
  out0.c_prog_trgt.mt_excl_member_phone::c_prog_trgt_mt_excl_member_phone;
  out0.c_prog_trgt.mt_member_addr_flag::c_prog_trgt_mt_member_addr_flag;
  out0.c_prog_trgt.gpi_list_id::c_prog_trgt_gpi_list_id;
  out0.c_prog_trgt.evdnce_to_provider::c_prog_trgt_evdnce_to_provider;
  out0.c_prog_trgt.src_env_sk::c_prog_trgt_src_env_sk;
  out0.*::in0.*;

end;
