/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5a2e5f81_3109_2 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_mb_ot_d_hs.cpp_member_optout_dtl_hist_sk,[transform],]
  [out0.c_mb_ot_d_hs.cpp_program_sk,[transform],in0.program_id,
     'lookup("c_program").dxf_sk']
  [out0.c_mb_ot_d_hs.plan_start_dt,[transform],in0.plan_start_dt]
  [out0.c_mb_ot_d_hs.src_env_sk,[transform],]
  [out0.c_mb_ot_d_hs.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_mb_ot_d_hs.cpp_product_sk,[transform],in0.product_id,
     'lookup("c_product").dxf_sk']
  [out0.c_mb_ot_d_hs.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_mb_ot_d_hs.plan_end_dt,[transform],in0.plan_end_dt]
  [out0.c_mb_ot_d_hs.end_dt,[transform],in0.end_dt]
  [out0.c_mb_ot_d_hs.cpp_member_optout_sk,[transform],in0.member_optout_id,
     'lookup("c_member_optout").dxf_sk']
  [out0.c_mb_ot_d_hs.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_mb_ot_d_hs.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_mb_ot_d_hs.cpp_member_sk,[transform],in0.member_id,
     in0.emplyr_group_id,
     in0.acct_id,
     in0.carrier_id,
     'lookup("c_member").dxf_sk']
  [out0.c_mb_ot_d_hs.eff_dt,[transform],in0.eff_dt]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_mb_ot_d_hs.cpp_member_optout_dtl_hist_sk,'c_mb_ot_d_hs.cpp_member_optout_dtl_hist_sk',1,0]
     [out0.c_mb_ot_d_hs.product_type,'c_mb_ot_d_hs.product_type',1,0]
     [out0.c_mb_ot_d_hs.cli_emplyr_group_id,'c_mb_ot_d_hs.cli_emplyr_group_id',1,0]
     [out0.c_mb_ot_d_hs.acct_id,'c_mb_ot_d_hs.acct_id',1,0]
     [out0.c_mb_ot_d_hs.program_id,'c_mb_ot_d_hs.program_id',1,0]
     [out0.c_mb_ot_d_hs.emplyr_group_id,'c_mb_ot_d_hs.emplyr_group_id',1,0]
     [out0.c_mb_ot_d_hs.cmmt,'c_mb_ot_d_hs.cmmt',1,0]
     [out0.c_mb_ot_d_hs.contract_id,'c_mb_ot_d_hs.contract_id',1,0]
     [out0.c_mb_ot_d_hs.cpp_program_sk,'c_mb_ot_d_hs.cpp_program_sk',1,0]
     [out0.c_mb_ot_d_hs.crrspdnce_id,'c_mb_ot_d_hs.crrspdnce_id',1,0]
     [out0.c_mb_ot_d_hs.product_sub_type_name,'c_mb_ot_d_hs.product_sub_type_name',1,0]
     [out0.c_mb_ot_d_hs.stts,'c_mb_ot_d_hs.stts',1,0]
     [out0.c_mb_ot_d_hs.plan_start_dt,'c_mb_ot_d_hs.plan_start_dt',1,0]
     [out0.c_mb_ot_d_hs.member_optout_dtl_hist_id,'c_mb_ot_d_hs.member_optout_dtl_hist_id',1,0]
     [out0.c_mb_ot_d_hs.product_id,'c_mb_ot_d_hs.product_id',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_mb_ot_d_hs.optout_revoke_src,'c_mb_ot_d_hs.optout_revoke_src',1,0]
     [out0.c_mb_ot_d_hs.src_env_sk,'c_mb_ot_d_hs.src_env_sk',1,0]
     [out0.c_mb_ot_d_hs.member_optout_id,'c_mb_ot_d_hs.member_optout_id',1,0]
     [out0.c_mb_ot_d_hs.cpp_update_ts,'c_mb_ot_d_hs.cpp_update_ts',1,0]
     [out0.c_mb_ot_d_hs.patient_id,'c_mb_ot_d_hs.patient_id',1,0]
     [out0.c_mb_ot_d_hs.cpp_product_sk,'c_mb_ot_d_hs.cpp_product_sk',1,0]
     [out0.c_mb_ot_d_hs.cpp_create_ts,'c_mb_ot_d_hs.cpp_create_ts',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_mb_ot_d_hs.member_id,'c_mb_ot_d_hs.member_id',1,0]
     [out0.c_mb_ot_d_hs.plan_end_dt,'c_mb_ot_d_hs.plan_end_dt',1,0]
     [out0.c_mb_ot_d_hs.end_dt,'c_mb_ot_d_hs.end_dt',1,0]
     [out0.c_mb_ot_d_hs.cpp_member_optout_sk,'c_mb_ot_d_hs.cpp_member_optout_sk',1,0]
     [out0.c_mb_ot_d_hs.cpp_created_by,'c_mb_ot_d_hs.cpp_created_by',1,0]
     [out0.c_mb_ot_d_hs.cli_carrier_id,'c_mb_ot_d_hs.cli_carrier_id',1,0]
     [out0.c_mb_ot_d_hs.cpp_updated_by,'c_mb_ot_d_hs.cpp_updated_by',1,0]
     [out0.c_mb_ot_d_hs.cli_member_id,'c_mb_ot_d_hs.cli_member_id',1,0]
     [out0.c_mb_ot_d_hs.cpp_member_sk,'c_mb_ot_d_hs.cpp_member_sk',1,0]
     [out0.c_mb_ot_d_hs.carrier_id,'c_mb_ot_d_hs.carrier_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_mb_ot_d_hs.eff_dt,'c_mb_ot_d_hs.eff_dt',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_mb_ot_d_hs.optout_type,'c_mb_ot_d_hs.optout_type',1,0]
     [out0.c_mb_ot_d_hs.optout_src,'c_mb_ot_d_hs.optout_src',1,0]
     [out0.c_mb_ot_d_hs.cli_acct_id,'c_mb_ot_d_hs.cli_acct_id',1,0]
  ]
  impacts:
  [
     [in0.product_type,'product_type',1,1]
     [in0.plan_start_dt,'plan_start_dt',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.cmmt,'cmmt',1,1]
     [in0.eff_dt,'eff_dt',1,1]
     [in0.member_optout_id,'member_optout_id',2,2]
     [in0.cli_carrier_id,'cli_carrier_id',1,1]
     ['lookup("c_member_optout").dxf_sk','dxf_sk',1,1]
     [in0.optout_revoke_src,'optout_revoke_src',1,1]
     [in0.patient_id,'patient_id',1,1]
     [in0.member_id,'member_id',2,2]
     [in0.carrier_id,'carrier_id',2,2]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.cli_member_id,'cli_member_id',1,1]
     [in0.emplyr_group_id,'emplyr_group_id',2,2]
     [in0.stts,'stts',1,1]
     [in0.created_by,'created_by',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.program_id,'program_id',2,2]
     [in0.cli_emplyr_group_id,'cli_emplyr_group_id',1,1]
     ['lookup("c_product").dxf_sk','dxf_sk',1,1]
     [in0.product_sub_type_name,'product_sub_type_name',1,1]
     [in0.product_id,'product_id',2,2]
     [in0.contract_id,'contract_id',1,1]
     ['lookup("c_program").dxf_sk','dxf_sk',1,1]
     ['lookup("c_member").dxf_sk','dxf_sk',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.updated_by,'updated_by',1,1]
     [in0.end_dt,'end_dt',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.cli_acct_id,'cli_acct_id',1,1]
     [in0.optout_src,'optout_src',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.acct_id,'acct_id',2,2]
     [in0.plan_end_dt,'plan_end_dt',1,1]
     [in0.crrspdnce_id,'crrspdnce_id',1,1]
     [in0.member_optout_dtl_hist_id,'member_optout_dtl_hist_id',1,1]
     [in0.optout_type,'optout_type',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_mb_ot_d_hs_cpp_member_optout_dtl_hist_sk = -1;
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mb_ot_d_hs_member_optout_dtl_hist_id = fail_if_error(in0.member_optout_dtl_hist_id);
let utf8 string("\x01", maximum_length=80) c_mb_ot_d_hs_member_optout_id = fail_if_error(in0.member_optout_id);
let decimal("\x01",0) c_mb_ot_d_hs_cpp_member_optout_sk;
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mb_ot_d_hs_cli_carrier_id = fail_if_error(in0.cli_carrier_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mb_ot_d_hs_cli_acct_id = fail_if_error(in0.cli_acct_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mb_ot_d_hs_cli_emplyr_group_id = fail_if_error(in0.cli_emplyr_group_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mb_ot_d_hs_cli_member_id = fail_if_error(in0.cli_member_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_mb_ot_d_hs_carrier_id = fail_if_error(in0.carrier_id);
let string("\x01",charset="iso-8859-15", maximum_length=40) c_mb_ot_d_hs_acct_id = fail_if_error(in0.acct_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_mb_ot_d_hs_emplyr_group_id = fail_if_error(in0.emplyr_group_id);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_mb_ot_d_hs_member_id = fail_if_error(in0.member_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mb_ot_d_hs_patient_id = fail_if_error(in0.patient_id);
let decimal("\x01",0) c_mb_ot_d_hs_cpp_member_sk;
let string("\x01",charset="iso-8859-15", maximum_length=5) c_mb_ot_d_hs_contract_id = fail_if_error(in0.contract_id);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_mb_ot_d_hs_product_type = fail_if_error(in0.product_type);
let utf8 string("\x01", maximum_length=80) c_mb_ot_d_hs_product_id = fail_if_error(in0.product_id);
let decimal("\x01",0) c_mb_ot_d_hs_cpp_product_sk;
let utf8 string("\x01", maximum_length=100) c_mb_ot_d_hs_program_id = fail_if_error(in0.program_id);
let decimal("\x01",0) c_mb_ot_d_hs_cpp_program_sk;
let utf8 string("\x01", maximum_length=256) c_mb_ot_d_hs_optout_src = fail_if_error(in0.optout_src);
let utf8 string("\x01", maximum_length=256) c_mb_ot_d_hs_optout_type = fail_if_error(in0.optout_type);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mb_ot_d_hs_eff_dt = fail_if_error((datetime("YYYYMMDD HH24:MI:SS")) (date("YYYYMMDD"))in0.eff_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mb_ot_d_hs_end_dt = fail_if_error((datetime("YYYYMMDD HH24:MI:SS")) (date("YYYYMMDD"))in0.end_dt);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_mb_ot_d_hs_stts = fail_if_error(in0.stts);
let utf8 string("\x01", maximum_length=8192) c_mb_ot_d_hs_cmmt = fail_if_error(in0.cmmt);
let string("\x01",charset="iso-8859-15", maximum_length=15) c_mb_ot_d_hs_crrspdnce_id = fail_if_error(in0.crrspdnce_id);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mb_ot_d_hs_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_mb_ot_d_hs_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mb_ot_d_hs_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_mb_ot_d_hs_cpp_created_by = fail_if_error(in0.created_by);
let utf8 string("\x01", maximum_length=256) c_mb_ot_d_hs_optout_revoke_src = fail_if_error(in0.optout_revoke_src);
let decimal("\x01",0) c_mb_ot_d_hs_src_env_sk = 710;
let string("\x01",charset="iso-8859-15", maximum_length=50) c_mb_ot_d_hs_product_sub_type_name = fail_if_error(in0.product_sub_type_name);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mb_ot_d_hs_plan_start_dt = fail_if_error((datetime("YYYYMMDD HH24:MI:SS")) (date("YYYYMMDD")) in0.plan_start_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mb_ot_d_hs_plan_end_dt = fail_if_error((datetime("YYYYMMDD HH24:MI:SS")) (date("YYYYMMDD")) in0.plan_end_dt);



/*   Default value   */
c_mb_ot_d_hs_cpp_program_sk=fail_if_error(first_defined(lookup("c_program",in0.program_id).dxf_sk,-1));

/*   Default value   */
c_mb_ot_d_hs_cpp_product_sk=fail_if_error(first_defined(lookup("c_product",in0.product_id).dxf_sk,-1));

/*   Default value   */
c_mb_ot_d_hs_cpp_member_optout_sk=fail_if_error(first_defined(lookup("c_member_optout",in0.member_optout_id).dxf_sk,-1));

/*   Default value   */
c_mb_ot_d_hs_cpp_member_sk=fail_if_error(first_defined(lookup("c_member",in0.carrier_id,in0.acct_id,in0.emplyr_group_id,in0.member_id).dxf_sk,-1));

  out0.c_mb_ot_d_hs.cpp_member_optout_dtl_hist_sk::c_mb_ot_d_hs_cpp_member_optout_dtl_hist_sk;
  out0.c_mb_ot_d_hs.member_optout_dtl_hist_id::c_mb_ot_d_hs_member_optout_dtl_hist_id;
  out0.c_mb_ot_d_hs.member_optout_id::c_mb_ot_d_hs_member_optout_id;
  out0.c_mb_ot_d_hs.cpp_member_optout_sk::c_mb_ot_d_hs_cpp_member_optout_sk;
  out0.c_mb_ot_d_hs.cli_carrier_id::c_mb_ot_d_hs_cli_carrier_id;
  out0.c_mb_ot_d_hs.cli_acct_id::c_mb_ot_d_hs_cli_acct_id;
  out0.c_mb_ot_d_hs.cli_emplyr_group_id::c_mb_ot_d_hs_cli_emplyr_group_id;
  out0.c_mb_ot_d_hs.cli_member_id::c_mb_ot_d_hs_cli_member_id;
  out0.c_mb_ot_d_hs.carrier_id::c_mb_ot_d_hs_carrier_id;
  out0.c_mb_ot_d_hs.acct_id::c_mb_ot_d_hs_acct_id;
  out0.c_mb_ot_d_hs.emplyr_group_id::c_mb_ot_d_hs_emplyr_group_id;
  out0.c_mb_ot_d_hs.member_id::c_mb_ot_d_hs_member_id;
  out0.c_mb_ot_d_hs.patient_id::c_mb_ot_d_hs_patient_id;
  out0.c_mb_ot_d_hs.cpp_member_sk::c_mb_ot_d_hs_cpp_member_sk;
  out0.c_mb_ot_d_hs.contract_id::c_mb_ot_d_hs_contract_id;
  out0.c_mb_ot_d_hs.product_type::c_mb_ot_d_hs_product_type;
  out0.c_mb_ot_d_hs.product_id::c_mb_ot_d_hs_product_id;
  out0.c_mb_ot_d_hs.cpp_product_sk::c_mb_ot_d_hs_cpp_product_sk;
  out0.c_mb_ot_d_hs.program_id::c_mb_ot_d_hs_program_id;
  out0.c_mb_ot_d_hs.cpp_program_sk::c_mb_ot_d_hs_cpp_program_sk;
  out0.c_mb_ot_d_hs.optout_src::c_mb_ot_d_hs_optout_src;
  out0.c_mb_ot_d_hs.optout_type::c_mb_ot_d_hs_optout_type;
  out0.c_mb_ot_d_hs.eff_dt::c_mb_ot_d_hs_eff_dt;
  out0.c_mb_ot_d_hs.end_dt::c_mb_ot_d_hs_end_dt;
  out0.c_mb_ot_d_hs.stts::c_mb_ot_d_hs_stts;
  out0.c_mb_ot_d_hs.cmmt::c_mb_ot_d_hs_cmmt;
  out0.c_mb_ot_d_hs.crrspdnce_id::c_mb_ot_d_hs_crrspdnce_id;
  out0.c_mb_ot_d_hs.cpp_update_ts::c_mb_ot_d_hs_cpp_update_ts;
  out0.c_mb_ot_d_hs.cpp_updated_by::c_mb_ot_d_hs_cpp_updated_by;
  out0.c_mb_ot_d_hs.cpp_create_ts::c_mb_ot_d_hs_cpp_create_ts;
  out0.c_mb_ot_d_hs.cpp_created_by::c_mb_ot_d_hs_cpp_created_by;
  out0.c_mb_ot_d_hs.optout_revoke_src::c_mb_ot_d_hs_optout_revoke_src;
  out0.c_mb_ot_d_hs.src_env_sk::c_mb_ot_d_hs_src_env_sk;
  out0.c_mb_ot_d_hs.product_sub_type_name::c_mb_ot_d_hs_product_sub_type_name;
  out0.c_mb_ot_d_hs.plan_start_dt::c_mb_ot_d_hs_plan_start_dt;
  out0.c_mb_ot_d_hs.plan_end_dt::c_mb_ot_d_hs_plan_end_dt;
  out0.*::in0.*;

end;
