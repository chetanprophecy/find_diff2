/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_58aed0fc_6f28_2 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_lt_gen_res.start_dt,[passthrough],in0.start_dt]
  [out0.c_lt_gen_res.letter_generation_response_id,[passthrough],in0.letter_generation_response_id]
  [out0.c_lt_gen_res.end_dt,[passthrough],in0.end_dt]
  [out0.c_lt_gen_res.letter_stts,[passthrough],in0.letter_stts]
  [out0.c_lt_gen_res.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_lt_gen_res.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_lt_gen_res.cpp_case_fulfillment_sk,[transform],in0.case_fulfillment_id,
     'lookup("c_case_fulfillment").dxf_sk']
  [out0.c_lt_gen_res.case_fulfillment_id,[passthrough],in0.case_fulfillment_id]
  [out0.c_lt_gen_res.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_lt_gen_res.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_lt_gen_res.src_env_sk,[transform],]
  [out0.c_lt_gen_res.cpp_letter_generation_response_sk,[transform],]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_lt_gen_res.start_dt,'c_lt_gen_res.start_dt',1,0]
     [out0.c_lt_gen_res.letter_generation_response_id,'c_lt_gen_res.letter_generation_response_id',1,0]
     [out0.c_lt_gen_res.end_dt,'c_lt_gen_res.end_dt',1,0]
     [out0.c_lt_gen_res.letter_stts,'c_lt_gen_res.letter_stts',1,0]
     [out0.c_lt_gen_res.cpp_create_ts,'c_lt_gen_res.cpp_create_ts',1,0]
     [out0.c_lt_gen_res.cpp_update_ts,'c_lt_gen_res.cpp_update_ts',1,0]
     [out0.c_lt_gen_res.cpp_case_fulfillment_sk,'c_lt_gen_res.cpp_case_fulfillment_sk',1,0]
     [out0.c_lt_gen_res.case_fulfillment_id,'c_lt_gen_res.case_fulfillment_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_lt_gen_res.cpp_updated_by,'c_lt_gen_res.cpp_updated_by',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_lt_gen_res.cpp_created_by,'c_lt_gen_res.cpp_created_by',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_lt_gen_res.src_env_sk,'c_lt_gen_res.src_env_sk',1,0]
     [out0.c_lt_gen_res.cpp_letter_generation_response_sk,'c_lt_gen_res.cpp_letter_generation_response_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.start_dt,'start_dt',1,1]
     ['lookup("c_case_fulfillment").dxf_sk','dxf_sk',1,1]
     [in0.letter_stts,'letter_stts',1,1]
     [in0.end_dt,'end_dt',1,1]
     [in0.letter_generation_response_id,'letter_generation_response_id',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.case_fulfillment_id,'case_fulfillment_id',2,2]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_lt_gen_res_cpp_letter_generation_response_sk = -1;
let utf8 string("\x01", maximum_length=60) c_lt_gen_res_letter_generation_response_id = fail_if_error(in0.letter_generation_response_id);
let utf8 string("\x01", maximum_length=80) c_lt_gen_res_case_fulfillment_id = fail_if_error(in0.case_fulfillment_id);
let decimal("\x01",0) c_lt_gen_res_cpp_case_fulfillment_sk;
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_lt_gen_res_start_dt = fail_if_error(in0.start_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_lt_gen_res_end_dt = fail_if_error(in0.end_dt);
let utf8 string("\x01", maximum_length=8) c_lt_gen_res_letter_stts = fail_if_error(in0.letter_stts);
let utf8 string("\x01", maximum_length=80) c_lt_gen_res_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_lt_gen_res_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_lt_gen_res_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_lt_gen_res_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_lt_gen_res_src_env_sk = 710;



/*   Default value   */
c_lt_gen_res_cpp_case_fulfillment_sk=fail_if_error(first_defined(lookup("c_case_fulfillment",in0.case_fulfillment_id).dxf_sk,-1));

  out0.c_lt_gen_res.cpp_letter_generation_response_sk::c_lt_gen_res_cpp_letter_generation_response_sk;
  out0.c_lt_gen_res.letter_generation_response_id::c_lt_gen_res_letter_generation_response_id;
  out0.c_lt_gen_res.case_fulfillment_id::c_lt_gen_res_case_fulfillment_id;
  out0.c_lt_gen_res.cpp_case_fulfillment_sk::c_lt_gen_res_cpp_case_fulfillment_sk;
  out0.c_lt_gen_res.start_dt::c_lt_gen_res_start_dt;
  out0.c_lt_gen_res.end_dt::c_lt_gen_res_end_dt;
  out0.c_lt_gen_res.letter_stts::c_lt_gen_res_letter_stts;
  out0.c_lt_gen_res.cpp_updated_by::c_lt_gen_res_cpp_updated_by;
  out0.c_lt_gen_res.cpp_update_ts::c_lt_gen_res_cpp_update_ts;
  out0.c_lt_gen_res.cpp_create_ts::c_lt_gen_res_cpp_create_ts;
  out0.c_lt_gen_res.cpp_created_by::c_lt_gen_res_cpp_created_by;
  out0.c_lt_gen_res.src_env_sk::c_lt_gen_res_src_env_sk;
  out0.*::in0.*;

end;
