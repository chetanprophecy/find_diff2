//ilm.clmprdfil.rcmddp.xfr
include "/~$AI_XFR/sys_id.xfr";
out :: reformat(in)=
begin
  out.mdh_file_id                :: in.aspwih;
  out.pdp_contract_id            :: in.asvwhc;
  out.pdp_pbp_id                 :: in.asvyhc;
  out.mdd_sequence_number        :: in.asf0hs;
  out.mdd_record_id              :: in.ascfhn;
  out.rxs_rxclaim_nbr            :: in.asp2nb;
  out.tcd_claim_seq_number       :: 1000-in.asoinb;
  out.mdd_hicn                   :: in.asb0hn;
  out.mbr_member_id              :: in.asabcd;
  out.mbr_date_of_birth          :: if(first_defined(in.asajdt,-1)==0) '9999-12-31' else null_if_error((date('YYYYMMDD'))(string(""))(decimal("")) in.asajdt);
  out.mdd_patient_gender_code    :: in.asbaal;
  out.tcd_sbm_date_of_service    :: if(first_defined(in.asbbda,-1)==0) 99991231 else string_lrtrim((string(""))(decimal(""))in.asbbda);
  out.mdd_paid_date              :: if(first_defined(in.asaoce,-1)==0) 99991231 else string_lrtrim((string(""))(decimal(""))in.asaoce);
  out.tcd_sbm_rx_nbr             :: in.asukcd;
  out.tcd_sbm_product_id         :: in.asric4;
  out.tc3_sbm_srv_prov_id_qual   :: in.asn5ia;
  out.tc3_sbm_srv_prov_id        :: in.asythe;
  out.tcd_sbm_fill_number        :: in.asulcd;
  out.tap_sbm_dispensing_status  :: in.asj3cj;
  out.tcd_sbm_compound_code      :: in.ask2st;
  out.tcd_sbm_product_sel_code   :: in.ask3st;
  out.tcd_sbm_qty_dispensed      :: in.asionb;
  out.tcd_sbm_days_supply        :: in.asimnb;
  out.tcd_sbm_prescriber_id_ql   :: in.asilcj;
  out.tcd_sbm_prescriber_id      :: in.astccd;
  out.tc4_drug_cov_sts_code      :: in.aso6h9;
  out.mdd_adjust_delete_code     :: in.asvgh9;
  out.mdd_non_standard_code      :: in.asvhh9;
  out.mdd_pricing_exception_cde  :: in.asvih9;
  out.mdd_catastrophic_cvg_code  :: in.asvjh9;
  out.mdd_ingredient_cost        :: in.asbfqu;
  out.mdd_dispensing_fee         :: in.asbgqu;
  out.mdd_sales_tax              :: in.asbhqu;
  out.mdd_gdcb_amount            :: in.asckik;
  out.mdd_gdca_amount            :: in.asclik;
  out.mdd_pde_patient_pay        :: in.asfuik;
  out.mdd_other_troop_amount     :: in.ase6ik;
  out.mdd_lics_amount            :: in.ascmik;
  out.mdd_plro_amount            :: in.ascnik;
  out.mdd_cpp_amount             :: in.ascoik;
  out.mdd_npp_amount             :: in.ascpik;
  out.mdd_est_rebate_at_pos      :: in.asfvik;
  out.mdd_vaccination_admin_fee  :: in.asfwik;
  out.tc3_sbm_rx_origin_cde      :: in.ask6st;
  out.ex4_date_orig_claim_rcvd   :: if(first_defined(in.asaqce ,-1)==0) 99991231 else string_lrtrim((string(""))(decimal(""))in.asaqce);
  out.ex4_adj_begin_timestamp    :: in.asbqir;
  out.tc4_totl_gross_drgcst_acc  :: in.asbiqu;
  out.tc4_true_oop_accumulator   :: in.asbjqu;
  out.tc4_brand_generic_code     :: in.asc4ai;
  out.ex4_begin_benefit_phase    :: in.asc5ai;
  out.ex4_end_benefit_phase      :: in.asc6ai;
  out.tc4_reported_gap_discount  :: in.asbkqu;
  out.ex4_tier                   :: in.asc7ai;
  out.ex4_formulary_code         :: in.asc8ai;
  out.ex4_gap_discount_pln_ovcd  :: in.asc9ai;
  out.mdd_cms_calc_gap_discount  :: in.asblqu;
  out.mdd_pbp_of_record          :: in.asb1hn;
  out.mdd_alt_srv_prov_id_qual   :: in.asb2hn;
  out.mdd_alt_srv_prov_id        :: in.asb3hn;
  out.mdd_orig_sbm_contract      :: in.asb4hn;
  out.mdd_contract_of_record     :: in.asb5hn;
  out.mdd_corrected_hicn         :: in.aspxih;
  out.mdd_edit_count             :: in.asf1hs;
  out.mdd_edit_01                :: in.asczhd;
  out.mdd_edit_02                :: in.asc0hd;
  out.mdd_edit_03                :: in.asc1hd;
  out.mdd_edit_04                :: in.asc2hd;
  out.mdd_edit_05                :: in.asc3hd;
  out.mdd_edit_06                :: in.asc4hd;
  out.mdd_edit_08                :: in.asc5hd;
  out.mdd_edit_07                :: in.asc6hd;
  out.mdd_edit_09                :: in.asc7hd;
  out.mdd_edit_10                :: in.asc8hd;
  out.mdd_exclusion_reason_code  :: in.asfdie;
  out.car_carrier_id             :: in.asaacd;
  out.acc_account_id             :: in.asaccd;
  out.grp_group_id               :: in.asadcd;
  out.tcd_claim_status           :: in.ass6st;
  out.tcd_final_plan_cde         :: in.astjcd;
  out.tcd_final_plan_eff_dte     :: if(string_substring((string(""))(decimal("")) in.asasda,1,1)=='1') (date("YYYYMMDD"))(string(""))(decimal(""))(19000000+in.asasda) else (date("YYYY-MM-DD")) '9999-12-31';
  out.mmd_co_pay_category        :: in.asrmh9;
  out.mdd_cms_trans_rpt_sts      :: in.asklia;
  out.mdd_resubmit_cms_type      :: in.asaoib;
  out.mdd_trans_rpt_sts_date     :: if(string_substring((string(""))(decimal("")) in.aswwhg,1,1)=='1') (date("YYYYMMDD"))(string(""))(decimal(""))(19000000+in.aswwhg) else '9999-12-31';
  out.mdd_trans_rpt_sts_time     :: if(first_defined(in.asvghe,-1)==0) (datetime('HH24:MI:SS')) '00:00:00' else (datetime("HH24MISS"))string_concat(if(string_length((string(""))(decimal(""))in.asvghe)==4)'00' else if(string_length((string(""))(decimal(""))in.asvghe)==5)'0' else '',(string(""))(decimal("")) in.asvghe);
  out.mdd_trans_rpt_sts_user     :: in.asd0io;
  out.mdd_resubmission_sts       :: in.askmia;
  out.mdd_resubmission_date      :: if(string_substring((string(""))(decimal("")) in.aswwhg,1,1)=='1') (date("YYYYMMDD"))(string(""))(decimal(""))(19000000+in.aswwhg) else (date("YYYY-MM-DD")) '9999-12-31';
  out.mdd_resubmission_time      :: if(first_defined(in.asvhhe,-1)==0) (datetime('HH24:MI:SS')) '00:00:00' else (datetime("HH24MISS"))string_concat(if(string_length((string(""))(decimal(""))in.asvhhe)==4)'00' else if(string_length((string(""))(decimal(""))in.asvhhe)==5)'0' else '',(string(""))(decimal("")) in.asvhhe);
  out.mdd_resubmission_user      :: in.asd1io;
  out.mdd_reprocessed_file_id    :: in.aslbij;
  out.mdd_reproc_submitter_id    :: in.aslcij;
  out.mdd_reprocessed_date       :: if(string_substring((string(""))(decimal("")) in.aswyhg,1,1)=='1') (date("YYYYMMDD"))(string(""))(decimal(""))(19000000+in.aswyhg) else (date("YYYY-MM-DD")) '9999-12-31';
  out.mdd_reprocessed_time       :: if(first_defined(in.asvihe,-1)==0) (datetime('HH24:MI:SS')) '00:00:00' else (datetime("HH24MISS"))string_concat(if(string_length((string(""))(decimal(""))in.asvihe)==4)'00' else if(string_length((string(""))(decimal(""))in.asvihe)==5)'0' else '',(string(""))(decimal("")) in.asvihe);
  out.mdd_reprocessed_user       :: in.asd2io;
  out.src_add_user_name          :: in.asakvn;
  out.src_add_date               :: if(string_substring((string(""))(decimal("")) in.asc2dt,1,1)=='1') (date("YYYYMMDD"))(string(""))(decimal(""))(19000000+in.asc2dt) else (date("YYYY-MM-DD")) '9999-12-31';
  out.src_add_time               :: if(first_defined(in.asadtm,-1)==0) (datetime('HH24:MI:SS')) '00:00:00' else (datetime("HH24MISS"))string_concat(if(string_length((string(""))(decimal(""))in.asadtm)==4)'00' else if(string_length((string(""))(decimal(""))in.asadtm)==5)'0' else '',(string(""))(decimal("")) in.asadtm);
  out.src_add_program_name       :: in.asalvn;
  out.src_chg_user_name          :: in.asadvn;
  out.src_chg_date               :: if(string_substring((string(""))(decimal("")) in.asbmdt,1,1)=='1') (date("YYYYMMDD"))(string(""))(decimal(""))(19000000+in.asbmdt) else (date("YYYY-MM-DD")) '9999-12-31';
  out.src_chg_time               :: if(first_defined(in.asabtm,-1)==0) (datetime('HH24:MI:SS')) '00:00:00' else (datetime("HH24MISS"))string_concat(if(string_length((string(""))(decimal(""))in.asabtm)==4)'00' else if(string_length((string(""))(decimal(""))in.asabtm)==5)'0' else '',(string(""))(decimal("")) in.asabtm);
  out.src_chg_program_name       :: in.asaevn;
  /*out.rxtrack_add_user_name      :: in.Job Name;
  out.rxtrack_add_date           :: in.CurrentDate();
  out.rxtrack_add_time           :: in.CurrentTime();
  out.rxtrack_add_program_name   :: in.Job Name;
  out.rxtrack_chg_user_name      :: in.Job Name;
  out.rxtrack_chg_date           :: in.CurrentDate();
  out.rxtrack_chg_time           :: in.CurrentTime();
  out.rxtrack_chg_program_name   :: in.Job Name;*/
  out.rxt_src_envrt_nm 		 :: system_number_to_name(in.dmf_src_sys_id);
  out.rxt_create_dttm 		 :: "${RUN_TIMESTAMP}";
  out.rxt_create_uid 		 :: 'app_orca_rxclaim';
  out.rxt_create_run_id 	 :: (decimal(""))"${RUN_TIMESTAMP}";
  out.rxt_rec_stat_cd 		 :: '';
  out.* 			 :: in.*;
end;
