/*   Do not edit. Generated file - BRE 4.0.2.6;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_ctrx_rcpxcp_to_the_ctrx_d_plan_pharmacy_coupon_ILM_documentation(in)=
begin

out0.d_plan.src_env_sk::depends_on(
         in.rxt_src_envrt_id
         );


out0.dp_phr_cp.ppc_ndc::depends_on(
         in.rpkyvg
         );


out0.dp_phr_cp.src_chg_time::depends_on(
         in.rpabtm
         );


out0.dp_phr_cp.src_chg_dt::depends_on(
         in.rpbmdt
         );


out0.dp_phr_cp.src_add_time::depends_on(
         in.rpadtm
         );


out0.dp_phr_cp.src_add_dt::depends_on(
         in.rpc2dt
         );


out0.dp_phr_cp.cpn_pat_pay_gpi_lst::depends_on(
         in.rppyvi
         );


out0.dp_phr_cp.ppc_gpi_list::depends_on(
         in.rpkzvg
         );


out0.d_plan.pln_eff_dt::depends_on(
         in.rpakdt
         );


out0.dp_phr_cp.src_chg_usr_nm::depends_on(
         in.rpadvn
         );


out0.dp_phr_cp.src_add_usr_nm::depends_on(
         in.rpakvn
         );


out0.d_plan.pln_cd::depends_on(
         in.rpaecd
         );


out0.dp_phr_cp.pln_cd::depends_on(
         in.rpaecd
         );


out0.dp_phr_cp.ppc_frm_dt::depends_on(
         in.rpx8cf
         );


out0.dp_phr_cp.ppc_stat_cd::depends_on(
         in.rpr1au
         );


out0.dp_phr_cp.ppc_seq_nbr::depends_on(
         in.rpjsbs
         );


out0.dp_phr_cp.ppc_thru_dt::depends_on(
         in.rpx9cf
         );


out0.dp_phr_cp.src_chg_prog_nm::depends_on(
         in.rpaevn
         );


out0.dp_phr_cp.src_add_prog_nm::depends_on(
         in.rpalvn
         );


out0.dp_phr_cp.ppc_proc_cpn_flg::depends_on(
         in.rpr2au
         );


out0.dp_phr_cp.pln_eff_dt::depends_on(
         in.rpakdt
         );


out0.dp_phr_cp.src_env_sk::depends_on(
         in.rxt_src_envrt_id
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_ctrx_rcpxcp_to_the_ctrx_d_plan_pharmacy_coupon_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.dp_phr_cp.pln_sk,'dp_phr_cp.pln_sk',1,0]
     [out0.d_plan.src_env_sk,'d_plan.src_env_sk',1,0]
     [out0.dp_phr_cp.ppc_ndc,'dp_phr_cp.ppc_ndc',1,0]
     [out0.dp_phr_cp.src_chg_time,'dp_phr_cp.src_chg_time',1,0]
     [out0.dp_phr_cp.src_chg_dt,'dp_phr_cp.src_chg_dt',1,0]
     [out0.dp_phr_cp.src_add_time,'dp_phr_cp.src_add_time',1,0]
     [out0.dp_phr_cp.src_add_dt,'dp_phr_cp.src_add_dt',1,0]
     [out0.dp_phr_cp.cpn_pat_pay_gpi_lst,'dp_phr_cp.cpn_pat_pay_gpi_lst',1,0]
     [out0.dp_phr_cp.ppc_gpi_list,'dp_phr_cp.ppc_gpi_list',1,0]
     [out0.d_plan.pln_eff_dt,'d_plan.pln_eff_dt',1,0]
     [out0.dp_phr_cp.src_chg_usr_nm,'dp_phr_cp.src_chg_usr_nm',1,0]
     [out0.dp_phr_cp.src_add_usr_nm,'dp_phr_cp.src_add_usr_nm',1,0]
     [out0.d_plan.pln_cd,'d_plan.pln_cd',1,0]
     [out0.dp_phr_cp.pln_cd,'dp_phr_cp.pln_cd',1,0]
     [out0.dp_phr_cp.ppc_frm_dt,'dp_phr_cp.ppc_frm_dt',1,0]
     [out0.dp_phr_cp.ppc_stat_cd,'dp_phr_cp.ppc_stat_cd',1,0]
     [out0.dp_phr_cp.ppc_seq_nbr,'dp_phr_cp.ppc_seq_nbr',1,0]
     [out0.dp_phr_cp.ppc_thru_dt,'dp_phr_cp.ppc_thru_dt',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dp_phr_cp.src_chg_prog_nm,'dp_phr_cp.src_chg_prog_nm',1,0]
     [out0.dp_phr_cp.src_add_prog_nm,'dp_phr_cp.src_add_prog_nm',1,0]
     [out0.dp_phr_cp.ppc_proc_cpn_flg,'dp_phr_cp.ppc_proc_cpn_flg',1,0]
     [out0.dp_phr_cp.pln_phr_cpn_sk,'dp_phr_cp.pln_phr_cpn_sk',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dp_phr_cp.pln_eff_dt,'dp_phr_cp.pln_eff_dt',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.dp_phr_cp.src_env_sk,'dp_phr_cp.src_env_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.rpabtm,'rpabtm',1,1]
     [in0.rpjsbs,'rpjsbs',1,1]
     [in0.rpaecd,'rpaecd',2,2]
     [in0.rpadvn,'rpadvn',1,1]
     [in0.rpr1au,'rpr1au',1,1]
     [in0.rpaevn,'rpaevn',1,1]
     [in0.rpbmdt,'rpbmdt',1,1]
     [in0.rpc2dt,'rpc2dt',1,1]
     [in0.rpalvn,'rpalvn',1,1]
     [in0.rpx9cf,'rpx9cf',1,1]
     [in0.rpadtm,'rpadtm',1,1]
     [in0.rpakvn,'rpakvn',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',2,2]
     [in0.rpkyvg,'rpkyvg',1,1]
     [in0.rppyvi,'rppyvi',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.rpr2au,'rpr2au',1,1]
     [in0.rpx8cf,'rpx8cf',1,1]
     [in0.rpkzvg,'rpkzvg',1,1]
     [in0.rpakdt,'rpakdt',2,2]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) dp_phr_cp_pln_phr_cpn_sk = -1;
let decimal("\x01",0) dp_phr_cp_pln_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=10) dp_phr_cp_pln_cd = fail_if_error(in0.rpaecd);
let date("YYYYMMDD")("\x01") dp_phr_cp_pln_eff_dt;
let decimal("\x01",0) dp_phr_cp_ppc_seq_nbr = fail_if_error(in0.rpjsbs);
let string("\x01",charset="iso-8859-15", maximum_length=1) dp_phr_cp_ppc_stat_cd = fail_if_error(in0.rpr1au);
let date("YYYYMMDD")("\x01") dp_phr_cp_ppc_frm_dt;
let date("YYYYMMDD")("\x01") dp_phr_cp_ppc_thru_dt;
let string("\x01",charset="iso-8859-15", maximum_length=1) dp_phr_cp_ppc_proc_cpn_flg = fail_if_error(in0.rpr2au);
let string("\x01",charset="iso-8859-15", maximum_length=10) dp_phr_cp_ppc_ndc = fail_if_error(in0.rpkyvg);
let string("\x01",charset="iso-8859-15", maximum_length=10) dp_phr_cp_ppc_gpi_list = fail_if_error(in0.rpkzvg);
let string("\x01",charset="iso-8859-15", maximum_length=20) dp_phr_cp_src_add_usr_nm = fail_if_error(in0.rpakvn);
let date("YYYYMMDD")("\x01") dp_phr_cp_src_add_dt;
let datetime("YYYYMMDD HH24:MI:SS")("\x01") dp_phr_cp_src_add_time;
let string("\x01",charset="iso-8859-15", maximum_length=10) dp_phr_cp_src_add_prog_nm = fail_if_error(in0.rpalvn);
let string("\x01",charset="iso-8859-15", maximum_length=20) dp_phr_cp_src_chg_usr_nm = fail_if_error(in0.rpadvn);
let date("YYYYMMDD")("\x01") dp_phr_cp_src_chg_dt;
let datetime("YYYYMMDD HH24:MI:SS")("\x01") dp_phr_cp_src_chg_time;
let string("\x01",charset="iso-8859-15", maximum_length=10) dp_phr_cp_src_chg_prog_nm = fail_if_error(in0.rpaevn);
let decimal("\x01",0) dp_phr_cp_src_env_sk = fail_if_error((decimal(''))(in0.rxt_src_envrt_id));
let string("\x01",charset="iso-8859-15", maximum_length=10) dp_phr_cp_cpn_pat_pay_gpi_lst = fail_if_error(in0.rppyvi);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_plan_pln_cd = fail_if_error(in0.rpaecd);
let date("YYYYMMDD")("\x01") d_plan_pln_eff_dt;
let decimal("\x01",0) d_plan_src_env_sk = fail_if_error((decimal(''))(in0.rxt_src_envrt_id));



/*   Default value   */
dp_phr_cp_src_chg_time=fail_if_error(time_check(in0.rpabtm));

/*   Default value   */
dp_phr_cp_src_chg_dt=fail_if_error(date_check(in0.rpbmdt));

/*   Default value   */
dp_phr_cp_src_add_time=fail_if_error(time_check(in0.rpadtm));

/*   Default value   */
dp_phr_cp_src_add_dt=fail_if_error(date_check(in0.rpc2dt));

/*   Default value   */
d_plan_pln_eff_dt=fail_if_error(date_check(in0.rpakdt));

/*   Default value   */
dp_phr_cp_ppc_frm_dt=fail_if_error(date_check(in0.rpx8cf));

/*   Default value   */
dp_phr_cp_ppc_thru_dt=fail_if_error(date_check(in0.rpx9cf));

/*   Default value   */
dp_phr_cp_pln_eff_dt=fail_if_error(date_check(in0.rpakdt));

  out0.dp_phr_cp.pln_phr_cpn_sk::dp_phr_cp_pln_phr_cpn_sk;
  out0.dp_phr_cp.pln_sk::dp_phr_cp_pln_sk;
  out0.dp_phr_cp.pln_cd::dp_phr_cp_pln_cd;
  out0.dp_phr_cp.pln_eff_dt::dp_phr_cp_pln_eff_dt;
  out0.dp_phr_cp.ppc_seq_nbr::dp_phr_cp_ppc_seq_nbr;
  out0.dp_phr_cp.ppc_stat_cd::dp_phr_cp_ppc_stat_cd;
  out0.dp_phr_cp.ppc_frm_dt::dp_phr_cp_ppc_frm_dt;
  out0.dp_phr_cp.ppc_thru_dt::dp_phr_cp_ppc_thru_dt;
  out0.dp_phr_cp.ppc_proc_cpn_flg::dp_phr_cp_ppc_proc_cpn_flg;
  out0.dp_phr_cp.ppc_ndc::dp_phr_cp_ppc_ndc;
  out0.dp_phr_cp.ppc_gpi_list::dp_phr_cp_ppc_gpi_list;
  out0.dp_phr_cp.src_add_usr_nm::dp_phr_cp_src_add_usr_nm;
  out0.dp_phr_cp.src_add_dt::dp_phr_cp_src_add_dt;
  out0.dp_phr_cp.src_add_time::dp_phr_cp_src_add_time;
  out0.dp_phr_cp.src_add_prog_nm::dp_phr_cp_src_add_prog_nm;
  out0.dp_phr_cp.src_chg_usr_nm::dp_phr_cp_src_chg_usr_nm;
  out0.dp_phr_cp.src_chg_dt::dp_phr_cp_src_chg_dt;
  out0.dp_phr_cp.src_chg_time::dp_phr_cp_src_chg_time;
  out0.dp_phr_cp.src_chg_prog_nm::dp_phr_cp_src_chg_prog_nm;
  out0.dp_phr_cp.src_env_sk::dp_phr_cp_src_env_sk;
  out0.dp_phr_cp.cpn_pat_pay_gpi_lst::dp_phr_cp_cpn_pat_pay_gpi_lst;
  out0.d_plan.pln_cd::d_plan_pln_cd;
  out0.d_plan.pln_eff_dt::d_plan_pln_eff_dt;
  out0.d_plan.src_env_sk::d_plan_src_env_sk;
  out0.*::in0.*;
end;
