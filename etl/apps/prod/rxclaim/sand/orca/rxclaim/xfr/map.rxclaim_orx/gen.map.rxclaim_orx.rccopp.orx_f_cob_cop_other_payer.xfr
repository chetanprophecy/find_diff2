/*   Do not edit. Generated file - BRE 4.0.2.18;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_orx_rccopp_to_the_orx_f_cob_cop_other_payer_ILM_documentation(in)=
begin

out0.c_f_oth_pyr.cop_oth_pyr_id_qlfr::depends_on(
         in.naunoc
         );


out0.c_f_oth_pyr.cop_seq_nbr::depends_on(
         in.nafspp
         );


out0.d_member.employer_group_id::depends_on(
         in.groupnbr,
         in.groupid,
         in.claimsts
         );


out0.d_member.carrier_id::depends_on(
         in.carrierid
         );


out0.c_f_oth_pyr.src_env_sk::depends_on(
         in.dxf_src_sys_id
         );


out0.d_member.mbr_id::depends_on(
         in.cardholder,
         in.memberid,
         in.claimsts
         );


out0.d_cag.account_id::depends_on(
         in.accountid
         );


out0.c_f_oth_pyr.cop_oth_pyr_rsp_amt::depends_on(
         in.naqghz
         );


out0.c_f_oth_pyr.claim_seq_nbr::depends_on(
         in.naoinb
         );


out0.c_f_oth_pyr.claim_nbr_encrp::depends_on(
         in.nap2nb
         );


out0.d_cag.carrier_id::depends_on(
         in.carrierid
         );


out0.c_f_oth_pyr.cob_seq_nbr::depends_on(
         in.naven2
         );


out0.d_carrier.carrier_id::depends_on(
         in.carrierid
         );


out0.d_member.account_id::depends_on(
         in.accountid
         );


out0.d_cag.employer_group_id::depends_on(
         in.groupnbr,
         in.groupid,
         in.claimsts
         );


out0.c_f_oth_pyr.claim_nbr::depends_on(
         in.nap2nb
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_orx_rccopp_to_the_orx_f_cob_cop_other_payer_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.c_f_oth_pyr.sec_flg,'c_f_oth_pyr.sec_flg',1,0]
     [out0.c_f_oth_pyr.cop_oth_pyr_id_qlfr,'c_f_oth_pyr.cop_oth_pyr_id_qlfr',1,0]
     [out0.c_f_oth_pyr.cop_seq_nbr,'c_f_oth_pyr.cop_seq_nbr',1,0]
     [out0.d_member.employer_group_id,'d_member.employer_group_id',1,0]
     [out0.d_member.carrier_id,'d_member.carrier_id',1,0]
     [out0.c_f_oth_pyr.src_env_sk,'c_f_oth_pyr.src_env_sk',1,0]
     [out0.d_member.mbr_id,'d_member.mbr_id',1,0]
     [out0.d_cag.account_id,'d_cag.account_id',1,0]
     [out0.c_f_oth_pyr.cop_oth_pyr_rsp_amt,'c_f_oth_pyr.cop_oth_pyr_rsp_amt',1,0]
     [out0.c_f_oth_pyr.mbr_sk,'c_f_oth_pyr.mbr_sk',1,0]
     [out0.c_f_oth_pyr.claim_seq_nbr,'c_f_oth_pyr.claim_seq_nbr',1,0]
     [out0.c_f_oth_pyr.claim_nbr_encrp,'c_f_oth_pyr.claim_nbr_encrp',1,0]
     [out0.c_f_oth_pyr.carrier_sk,'c_f_oth_pyr.carrier_sk',1,0]
     [out0.d_cag.carrier_id,'d_cag.carrier_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_f_oth_pyr.cob_seq_nbr,'c_f_oth_pyr.cob_seq_nbr',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.d_carrier.carrier_id,'d_carrier.carrier_id',1,0]
     [out0.c_f_oth_pyr.cag_sk,'c_f_oth_pyr.cag_sk',1,0]
     [out0.d_member.account_id,'d_member.account_id',1,0]
     [out0.d_cag.employer_group_id,'d_cag.employer_group_id',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_f_oth_pyr.claim_nbr,'c_f_oth_pyr.claim_nbr',1,0]
  ]
  impacts:
  [
     [in0.accountid,'accountid',2,2]
     [in0.nap2nb,'nap2nb',6,2]
     [in0.claimsts,'claimsts',3,3]
     [in0.cardholder,'cardholder',1,1]
     [in0.nafspp,'nafspp',1,1]
     [in0.naoinb,'naoinb',3,1]
     [in0.memberid,'memberid',2,1]
     [in0.carrierid,'carrierid',3,3]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.naven2,'naven2',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
     [in0.groupid,'groupid',4,2]
     [in0.naunoc,'naunoc',1,1]
     [in0.groupnbr,'groupnbr',2,2]
     [in0.naqghz,'naqghz',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_f_oth_pyr_claim_nbr = fail_if_error(in0.nap2nb);
let decimal("\x01",0) c_f_oth_pyr_claim_seq_nbr = fail_if_error(if(in0.naoinb<0) in0.naoinb else (1000-in0.naoinb));
let decimal("\x01",0) c_f_oth_pyr_cob_seq_nbr = fail_if_error(in0.naven2);
let decimal("\x01",0) c_f_oth_pyr_cop_seq_nbr = fail_if_error(in0.nafspp);
let string("\x01",charset="iso-8859-15", maximum_length=2) c_f_oth_pyr_cop_oth_pyr_id_qlfr = fail_if_error(in0.naunoc);
let decimal("\x01".2, maximum_length=13, sign_reserved) c_f_oth_pyr_cop_oth_pyr_rsp_amt = fail_if_error(in0.naqghz);
let decimal("\x01",0) c_f_oth_pyr_src_env_sk = fail_if_error(in0.dxf_src_sys_id);
let decimal("\x01",0) c_f_oth_pyr_cag_sk = -1;
let decimal("\x01",0) c_f_oth_pyr_mbr_sk = -1;
let decimal("\x01",0) c_f_oth_pyr_carrier_sk = -1;
let decimal("\x01",0) c_f_oth_pyr_claim_nbr_encrp;
let decimal("\x01",0) c_f_oth_pyr_sec_flg = 0;
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cag_carrier_id = fail_if_error(in0.carrierid);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_cag_account_id = fail_if_error(in0.accountid);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cag_employer_group_id = fail_if_error((if (sql_and((string_lrtrim(in0.claimsts)!='R'),is_blank(in0.groupid)))
   in0.groupnbr
 else
   in0.groupid));
let string("\x01",charset="iso-8859-15", maximum_length=30) d_carrier_carrier_id = fail_if_error(in0.carrierid);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_member_carrier_id = fail_if_error(in0.carrierid);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_member_account_id = fail_if_error(in0.accountid);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_member_employer_group_id = fail_if_error((if (sql_and((string_lrtrim(in0.claimsts)!='R'),is_blank(in0.groupid)))
   in0.groupnbr
 else
   in0.groupid));
let string("\x01",charset="iso-8859-15", maximum_length=20) d_member_mbr_id = fail_if_error((if (sql_and((string_lrtrim(in0.claimsts)!='R'),is_blank(in0.memberid)))
   in0.cardholder
 else
   in0.memberid));



/*   Default value   */
c_f_oth_pyr_claim_nbr_encrp=fail_if_error(if(in0.nap2nb>0) (decimal(''))(string_concat(string_substring((decimal(''))in0.nap2nb,1,2),ff3_encrypt_idwdata((decimal(''))in0.nap2nb))) 
else  (decimal(''))(string_concat(string_substring((decimal(''))in0.nap2nb,1,3),ff3_encrypt_idwdata(decimal_strip(math_abs((decimal(''))in0.nap2nb))))));

  out0.c_f_oth_pyr.claim_nbr::c_f_oth_pyr_claim_nbr;
  out0.c_f_oth_pyr.claim_seq_nbr::c_f_oth_pyr_claim_seq_nbr;
  out0.c_f_oth_pyr.cob_seq_nbr::c_f_oth_pyr_cob_seq_nbr;
  out0.c_f_oth_pyr.cop_seq_nbr::c_f_oth_pyr_cop_seq_nbr;
  out0.c_f_oth_pyr.cop_oth_pyr_id_qlfr::c_f_oth_pyr_cop_oth_pyr_id_qlfr;
  out0.c_f_oth_pyr.cop_oth_pyr_rsp_amt::c_f_oth_pyr_cop_oth_pyr_rsp_amt;
  out0.c_f_oth_pyr.src_env_sk::c_f_oth_pyr_src_env_sk;
  out0.c_f_oth_pyr.cag_sk::c_f_oth_pyr_cag_sk;
  out0.c_f_oth_pyr.mbr_sk::c_f_oth_pyr_mbr_sk;
  out0.c_f_oth_pyr.carrier_sk::c_f_oth_pyr_carrier_sk;
  out0.c_f_oth_pyr.claim_nbr_encrp::c_f_oth_pyr_claim_nbr_encrp;
  out0.c_f_oth_pyr.sec_flg::c_f_oth_pyr_sec_flg;
  out0.d_cag.carrier_id::d_cag_carrier_id;
  out0.d_cag.account_id::d_cag_account_id;
  out0.d_cag.employer_group_id::d_cag_employer_group_id;
  out0.d_carrier.carrier_id::d_carrier_carrier_id;
  out0.d_member.carrier_id::d_member_carrier_id;
  out0.d_member.account_id::d_member_account_id;
  out0.d_member.employer_group_id::d_member_employer_group_id;
  out0.d_member.mbr_id::d_member_mbr_id;
  out0.*::in0.*;
end;
