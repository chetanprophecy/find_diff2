/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5b3e233f_c477_0 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.d_diag_gpi.diag_gpi_seq_nbr,[transform],in0.aksgbr]
  [out0.d_diag_gpi.diag_gpi_list,[passthrough],in0.akffvf]
  [out0.d_diag_gpi.src_env_sk,[passthrough],in0.dxf_src_sys_id]
  [out0.d_diag_gpi.src_add_pgm_nm,[passthrough],in0.akalvn]
  [out0.d_diag_gpi.src_chg_pgm_nm,[passthrough],in0.akaevn]
  [out0.d_diag_gpi.from_dt,[transform],in0.akqncf]
  [out0.d_diag_gpi.src_chg_dt,[transform],in0.akbmdt]
  [out0.d_diag_gpi.tier_ovrd,[passthrough],in0.aksxiw]
  [out0.d_diag_gpi.src_add_dt,[transform],in0.akc2dt]
  [out0.d_diag_gpi.gpi_id,[passthrough],in0.akfovf]
  [out0.d_diag_gpi.drug_stat,[passthrough],in0.akwcas]
  [out0.d_diag_gpi.gpi_desc,[passthrough],in0.akt0iw]
  [out0.d_diag_gpi.diag_gpi_stat,[passthrough],in0.akwdas]
  [out0.d_diag_gpi.thru_dt,[transform],in0.akqocf]
  [out0.d_diag_gpi.diag_gpi_sk,[transform],]
  [out0.d_diag_gpi.src_chg_tm,[transform],in0.akabtm]
  [out0.d_diag_gpi.src_add_tm,[transform],in0.akadtm]
  [out0.d_diag_gpi.src_add_user_nm,[passthrough],in0.akakvn]
  [out0.d_diag_gpi.src_chg_user_nm,[passthrough],in0.akadvn]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.d_diag_gpi.diag_gpi_seq_nbr,'d_diag_gpi.diag_gpi_seq_nbr',1,0]
     [out0.d_diag_gpi.diag_gpi_list,'d_diag_gpi.diag_gpi_list',1,0]
     [out0.d_diag_gpi.src_env_sk,'d_diag_gpi.src_env_sk',1,0]
     [out0.d_diag_gpi.src_add_pgm_nm,'d_diag_gpi.src_add_pgm_nm',1,0]
     [out0.d_diag_gpi.src_chg_pgm_nm,'d_diag_gpi.src_chg_pgm_nm',1,0]
     [out0.d_diag_gpi.from_dt,'d_diag_gpi.from_dt',1,0]
     [out0.d_diag_gpi.src_chg_dt,'d_diag_gpi.src_chg_dt',1,0]
     [out0.d_diag_gpi.tier_ovrd,'d_diag_gpi.tier_ovrd',1,0]
     [out0.d_diag_gpi.src_add_dt,'d_diag_gpi.src_add_dt',1,0]
     [out0.d_diag_gpi.gpi_id,'d_diag_gpi.gpi_id',1,0]
     [out0.d_diag_gpi.drug_stat,'d_diag_gpi.drug_stat',1,0]
     [out0.d_diag_gpi.gpi_desc,'d_diag_gpi.gpi_desc',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.d_diag_gpi.diag_gpi_stat,'d_diag_gpi.diag_gpi_stat',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.d_diag_gpi.thru_dt,'d_diag_gpi.thru_dt',1,0]
     [out0.d_diag_gpi.diag_gpi_sk,'d_diag_gpi.diag_gpi_sk',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.d_diag_gpi.src_chg_tm,'d_diag_gpi.src_chg_tm',1,0]
     [out0.d_diag_gpi.src_add_tm,'d_diag_gpi.src_add_tm',1,0]
     [out0.d_diag_gpi.src_add_user_nm,'d_diag_gpi.src_add_user_nm',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.d_diag_gpi.src_chg_user_nm,'d_diag_gpi.src_chg_user_nm',1,0]
  ]
  impacts:
  [
     [in0.akqocf,'akqocf',1,1]
     [in0.akt0iw,'akt0iw',1,1]
     [in0.akalvn,'akalvn',1,1]
     [in0.aksxiw,'aksxiw',1,1]
     [in0.akadtm,'akadtm',1,1]
     [in0.akakvn,'akakvn',1,1]
     [in0.akadvn,'akadvn',1,1]
     [in0.akaevn,'akaevn',1,1]
     [in0.akbmdt,'akbmdt',1,1]
     [in0.akc2dt,'akc2dt',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.aksgbr,'aksgbr',3,1]
     [in0.akabtm,'akabtm',1,1]
     [in0.akqncf,'akqncf',1,1]
     [in0.akfovf,'akfovf',1,1]
     [in0.akwdas,'akwdas',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
     [in0.akwcas,'akwcas',1,1]
     [in0.akffvf,'akffvf',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) d_diag_gpi_diag_gpi_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=10) d_diag_gpi_diag_gpi_list = fail_if_error(in0.akffvf);
let string("\x01",charset="iso-8859-15", maximum_length=14) d_diag_gpi_gpi_id = fail_if_error(in0.akfovf);
let decimal("\x01",0) d_diag_gpi_diag_gpi_seq_nbr = fail_if_error(if(in0.aksgbr <0) in0.aksgbr else (100000-in0.aksgbr));
let string("\x01",charset="iso-8859-15", maximum_length=60) d_diag_gpi_gpi_desc = fail_if_error(in0.akt0iw);
let string("\x01",charset="iso-8859-15", maximum_length=1) d_diag_gpi_drug_stat = fail_if_error(in0.akwcas);
let string("\x01",charset="iso-8859-15", maximum_length=2) d_diag_gpi_tier_ovrd = fail_if_error(in0.aksxiw);
let date("YYYYMMDD")("\x01") d_diag_gpi_from_dt;
let date("YYYYMMDD")("\x01") d_diag_gpi_thru_dt;
let string("\x01",charset="iso-8859-15", maximum_length=1) d_diag_gpi_diag_gpi_stat = fail_if_error(in0.akwdas);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_diag_gpi_src_add_user_nm = fail_if_error(in0.akakvn);
let date("YYYYMMDD")("\x01") d_diag_gpi_src_add_dt;
let datetime("HH24:MI:SS.NNNNNN")("\x01") d_diag_gpi_src_add_tm;
let string("\x01",charset="iso-8859-15", maximum_length=10) d_diag_gpi_src_add_pgm_nm = fail_if_error(in0.akalvn);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_diag_gpi_src_chg_user_nm = fail_if_error(in0.akadvn);
let date("YYYYMMDD")("\x01") d_diag_gpi_src_chg_dt;
let datetime("HH24:MI:SS.NNNNNN")("\x01") d_diag_gpi_src_chg_tm;
let string("\x01",charset="iso-8859-15", maximum_length=10) d_diag_gpi_src_chg_pgm_nm = fail_if_error(in0.akaevn);
let decimal("\x01",0) d_diag_gpi_src_env_sk = fail_if_error(in0.dxf_src_sys_id);



/*   Default value   */
d_diag_gpi_from_dt=fail_if_error(date_check(in0.akqncf));

/*   Default value   */
d_diag_gpi_src_chg_dt=fail_if_error(date_check(in0.akbmdt));

/*   Default value   */
d_diag_gpi_src_add_dt=fail_if_error(date_check(in0.akc2dt));

/*   Default value   */
d_diag_gpi_thru_dt=fail_if_error(date_check(in0.akqocf));

/*   Default value   */
d_diag_gpi_src_chg_tm=fail_if_error(time_check(in0.akabtm));

/*   Default value   */
d_diag_gpi_src_add_tm=fail_if_error(time_check(in0.akadtm));

  out0.d_diag_gpi.diag_gpi_sk::d_diag_gpi_diag_gpi_sk;
  out0.d_diag_gpi.diag_gpi_list::d_diag_gpi_diag_gpi_list;
  out0.d_diag_gpi.gpi_id::d_diag_gpi_gpi_id;
  out0.d_diag_gpi.diag_gpi_seq_nbr::d_diag_gpi_diag_gpi_seq_nbr;
  out0.d_diag_gpi.gpi_desc::d_diag_gpi_gpi_desc;
  out0.d_diag_gpi.drug_stat::d_diag_gpi_drug_stat;
  out0.d_diag_gpi.tier_ovrd::d_diag_gpi_tier_ovrd;
  out0.d_diag_gpi.from_dt::d_diag_gpi_from_dt;
  out0.d_diag_gpi.thru_dt::d_diag_gpi_thru_dt;
  out0.d_diag_gpi.diag_gpi_stat::d_diag_gpi_diag_gpi_stat;
  out0.d_diag_gpi.src_add_user_nm::d_diag_gpi_src_add_user_nm;
  out0.d_diag_gpi.src_add_dt::d_diag_gpi_src_add_dt;
  out0.d_diag_gpi.src_add_tm::d_diag_gpi_src_add_tm;
  out0.d_diag_gpi.src_add_pgm_nm::d_diag_gpi_src_add_pgm_nm;
  out0.d_diag_gpi.src_chg_user_nm::d_diag_gpi_src_chg_user_nm;
  out0.d_diag_gpi.src_chg_dt::d_diag_gpi_src_chg_dt;
  out0.d_diag_gpi.src_chg_tm::d_diag_gpi_src_chg_tm;
  out0.d_diag_gpi.src_chg_pgm_nm::d_diag_gpi_src_chg_pgm_nm;
  out0.d_diag_gpi.src_env_sk::d_diag_gpi_src_env_sk;
  out0.*::in0.*;

end;
