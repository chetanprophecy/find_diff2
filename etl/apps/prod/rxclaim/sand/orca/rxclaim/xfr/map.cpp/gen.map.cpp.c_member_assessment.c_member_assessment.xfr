/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_589b2703_6f3c_1 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_mem_assmnt.cpp_member_flag_hist_sk,[transform],in0.member_flag_hist_id,
     'lookup("c_member_flag_hist").dxf_sk']
  [out0.c_mem_assmnt.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_mem_assmnt.cpp_member_sk,[transform],in0.member_id,
     in0.emplyr_group_id,
     in0.acct_id,
     in0.carrier_id,
     'lookup("c_member").dxf_sk']
  [out0.c_mem_assmnt.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_mem_assmnt.src_env_sk,[transform],]
  [out0.c_mem_assmnt.cpp_assessment_type_sk,[transform],in0.assessment_type_id,
     'lookup("c_assessment_type").dxf_sk']
  [out0.c_mem_assmnt.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_mem_assmnt.cpp_member_assessment_sk,[transform],]
  [out0.c_mem_assmnt.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_mem_assmnt.case_id,[passthrough],in0.case_id]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_mem_assmnt.carrier_id,'c_mem_assmnt.carrier_id',1,0]
     [out0.c_mem_assmnt.cpp_member_flag_hist_sk,'c_mem_assmnt.cpp_member_flag_hist_sk',1,0]
     [out0.c_mem_assmnt.cpp_updated_by,'c_mem_assmnt.cpp_updated_by',1,0]
     [out0.c_mem_assmnt.cpp_member_sk,'c_mem_assmnt.cpp_member_sk',1,0]
     [out0.c_mem_assmnt.cli_member_id,'c_mem_assmnt.cli_member_id',1,0]
     [out0.c_mem_assmnt.cpp_created_by,'c_mem_assmnt.cpp_created_by',1,0]
     [out0.c_mem_assmnt.cli_carrier_id,'c_mem_assmnt.cli_carrier_id',1,0]
     [out0.c_mem_assmnt.src_env_sk,'c_mem_assmnt.src_env_sk',1,0]
     [out0.c_mem_assmnt.assessment_type_id,'c_mem_assmnt.assessment_type_id',1,0]
     [out0.c_mem_assmnt.member_assessment_id,'c_mem_assmnt.member_assessment_id',1,0]
     [out0.c_mem_assmnt.cpp_assessment_type_sk,'c_mem_assmnt.cpp_assessment_type_sk',1,0]
     [out0.c_mem_assmnt.member_flag_hist_id,'c_mem_assmnt.member_flag_hist_id',1,0]
     [out0.c_mem_assmnt.sequence_num,'c_mem_assmnt.sequence_num',1,0]
     [out0.c_mem_assmnt.assessment_dt,'c_mem_assmnt.assessment_dt',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_mem_assmnt.emplyr_group_id,'c_mem_assmnt.emplyr_group_id',1,0]
     [out0.c_mem_assmnt.src_env_id,'c_mem_assmnt.src_env_id',1,0]
     [out0.c_mem_assmnt.cli_acct_id,'c_mem_assmnt.cli_acct_id',1,0]
     [out0.c_mem_assmnt.cli_src_env_id,'c_mem_assmnt.cli_src_env_id',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_mem_assmnt.member_id,'c_mem_assmnt.member_id',1,0]
     [out0.c_mem_assmnt.cpp_create_ts,'c_mem_assmnt.cpp_create_ts',1,0]
     [out0.c_mem_assmnt.cpp_member_assessment_sk,'c_mem_assmnt.cpp_member_assessment_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_mem_assmnt.cpp_update_ts,'c_mem_assmnt.cpp_update_ts',1,0]
     [out0.c_mem_assmnt.case_id,'c_mem_assmnt.case_id',1,0]
     [out0.c_mem_assmnt.acct_id,'c_mem_assmnt.acct_id',1,0]
     [out0.c_mem_assmnt.cli_emplyr_group_id,'c_mem_assmnt.cli_emplyr_group_id',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.member_flag_hist_id,'member_flag_hist_id',2,2]
     [in0.member_id,'member_id',2,2]
     ['lookup("c_member_flag_hist").dxf_sk','dxf_sk',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.cli_src_env_id,'cli_src_env_id',1,1]
     [in0.sequence_num,'sequence_num',1,1]
     [in0.carrier_id,'carrier_id',2,2]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.cli_acct_id,'cli_acct_id',1,1]
     [in0.case_id,'case_id',1,1]
     [in0.cli_emplyr_group_id,'cli_emplyr_group_id',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.assessment_dt,'assessment_dt',1,1]
     [in0.emplyr_group_id,'emplyr_group_id',2,2]
     [in0.cli_member_id,'cli_member_id',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.member_assessment_id,'member_assessment_id',1,1]
     [in0.acct_id,'acct_id',2,2]
     [in0.cli_carrier_id,'cli_carrier_id',1,1]
     [in0.assessment_type_id,'assessment_type_id',2,2]
     ['lookup("c_assessment_type").dxf_sk','dxf_sk',1,1]
     [in0.src_env_id,'src_env_id',1,1]
     ['lookup("c_member").dxf_sk','dxf_sk',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_mem_assmnt_cpp_member_assessment_sk = -1;
let utf8 string("\x01", maximum_length=60) c_mem_assmnt_member_assessment_id = fail_if_error(in0.member_assessment_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_assmnt_cli_src_env_id = fail_if_error(in0.cli_src_env_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_assmnt_cli_carrier_id = fail_if_error(in0.cli_carrier_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_assmnt_cli_acct_id = fail_if_error(in0.cli_acct_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_assmnt_cli_emplyr_group_id = fail_if_error(in0.cli_emplyr_group_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_assmnt_cli_member_id = fail_if_error(in0.cli_member_id);
let string("\x01",charset="iso-8859-15", maximum_length=4) c_mem_assmnt_src_env_id = fail_if_error(in0.src_env_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_mem_assmnt_carrier_id = fail_if_error(in0.carrier_id);
let string("\x01",charset="iso-8859-15", maximum_length=40) c_mem_assmnt_acct_id = fail_if_error(in0.acct_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_mem_assmnt_emplyr_group_id = fail_if_error(in0.emplyr_group_id);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_mem_assmnt_member_id = fail_if_error(in0.member_id);
let decimal("\x01",0) c_mem_assmnt_cpp_member_sk;
let utf8 string("\x01", maximum_length=60) c_mem_assmnt_case_id = fail_if_error(in0.case_id);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_assmnt_assessment_dt = fail_if_error(in0.assessment_dt);
let utf8 string("\x01", maximum_length=60) c_mem_assmnt_assessment_type_id = fail_if_error(in0.assessment_type_id);
let decimal("\x01",0) c_mem_assmnt_cpp_assessment_type_sk;
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_assmnt_sequence_num = fail_if_error(in0.sequence_num);
let utf8 string("\x01", maximum_length=128) c_mem_assmnt_member_flag_hist_id = fail_if_error(in0.member_flag_hist_id);
let decimal("\x01",0) c_mem_assmnt_cpp_member_flag_hist_sk;
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_assmnt_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_mem_assmnt_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_assmnt_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_mem_assmnt_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_mem_assmnt_src_env_sk = 710;



/*   Default value   */
c_mem_assmnt_cpp_member_flag_hist_sk=fail_if_error(first_defined(lookup("c_member_flag_hist",in0.member_flag_hist_id).dxf_sk,-1));

/*   Default value   */
c_mem_assmnt_cpp_member_sk=fail_if_error(first_defined(lookup("c_member",in0.carrier_id,in0.acct_id,in0.emplyr_group_id,in0.member_id).dxf_sk,-1));

/*   Default value   */
c_mem_assmnt_cpp_assessment_type_sk=fail_if_error(first_defined(lookup("c_assessment_type",in0.assessment_type_id).dxf_sk,-1));

  out0.c_mem_assmnt.cpp_member_assessment_sk::c_mem_assmnt_cpp_member_assessment_sk;
  out0.c_mem_assmnt.member_assessment_id::c_mem_assmnt_member_assessment_id;
  out0.c_mem_assmnt.cli_src_env_id::c_mem_assmnt_cli_src_env_id;
  out0.c_mem_assmnt.cli_carrier_id::c_mem_assmnt_cli_carrier_id;
  out0.c_mem_assmnt.cli_acct_id::c_mem_assmnt_cli_acct_id;
  out0.c_mem_assmnt.cli_emplyr_group_id::c_mem_assmnt_cli_emplyr_group_id;
  out0.c_mem_assmnt.cli_member_id::c_mem_assmnt_cli_member_id;
  out0.c_mem_assmnt.src_env_id::c_mem_assmnt_src_env_id;
  out0.c_mem_assmnt.carrier_id::c_mem_assmnt_carrier_id;
  out0.c_mem_assmnt.acct_id::c_mem_assmnt_acct_id;
  out0.c_mem_assmnt.emplyr_group_id::c_mem_assmnt_emplyr_group_id;
  out0.c_mem_assmnt.member_id::c_mem_assmnt_member_id;
  out0.c_mem_assmnt.cpp_member_sk::c_mem_assmnt_cpp_member_sk;
  out0.c_mem_assmnt.case_id::c_mem_assmnt_case_id;
  out0.c_mem_assmnt.assessment_dt::c_mem_assmnt_assessment_dt;
  out0.c_mem_assmnt.assessment_type_id::c_mem_assmnt_assessment_type_id;
  out0.c_mem_assmnt.cpp_assessment_type_sk::c_mem_assmnt_cpp_assessment_type_sk;
  out0.c_mem_assmnt.sequence_num::c_mem_assmnt_sequence_num;
  out0.c_mem_assmnt.member_flag_hist_id::c_mem_assmnt_member_flag_hist_id;
  out0.c_mem_assmnt.cpp_member_flag_hist_sk::c_mem_assmnt_cpp_member_flag_hist_sk;
  out0.c_mem_assmnt.cpp_update_ts::c_mem_assmnt_cpp_update_ts;
  out0.c_mem_assmnt.cpp_updated_by::c_mem_assmnt_cpp_updated_by;
  out0.c_mem_assmnt.cpp_create_ts::c_mem_assmnt_cpp_create_ts;
  out0.c_mem_assmnt.cpp_created_by::c_mem_assmnt_cpp_created_by;
  out0.c_mem_assmnt.src_env_sk::c_mem_assmnt_src_env_sk;
  out0.*::in0.*;

end;
