/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@
dependency_analysis:
[
  [out0.rcrcmp.rcm_addtl_msg_info_contd,[passthrough],in0.e8k4pp]
  [out0.rcrcmp.claim_seq_nbr,[passthrough],in0.e8oinb]
  [out0.rcrcmp.claim_nbr,[passthrough],in0.e8p2nb]
  [out0.rcrcmp.rm_msg,[passthrough],in0.e8qytx]
  [out0.rcrcmp.src_env_sk,[passthrough],in0.dxf_src_sys_id]
  [out0.rcrcmp.rcm_seq_nbr,[passthrough],in0.e8pqnb]
  [out0.rcrcmp.rcm_msg_cd,[passthrough],in0.e8m3hf]
  [out0.rcrcmp.rcm_addtl_msg_info_qlfr,[passthrough],in0.e8jkod]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.rcrcmp.rcm_addtl_msg_info_contd,'rcrcmp.rcm_addtl_msg_info_contd',1,0]
     [out0.rcrcmp.claim_seq_nbr,'rcrcmp.claim_seq_nbr',1,0]
     [out0.rcrcmp.claim_nbr,'rcrcmp.claim_nbr',1,0]
     [out0.rcrcmp.rm_msg,'rcrcmp.rm_msg',1,0]
     [out0.rcrcmp.src_env_sk,'rcrcmp.src_env_sk',1,0]
     [out0.rcrcmp.rcm_seq_nbr,'rcrcmp.rcm_seq_nbr',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.rcrcmp.rcm_msg_cd,'rcrcmp.rcm_msg_cd',1,0]
     [out0.rcrcmp.rcm_addtl_msg_info_qlfr,'rcrcmp.rcm_addtl_msg_info_qlfr',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.e8m3hf,'e8m3hf',1,1]
     [in0.e8pqnb,'e8pqnb',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.e8k4pp,'e8k4pp',1,1]
     [in0.e8qytx,'e8qytx',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
     [in0.e8p2nb,'e8p2nb',1,1]
     [in0.e8jkod,'e8jkod',1,1]
     [in0.e8oinb,'e8oinb',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01") rcrcmp_claim_nbr = fail_if_error(in0.e8p2nb);
let decimal("\x01") rcrcmp_claim_seq_nbr = fail_if_error(in0.e8oinb);
let decimal("\x01") rcrcmp_rcm_seq_nbr = fail_if_error(in0.e8pqnb);
let string("\x01", maximum_length=2) rcrcmp_rcm_addtl_msg_info_qlfr = fail_if_error(in0.e8jkod);
let string("\x01", maximum_length=40) rcrcmp_rm_msg = fail_if_error(in0.e8qytx);
let string("\x01", maximum_length=1) rcrcmp_rcm_addtl_msg_info_contd = fail_if_error(in0.e8k4pp);
let string("\x01", maximum_length=10) rcrcmp_rcm_msg_cd = fail_if_error(in0.e8m3hf);
let decimal("\x01",0) rcrcmp_src_env_sk = fail_if_error(in0.dxf_src_sys_id);



  out0.rcrcmp.claim_nbr::rcrcmp_claim_nbr;
  out0.rcrcmp.claim_seq_nbr::rcrcmp_claim_seq_nbr;
  out0.rcrcmp.rcm_seq_nbr::rcrcmp_rcm_seq_nbr;
  out0.rcrcmp.rcm_addtl_msg_info_qlfr::rcrcmp_rcm_addtl_msg_info_qlfr;
  out0.rcrcmp.rm_msg::rcrcmp_rm_msg;
  out0.rcrcmp.rcm_addtl_msg_info_contd::rcrcmp_rcm_addtl_msg_info_contd;
  out0.rcrcmp.rcm_msg_cd::rcrcmp_rcm_msg_cd;
  out0.rcrcmp.src_env_sk::rcrcmp_src_env_sk;
  out0.*::in0.*;

end;
