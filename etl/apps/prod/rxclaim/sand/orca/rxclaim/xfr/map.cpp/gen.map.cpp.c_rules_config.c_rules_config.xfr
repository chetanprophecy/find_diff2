/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5811f31e_4aa5_0 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_ruls_cnfg.src_env_sk,[transform],]
  [out0.c_ruls_cnfg.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_ruls_cnfg.template_type_cd,[passthrough],in0.template_type_cd]
  [out0.c_ruls_cnfg.cpp_rules_config_sk,[transform],]
  [out0.c_ruls_cnfg.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_ruls_cnfg.config_descr,[passthrough],in0.config_descr]
  [out0.c_ruls_cnfg.cpp_template_type_sk,[transform],in0.template_type_cd,
     'lookup("c_rules_template").dxf_sk']
  [out0.c_ruls_cnfg.config_name,[passthrough],in0.config_name]
  [out0.c_ruls_cnfg.app_config_name,[passthrough],in0.app_config_name]
  [out0.c_ruls_cnfg.rules_config_id,[passthrough],in0.rules_config_id]
  [out0.c_ruls_cnfg.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_ruls_cnfg.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_ruls_cnfg.config_type_cd,[passthrough],in0.config_type_cd]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_ruls_cnfg.src_env_sk,'c_ruls_cnfg.src_env_sk',1,0]
     [out0.c_ruls_cnfg.cpp_updated_by,'c_ruls_cnfg.cpp_updated_by',1,0]
     [out0.c_ruls_cnfg.template_type_cd,'c_ruls_cnfg.template_type_cd',1,0]
     [out0.c_ruls_cnfg.cpp_rules_config_sk,'c_ruls_cnfg.cpp_rules_config_sk',1,0]
     [out0.c_ruls_cnfg.cpp_created_by,'c_ruls_cnfg.cpp_created_by',1,0]
     [out0.c_ruls_cnfg.config_descr,'c_ruls_cnfg.config_descr',1,0]
     [out0.c_ruls_cnfg.cpp_template_type_sk,'c_ruls_cnfg.cpp_template_type_sk',1,0]
     [out0.c_ruls_cnfg.config_name,'c_ruls_cnfg.config_name',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_ruls_cnfg.app_config_name,'c_ruls_cnfg.app_config_name',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_ruls_cnfg.rules_config_id,'c_ruls_cnfg.rules_config_id',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_ruls_cnfg.cpp_update_ts,'c_ruls_cnfg.cpp_update_ts',1,0]
     [out0.c_ruls_cnfg.cpp_create_ts,'c_ruls_cnfg.cpp_create_ts',1,0]
     [out0.c_ruls_cnfg.config_type_cd,'c_ruls_cnfg.config_type_cd',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     ['lookup("c_rules_template").dxf_sk','dxf_sk',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.template_type_cd,'template_type_cd',2,2]
     [in0.app_config_name,'app_config_name',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rules_config_id,'rules_config_id',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.config_name,'config_name',1,1]
     [in0.config_type_cd,'config_type_cd',1,1]
     [in0.config_descr,'config_descr',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_ruls_cnfg_cpp_rules_config_sk = -1;
let utf8 string("\x01", maximum_length=100) c_ruls_cnfg_rules_config_id = fail_if_error(in0.rules_config_id);
let utf8 string("\x01", maximum_length=100) c_ruls_cnfg_config_type_cd = fail_if_error(in0.config_type_cd);
let utf8 string("\x01", maximum_length=800) c_ruls_cnfg_config_name = fail_if_error(in0.config_name);
let utf8 string("\x01", maximum_length=1600) c_ruls_cnfg_config_descr = fail_if_error(in0.config_descr);
let utf8 string("\x01", maximum_length=100) c_ruls_cnfg_template_type_cd = fail_if_error(in0.template_type_cd);
let decimal("\x01",0) c_ruls_cnfg_cpp_template_type_sk;
let utf8 string("\x01", maximum_length=800) c_ruls_cnfg_app_config_name = fail_if_error(in0.app_config_name);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_ruls_cnfg_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_ruls_cnfg_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_ruls_cnfg_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_ruls_cnfg_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_ruls_cnfg_src_env_sk = 710;



/*   Default value   */
c_ruls_cnfg_cpp_template_type_sk=fail_if_error(first_defined(lookup("c_rules_template",in0.template_type_cd).dxf_sk,-1));

  out0.c_ruls_cnfg.cpp_rules_config_sk::c_ruls_cnfg_cpp_rules_config_sk;
  out0.c_ruls_cnfg.rules_config_id::c_ruls_cnfg_rules_config_id;
  out0.c_ruls_cnfg.config_type_cd::c_ruls_cnfg_config_type_cd;
  out0.c_ruls_cnfg.config_name::c_ruls_cnfg_config_name;
  out0.c_ruls_cnfg.config_descr::c_ruls_cnfg_config_descr;
  out0.c_ruls_cnfg.template_type_cd::c_ruls_cnfg_template_type_cd;
  out0.c_ruls_cnfg.cpp_template_type_sk::c_ruls_cnfg_cpp_template_type_sk;
  out0.c_ruls_cnfg.app_config_name::c_ruls_cnfg_app_config_name;
  out0.c_ruls_cnfg.cpp_update_ts::c_ruls_cnfg_cpp_update_ts;
  out0.c_ruls_cnfg.cpp_updated_by::c_ruls_cnfg_cpp_updated_by;
  out0.c_ruls_cnfg.cpp_create_ts::c_ruls_cnfg_cpp_create_ts;
  out0.c_ruls_cnfg.cpp_created_by::c_ruls_cnfg_cpp_created_by;
  out0.c_ruls_cnfg.src_env_sk::c_ruls_cnfg_src_env_sk;
  out0.*::in0.*;

end;
