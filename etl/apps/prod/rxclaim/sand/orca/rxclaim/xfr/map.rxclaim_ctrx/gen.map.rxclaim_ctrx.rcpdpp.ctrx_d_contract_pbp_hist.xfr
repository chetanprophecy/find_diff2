/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_97d014ac_577f862c_abf3_0 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.pbp_hist.contract_no,[passthrough],in0.mpvwhc]
  [out0.pbp_hist.employer_group_id,[passthrough],in0.mpv1hc]
  [out0.pbp_hist.plan_cd,[passthrough],in0.mpaecd]
  [out0.cag.account_id,[passthrough],in0.mpv0hc]
  [out0.pbp_hist.pdp_status_cd,[passthrough],in0.mpouh9]
  [out0.cont_pbp.employer_group_id,[passthrough],in0.mpv1hc]
  [out0.cont_pbp.plan_cd,[passthrough],in0.mpaecd]
  [out0.pbp_hist.pdp_from_dt,[transform],in0.mpnhhg]
  [out0.pbp_hist.plan_eff_dt,[transform],in0.mpakdt]
  [out0.pbp_hist.pbp_id,[passthrough],in0.mpvyhc]
  [out0.pbp_hist.contract_pbp_sk,[transform],]
  [out0.pbp_hist.sequence_no,[passthrough],in0.mpdahs]
  [out0.pbp_hist.cag_sk,[transform],]
  [out0.cont_pbp.carrier_id,[passthrough],in0.mpaacd]
  [out0.pbp_hist.contract_pbp_hist_sk,[transform],]
  [out0.cont_pbp.account_id,[passthrough],in0.mpv0hc]
  [out0.pbp_hist.src_env_sk,[passthrough],in0.rxt_src_envrt_id]
  [out0.cag.employer_group_id,[passthrough],in0.mpv1hc]
  [out0.pbp_hist.pdp_thru_dt,[transform],in0.mpnihg]
  [out0.pbp_hist.account_id,[passthrough],in0.mpv0hc]
  [out0.cont_pbp.sequence_no,[passthrough],in0.mpdahs]
  [out0.cag.carrier_id,[passthrough],in0.mpaacd]
  [out0.pbp_hist.carrier_id,[passthrough],in0.mpaacd]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.pbp_hist.contract_no,'pbp_hist.contract_no',1,0]
     [out0.pbp_hist.employer_group_id,'pbp_hist.employer_group_id',1,0]
     [out0.pbp_hist.plan_cd,'pbp_hist.plan_cd',1,0]
     [out0.cag.account_id,'cag.account_id',1,0]
     [out0.pbp_hist.pdp_status_cd,'pbp_hist.pdp_status_cd',1,0]
     [out0.cont_pbp.employer_group_id,'cont_pbp.employer_group_id',1,0]
     [out0.cont_pbp.plan_cd,'cont_pbp.plan_cd',1,0]
     [out0.pbp_hist.pdp_from_dt,'pbp_hist.pdp_from_dt',3,2]
     [out0.pbp_hist.plan_eff_dt,'pbp_hist.plan_eff_dt',3,2]
     [out0.pbp_hist.pbp_id,'pbp_hist.pbp_id',1,0]
     [out0.pbp_hist.contract_pbp_sk,'pbp_hist.contract_pbp_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.pbp_hist.sequence_no,'pbp_hist.sequence_no',1,0]
     [out0.pbp_hist.cag_sk,'pbp_hist.cag_sk',1,0]
     [out0.cont_pbp.carrier_id,'cont_pbp.carrier_id',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.pbp_hist.contract_pbp_hist_sk,'pbp_hist.contract_pbp_hist_sk',1,0]
     [out0.cont_pbp.account_id,'cont_pbp.account_id',1,0]
     [out0.pbp_hist.src_env_sk,'pbp_hist.src_env_sk',1,0]
     [out0.cag.employer_group_id,'cag.employer_group_id',1,0]
     [out0.pbp_hist.pdp_thru_dt,'pbp_hist.pdp_thru_dt',3,2]
     [out0.pbp_hist.account_id,'pbp_hist.account_id',1,0]
     [out0.cont_pbp.sequence_no,'cont_pbp.sequence_no',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.cag.carrier_id,'cag.carrier_id',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.pbp_hist.carrier_id,'pbp_hist.carrier_id',1,0]
  ]
  impacts:
  [
     [in0.mpakdt,'mpakdt',5,3]
     [in0.mpouh9,'mpouh9',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.mpaacd,'mpaacd',3,3]
     [in0.mpnhhg,'mpnhhg',5,3]
     [in0.mpvyhc,'mpvyhc',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.mpv0hc,'mpv0hc',3,3]
     [in0.mpvwhc,'mpvwhc',1,1]
     [in0.mpdahs,'mpdahs',2,2]
     [in0.mpv1hc,'mpv1hc',3,3]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.mpaecd,'mpaecd',2,2]
     [in0.mpnihg,'mpnihg',5,3]
  ]
}
@*/

out0::reformat(in0)=
begin
let int bzt_1 = 0;
let int bzt_2 = 0;
let int bzt_3 = 0;
let unsigned integer(8) DXF_Source_Record_Count = fail_if_error(in0.dxf_src_rec_cnt);
let decimal("\x01",0) pbp_hist_contract_pbp_hist_sk = -1;
let decimal("\x01",0) pbp_hist_contract_pbp_sk = -1;
let decimal("\x01",0) pbp_hist_cag_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=30) pbp_hist_carrier_id = fail_if_error(in0.mpaacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) pbp_hist_account_id = fail_if_error(in0.mpv0hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) pbp_hist_employer_group_id = fail_if_error(in0.mpv1hc);
let string("\x01",charset="iso-8859-15", maximum_length=5) pbp_hist_contract_no = fail_if_error(in0.mpvwhc);
let string("\x01",charset="iso-8859-15", maximum_length=3) pbp_hist_pbp_id = fail_if_error(in0.mpvyhc);
let string("\x01",charset="iso-8859-15", maximum_length=10) pbp_hist_plan_cd = fail_if_error(in0.mpaecd);
let date("YYYYMMDD")("\x01") pbp_hist_pdp_from_dt;
let date("YYYYMMDD")("\x01") pbp_hist_pdp_thru_dt;
let decimal("\x01",0) pbp_hist_sequence_no = fail_if_error(in0.mpdahs);
let date("YYYYMMDD")("\x01") pbp_hist_plan_eff_dt;
let string("\x01",charset="iso-8859-15", maximum_length=1) pbp_hist_pdp_status_cd = fail_if_error(in0.mpouh9);
let decimal("\x01",0) pbp_hist_src_env_sk = fail_if_error(in0.rxt_src_envrt_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) cag_carrier_id = fail_if_error(in0.mpaacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) cag_account_id = fail_if_error(in0.mpv0hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) cag_employer_group_id = fail_if_error(in0.mpv1hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) cont_pbp_carrier_id = fail_if_error(in0.mpaacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) cont_pbp_account_id = fail_if_error(in0.mpv0hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) cont_pbp_employer_group_id = fail_if_error(in0.mpv1hc);
let string("\x01",charset="iso-8859-15", maximum_length=10) cont_pbp_plan_cd = fail_if_error(in0.mpaecd);
let decimal("\x01",0) cont_pbp_sequence_no = fail_if_error(in0.mpdahs);



/*   Rule:Compute pbp_hist.pdp_from_dt  (#1)   */
if(first_defined(fail_if_error(((length_of(in0.mpnhhg)) ==8) && ((is_valid(YYYYMMDD(in0.mpnhhg))) ==1)),0))begin
  bzt_1=1;
  pbp_hist_pdp_from_dt=YYYYMMDD(in0.mpnhhg);
end
else if(first_defined(fail_if_error(((length_of(in0.mpnhhg) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000 + in0.mpnhhg))) ==1)),0))begin
  bzt_1=1;
  pbp_hist_pdp_from_dt=YYYYMMDD(19000000 + in0.mpnhhg);
end

/*   Default value   */
if(!bzt_1)begin
  pbp_hist_pdp_from_dt=fail_if_error(low_date());
end

/*   Rule:Compute pbp_hist.pdp_thru_dt  (#2)   */
if(first_defined(fail_if_error(((length_of(in0.mpnihg)) ==8) && ((is_valid(YYYYMMDD(in0.mpnihg))) ==1)),0))begin
  bzt_2=1;
  pbp_hist_pdp_thru_dt=YYYYMMDD(in0.mpnihg);
end
else if(first_defined(fail_if_error(((length_of(in0.mpnihg) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000 + in0.mpnihg))) ==1)),0))begin
  bzt_2=1;
  pbp_hist_pdp_thru_dt=YYYYMMDD(19000000 + in0.mpnihg);
end

/*   Default value   */
if(!bzt_2)begin
  pbp_hist_pdp_thru_dt=fail_if_error(high_date());
end

/*   Rule:Compute pbp_hist.plan_eff_dt  (#3)   */
if(first_defined(fail_if_error(((length_of(in0.mpakdt)) ==8) && ((is_valid(YYYYMMDD(in0.mpakdt))) ==1)),0))begin
  bzt_3=1;
  pbp_hist_plan_eff_dt=YYYYMMDD(in0.mpakdt);
end
else if(first_defined(fail_if_error(((length_of(in0.mpakdt) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000 + in0.mpakdt))) ==1)),0))begin
  bzt_3=1;
  pbp_hist_plan_eff_dt=YYYYMMDD(19000000 + in0.mpakdt);
end

/*   Default value   */
if(!bzt_3)begin
  pbp_hist_plan_eff_dt=fail_if_error(low_date());
end

  out0.dxf_src_rec_cnt::DXF_Source_Record_Count;
  out0.pbp_hist.contract_pbp_hist_sk::pbp_hist_contract_pbp_hist_sk;
  out0.pbp_hist.contract_pbp_sk::pbp_hist_contract_pbp_sk;
  out0.pbp_hist.cag_sk::pbp_hist_cag_sk;
  out0.pbp_hist.carrier_id::pbp_hist_carrier_id;
  out0.pbp_hist.account_id::pbp_hist_account_id;
  out0.pbp_hist.employer_group_id::pbp_hist_employer_group_id;
  out0.pbp_hist.contract_no::pbp_hist_contract_no;
  out0.pbp_hist.pbp_id::pbp_hist_pbp_id;
  out0.pbp_hist.plan_cd::pbp_hist_plan_cd;
  out0.pbp_hist.pdp_from_dt::pbp_hist_pdp_from_dt;
  out0.pbp_hist.pdp_thru_dt::pbp_hist_pdp_thru_dt;
  out0.pbp_hist.sequence_no::pbp_hist_sequence_no;
  out0.pbp_hist.plan_eff_dt::pbp_hist_plan_eff_dt;
  out0.pbp_hist.pdp_status_cd::pbp_hist_pdp_status_cd;
  out0.pbp_hist.src_env_sk::pbp_hist_src_env_sk;
  out0.cag.carrier_id::cag_carrier_id;
  out0.cag.account_id::cag_account_id;
  out0.cag.employer_group_id::cag_employer_group_id;
  out0.cont_pbp.carrier_id::cont_pbp_carrier_id;
  out0.cont_pbp.account_id::cont_pbp_account_id;
  out0.cont_pbp.employer_group_id::cont_pbp_employer_group_id;
  out0.cont_pbp.plan_cd::cont_pbp_plan_cd;
  out0.cont_pbp.sequence_no::cont_pbp_sequence_no;
  out0.*::in0.*;

end;
