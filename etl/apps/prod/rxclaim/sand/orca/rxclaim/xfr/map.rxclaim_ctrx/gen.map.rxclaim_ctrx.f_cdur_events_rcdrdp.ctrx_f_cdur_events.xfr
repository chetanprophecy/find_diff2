/*   Do not edit. Generated file - BRE 4.0.2.18;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';


/*@ BizHidden:true @*/
/*   lookup d_plan_lkp   */
out0::bzt_3_97d014ac_575e5aea_5a70_0(in0,in1,in2)=
begin
let record
  decimal("\x01",0) pln_sk = NULL(""), pln_qlfr_cd_sk = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=10) pln_cd = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) pln_type_id = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=10) pln_qlfr_cd = NULL("");
  date("YYYYMMDD")("\x01") pln_eff_dt = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=25) pln_nm = NULL("");
  date("YYYYMMDD")("\x01") pln_term_dt = NULL("");
  string("\x01", maximum_length=8) adnxcd = NULL("");
  decimal("\x01",0) src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("d_plan_lkp",in0,in1,in2));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup d_prescriber_alias_lkp   */
out0::bzt_5_97d014ac_575e5aea_5a70_0(in0,in1,in2)=
begin
let record
  decimal("\x01",0) pbr_sk = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=15) pbr_id = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=2) pbr_id_qlfr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=3) pbr_id_st_cd = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=10) phy_pbr_key = NULL("");
  decimal("\x01",0) src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("d_prescriber_alias_lkp",in0,in1,in2));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup d_prescriber_alias_stcd_lkp   */
out0::bzt_4_97d014ac_575e5aea_5a70_0(in0,in1,in2,in3)=
begin
let record
  decimal("\x01",0) pbr_sk = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=15) pbr_id = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=2) pbr_id_qlfr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=3) pbr_id_st_cd = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=10) phy_pbr_key = NULL("");
  decimal("\x01",0) src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("d_prescriber_alias_stcd_lkp",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_ctrx_f_cdur_events_rcdrdp_to_the_ctrx_f_cdur_events_ILM_documentation(in)=
begin

out0.cdur_events.dur_db_ind::depends_on(
         in.d3l3st
         );


out0.cdur_events.dur_rsp_cd_cntr::depends_on(
         in.d3jjnb
         );


out0.cdur_events.dur_msg::depends_on(
         in.message3,
         in.message2,
         in.message1
         );


out0.cdur_events.dur_doc_level::depends_on(
         in.d3bzik
         );


out0.cdur_events.cnflct_claim_seq_nbr::depends_on(
         in.d3irhr,
         in.claimsts,
         in.d3iqhr
         );


out0.cdur_events.cmpnd_ingred_nbr::depends_on(
         in.d3jdhr
         );


out0.cdur_events.dur_prev_fill_qty::depends_on(
         in.d3jgnb
         );


out0.f_cdur_carr.carrier_id::depends_on(
         in.carrierid
         );


out0.cdur_events.drd_addtnl_txt::depends_on(
         in.d3r2ip
         );


out0.product.prod_id_qlfr_cd::depends_on(
         in.prodtypcde,
         in.compoundcd
         );


out0.membr.mbr_id::depends_on(
         in.memberid
         );


out0.cag.account_id::depends_on(
         in.accountid
         );


out0.cdur_events.dur_dup_alwd_flg::depends_on(
         in.d3z5ha
         );


out0.cdur_events.claim_seq_nbr::depends_on(
         in.clmseqnbr
         );


out0.cdur_events.dur_onset::depends_on(
         in.d3b0ik
         );


out0.cdur_events.cnflct_claim_nbr::depends_on(
         in.claimsts,
         in.d3iqhr
         );


out0.pharmacy.phr_id::depends_on(
         in.srvprovid
         );


out0.membr.carrier_id::depends_on(
         in.carrierid
         );


out0.cdur_events.src_env_sk::depends_on(
         in.dxf_src_sys_id
         );


out0.cdur_events.dur_table_nm::depends_on(
         in.dxf_src_sys_id,
         in.fnlplandte,
         in.fnlplancde,
         lookup("d_plan_lkp",'keystr','keystr','keystr').adnxcd  
         );


out0.cdur_events.employer_group_id::depends_on(
         in.groupnbr,
         in.claimsts,
         in.groupid
         );


out0.cdur_events.clr_due_amt::depends_on(
         in.cltdueamt
         );


out0.cdur_events.app_ingred_cost_paid::depends_on(
         in.phringrcst
         );


out0.cdur_events.dur_rsp_flg::depends_on(
         in.d3aeh6
         );


out0.reject_cd1.rej_cd::depends_on(
         in.rejcde1
         );


out0.cdur_events.pbr_sk::depends_on(
         in.prescridql,
         in.dxf_src_sys_id,
         in.prsstate,
         in.prescriber,
         lookup("d_prescriber_alias_lkp",'keystr','keystr','keystr').pbr_sk                ,
         lookup("d_prescriber_alias_stcd_lkp",'keystr','keystr','keystr','keystr').pbr_sk  
         );


out0.sbm_date.cal_day_dt::depends_on(
         in.datesbm
         );


out0.cdur_events.dur_cnflct_det_cnt::depends_on(
         in.d3iohr
         );


out0.filled_date.cal_day_dt::depends_on(
         in.dtefilled
         );


out0.d_gpi.gpi_id::depends_on(
         in.gpinumber
         );


out0.cdur_events.account_id::depends_on(
         in.accountid
         );


out0.cdur_events.drug_quantity::depends_on(
         in.decimalqty
         );


out0.reject_cd3.rej_cd::depends_on(
         in.rejcde3
         );


out0.cdur_events.dur_oth_phr_ind::depends_on(
         in.d3l2st
         );


out0.cdur_events.claim_nbr_encrp::depends_on(
         in.rxclaimnbr
         );


out0.cdur_events.clr_ingred_cost_paid::depends_on(
         in.cltingrcst
         );


out0.cdur_events.app_due_amt::depends_on(
         in.phrdueamt
         );


out0.cdur_events.cnflct_cmpnd_ingred::depends_on(
         in.d3ithr
         );


out0.cdur_events.cnflct_claim_stat_id::depends_on(
         in.claimsts,
         in.d3iqhr
         );


out0.cdur_events.filled_dt::depends_on(
         in.dtefilled
         );


out0.reject_cd2.rej_cd::depends_on(
         in.rejcde2
         );


out0.cdur_events.sbm_yr::depends_on(
         in.datesbm
         );


out0.cdur_events.carrier_id::depends_on(
         in.carrierid
         );


out0.cdur_events.rx_nbr_encrp::depends_on(
         in.rxnumber
         );


out0.cdur_events.sbm_dt::depends_on(
         in.datesbm
         );


out0.membr.employer_group_id::depends_on(
         in.groupnbr,
         in.claimsts,
         in.groupid
         );


out0.cdur_events.dur_user_ovrd_flg::depends_on(
         in.d3afh6
         );


out0.cdur_events.dur_srvc_nm::depends_on(
         in.d3nkcd
         );


out0.cdur_events.dur_srvc_cd_rsn::depends_on(
         in.d3l7st
         );


out0.cdur_events.dur_clinical_sign_flg::depends_on(
         in.d3l1st
         );


out0.membr.account_id::depends_on(
         in.accountid
         );


out0.cdur_events.rx_nbr::depends_on(
         in.rxnumber
         );


out0.cdur_events.clr_patient_pay_amt::depends_on(
         in.cltpatpay
         );


out0.cag.employer_group_id::depends_on(
         in.groupnbr,
         in.claimsts,
         in.groupid
         );


out0.cdur_events.app_sales_tax_paid::depends_on(
         in.phrslstax
         );


out0.cdur_events.claim_nbr::depends_on(
         in.rxclaimnbr
         );


out0.cdur_events.clr_dispensing_fee::depends_on(
         in.cltdispfee
         );


out0.cdur_events.refill_nbr::depends_on(
         in.refill
         );


out0.cdur_events.dur_prev_fill_dt::depends_on(
         in.d3aeda
         );


out0.cdur_events.app_patient_pay_amt::depends_on(
         in.phrpatpay
         );


out0.cdur_events.sbm_mn::depends_on(
         in.datesbm
         );


out0.claim_sts.claim_stat_id::depends_on(
         in.claimsts
         );


out0.cag.carrier_id::depends_on(
         in.carrierid
         );


out0.cdur_events.dur_oth_pbr_ind::depends_on(
         in.d3l8st
         );


out0.product.prod_id::depends_on(
         in.productid,
         in.compoundcd
         );


out0.cdur_events.dur_free_txt_msg::depends_on(
         in.d3lvtx
         );


out0.cdur_events.app_dispensing_fee::depends_on(
         in.phrdispfee
         );


out0.cdur_events.dur_dup_cnt::depends_on(
         in.d3ishr
         );


out0.cdur_events.dur_cnflct_ret_cnt::depends_on(
         in.d3iphr
         );


out0.cdur_events.claim_stat_id::depends_on(
         in.claimsts
         );


out0.cdur_events.days_of_supply::depends_on(
         in.dayssupply
         );


out0.cdur_events.clr_sales_tax_paid::depends_on(
         in.cltslstax
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_ctrx_f_cdur_events_rcdrdp_to_the_ctrx_f_cdur_events_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.cdur_events.filled_dt_sk,'cdur_events.filled_dt_sk',1,0]
     [out0.cdur_events.dur_db_ind,'cdur_events.dur_db_ind',1,0]
     [out0.cdur_events.claim_stat_sk,'cdur_events.claim_stat_sk',1,0]
     [out0.cdur_events.dur_rsp_cd_cntr,'cdur_events.dur_rsp_cd_cntr',1,0]
     [out0.cdur_events.rej_cd3_sk,'cdur_events.rej_cd3_sk',1,0]
     [out0.cdur_events.dur_msg,'cdur_events.dur_msg',1,0]
     [out0.cdur_events.sbm_dt_sk,'cdur_events.sbm_dt_sk',1,0]
     [out0.cdur_events.dur_doc_level,'cdur_events.dur_doc_level',1,0]
     [out0.cdur_events.cnflct_claim_seq_nbr,'cdur_events.cnflct_claim_seq_nbr',1,0]
     [out0.cdur_events.rej_cd1_sk,'cdur_events.rej_cd1_sk',1,0]
     [out0.cdur_events.cag_sk,'cdur_events.cag_sk',1,0]
     [out0.cdur_events.prod_sk,'cdur_events.prod_sk',1,0]
     [out0.cdur_events.cmpnd_ingred_nbr,'cdur_events.cmpnd_ingred_nbr',1,0]
     [out0.cdur_events.dur_prev_fill_qty,'cdur_events.dur_prev_fill_qty',1,0]
     [out0.f_cdur_carr.carrier_id,'f_cdur_carr.carrier_id',1,0]
     [out0.cdur_events.drd_addtnl_txt,'cdur_events.drd_addtnl_txt',1,0]
     [out0.product.prod_id_qlfr_cd,'product.prod_id_qlfr_cd',1,0]
     [out0.membr.mbr_id,'membr.mbr_id',1,0]
     [out0.cag.account_id,'cag.account_id',1,0]
     [out0.cdur_events.dur_dup_alwd_flg,'cdur_events.dur_dup_alwd_flg',1,0]
     [out0.cdur_events.claim_seq_nbr,'cdur_events.claim_seq_nbr',1,0]
     [out0.cdur_events.recent_clm_flg,'cdur_events.recent_clm_flg',1,0]
     [out0.cdur_events.dur_onset,'cdur_events.dur_onset',1,0]
     [out0.cdur_events.cnflct_claim_nbr,'cdur_events.cnflct_claim_nbr',1,0]
     [out0.pharmacy.phr_id,'pharmacy.phr_id',1,0]
     [out0.membr.carrier_id,'membr.carrier_id',1,0]
     [out0.cnflct_prod.prod_id,'cnflct_prod.prod_id',1,0]
     [out0.cdur_events.src_env_sk,'cdur_events.src_env_sk',1,0]
     [out0.cdur_events.dur_table_nm,'cdur_events.dur_table_nm',1,0]
     [out0.cdur_events.rej_cd2_sk,'cdur_events.rej_cd2_sk',1,0]
     [out0.cdur_events.employer_group_id,'cdur_events.employer_group_id',1,0]
     [out0.cdur_events.carrier_sk,'cdur_events.carrier_sk',1,0]
     [out0.cdur_events.clr_due_amt,'cdur_events.clr_due_amt',1,0]
     [out0.cdur_events.app_ingred_cost_paid,'cdur_events.app_ingred_cost_paid',1,0]
     [out0.cdur_events.dur_rsp_flg,'cdur_events.dur_rsp_flg',1,0]
     [out0.reject_cd1.rej_cd,'reject_cd1.rej_cd',1,0]
     [out0.cdur_events.pbr_sk,'cdur_events.pbr_sk',1,0]
     [out0.sbm_date.cal_day_dt,'sbm_date.cal_day_dt',1,0]
     [out0.cdur_events.dur_cnflct_det_cnt,'cdur_events.dur_cnflct_det_cnt',1,0]
     [out0.filled_date.cal_day_dt,'filled_date.cal_day_dt',1,0]
     [out0.d_gpi.gpi_id,'d_gpi.gpi_id',1,0]
     [out0.cdur_events.account_id,'cdur_events.account_id',1,0]
     [out0.cdur_events.drug_quantity,'cdur_events.drug_quantity',1,0]
     [out0.cdur_events.sec_flg,'cdur_events.sec_flg',1,0]
     [out0.reject_cd3.rej_cd,'reject_cd3.rej_cd',1,0]
     [out0.cdur_events.dur_oth_phr_ind,'cdur_events.dur_oth_phr_ind',1,0]
     [out0.cdur_events.mbr_sk,'cdur_events.mbr_sk',1,0]
     [out0.cdur_events.claim_nbr_encrp,'cdur_events.claim_nbr_encrp',1,0]
     [out0.cdur_events.clr_ingred_cost_paid,'cdur_events.clr_ingred_cost_paid',1,0]
     [out0.cdur_events.app_due_amt,'cdur_events.app_due_amt',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.cdur_events.cnflct_cmpnd_ingred,'cdur_events.cnflct_cmpnd_ingred',1,0]
     [out0.cdur_events.cnflct_claim_stat_id,'cdur_events.cnflct_claim_stat_id',1,0]
     [out0.cdur_events.filled_dt,'cdur_events.filled_dt',1,0]
     [out0.reject_cd2.rej_cd,'reject_cd2.rej_cd',1,0]
     [out0.cdur_events.sbm_yr,'cdur_events.sbm_yr',1,0]
     [out0.cdur_events.carrier_id,'cdur_events.carrier_id',1,0]
     [out0.cdur_events.rx_nbr_encrp,'cdur_events.rx_nbr_encrp',1,0]
     [out0.cdur_events.sbm_dt,'cdur_events.sbm_dt',1,0]
     [out0.membr.employer_group_id,'membr.employer_group_id',1,0]
     [out0.cdur_events.dur_user_ovrd_flg,'cdur_events.dur_user_ovrd_flg',1,0]
     [out0.cdur_events.phr_sk,'cdur_events.phr_sk',1,0]
     [out0.cdur_events.gpi_sk,'cdur_events.gpi_sk',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.cdur_events.dur_srvc_nm,'cdur_events.dur_srvc_nm',1,0]
     [out0.cdur_events.dur_srvc_cd_rsn,'cdur_events.dur_srvc_cd_rsn',1,0]
     [out0.cdur_events.dur_clinical_sign_flg,'cdur_events.dur_clinical_sign_flg',1,0]
     [out0.membr.account_id,'membr.account_id',1,0]
     [out0.cdur_events.rx_nbr,'cdur_events.rx_nbr',1,0]
     [out0.cdur_events.clr_patient_pay_amt,'cdur_events.clr_patient_pay_amt',1,0]
     [out0.cag.employer_group_id,'cag.employer_group_id',1,0]
     [out0.cdur_events.app_sales_tax_paid,'cdur_events.app_sales_tax_paid',1,0]
     [out0.cdur_events.claim_nbr,'cdur_events.claim_nbr',1,0]
     [out0.cdur_events.clr_dispensing_fee,'cdur_events.clr_dispensing_fee',1,0]
     [out0.cdur_events.refill_nbr,'cdur_events.refill_nbr',1,0]
     [out0.cdur_events.cnflct_prod_sk,'cdur_events.cnflct_prod_sk',1,0]
     [out0.cdur_events.dur_prev_fill_dt,'cdur_events.dur_prev_fill_dt',1,0]
     [out0.cnflct_prod.prod_id_qlfr_cd,'cnflct_prod.prod_id_qlfr_cd',1,0]
     [out0.cdur_events.app_patient_pay_amt,'cdur_events.app_patient_pay_amt',1,0]
     [out0.cdur_events.sbm_mn,'cdur_events.sbm_mn',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.claim_sts.claim_stat_id,'claim_sts.claim_stat_id',1,0]
     [out0.cag.carrier_id,'cag.carrier_id',1,0]
     [out0.cdur_events.dur_oth_pbr_ind,'cdur_events.dur_oth_pbr_ind',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.product.prod_id,'product.prod_id',1,0]
     [out0.cdur_events.dur_free_txt_msg,'cdur_events.dur_free_txt_msg',1,0]
     [out0.cdur_events.app_dispensing_fee,'cdur_events.app_dispensing_fee',1,0]
     [out0.cdur_events.dur_dup_cnt,'cdur_events.dur_dup_cnt',1,0]
     [out0.cdur_events.dur_cnflct_ret_cnt,'cdur_events.dur_cnflct_ret_cnt',1,0]
     [out0.cdur_events.claim_stat_id,'cdur_events.claim_stat_id',1,0]
     [out0.cdur_events.days_of_supply,'cdur_events.days_of_supply',1,0]
     [out0.cdur_events.clr_sales_tax_paid,'cdur_events.clr_sales_tax_paid',1,0]
  ]
  impacts:
  [
     [in0.d3l3st,'d3l3st',1,1]
     [in0.d3ithr,'d3ithr',1,1]
     [in0.d3z5ha,'d3z5ha',1,1]
     [in0.rxclaimnbr,'rxclaimnbr',6,2]
     [in0.fnlplandte,'fnlplandte',1,1]
     [in0.clmseqnbr,'clmseqnbr',3,1]
     [in0.d3bzik,'d3bzik',1,1]
     [in0.rejcde1,'rejcde1',1,1]
     [in0.prescridql,'prescridql',2,1]
     [in0.d3l8st,'d3l8st',1,1]
     [in0.rejcde2,'rejcde2',1,1]
     [in0.message1,'message1',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.cltdispfee,'cltdispfee',1,1]
     [in0.decimalqty,'decimalqty',1,1]
     [in0.groupnbr,'groupnbr',3,3]
     [in0.d3aeda,'d3aeda',1,1]
     [in0.accountid,'accountid',3,3]
     [in0.rxnumber,'rxnumber',2,2]
     [in0.phringrcst,'phringrcst',1,1]
     [in0.d3l7st,'d3l7st',1,1]
     [in0.d3l1st,'d3l1st',1,1]
     [in0.d3iohr,'d3iohr',1,1]
     [in0.d3jdhr,'d3jdhr',1,1]
     [in0.carrierid,'carrierid',4,4]
     [in0.message3,'message3',1,1]
     [in0.d3jjnb,'d3jjnb',1,1]
     [in0.fnlplancde,'fnlplancde',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',5,4]
     [in0.dtefilled,'dtefilled',2,2]
     [in0.phrslstax,'phrslstax',1,1]
     [in0.prsstate,'prsstate',1,1]
     [in0.cltdueamt,'cltdueamt',1,1]
     [in0.d3iphr,'d3iphr',1,1]
     [in0.groupid,'groupid',6,3]
     [in0.phrpatpay,'phrpatpay',1,1]
     [in0.prescriber,'prescriber',2,1]
     [in0.cltingrcst,'cltingrcst',1,1]
     [in0.srvprovid,'srvprovid',1,1]
     [in0.refill,'refill',1,1]
     [in0.d3b0ik,'d3b0ik',1,1]
     [in0.d3r2ip,'d3r2ip',1,1]
     [in0.dayssupply,'dayssupply',1,1]
     [in0.d3jgnb,'d3jgnb',1,1]
     [in0.cltslstax,'cltslstax',1,1]
     [in0.prodtypcde,'prodtypcde',1,1]
     [in0.cltpatpay,'cltpatpay',1,1]
     [in0.productid,'productid',1,1]
     [in0.message2,'message2',1,1]
     [in0.d3aeh6,'d3aeh6',1,1]
     [in0.d3irhr,'d3irhr',1,1]
     [in0.phrdueamt,'phrdueamt',1,1]
     [in0.claimsts,'claimsts',8,8]
     [in0.d3iqhr,'d3iqhr',4,3]
     [in0.gpinumber,'gpinumber',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.memberid,'memberid',1,1]
     [in0.d3lvtx,'d3lvtx',1,1]
     [in0.rejcde3,'rejcde3',1,1]
     [in0.phrdispfee,'phrdispfee',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.compoundcd,'compoundcd',2,2]
     [in0.d3afh6,'d3afh6',1,1]
     [in0.d3ishr,'d3ishr',1,1]
     [in0.d3nkcd,'d3nkcd',1,1]
     [in0.d3l2st,'d3l2st',1,1]
     [in0.datesbm,'datesbm',4,4]
     ['lookup("d_prescriber_alias_stcd_lkp").pbr_sk','pbr_sk',1,1]
     ['lookup("d_plan_lkp").adnxcd','adnxcd',1,1]
     ['lookup("d_prescriber_alias_lkp").pbr_sk','pbr_sk',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) cdur_events_cag_sk = -1;
let decimal("\x01",0) cdur_events_phr_sk = -1;
let decimal("\x01",0) cdur_events_prod_sk = -1;
let decimal("\x01",0) cdur_events_mbr_sk = -1;
let decimal("\x01",0) cdur_events_pbr_sk;
let decimal("\x01",0) cdur_events_gpi_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=30) cdur_events_carrier_id = fail_if_error(string_lrtrim(in0.carrierid));
let string("\x01",charset="iso-8859-15", maximum_length=40) cdur_events_account_id = fail_if_error(string_lrtrim(in0.accountid));
let string("\x01",charset="iso-8859-15", maximum_length=30) cdur_events_employer_group_id = fail_if_error((if (sql_and(is_blank(string_lrtrim(in0.groupid)),(string_lrtrim(in0.claimsts)!="R")))
   string_lrtrim(in0.groupnbr)
 else
   string_lrtrim(in0.groupid)));
let decimal("\x01",0) cdur_events_claim_nbr = fail_if_error(in0.rxclaimnbr);
let decimal("\x01",0) cdur_events_claim_seq_nbr = fail_if_error(if(in0.clmseqnbr<0) in0.clmseqnbr else (1000 - in0.clmseqnbr));
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_claim_stat_id = fail_if_error(string_lrtrim(in0.claimsts));
let decimal("\x01",0) cdur_events_claim_stat_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=12) cdur_events_rx_nbr = fail_if_error(in0.rxnumber);
let string("\x01",charset="iso-8859-15", maximum_length=2) cdur_events_refill_nbr = fail_if_error(in0.refill);
let decimal("\x01",0) cdur_events_sbm_yr;
let decimal("\x01",0) cdur_events_sbm_mn;
let date("YYYYMMDD")("\x01") cdur_events_sbm_dt;
let date("YYYYMMDD")("\x01") cdur_events_filled_dt;
let decimal("\x01",0) cdur_events_sbm_dt_sk = -1;
let decimal("\x01",0) cdur_events_filled_dt_sk = -1;
let decimal("\x01",0) cdur_events_rej_cd1_sk = -1;
let decimal("\x01",0) cdur_events_rej_cd2_sk = -1;
let decimal("\x01",0) cdur_events_rej_cd3_sk = -1;
let decimal("\x01",0) cdur_events_dur_rsp_cd_cntr = fail_if_error(in0.d3jjnb);
let string("\x01",charset="iso-8859-15", maximum_length=2) cdur_events_dur_srvc_cd_rsn = fail_if_error(in0.d3l7st);
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_dur_clinical_sign_flg = fail_if_error(in0.d3l1st);
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_dur_oth_phr_ind = fail_if_error(in0.d3l2st);
let date("YYYYMMDD")("\x01") cdur_events_dur_prev_fill_dt;
let decimal("\x01".3, maximum_length=10, sign_reserved) cdur_events_dur_prev_fill_qty = fail_if_error(in0.d3jgnb);
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_dur_db_ind = fail_if_error(in0.d3l3st);
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_dur_oth_pbr_ind = fail_if_error(in0.d3l8st);
let string("\x01",charset="iso-8859-15", maximum_length=30) cdur_events_dur_free_txt_msg = fail_if_error(in0.d3lvtx);
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_dur_rsp_flg = fail_if_error(in0.d3aeh6);
let string("\x01",charset="iso-8859-15", maximum_length=8) cdur_events_dur_table_nm;
let decimal("\x01",0) cdur_events_dur_cnflct_det_cnt = fail_if_error(in0.d3iohr);
let decimal("\x01",0) cdur_events_dur_cnflct_ret_cnt = fail_if_error(in0.d3iphr);
let string("\x01",charset="iso-8859-15", maximum_length=8) cdur_events_dur_srvc_nm = fail_if_error(in0.d3nkcd);
let decimal("\x01",0) cdur_events_cnflct_claim_nbr = fail_if_error((if (sql_and((in0.d3iqhr>0),(string_lrtrim(in0.claimsts) member [vector'P','R'])))
   in0.d3iqhr));
let decimal("\x01",0) cdur_events_cnflct_claim_seq_nbr = fail_if_error((if (sql_and((in0.d3iqhr>0),(string_lrtrim(in0.claimsts) member [vector'P','R'])))
   in0.d3irhr));
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_cnflct_claim_stat_id = fail_if_error((if (sql_and((in0.d3iqhr>0),(string_lrtrim(in0.claimsts) member [vector'P','R'])))
   "P"));
let decimal("\x01",0) cdur_events_cnflct_prod_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_dur_user_ovrd_flg = fail_if_error(in0.d3afh6);
let decimal("\x01",0) cdur_events_dur_doc_level = fail_if_error(in0.d3bzik);
let decimal("\x01",0) cdur_events_dur_onset = fail_if_error(in0.d3b0ik);
let decimal("\x01",0) cdur_events_dur_dup_cnt = fail_if_error(in0.d3ishr);
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_dur_dup_alwd_flg = fail_if_error(in0.d3z5ha);
let string("\x01",charset="iso-8859-15", maximum_length=122) cdur_events_dur_msg = fail_if_error(string_concat(first_defined(in0.message1,""),"|",first_defined(in0.message2,""),"|",first_defined(in0.message3,"")));
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_app_ingred_cost_paid = fail_if_error(in0.phringrcst);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_app_dispensing_fee = fail_if_error(in0.phrdispfee);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_app_sales_tax_paid = fail_if_error(in0.phrslstax);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_app_patient_pay_amt = fail_if_error(in0.phrpatpay);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_app_due_amt = fail_if_error(in0.phrdueamt);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_clr_ingred_cost_paid = fail_if_error(in0.cltingrcst);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_clr_dispensing_fee = fail_if_error(in0.cltdispfee);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_clr_sales_tax_paid = fail_if_error(in0.cltslstax);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_clr_patient_pay_amt = fail_if_error(in0.cltpatpay);
let decimal("\x01".2, maximum_length=11, sign_reserved) cdur_events_clr_due_amt = fail_if_error(in0.cltdueamt);
let decimal("\x01",0) cdur_events_days_of_supply = fail_if_error(in0.dayssupply);
let decimal("\x01".3, maximum_length=13, sign_reserved) cdur_events_drug_quantity = fail_if_error(in0.decimalqty);
let string("\x01",charset="iso-8859-15", maximum_length=1) cdur_events_recent_clm_flg = "N";
let decimal("\x01",0) cdur_events_src_env_sk = fail_if_error(in0.dxf_src_sys_id);
let decimal("\x01",0) cdur_events_cmpnd_ingred_nbr = fail_if_error(in0.d3jdhr);
let decimal("\x01",0) cdur_events_cnflct_cmpnd_ingred = fail_if_error(in0.d3ithr);
let string("\x01",charset="iso-8859-15", maximum_length=100) cdur_events_drd_addtnl_txt = fail_if_error(in0.d3r2ip);
let decimal("\x01",0) cdur_events_carrier_sk = -1;
let decimal("\x01",0) cdur_events_claim_nbr_encrp;
let string("\x01",charset="iso-8859-15", maximum_length=12) cdur_events_rx_nbr_encrp;
let decimal("\x01",0) cdur_events_sec_flg = 0;
let string("\x01",charset="iso-8859-15", maximum_length=30) cag_carrier_id = fail_if_error(string_lrtrim(in0.carrierid));
let string("\x01",charset="iso-8859-15", maximum_length=40) cag_account_id = fail_if_error(string_lrtrim(in0.accountid));
let string("\x01",charset="iso-8859-15", maximum_length=30) cag_employer_group_id = fail_if_error((if (sql_and(is_blank(string_lrtrim(in0.groupid)),(string_lrtrim(in0.claimsts)!="R")))
   string_lrtrim(in0.groupnbr)
 else
   string_lrtrim(in0.groupid)));
let string("\x01",charset="iso-8859-15", maximum_length=1) claim_sts_claim_stat_id = fail_if_error(string_lrtrim(in0.claimsts));
let string("\x01",charset="iso-8859-15", maximum_length=20) cnflct_prod_prod_id = "";
let string("\x01",charset="iso-8859-15", maximum_length=2) cnflct_prod_prod_id_qlfr_cd = "";
let string("\x01",charset="iso-8859-15", maximum_length=14) d_gpi_gpi_id = fail_if_error(string_lrtrim(in0.gpinumber));
let string("\x01",charset="iso-8859-15", maximum_length=30) f_cdur_carr_carrier_id = fail_if_error(string_lrtrim(in0.carrierid));
let date("YYYYMMDD")("\x01") filled_date_cal_day_dt;
let string("\x01",charset="iso-8859-15", maximum_length=30) membr_carrier_id = fail_if_error(string_lrtrim(in0.carrierid));
let string("\x01",charset="iso-8859-15", maximum_length=40) membr_account_id = fail_if_error(string_lrtrim(in0.accountid));
let string("\x01",charset="iso-8859-15", maximum_length=30) membr_employer_group_id = fail_if_error((if (sql_and(is_blank(string_lrtrim(in0.groupid)),(string_lrtrim(in0.claimsts)!="R")))
   string_lrtrim(in0.groupnbr)
 else
   string_lrtrim(in0.groupid)));
let string("\x01",charset="iso-8859-15", maximum_length=20) membr_mbr_id = fail_if_error(string_lrtrim(in0.memberid));
let string("\x01",charset="iso-8859-15", maximum_length=12) pharmacy_phr_id = fail_if_error(first_defined(in0.srvprovid,'N'));
let string("\x01",charset="iso-8859-15", maximum_length=20) product_prod_id = fail_if_error(string_lrtrim(in0.compoundcd ) member  [vector   '2','9' ] ? '--' :in0.productid);
let string("\x01",charset="iso-8859-15", maximum_length=2) product_prod_id_qlfr_cd = fail_if_error(string_lrtrim(in0.compoundcd ) member  [vector   '2','9' ] ? '--' :in0.prodtypcde);
let string("\x01",charset="iso-8859-15", maximum_length=3) reject_cd1_rej_cd = fail_if_error(string_lrtrim(in0.rejcde1));
let string("\x01",charset="iso-8859-15", maximum_length=3) reject_cd2_rej_cd = fail_if_error(string_lrtrim(in0.rejcde2));
let string("\x01",charset="iso-8859-15", maximum_length=3) reject_cd3_rej_cd = fail_if_error(string_lrtrim(in0.rejcde3));
let date("YYYYMMDD")("\x01") sbm_date_cal_day_dt;



/*   Default value   */
cdur_events_dur_table_nm=fail_if_error(bzt_3_97d014ac_575e5aea_5a70_0(in0.fnlplancde,date_check(in0.fnlplandte), in0.dxf_src_sys_id ).adnxcd);

/*   Default value   */
cdur_events_pbr_sk=fail_if_error(first_defined(bzt_4_97d014ac_575e5aea_5a70_0(string_lrtrim(in0.prescriber), string_lrtrim(in0.prescridql), string_lrtrim(in0.prsstate), in0.dxf_src_sys_id).pbr_sk, bzt_5_97d014ac_575e5aea_5a70_0(string_lrtrim(in0.prescriber), string_lrtrim(in0.prescridql), in0.dxf_src_sys_id).pbr_sk, -1));

/*   Default value   */
sbm_date_cal_day_dt=fail_if_error(date_check(in0.datesbm));

/*   Default value   */
filled_date_cal_day_dt=fail_if_error(date_check(in0.dtefilled));

/*   Default value   */
cdur_events_claim_nbr_encrp=fail_if_error(if(in0.rxclaimnbr>0) (decimal(''))(string_concat(string_substring((decimal(''))in0.rxclaimnbr,1,2),ff3_encrypt_idwdata((decimal(''))in0.rxclaimnbr))) 
else  (decimal(''))(string_concat(string_substring((decimal(''))in0.rxclaimnbr,1,3),ff3_encrypt_idwdata(decimal_strip(math_abs((decimal(''))in0.rxclaimnbr))))));

/*   Default value   */
cdur_events_filled_dt=fail_if_error(date_check(in0.dtefilled));

/*   Default value   */
cdur_events_sbm_yr=fail_if_error((decimal(''))(string_substring(date_check(in0.datesbm), 1, 4)));

/*   Default value   */
cdur_events_rx_nbr_encrp=fail_if_error(ff3_encrypt_idwdata(in0.rxnumber));

/*   Default value   */
cdur_events_sbm_dt=fail_if_error(date_check(in0.datesbm));

/*   Default value   */
cdur_events_dur_prev_fill_dt=fail_if_error(date_check(in0.d3aeda));

/*   Default value   */
cdur_events_sbm_mn=fail_if_error((decimal(''))(string_substring(date_check(in0.datesbm), 5, 2)));

  out0.cdur_events.cag_sk::cdur_events_cag_sk;
  out0.cdur_events.phr_sk::cdur_events_phr_sk;
  out0.cdur_events.prod_sk::cdur_events_prod_sk;
  out0.cdur_events.mbr_sk::cdur_events_mbr_sk;
  out0.cdur_events.pbr_sk::cdur_events_pbr_sk;
  out0.cdur_events.gpi_sk::cdur_events_gpi_sk;
  out0.cdur_events.carrier_id::cdur_events_carrier_id;
  out0.cdur_events.account_id::cdur_events_account_id;
  out0.cdur_events.employer_group_id::cdur_events_employer_group_id;
  out0.cdur_events.claim_nbr::cdur_events_claim_nbr;
  out0.cdur_events.claim_seq_nbr::cdur_events_claim_seq_nbr;
  out0.cdur_events.claim_stat_id::cdur_events_claim_stat_id;
  out0.cdur_events.claim_stat_sk::cdur_events_claim_stat_sk;
  out0.cdur_events.rx_nbr::cdur_events_rx_nbr;
  out0.cdur_events.refill_nbr::cdur_events_refill_nbr;
  out0.cdur_events.sbm_yr::cdur_events_sbm_yr;
  out0.cdur_events.sbm_mn::cdur_events_sbm_mn;
  out0.cdur_events.sbm_dt::cdur_events_sbm_dt;
  out0.cdur_events.filled_dt::cdur_events_filled_dt;
  out0.cdur_events.sbm_dt_sk::cdur_events_sbm_dt_sk;
  out0.cdur_events.filled_dt_sk::cdur_events_filled_dt_sk;
  out0.cdur_events.rej_cd1_sk::cdur_events_rej_cd1_sk;
  out0.cdur_events.rej_cd2_sk::cdur_events_rej_cd2_sk;
  out0.cdur_events.rej_cd3_sk::cdur_events_rej_cd3_sk;
  out0.cdur_events.dur_rsp_cd_cntr::cdur_events_dur_rsp_cd_cntr;
  out0.cdur_events.dur_srvc_cd_rsn::cdur_events_dur_srvc_cd_rsn;
  out0.cdur_events.dur_clinical_sign_flg::cdur_events_dur_clinical_sign_flg;
  out0.cdur_events.dur_oth_phr_ind::cdur_events_dur_oth_phr_ind;
  out0.cdur_events.dur_prev_fill_dt::cdur_events_dur_prev_fill_dt;
  out0.cdur_events.dur_prev_fill_qty::cdur_events_dur_prev_fill_qty;
  out0.cdur_events.dur_db_ind::cdur_events_dur_db_ind;
  out0.cdur_events.dur_oth_pbr_ind::cdur_events_dur_oth_pbr_ind;
  out0.cdur_events.dur_free_txt_msg::cdur_events_dur_free_txt_msg;
  out0.cdur_events.dur_rsp_flg::cdur_events_dur_rsp_flg;
  out0.cdur_events.dur_table_nm::cdur_events_dur_table_nm;
  out0.cdur_events.dur_cnflct_det_cnt::cdur_events_dur_cnflct_det_cnt;
  out0.cdur_events.dur_cnflct_ret_cnt::cdur_events_dur_cnflct_ret_cnt;
  out0.cdur_events.dur_srvc_nm::cdur_events_dur_srvc_nm;
  out0.cdur_events.cnflct_claim_nbr::cdur_events_cnflct_claim_nbr;
  out0.cdur_events.cnflct_claim_seq_nbr::cdur_events_cnflct_claim_seq_nbr;
  out0.cdur_events.cnflct_claim_stat_id::cdur_events_cnflct_claim_stat_id;
  out0.cdur_events.cnflct_prod_sk::cdur_events_cnflct_prod_sk;
  out0.cdur_events.dur_user_ovrd_flg::cdur_events_dur_user_ovrd_flg;
  out0.cdur_events.dur_doc_level::cdur_events_dur_doc_level;
  out0.cdur_events.dur_onset::cdur_events_dur_onset;
  out0.cdur_events.dur_dup_cnt::cdur_events_dur_dup_cnt;
  out0.cdur_events.dur_dup_alwd_flg::cdur_events_dur_dup_alwd_flg;
  out0.cdur_events.dur_msg::cdur_events_dur_msg;
  out0.cdur_events.app_ingred_cost_paid::cdur_events_app_ingred_cost_paid;
  out0.cdur_events.app_dispensing_fee::cdur_events_app_dispensing_fee;
  out0.cdur_events.app_sales_tax_paid::cdur_events_app_sales_tax_paid;
  out0.cdur_events.app_patient_pay_amt::cdur_events_app_patient_pay_amt;
  out0.cdur_events.app_due_amt::cdur_events_app_due_amt;
  out0.cdur_events.clr_ingred_cost_paid::cdur_events_clr_ingred_cost_paid;
  out0.cdur_events.clr_dispensing_fee::cdur_events_clr_dispensing_fee;
  out0.cdur_events.clr_sales_tax_paid::cdur_events_clr_sales_tax_paid;
  out0.cdur_events.clr_patient_pay_amt::cdur_events_clr_patient_pay_amt;
  out0.cdur_events.clr_due_amt::cdur_events_clr_due_amt;
  out0.cdur_events.days_of_supply::cdur_events_days_of_supply;
  out0.cdur_events.drug_quantity::cdur_events_drug_quantity;
  out0.cdur_events.recent_clm_flg::cdur_events_recent_clm_flg;
  out0.cdur_events.src_env_sk::cdur_events_src_env_sk;
  out0.cdur_events.cmpnd_ingred_nbr::cdur_events_cmpnd_ingred_nbr;
  out0.cdur_events.cnflct_cmpnd_ingred::cdur_events_cnflct_cmpnd_ingred;
  out0.cdur_events.drd_addtnl_txt::cdur_events_drd_addtnl_txt;
  out0.cdur_events.carrier_sk::cdur_events_carrier_sk;
  out0.cdur_events.claim_nbr_encrp::cdur_events_claim_nbr_encrp;
  out0.cdur_events.rx_nbr_encrp::cdur_events_rx_nbr_encrp;
  out0.cdur_events.sec_flg::cdur_events_sec_flg;
  out0.cag.carrier_id::cag_carrier_id;
  out0.cag.account_id::cag_account_id;
  out0.cag.employer_group_id::cag_employer_group_id;
  out0.claim_sts.claim_stat_id::claim_sts_claim_stat_id;
  out0.cnflct_prod.prod_id::cnflct_prod_prod_id;
  out0.cnflct_prod.prod_id_qlfr_cd::cnflct_prod_prod_id_qlfr_cd;
  out0.d_gpi.gpi_id::d_gpi_gpi_id;
  out0.f_cdur_carr.carrier_id::f_cdur_carr_carrier_id;
  out0.filled_date.cal_day_dt::filled_date_cal_day_dt;
  out0.membr.carrier_id::membr_carrier_id;
  out0.membr.account_id::membr_account_id;
  out0.membr.employer_group_id::membr_employer_group_id;
  out0.membr.mbr_id::membr_mbr_id;
  out0.pharmacy.phr_id::pharmacy_phr_id;
  out0.product.prod_id::product_prod_id;
  out0.product.prod_id_qlfr_cd::product_prod_id_qlfr_cd;
  out0.reject_cd1.rej_cd::reject_cd1_rej_cd;
  out0.reject_cd2.rej_cd::reject_cd2_rej_cd;
  out0.reject_cd3.rej_cd::reject_cd3_rej_cd;
  out0.sbm_date.cal_day_dt::sbm_date_cal_day_dt;
  out0.*::in0.*;
end;
