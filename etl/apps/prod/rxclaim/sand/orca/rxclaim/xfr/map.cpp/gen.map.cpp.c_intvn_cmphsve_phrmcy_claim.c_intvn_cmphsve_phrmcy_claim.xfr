/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@
dependency_analysis:
[
  [out0.ci_cmp_pc.phrmcy_claim_id,[passthrough],in0.phrmcy_claim_id]
  [out0.ci_cmp_pc.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.ci_cmp_pc.src_env_sk,[transform],]
  [out0.ci_cmp_pc.cpp_updated_ts,[passthrough],in0.update_timestamp]
  [out0.ci_cmp_pc.cpp_created_by,[passthrough],in0.created_by]
  [out0.ci_cmp_pc.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.ci_cmp_pc.phrmcy_claim_id,'ci_cmp_pc.phrmcy_claim_id',1,0]
     [out0.ci_cmp_pc.intvn_idntfn_id,'ci_cmp_pc.intvn_idntfn_id',1,0]
     [out0.ci_cmp_pc.cpp_updated_by,'ci_cmp_pc.cpp_updated_by',1,0]
     [out0.ci_cmp_pc.src_env_sk,'ci_cmp_pc.src_env_sk',1,0]
     [out0.ci_cmp_pc.cpp_updated_ts,'ci_cmp_pc.cpp_updated_ts',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.ci_cmp_pc.cpp_created_by,'ci_cmp_pc.cpp_created_by',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.ci_cmp_pc.cpp_create_ts,'ci_cmp_pc.cpp_create_ts',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.create_timestamp,'create_timestamp',1,1]
     [in0.updated_by,'updated_by',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.intvn_idntfn_id,'intvn_idntfn_id',1,1]
     [in0.phrmcy_claim_id,'phrmcy_claim_id',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0, maximum_length=39, sign_reserved) ci_cmp_pc_intvn_idntfn_id = fail_if_error(in0.intvn_idntfn_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) ci_cmp_pc_phrmcy_claim_id = fail_if_error(in0.phrmcy_claim_id);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") ci_cmp_pc_cpp_updated_ts = fail_if_error(in0.update_timestamp);
let utf8 string("\x01", maximum_length=80) ci_cmp_pc_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") ci_cmp_pc_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) ci_cmp_pc_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) ci_cmp_pc_src_env_sk = 710;



  out0.ci_cmp_pc.intvn_idntfn_id::ci_cmp_pc_intvn_idntfn_id;
  out0.ci_cmp_pc.phrmcy_claim_id::ci_cmp_pc_phrmcy_claim_id;
  out0.ci_cmp_pc.cpp_updated_ts::ci_cmp_pc_cpp_updated_ts;
  out0.ci_cmp_pc.cpp_updated_by::ci_cmp_pc_cpp_updated_by;
  out0.ci_cmp_pc.cpp_create_ts::ci_cmp_pc_cpp_create_ts;
  out0.ci_cmp_pc.cpp_created_by::ci_cmp_pc_cpp_created_by;
  out0.ci_cmp_pc.src_env_sk::ci_cmp_pc_src_env_sk;
  out0.*::in0.*;

end;
