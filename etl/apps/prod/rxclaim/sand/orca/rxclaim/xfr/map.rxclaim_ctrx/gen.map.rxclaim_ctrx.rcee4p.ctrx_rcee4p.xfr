/*   Do not edit. Generated file - BRE 4.0.2.6;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_ctrx_rcee4p_to_the_ctrx_rcee4p_ILM_documentation(in)=
begin

out0.rcee4pctrx.aghibj::depends_on(
         in.aghibj
         );


out0.rcee4pctrx.agzsst::depends_on(
         in.agzsst
         );


out0.rcee4pctrx.agabtm::depends_on(
         in.agabtm
         );


out0.rcee4pctrx.agd3av::depends_on(
         in.agd3av
         );


out0.rcee4pctrx.agadtm::depends_on(
         in.agadtm
         );


out0.rcee4pctrx.agalvn::depends_on(
         in.agalvn
         );


out0.rcee4pctrx.agc2dt::depends_on(
         in.agc2dt
         );


out0.rcee4pctrx.agaevn::depends_on(
         in.agaevn
         );


out0.rcee4pctrx.agadvn::depends_on(
         in.agadvn
         );


out0.rcee4pctrx.agakvn::depends_on(
         in.agakvn
         );


out0.rcee4pctrx.src_env_sk::depends_on(
         in.dxf_src_sys_id
         );


out0.rcee4pctrx.ags6nb::depends_on(
         in.ags6nb
         );


out0.rcee4pctrx.agbmdt::depends_on(
         in.agbmdt
         );


out0.rcee4pctrx.agd2av::depends_on(
         in.agd2av
         );


out0.rcee4pctrx.agp2nb::depends_on(
         in.agp2nb
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_ctrx_rcee4p_to_the_ctrx_rcee4p_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.rcee4pctrx.aghibj,'rcee4pctrx.aghibj',1,0]
     [out0.rcee4pctrx.agzsst,'rcee4pctrx.agzsst',1,0]
     [out0.rcee4pctrx.agabtm,'rcee4pctrx.agabtm',1,0]
     [out0.rcee4pctrx.agd3av,'rcee4pctrx.agd3av',1,0]
     [out0.rcee4pctrx.agadtm,'rcee4pctrx.agadtm',1,0]
     [out0.rcee4pctrx.agalvn,'rcee4pctrx.agalvn',1,0]
     [out0.rcee4pctrx.agc2dt,'rcee4pctrx.agc2dt',1,0]
     [out0.rcee4pctrx.agaevn,'rcee4pctrx.agaevn',1,0]
     [out0.rcee4pctrx.agadvn,'rcee4pctrx.agadvn',1,0]
     [out0.rcee4pctrx.agakvn,'rcee4pctrx.agakvn',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.rcee4pctrx.src_env_sk,'rcee4pctrx.src_env_sk',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.rcee4pctrx.ags6nb,'rcee4pctrx.ags6nb',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.rcee4pctrx.agbmdt,'rcee4pctrx.agbmdt',1,0]
     [out0.rcee4pctrx.agd2av,'rcee4pctrx.agd2av',1,0]
     [out0.rcee4pctrx.agp2nb,'rcee4pctrx.agp2nb',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.agaevn,'agaevn',1,1]
     [in0.agbmdt,'agbmdt',1,1]
     [in0.agc2dt,'agc2dt',1,1]
     [in0.aghibj,'aghibj',1,1]
     [in0.agzsst,'agzsst',1,1]
     [in0.agadvn,'agadvn',1,1]
     [in0.agabtm,'agabtm',1,1]
     [in0.agd3av,'agd3av',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.agadtm,'agadtm',1,1]
     [in0.agakvn,'agakvn',1,1]
     [in0.agalvn,'agalvn',1,1]
     [in0.agp2nb,'agp2nb',1,1]
     [in0.agd2av,'agd2av',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.ags6nb,'ags6nb',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0, maximum_length=16) rcee4pctrx_agp2nb = fail_if_error(in0.agp2nb);
let decimal("\x01",0, maximum_length=4) rcee4pctrx_ags6nb = fail_if_error(in0.ags6nb);
let string("\x01", maximum_length=1) rcee4pctrx_agzsst = fail_if_error(in0.agzsst);
let string("\x01", maximum_length=1) rcee4pctrx_agd2av = fail_if_error(in0.agd2av);
let decimal("\x01".2, maximum_length=13) rcee4pctrx_aghibj = fail_if_error(in0.aghibj);
let string("\x01", maximum_length=1) rcee4pctrx_agd3av = fail_if_error(in0.agd3av);
let string("\x01", maximum_length=10) rcee4pctrx_agakvn = fail_if_error(in0.agakvn);
let decimal("\x01",0, maximum_length=8) rcee4pctrx_agc2dt = fail_if_error(in0.agc2dt);
let decimal("\x01",0, maximum_length=7) rcee4pctrx_agadtm = fail_if_error(in0.agadtm);
let string("\x01", maximum_length=10) rcee4pctrx_agalvn = fail_if_error(in0.agalvn);
let string("\x01", maximum_length=10) rcee4pctrx_agadvn = fail_if_error(in0.agadvn);
let decimal("\x01",0, maximum_length=8) rcee4pctrx_agbmdt = fail_if_error(in0.agbmdt);
let decimal("\x01",0, maximum_length=7) rcee4pctrx_agabtm = fail_if_error(in0.agabtm);
let string("\x01", maximum_length=10) rcee4pctrx_agaevn = fail_if_error(in0.agaevn);
let decimal("\x01",0) rcee4pctrx_src_env_sk = fail_if_error(in0.dxf_src_sys_id);



  out0.rcee4pctrx.agp2nb::rcee4pctrx_agp2nb;
  out0.rcee4pctrx.ags6nb::rcee4pctrx_ags6nb;
  out0.rcee4pctrx.agzsst::rcee4pctrx_agzsst;
  out0.rcee4pctrx.agd2av::rcee4pctrx_agd2av;
  out0.rcee4pctrx.aghibj::rcee4pctrx_aghibj;
  out0.rcee4pctrx.agd3av::rcee4pctrx_agd3av;
  out0.rcee4pctrx.agakvn::rcee4pctrx_agakvn;
  out0.rcee4pctrx.agc2dt::rcee4pctrx_agc2dt;
  out0.rcee4pctrx.agadtm::rcee4pctrx_agadtm;
  out0.rcee4pctrx.agalvn::rcee4pctrx_agalvn;
  out0.rcee4pctrx.agadvn::rcee4pctrx_agadvn;
  out0.rcee4pctrx.agbmdt::rcee4pctrx_agbmdt;
  out0.rcee4pctrx.agabtm::rcee4pctrx_agabtm;
  out0.rcee4pctrx.agaevn::rcee4pctrx_agaevn;
  out0.rcee4pctrx.src_env_sk::rcee4pctrx_src_env_sk;
  out0.*::in0.*;
end;
