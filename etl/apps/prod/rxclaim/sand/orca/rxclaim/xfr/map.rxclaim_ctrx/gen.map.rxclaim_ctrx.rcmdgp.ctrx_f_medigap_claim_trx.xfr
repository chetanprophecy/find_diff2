/*   Do not edit. Generated file - BRE 4.0.2.18;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
type bzt_2_6c54cc0a_591ed512_6543_0 = record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) src_env_sk = NULL(""), mbr_sk = NULL(""), cag_sk = NULL("");
  string(1) newline = "\n";
end;


/*@ BizHidden:true @*/
/*   lookup f_claim_transaction.reduced   */
out0::bzt_5_6c54cc0a_591ed512_6543_0(in0)=
begin
let bzt_2_6c54cc0a_591ed512_6543_0 __bzt_local_res__;
if(!bzt_8_6c54cc0a_591ed512_6543_0)begin
  bzt_8_6c54cc0a_591ed512_6543_0 = 1;
  bzt_7_6c54cc0a_591ed512_6543_0 = 0;
  __bzt_local_res__ = fail_if_error(lookup("f_claim_transaction.reduced",in0.bxp2nb,if(in0.bxoinb <0)in0.bxoinb else (1000 - in0.bxoinb),in0.dqs6st,in0.rxt_src_envrt_id));
  if(is_defined(__bzt_local_res__))begin
     bzt_6_6c54cc0a_591ed512_6543_0 = __bzt_local_res__;
     bzt_7_6c54cc0a_591ed512_6543_0 = 1;
  end
end
  out0:1:if(bzt_7_6c54cc0a_591ed512_6543_0)bzt_6_6c54cc0a_591ed512_6543_0;
  out0::NULL;
end;
let bzt_2_6c54cc0a_591ed512_6543_0 bzt_6_6c54cc0a_591ed512_6543_0 = allocate_with_nulls();  /*   lookup f_claim_transaction.reduced   */
let int bzt_7_6c54cc0a_591ed512_6543_0 = 0;
let int bzt_8_6c54cc0a_591ed512_6543_0 = 0;

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_ctrx_rcmdgp_to_the_ctrx_f_medigap_claim_trx_ILM_documentation(in)=
begin

out0.mdgp_claim.sbm_medicaid_paid_amt::depends_on(
         in.bxqjhz
         );


out0.mdgp_claim.sbm_prvdr_accpt_asg_flg::depends_on(
         in.bxusoc
         );


out0.mdgp_claim.claim_seq_nbr::depends_on(
         in.bxoinb
         );


out0.mdgp_claim.cag_sk::depends_on(
         in.rxt_src_envrt_id,
         in.dqs6st,
         in.bxoinb,
         in.bxp2nb,
         lookup("f_claim_transaction.reduced",in.bxp2nb,'keystr',in.dqs6st,in.rxt_src_envrt_id).cag_sk  
         );


out0.mdgp_claim.mbr_sk::depends_on(
         in.rxt_src_envrt_id,
         in.dqs6st,
         in.bxoinb,
         in.bxp2nb,
         lookup("f_claim_transaction.reduced",in.bxp2nb,'keystr',in.dqs6st,in.rxt_src_envrt_id).mbr_sk  
         );


out0.mdgp_claim.sub_medigap_id::depends_on(
         in.bxvjhk
         );


out0.mdgp_claim.rsp_medicaid_sbg_tnicn::depends_on(
         in.bxrnip
         );


out0.mdgp_claim.sbm_medicaid_agency_nbr::depends_on(
         in.bxrkip
         );


out0.mdgp_claim.sbm_medicaid_id_nbr::depends_on(
         in.bxvkhk
         );


out0.mdgp_claim.sbm_partd_quafd_fcty_flg::depends_on(
         in.bxutoc
         );


out0.mdgp_claim.src_env_sk::depends_on(
         in.rxt_src_envrt_id
         );


out0.mdgp_claim.rsp_medicaid_agency_nbr::depends_on(
         in.bxrmip
         );


out0.mdgp_claim.rsp_medicaid_id_nbr::depends_on(
         in.bxvlhk
         );


out0.mdgp_claim.sbm_medicaid_sbg_tnicn::depends_on(
         in.bxrlip
         );


out0.mdgp_claim.claim_nbr_encrp::depends_on(
         in.bxp2nb
         );


out0.mdgp_claim.sbm_medicaid_ind::depends_on(
         in.bxuroc
         );


out0.mdgp_claim.claim_nbr::depends_on(
         in.bxp2nb
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_ctrx_rcmdgp_to_the_ctrx_f_medigap_claim_trx_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.mdgp_claim.sbm_medicaid_paid_amt,'mdgp_claim.sbm_medicaid_paid_amt',1,0]
     [out0.mdgp_claim.sbm_prvdr_accpt_asg_flg,'mdgp_claim.sbm_prvdr_accpt_asg_flg',1,0]
     [out0.mdgp_claim.claim_seq_nbr,'mdgp_claim.claim_seq_nbr',1,0]
     [out0.mdgp_claim.cag_sk,'mdgp_claim.cag_sk',1,0]
     [out0.mdgp_claim.sec_flg,'mdgp_claim.sec_flg',1,0]
     [out0.mdgp_claim.mbr_sk,'mdgp_claim.mbr_sk',1,0]
     [out0.mdgp_claim.sub_medigap_id,'mdgp_claim.sub_medigap_id',1,0]
     [out0.mdgp_claim.rsp_medicaid_sbg_tnicn,'mdgp_claim.rsp_medicaid_sbg_tnicn',1,0]
     [out0.mdgp_claim.sbm_medicaid_agency_nbr,'mdgp_claim.sbm_medicaid_agency_nbr',1,0]
     [out0.mdgp_claim.sbm_medicaid_id_nbr,'mdgp_claim.sbm_medicaid_id_nbr',1,0]
     [out0.mdgp_claim.sbm_partd_quafd_fcty_flg,'mdgp_claim.sbm_partd_quafd_fcty_flg',1,0]
     [out0.mdgp_claim.src_env_sk,'mdgp_claim.src_env_sk',1,0]
     [out0.mdgp_claim.rsp_medicaid_agency_nbr,'mdgp_claim.rsp_medicaid_agency_nbr',1,0]
     [out0.mdgp_claim.rsp_medicaid_id_nbr,'mdgp_claim.rsp_medicaid_id_nbr',1,0]
     [out0.mdgp_claim.sbm_medicaid_sbg_tnicn,'mdgp_claim.sbm_medicaid_sbg_tnicn',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.mdgp_claim.claim_nbr_encrp,'mdgp_claim.claim_nbr_encrp',1,0]
     [out0.mdgp_claim.sbm_medicaid_ind,'mdgp_claim.sbm_medicaid_ind',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.mdgp_claim.claim_nbr,'mdgp_claim.claim_nbr',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.bxuroc,'bxuroc',1,1]
     [in0.bxvlhk,'bxvlhk',1,1]
     [in0.bxqjhz,'bxqjhz',1,1]
     [in0.bxp2nb,'bxp2nb',7,4]
     [in0.bxvkhk,'bxvkhk',1,1]
     [in0.bxoinb,'bxoinb',6,3]
     [in0.dqs6st,'dqs6st',1,2]
     [in0.bxrnip,'bxrnip',1,1]
     [in0.bxusoc,'bxusoc',1,1]
     [in0.bxvjhk,'bxvjhk',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',2,3]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.bxrlip,'bxrlip',1,1]
     [in0.bxutoc,'bxutoc',1,1]
     [in0.bxrmip,'bxrmip',1,1]
     [in0.bxrkip,'bxrkip',1,1]
     ['lookup("f_claim_transaction.reduced").mbr_sk','mbr_sk',1,1]
     ['lookup("f_claim_transaction.reduced").cag_sk','cag_sk',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) mdgp_claim_claim_nbr = fail_if_error(in0.bxp2nb);
let decimal("\x01",0) mdgp_claim_claim_seq_nbr = fail_if_error(if(in0.bxoinb < 0)in0.bxoinb else (1000 - in0.bxoinb));
let decimal("\x01",0) mdgp_claim_cag_sk;
let decimal("\x01",0) mdgp_claim_mbr_sk;
let string("\x01",charset="iso-8859-15", maximum_length=20) mdgp_claim_sub_medigap_id = fail_if_error(in0.bxvjhk);
let string("\x01",charset="iso-8859-15", maximum_length=2) mdgp_claim_sbm_medicaid_ind = fail_if_error(in0.bxuroc);
let string("\x01",charset="iso-8859-15", maximum_length=1) mdgp_claim_sbm_prvdr_accpt_asg_flg = fail_if_error(in0.bxusoc);
let string("\x01",charset="iso-8859-15", maximum_length=1) mdgp_claim_sbm_partd_quafd_fcty_flg = fail_if_error(in0.bxutoc);
let string("\x01",charset="iso-8859-15", maximum_length=20) mdgp_claim_sbm_medicaid_id_nbr = fail_if_error(in0.bxvkhk);
let string("\x01",charset="iso-8859-15", maximum_length=15) mdgp_claim_sbm_medicaid_agency_nbr = fail_if_error(in0.bxrkip);
let string("\x01",charset="iso-8859-15", maximum_length=20) mdgp_claim_sbm_medicaid_sbg_tnicn = fail_if_error(in0.bxrlip);
let decimal("\x01",0) mdgp_claim_sbm_medicaid_paid_amt = fail_if_error(in0.bxqjhz);
let string("\x01",charset="iso-8859-15", maximum_length=20) mdgp_claim_rsp_medicaid_id_nbr = fail_if_error(in0.bxvlhk);
let string("\x01",charset="iso-8859-15", maximum_length=15) mdgp_claim_rsp_medicaid_agency_nbr = fail_if_error(in0.bxrmip);
let string("\x01",charset="iso-8859-15", maximum_length=20) mdgp_claim_rsp_medicaid_sbg_tnicn = fail_if_error(in0.bxrnip);
let decimal("\x01",0) mdgp_claim_src_env_sk = fail_if_error((decimal(''))(in0.rxt_src_envrt_id));
let decimal("\x01",0) mdgp_claim_claim_nbr_encrp;
let decimal("\x01",0) mdgp_claim_sec_flg = 0;

bzt_8_6c54cc0a_591ed512_6543_0 = 0;


/*   Default value   */
mdgp_claim_cag_sk=fail_if_error(bzt_5_6c54cc0a_591ed512_6543_0(in0).cag_sk);

/*   Default value   */
mdgp_claim_mbr_sk=fail_if_error(bzt_5_6c54cc0a_591ed512_6543_0(in0).mbr_sk);

/*   Default value   */
mdgp_claim_claim_nbr_encrp=fail_if_error(if(in0.bxp2nb>0) (decimal(''))(string_concat(string_substring((decimal(''))in0.bxp2nb,1,2),ff3_encrypt_idwdata((decimal(''))in0.bxp2nb))) 
else  (decimal(''))(string_concat(string_substring((decimal(''))in0.bxp2nb,1,3),ff3_encrypt_idwdata(decimal_strip(math_abs((decimal(''))in0.bxp2nb))))));

  out0.mdgp_claim.claim_nbr::mdgp_claim_claim_nbr;
  out0.mdgp_claim.claim_seq_nbr::mdgp_claim_claim_seq_nbr;
  out0.mdgp_claim.cag_sk::mdgp_claim_cag_sk;
  out0.mdgp_claim.mbr_sk::mdgp_claim_mbr_sk;
  out0.mdgp_claim.sub_medigap_id::mdgp_claim_sub_medigap_id;
  out0.mdgp_claim.sbm_medicaid_ind::mdgp_claim_sbm_medicaid_ind;
  out0.mdgp_claim.sbm_prvdr_accpt_asg_flg::mdgp_claim_sbm_prvdr_accpt_asg_flg;
  out0.mdgp_claim.sbm_partd_quafd_fcty_flg::mdgp_claim_sbm_partd_quafd_fcty_flg;
  out0.mdgp_claim.sbm_medicaid_id_nbr::mdgp_claim_sbm_medicaid_id_nbr;
  out0.mdgp_claim.sbm_medicaid_agency_nbr::mdgp_claim_sbm_medicaid_agency_nbr;
  out0.mdgp_claim.sbm_medicaid_sbg_tnicn::mdgp_claim_sbm_medicaid_sbg_tnicn;
  out0.mdgp_claim.sbm_medicaid_paid_amt::mdgp_claim_sbm_medicaid_paid_amt;
  out0.mdgp_claim.rsp_medicaid_id_nbr::mdgp_claim_rsp_medicaid_id_nbr;
  out0.mdgp_claim.rsp_medicaid_agency_nbr::mdgp_claim_rsp_medicaid_agency_nbr;
  out0.mdgp_claim.rsp_medicaid_sbg_tnicn::mdgp_claim_rsp_medicaid_sbg_tnicn;
  out0.mdgp_claim.src_env_sk::mdgp_claim_src_env_sk;
  out0.mdgp_claim.claim_nbr_encrp::mdgp_claim_claim_nbr_encrp;
  out0.mdgp_claim.sec_flg::mdgp_claim_sec_flg;
  out0.*::in0.*;
end;
