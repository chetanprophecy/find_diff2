/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_581085c2_18c1_5 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.prod_subscrp.cas_eff_dt,[passthrough],in0.cas_eff_dt]
  [out0.prod_subscrp.src_env_sk,[transform],]
  [out0.prod_subscrp.cas_end_dt,[passthrough],in0.cas_end_dt]
  [out0.prod_subscrp.performace_guar_flag,[passthrough],in0.performace_guarantee_flag]
  [out0.prod_subscrp.end_dt,[passthrough],in0.end_dt]
  [out0.prod_subscrp.client_id,[passthrough],in0.client_id]
  [out0.prod_subscrp.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.prod_subscrp.cpp_client_sk,[transform],in0.client_id,
     'lookup("c_client").dxf_sk']
  [out0.prod_subscrp.cpp_product_sk,[transform],in0.product_id,
     'lookup("c_product").dxf_sk']
  [out0.prod_subscrp.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.prod_subscrp.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.prod_subscrp.cpp_created_by,[passthrough],in0.created_by]
  [out0.prod_subscrp.eff_dt,[passthrough],in0.eff_dt]
  [out0.prod_subscrp.cpp_client_product_subscrp_sk,[transform],]
  [out0.prod_subscrp.network_portal_option,[passthrough],in0.network_portal_option]
  [out0.prod_subscrp.product_id,[passthrough],in0.product_id]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.prod_subscrp.extract_lyout_freq,'prod_subscrp.extract_lyout_freq',1,0]
     [out0.prod_subscrp.member_material_consldt_flag,'prod_subscrp.member_material_consldt_flag',1,0]
     [out0.prod_subscrp.cas_eff_dt,'prod_subscrp.cas_eff_dt',1,0]
     [out0.prod_subscrp.member_dual_language_ind,'prod_subscrp.member_dual_language_ind',1,0]
     [out0.prod_subscrp.extract_lyout_type,'prod_subscrp.extract_lyout_type',1,0]
     [out0.prod_subscrp.src_env_sk,'prod_subscrp.src_env_sk',1,0]
     [out0.prod_subscrp.cas_end_dt,'prod_subscrp.cas_end_dt',1,0]
     [out0.prod_subscrp.performace_guar_flag,'prod_subscrp.performace_guar_flag',1,0]
     [out0.prod_subscrp.end_dt,'prod_subscrp.end_dt',1,0]
     [out0.prod_subscrp.client_id,'prod_subscrp.client_id',1,0]
     [out0.prod_subscrp.priority,'prod_subscrp.priority',1,0]
     [out0.prod_subscrp.cpp_create_ts,'prod_subscrp.cpp_create_ts',1,0]
     [out0.prod_subscrp.cpp_client_sk,'prod_subscrp.cpp_client_sk',1,0]
     [out0.prod_subscrp.cpp_product_sk,'prod_subscrp.cpp_product_sk',1,0]
     [out0.prod_subscrp.cpp_update_ts,'prod_subscrp.cpp_update_ts',1,0]
     [out0.prod_subscrp.cpp_updated_by,'prod_subscrp.cpp_updated_by',1,0]
     [out0.prod_subscrp.cpp_created_by,'prod_subscrp.cpp_created_by',1,0]
     [out0.prod_subscrp.extract_lyout_flag,'prod_subscrp.extract_lyout_flag',1,0]
     [out0.prod_subscrp.roi_flag,'prod_subscrp.roi_flag',1,0]
     [out0.prod_subscrp.cas_idntfn_only_flag,'prod_subscrp.cas_idntfn_only_flag',1,0]
     [out0.prod_subscrp.cas_freq,'prod_subscrp.cas_freq',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.prod_subscrp.eff_dt,'prod_subscrp.eff_dt',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.prod_subscrp.cpp_client_product_subscrp_sk,'prod_subscrp.cpp_client_product_subscrp_sk',1,0]
     [out0.prod_subscrp.roi_value,'prod_subscrp.roi_value',1,0]
     [out0.prod_subscrp.ivr_non_responder,'prod_subscrp.ivr_non_responder',1,0]
     [out0.prod_subscrp.bill_at_product_flag,'prod_subscrp.bill_at_product_flag',1,0]
     [out0.prod_subscrp.network_portal_option,'prod_subscrp.network_portal_option',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.prod_subscrp.product_id,'prod_subscrp.product_id',1,0]
     [out0.prod_subscrp.cas_flag,'prod_subscrp.cas_flag',1,0]
  ]
  impacts:
  [
     [in0.bill_at_product_flag,'bill_at_product_flag',1,1]
     [in0.extract_lyout_freq,'extract_lyout_freq',1,1]
     [in0.extract_lyout_type,'extract_lyout_type',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.eff_dt,'eff_dt',1,1]
     [in0.extract_lyout_flag,'extract_lyout_flag',1,1]
     [in0.cas_eff_dt,'cas_eff_dt',1,1]
     [in0.network_portal_option,'network_portal_option',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.roi_value,'roi_value',1,1]
     [in0.performace_guarantee_flag,'performace_guarantee_flag',1,1]
     [in0.member_dual_language_ind,'member_dual_language_ind',1,1]
     ['lookup("c_client").dxf_sk','dxf_sk',1,1]
     [in0.created_by,'created_by',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     ['lookup("c_product").dxf_sk','dxf_sk',1,1]
     [in0.cas_idntfn_only_flag,'cas_idntfn_only_flag',1,1]
     [in0.ivr_non_responder,'ivr_non_responder',1,1]
     [in0.product_id,'product_id',2,2]
     [in0.member_material_consldt_flag,'member_material_consldt_flag',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.updated_by,'updated_by',1,1]
     [in0.cas_flag,'cas_flag',1,1]
     [in0.end_dt,'end_dt',1,1]
     [in0.priority,'priority',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.cas_freq,'cas_freq',1,1]
     [in0.client_id,'client_id',2,2]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.roi_flag,'roi_flag',1,1]
     [in0.cas_end_dt,'cas_end_dt',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) prod_subscrp_cpp_client_product_subscrp_sk = -1;
let utf8 string("\x01", maximum_length=60) prod_subscrp_client_id = fail_if_error(in0.client_id);
let decimal("\x01",0) prod_subscrp_cpp_client_sk;
let utf8 string("\x01", maximum_length=60) prod_subscrp_product_id = fail_if_error(in0.product_id);
let decimal("\x01",0) prod_subscrp_cpp_product_sk;
let utf8 string("\x01", maximum_length=200) prod_subscrp_network_portal_option = fail_if_error(in0.network_portal_option);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") prod_subscrp_eff_dt = fail_if_error(in0.eff_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") prod_subscrp_end_dt = fail_if_error(in0.end_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") prod_subscrp_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) prod_subscrp_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") prod_subscrp_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) prod_subscrp_cpp_created_by = fail_if_error(in0.created_by);
let utf8 string("\x01", maximum_length=200) prod_subscrp_ivr_non_responder = fail_if_error(in0.ivr_non_responder);
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_roi_flag = fail_if_error(in0.roi_flag);
let utf8 string("\x01", maximum_length=12000) prod_subscrp_roi_value = fail_if_error(in0.roi_value);
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_bill_at_product_flag = fail_if_error(in0.bill_at_product_flag);
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_performace_guar_flag = fail_if_error(in0.performace_guarantee_flag);
let decimal("\x01",0, maximum_length=39, sign_reserved) prod_subscrp_priority = fail_if_error(in0.priority);
let decimal("\x01",0) prod_subscrp_src_env_sk = 710;
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_cas_flag = fail_if_error(in0.cas_flag);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") prod_subscrp_cas_eff_dt = fail_if_error(in0.cas_eff_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") prod_subscrp_cas_end_dt = fail_if_error(in0.cas_end_dt);
let string("\x01",charset="iso-8859-15", maximum_length=15) prod_subscrp_cas_freq = fail_if_error(in0.cas_freq);
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_member_material_consldt_flag = fail_if_error(in0.member_material_consldt_flag);
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_member_dual_language_ind = fail_if_error(in0.member_dual_language_ind);
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_cas_idntfn_only_flag = fail_if_error(in0.cas_idntfn_only_flag);
let string("\x01",charset="iso-8859-15", maximum_length=50) prod_subscrp_extract_lyout_type = fail_if_error(in0.extract_lyout_type);
let string("\x01",charset="iso-8859-15", maximum_length=1) prod_subscrp_extract_lyout_flag = fail_if_error(in0.extract_lyout_flag);
let string("\x01",charset="iso-8859-15", maximum_length=20) prod_subscrp_extract_lyout_freq = fail_if_error(in0.extract_lyout_freq);



/*   Default value   */
prod_subscrp_cpp_client_sk=fail_if_error(first_defined(lookup("c_client",in0.client_id).dxf_sk,-1));

/*   Default value   */
prod_subscrp_cpp_product_sk=fail_if_error(first_defined(lookup("c_product",in0.product_id).dxf_sk,-1));

  out0.prod_subscrp.cpp_client_product_subscrp_sk::prod_subscrp_cpp_client_product_subscrp_sk;
  out0.prod_subscrp.client_id::prod_subscrp_client_id;
  out0.prod_subscrp.cpp_client_sk::prod_subscrp_cpp_client_sk;
  out0.prod_subscrp.product_id::prod_subscrp_product_id;
  out0.prod_subscrp.cpp_product_sk::prod_subscrp_cpp_product_sk;
  out0.prod_subscrp.network_portal_option::prod_subscrp_network_portal_option;
  out0.prod_subscrp.eff_dt::prod_subscrp_eff_dt;
  out0.prod_subscrp.end_dt::prod_subscrp_end_dt;
  out0.prod_subscrp.cpp_update_ts::prod_subscrp_cpp_update_ts;
  out0.prod_subscrp.cpp_updated_by::prod_subscrp_cpp_updated_by;
  out0.prod_subscrp.cpp_create_ts::prod_subscrp_cpp_create_ts;
  out0.prod_subscrp.cpp_created_by::prod_subscrp_cpp_created_by;
  out0.prod_subscrp.ivr_non_responder::prod_subscrp_ivr_non_responder;
  out0.prod_subscrp.roi_flag::prod_subscrp_roi_flag;
  out0.prod_subscrp.roi_value::prod_subscrp_roi_value;
  out0.prod_subscrp.bill_at_product_flag::prod_subscrp_bill_at_product_flag;
  out0.prod_subscrp.performace_guar_flag::prod_subscrp_performace_guar_flag;
  out0.prod_subscrp.priority::prod_subscrp_priority;
  out0.prod_subscrp.src_env_sk::prod_subscrp_src_env_sk;
  out0.prod_subscrp.cas_flag::prod_subscrp_cas_flag;
  out0.prod_subscrp.cas_eff_dt::prod_subscrp_cas_eff_dt;
  out0.prod_subscrp.cas_end_dt::prod_subscrp_cas_end_dt;
  out0.prod_subscrp.cas_freq::prod_subscrp_cas_freq;
  out0.prod_subscrp.member_material_consldt_flag::prod_subscrp_member_material_consldt_flag;
  out0.prod_subscrp.member_dual_language_ind::prod_subscrp_member_dual_language_ind;
  out0.prod_subscrp.cas_idntfn_only_flag::prod_subscrp_cas_idntfn_only_flag;
  out0.prod_subscrp.extract_lyout_type::prod_subscrp_extract_lyout_type;
  out0.prod_subscrp.extract_lyout_flag::prod_subscrp_extract_lyout_flag;
  out0.prod_subscrp.extract_lyout_freq::prod_subscrp_extract_lyout_freq;
  out0.*::in0.*;

end;
