/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';


out0::reformat(in0)=
begin
let decimal("\x01",0) f_cdur_ev_m_cag_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_phr_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_prod_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_mbr_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_pbr_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_gpi_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_claim_nbr = fail_if_error(in0.d3p2nb);
let decimal("\x01",0) f_cdur_ev_m_claim_seq_nbr = fail_if_error(in0.d3oinb);
let decimal("\x01",0) f_cdur_ev_m_claim_stat_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_sbm_dt_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_filled_dt_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_rej_cd1_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_rej_cd2_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_rej_cd3_sk = -1;
let decimal("\x01",0) f_cdur_ev_m_dur_rsp_cd_cntr = fail_if_error(in0.d3jjnb);
let string("\x01",charset="iso-8859-15", maximum_length=2) f_cdur_ev_m_dur_srvc_cd_rsn = fail_if_error(in0.d3l7st);
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_dur_clinical_sign_flg = fail_if_error(in0.d3l1st);
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_dur_oth_phr_ind = fail_if_error(in0.d3l2st);
let date("YYYYMMDD")("\x01") f_cdur_ev_m_dur_prev_fill_dt = fail_if_error(in0.d3aeda);
let decimal("\x01".3, maximum_length=10, sign_reserved) f_cdur_ev_m_dur_prev_fill_qty = fail_if_error(in0.d3jgnb);
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_dur_db_ind = fail_if_error(in0.d3l3st);
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_dur_oth_pbr_ind = fail_if_error(in0.d3l8st);
let string("\x01",charset="iso-8859-15", maximum_length=30) f_cdur_ev_m_dur_free_txt_msg = fail_if_error(in0.d3lvtx);
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_dur_rsp_flg = fail_if_error(in0.d3aeh6);
let string("\x01",charset="iso-8859-15", maximum_length=8) f_cdur_ev_m_dur_table_nm = '-';
let decimal("\x01",0) f_cdur_ev_m_dur_cnflct_det_cnt = fail_if_error(in0.d3iohr);
let decimal("\x01",0) f_cdur_ev_m_dur_cnflct_ret_cnt = fail_if_error(in0.d3iphr);
let string("\x01",charset="iso-8859-15", maximum_length=8) f_cdur_ev_m_dur_srvc_nm = fail_if_error(in0.d3nkcd);
let decimal("\x01",0) f_cdur_ev_m_cnflct_claim_nbr = fail_if_error(in0.d3iqhr);
let decimal("\x01",0) f_cdur_ev_m_cnflct_claim_seq_nbr = fail_if_error(in0.d3irhr);
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_cnflct_claim_stat_id = fail_if_error(if(in0.d3irhr > 0) 'P' else '-');
let decimal("\x01",0) f_cdur_ev_m_cnflct_prod_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_dur_user_ovrd_flg = fail_if_error(in0.d3afh6);
let decimal("\x01",0) f_cdur_ev_m_dur_doc_level = fail_if_error(in0.d3bzik);
let decimal("\x01",0) f_cdur_ev_m_dur_onset = fail_if_error(in0.d3b0ik);
let decimal("\x01",0) f_cdur_ev_m_dur_dup_cnt = fail_if_error(in0.d3ishr);
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_dur_dup_alwd_flg = fail_if_error(in0.d3z5ha);
let string("\x01",charset="iso-8859-15", maximum_length=40) f_cdur_ev_m_dur_msg = fail_if_error(if( in0.d3jjnb member  [vector  1,2,3]) in0.d3jjnb else '-');
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_app_ingred_cost_paid = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_app_dispensing_fee = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_app_sales_tax_paid = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_app_patient_pay_amt = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_app_due_amt = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_clr_ingred_cost_paid = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_clr_dispensing_fee = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_clr_sales_tax_paid = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_clr_patient_pay_amt = 0;
let decimal("\x01".2, maximum_length=11, sign_reserved) f_cdur_ev_m_clr_due_amt = 0;
let decimal("\x01",0) f_cdur_ev_m_days_of_supply = 0;
let decimal("\x01".3, maximum_length=13, sign_reserved) f_cdur_ev_m_drug_quantity = 0;
let string("\x01",charset="iso-8859-15", maximum_length=1) f_cdur_ev_m_recent_clm_flg = '-';
let decimal("\x01",0) f_cdur_ev_m_src_env_sk = fail_if_error(in0.dxf_src_sys_id);



  out0.f_cdur_ev_m.cag_sk::f_cdur_ev_m_cag_sk;
  out0.f_cdur_ev_m.phr_sk::f_cdur_ev_m_phr_sk;
  out0.f_cdur_ev_m.prod_sk::f_cdur_ev_m_prod_sk;
  out0.f_cdur_ev_m.mbr_sk::f_cdur_ev_m_mbr_sk;
  out0.f_cdur_ev_m.pbr_sk::f_cdur_ev_m_pbr_sk;
  out0.f_cdur_ev_m.gpi_sk::f_cdur_ev_m_gpi_sk;
  out0.f_cdur_ev_m.claim_nbr::f_cdur_ev_m_claim_nbr;
  out0.f_cdur_ev_m.claim_seq_nbr::f_cdur_ev_m_claim_seq_nbr;
  out0.f_cdur_ev_m.claim_stat_sk::f_cdur_ev_m_claim_stat_sk;
  out0.f_cdur_ev_m.sbm_dt_sk::f_cdur_ev_m_sbm_dt_sk;
  out0.f_cdur_ev_m.filled_dt_sk::f_cdur_ev_m_filled_dt_sk;
  out0.f_cdur_ev_m.rej_cd1_sk::f_cdur_ev_m_rej_cd1_sk;
  out0.f_cdur_ev_m.rej_cd2_sk::f_cdur_ev_m_rej_cd2_sk;
  out0.f_cdur_ev_m.rej_cd3_sk::f_cdur_ev_m_rej_cd3_sk;
  out0.f_cdur_ev_m.dur_rsp_cd_cntr::f_cdur_ev_m_dur_rsp_cd_cntr;
  out0.f_cdur_ev_m.dur_srvc_cd_rsn::f_cdur_ev_m_dur_srvc_cd_rsn;
  out0.f_cdur_ev_m.dur_clinical_sign_flg::f_cdur_ev_m_dur_clinical_sign_flg;
  out0.f_cdur_ev_m.dur_oth_phr_ind::f_cdur_ev_m_dur_oth_phr_ind;
  out0.f_cdur_ev_m.dur_prev_fill_dt::f_cdur_ev_m_dur_prev_fill_dt;
  out0.f_cdur_ev_m.dur_prev_fill_qty::f_cdur_ev_m_dur_prev_fill_qty;
  out0.f_cdur_ev_m.dur_db_ind::f_cdur_ev_m_dur_db_ind;
  out0.f_cdur_ev_m.dur_oth_pbr_ind::f_cdur_ev_m_dur_oth_pbr_ind;
  out0.f_cdur_ev_m.dur_free_txt_msg::f_cdur_ev_m_dur_free_txt_msg;
  out0.f_cdur_ev_m.dur_rsp_flg::f_cdur_ev_m_dur_rsp_flg;
  out0.f_cdur_ev_m.dur_table_nm::f_cdur_ev_m_dur_table_nm;
  out0.f_cdur_ev_m.dur_cnflct_det_cnt::f_cdur_ev_m_dur_cnflct_det_cnt;
  out0.f_cdur_ev_m.dur_cnflct_ret_cnt::f_cdur_ev_m_dur_cnflct_ret_cnt;
  out0.f_cdur_ev_m.dur_srvc_nm::f_cdur_ev_m_dur_srvc_nm;
  out0.f_cdur_ev_m.cnflct_claim_nbr::f_cdur_ev_m_cnflct_claim_nbr;
  out0.f_cdur_ev_m.cnflct_claim_seq_nbr::f_cdur_ev_m_cnflct_claim_seq_nbr;
  out0.f_cdur_ev_m.cnflct_claim_stat_id::f_cdur_ev_m_cnflct_claim_stat_id;
  out0.f_cdur_ev_m.cnflct_prod_sk::f_cdur_ev_m_cnflct_prod_sk;
  out0.f_cdur_ev_m.dur_user_ovrd_flg::f_cdur_ev_m_dur_user_ovrd_flg;
  out0.f_cdur_ev_m.dur_doc_level::f_cdur_ev_m_dur_doc_level;
  out0.f_cdur_ev_m.dur_onset::f_cdur_ev_m_dur_onset;
  out0.f_cdur_ev_m.dur_dup_cnt::f_cdur_ev_m_dur_dup_cnt;
  out0.f_cdur_ev_m.dur_dup_alwd_flg::f_cdur_ev_m_dur_dup_alwd_flg;
  out0.f_cdur_ev_m.dur_msg::f_cdur_ev_m_dur_msg;
  out0.f_cdur_ev_m.app_ingred_cost_paid::f_cdur_ev_m_app_ingred_cost_paid;
  out0.f_cdur_ev_m.app_dispensing_fee::f_cdur_ev_m_app_dispensing_fee;
  out0.f_cdur_ev_m.app_sales_tax_paid::f_cdur_ev_m_app_sales_tax_paid;
  out0.f_cdur_ev_m.app_patient_pay_amt::f_cdur_ev_m_app_patient_pay_amt;
  out0.f_cdur_ev_m.app_due_amt::f_cdur_ev_m_app_due_amt;
  out0.f_cdur_ev_m.clr_ingred_cost_paid::f_cdur_ev_m_clr_ingred_cost_paid;
  out0.f_cdur_ev_m.clr_dispensing_fee::f_cdur_ev_m_clr_dispensing_fee;
  out0.f_cdur_ev_m.clr_sales_tax_paid::f_cdur_ev_m_clr_sales_tax_paid;
  out0.f_cdur_ev_m.clr_patient_pay_amt::f_cdur_ev_m_clr_patient_pay_amt;
  out0.f_cdur_ev_m.clr_due_amt::f_cdur_ev_m_clr_due_amt;
  out0.f_cdur_ev_m.days_of_supply::f_cdur_ev_m_days_of_supply;
  out0.f_cdur_ev_m.drug_quantity::f_cdur_ev_m_drug_quantity;
  out0.f_cdur_ev_m.recent_clm_flg::f_cdur_ev_m_recent_clm_flg;
  out0.f_cdur_ev_m.src_env_sk::f_cdur_ev_m_src_env_sk;
  out0.*::in0.*;

end;
