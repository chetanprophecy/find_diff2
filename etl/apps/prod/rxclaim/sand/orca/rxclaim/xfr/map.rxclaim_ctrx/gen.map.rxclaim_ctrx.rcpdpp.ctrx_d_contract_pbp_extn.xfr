/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5cb857f4_bd94_0 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.d_cntrct_pb.account_id,[passthrough],in0.mpv0hc]
  [out0.d_cp_extn.pbp_id,[passthrough],in0.mpvyhc]
  [out0.d_cp_extn.pdp_thru_dt,[transform],in0.mpnihg]
  [out0.d_cp_extn.pdp_thrshld_ctstr_cvg,[transform],in0.mphchs]
  [out0.d_cntrct_pb.employer_group_id,[passthrough],in0.mpv1hc]
  [out0.d_cp_extn.pdp_copay_coinsur_val2,[transform],in0.mpx3ih]
  [out0.d_cntrct_pb.sequence_no,[passthrough],in0.mpdahs]
  [out0.d_cp_extn.pdp_copay_coinsur_val3,[transform],in0.mpx3ih]
  [out0.d_cp_extn.pdp_status_cd,[passthrough],in0.mpouh9]
  [out0.d_cag_sk.employer_group_id,[passthrough],in0.mpv1hc]
  [out0.d_cp_extn.src_env_sk,[passthrough],in0.dxf_src_sys_id]
  [out0.d_cp_extn.account_id,[passthrough],in0.mpv0hc]
  [out0.d_cp_extn.plan_cd,[passthrough],in0.mpaecd]
  [out0.d_cp_extn.pdp_med_pln_type,[transform],in0.mpxli1]
  [out0.d_cp_extn.employer_group_id,[passthrough],in0.mpv1hc]
  [out0.d_cp_extn.pdp_copay_coinsur_val1,[transform],in0.mpx3ih]
  [out0.d_cp_extn.pdp_frmlry_notice_list,[passthrough],in0.mphrhd]
  [out0.d_cp_extn.segment_id,[transform],in0.mpvzhc]
  [out0.d_cp_extn.cag_sk,[transform],]
  [out0.d_cp_extn.cpp_pricing_sched_nm,[passthrough],in0.mpv3hc]
  [out0.d_cp_extn.contract_pbp_extn_sk,[transform],]
  [out0.d_cp_extn.pdp_from_dt,[transform],in0.mpnhhg]
  [out0.d_cp_extn.pdp_website_addr,[transform],in0.mpo8ih]
  [out0.d_cp_extn.sequence_no,[passthrough],in0.mpdahs]
  [out0.d_cag_sk.carrier_id,[passthrough],in0.mpaacd]
  [out0.d_cp_extn.contract_pbp_sk,[transform],]
  [out0.d_cp_extn.contract_no,[passthrough],in0.mpvwhc]
  [out0.d_cntrct_pb.plan_cd,[passthrough],in0.mpaecd]
  [out0.d_cp_extn.carrier_id,[passthrough],in0.mpaacd]
  [out0.d_cag_sk.account_id,[passthrough],in0.mpv0hc]
  [out0.d_cntrct_pb.carrier_id,[passthrough],in0.mpaacd]
  [out0.d_cp_extn.plan_eff_dt,[transform],in0.mpakdt]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.d_cntrct_pb.account_id,'d_cntrct_pb.account_id',1,0]
     [out0.d_cp_extn.pbp_id,'d_cp_extn.pbp_id',1,0]
     [out0.d_cp_extn.pdp_thru_dt,'d_cp_extn.pdp_thru_dt',1,0]
     [out0.d_cp_extn.pdp_thrshld_ctstr_cvg,'d_cp_extn.pdp_thrshld_ctstr_cvg',1,0]
     [out0.d_cntrct_pb.employer_group_id,'d_cntrct_pb.employer_group_id',1,0]
     [out0.d_cp_extn.pdp_copay_coinsur_val2,'d_cp_extn.pdp_copay_coinsur_val2',1,0]
     [out0.d_cntrct_pb.sequence_no,'d_cntrct_pb.sequence_no',1,0]
     [out0.d_cp_extn.pdp_copay_coinsur_val3,'d_cp_extn.pdp_copay_coinsur_val3',1,0]
     [out0.d_cp_extn.pdp_status_cd,'d_cp_extn.pdp_status_cd',1,0]
     [out0.d_cag_sk.employer_group_id,'d_cag_sk.employer_group_id',1,0]
     [out0.d_cp_extn.src_env_sk,'d_cp_extn.src_env_sk',1,0]
     [out0.d_cp_extn.account_id,'d_cp_extn.account_id',1,0]
     [out0.d_cp_extn.plan_cd,'d_cp_extn.plan_cd',1,0]
     [out0.d_cp_extn.pdp_med_pln_type,'d_cp_extn.pdp_med_pln_type',1,0]
     [out0.d_cp_extn.employer_group_id,'d_cp_extn.employer_group_id',1,0]
     [out0.d_cp_extn.pdp_copay_coinsur_val1,'d_cp_extn.pdp_copay_coinsur_val1',1,0]
     [out0.d_cp_extn.pdp_frmlry_notice_list,'d_cp_extn.pdp_frmlry_notice_list',1,0]
     [out0.d_cp_extn.segment_id,'d_cp_extn.segment_id',1,0]
     [out0.d_cp_extn.cag_sk,'d_cp_extn.cag_sk',1,0]
     [out0.d_cp_extn.cpp_pricing_sched_nm,'d_cp_extn.cpp_pricing_sched_nm',1,0]
     [out0.d_cp_extn.contract_pbp_extn_sk,'d_cp_extn.contract_pbp_extn_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.d_cp_extn.pdp_from_dt,'d_cp_extn.pdp_from_dt',1,0]
     [out0.d_cp_extn.pdp_website_addr,'d_cp_extn.pdp_website_addr',1,0]
     [out0.d_cp_extn.sequence_no,'d_cp_extn.sequence_no',1,0]
     [out0.d_cag_sk.carrier_id,'d_cag_sk.carrier_id',1,0]
     [out0.d_cp_extn.contract_pbp_sk,'d_cp_extn.contract_pbp_sk',1,0]
     [out0.d_cp_extn.contract_no,'d_cp_extn.contract_no',1,0]
     [out0.d_cntrct_pb.plan_cd,'d_cntrct_pb.plan_cd',1,0]
     [out0.d_cp_extn.carrier_id,'d_cp_extn.carrier_id',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.d_cag_sk.account_id,'d_cag_sk.account_id',1,0]
     [out0.d_cntrct_pb.carrier_id,'d_cntrct_pb.carrier_id',1,0]
     [out0.d_cp_extn.plan_eff_dt,'d_cp_extn.plan_eff_dt',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
  ]
  impacts:
  [
     [in0.mpxli1,'mpxli1',1,1]
     [in0.mpakdt,'mpakdt',1,1]
     [in0.mpouh9,'mpouh9',1,1]
     [in0.mphchs,'mphchs',2,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.mpaacd,'mpaacd',3,3]
     [in0.mpnhhg,'mpnhhg',1,1]
     [in0.mpvyhc,'mpvyhc',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
     [in0.mpx3ih,'mpx3ih',28,3]
     [in0.mpv0hc,'mpv0hc',3,3]
     [in0.mpvwhc,'mpvwhc',1,1]
     [in0.mpdahs,'mpdahs',2,2]
     [in0.mpv3hc,'mpv3hc',1,1]
     [in0.mphrhd,'mphrhd',1,1]
     [in0.mpv1hc,'mpv1hc',3,3]
     [in0.mpvzhc,'mpvzhc',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.mpo8ih,'mpo8ih',1,1]
     [in0.mpaecd,'mpaecd',2,2]
     [in0.mpnihg,'mpnihg',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) d_cp_extn_contract_pbp_extn_sk = 0;
let decimal("\x01",0) d_cp_extn_contract_pbp_sk = 0;
let decimal("\x01",0) d_cp_extn_cag_sk = 0;
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cp_extn_carrier_id = fail_if_error(in0.mpaacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_cp_extn_account_id = fail_if_error(in0.mpv0hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cp_extn_employer_group_id = fail_if_error(in0.mpv1hc);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cp_extn_plan_cd = fail_if_error(in0.mpaecd);
let date("YYYYMMDD")("\x01") d_cp_extn_plan_eff_dt;
let decimal("\x01",0) d_cp_extn_sequence_no = fail_if_error(in0.mpdahs);
let string("\x01",charset="iso-8859-15", maximum_length=1) d_cp_extn_pdp_status_cd = fail_if_error(in0.mpouh9);
let date("YYYYMMDD")("\x01") d_cp_extn_pdp_from_dt;
let date("YYYYMMDD")("\x01") d_cp_extn_pdp_thru_dt;
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cp_extn_cpp_pricing_sched_nm = fail_if_error(in0.mpv3hc);
let string("\x01",charset="iso-8859-15", maximum_length=5) d_cp_extn_contract_no = fail_if_error(in0.mpvwhc);
let string("\x01",charset="iso-8859-15", maximum_length=3) d_cp_extn_pbp_id = fail_if_error(in0.mpvyhc);
let string("\x01",charset="iso-8859-15", maximum_length=3) d_cp_extn_segment_id;
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cp_extn_pdp_frmlry_notice_list = fail_if_error(in0.mphrhd);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cp_extn_pdp_copay_coinsur_val1 = fail_if_error(string_lrtrim(string_substring(str=in0.mpx3ih,start_index=1 , length=(decimal(""))math_abs(-1 +(if((decimal(""))string_index(str=in0.mpx3ih , find_str="¦" )>0)(decimal(""))string_index(str=in0.mpx3ih , find_str="¦" ) else (decimal(""))string_index(str=in0.mpx3ih , find_str="|" ))))));
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cp_extn_pdp_copay_coinsur_val2 = fail_if_error(if((decimal(""))string_index(str=in0.mpx3ih, find_str="¦") > 0)string_lrtrim(string_substring(str=in0.mpx3ih , start_index=(decimal(""))string_index(str=in0.mpx3ih,find_str="¦")+1,length=(decimal(""))math_abs((decimal(""))string_index(str=string_substring(str=in0.mpx3ih , start_index=(decimal(""))string_index(str=in0.mpx3ih , find_str="¦")+1,length=string_length(in0.mpx3ih)),find_str="¦")-1) ) ) else string_lrtrim(string_substring(str=in0.mpx3ih,start_index=(decimal(""))string_index(str=in0.mpx3ih,find_str="|")+1,length=(decimal(""))math_abs((decimal(""))string_index(str=string_substring(str=in0.mpx3ih , start_index=(decimal(""))string_index(str=in0.mpx3ih , find_str="¦")+1,length=string_length(in0.mpx3ih)),find_str="|")-1) ) ));
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cp_extn_pdp_copay_coinsur_val3 = fail_if_error(if((decimal(""))string_index(str=in0.mpx3ih, find_str="¦") > 0) string_substring(string_lrtrim(string_substring(str=in0.mpx3ih , start_index=(decimal(""))string_index(str=in0.mpx3ih , find_str="¦")+(decimal(""))string_index(str=string_substring(str=in0.mpx3ih , start_index=(decimal(""))string_index(str=in0.mpx3ih,find_str="¦")+1, length=string_length(in0.mpx3ih) ) , find_str="¦")+1 , length=string_length(in0.mpx3ih) ) ),1,10) else string_substring(string_lrtrim(string_substring(str=in0.mpx3ih , start_index=(decimal(""))string_index(str=in0.mpx3ih , find_str="|")+(decimal(""))string_index(str=string_substring(str=in0.mpx3ih , start_index=(decimal(""))string_index(str=in0.mpx3ih,find_str="|")+1, length=string_length(in0.mpx3ih) ) , find_str="|")+1 , length=string_length(in0.mpx3ih) ) ),1,10));
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cp_extn_pdp_thrshld_ctstr_cvg = fail_if_error(if(is_null(in0.mphchs))" " else (decimal(""))string_pad(str=in0.mphchs , length=10, pad_char=" " ));
let string("\x01",charset="iso-8859-15", maximum_length=60) d_cp_extn_pdp_website_addr = fail_if_error(string_pad(in0.mpo8ih,60,' '));
let string("\x01",charset="iso-8859-15", maximum_length=2) d_cp_extn_pdp_med_pln_type = fail_if_error(string_pad(in0.mpxli1,2,' '));
let decimal("\x01",0) d_cp_extn_src_env_sk = fail_if_error(in0.dxf_src_sys_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cag_sk_carrier_id = fail_if_error(in0.mpaacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_cag_sk_account_id = fail_if_error(in0.mpv0hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cag_sk_employer_group_id = fail_if_error(in0.mpv1hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cntrct_pb_carrier_id = fail_if_error(in0.mpaacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_cntrct_pb_account_id = fail_if_error(in0.mpv0hc);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cntrct_pb_employer_group_id = fail_if_error(in0.mpv1hc);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_cntrct_pb_plan_cd = fail_if_error(in0.mpaecd);
let decimal("\x01",0) d_cntrct_pb_sequence_no = fail_if_error(in0.mpdahs);



/*   Default value   */
d_cp_extn_pdp_thru_dt=fail_if_error(date_check(in0.mpnihg));

/*   Default value   */
d_cp_extn_segment_id=fail_if_error(str_non_nk(in0.mpvzhc));

/*   Default value   */
d_cp_extn_pdp_from_dt=fail_if_error(date_check(in0.mpnhhg));

/*   Default value   */
d_cp_extn_plan_eff_dt=fail_if_error(date_check(in0.mpakdt));

  out0.d_cp_extn.contract_pbp_extn_sk::d_cp_extn_contract_pbp_extn_sk;
  out0.d_cp_extn.contract_pbp_sk::d_cp_extn_contract_pbp_sk;
  out0.d_cp_extn.cag_sk::d_cp_extn_cag_sk;
  out0.d_cp_extn.carrier_id::d_cp_extn_carrier_id;
  out0.d_cp_extn.account_id::d_cp_extn_account_id;
  out0.d_cp_extn.employer_group_id::d_cp_extn_employer_group_id;
  out0.d_cp_extn.plan_cd::d_cp_extn_plan_cd;
  out0.d_cp_extn.plan_eff_dt::d_cp_extn_plan_eff_dt;
  out0.d_cp_extn.sequence_no::d_cp_extn_sequence_no;
  out0.d_cp_extn.pdp_status_cd::d_cp_extn_pdp_status_cd;
  out0.d_cp_extn.pdp_from_dt::d_cp_extn_pdp_from_dt;
  out0.d_cp_extn.pdp_thru_dt::d_cp_extn_pdp_thru_dt;
  out0.d_cp_extn.cpp_pricing_sched_nm::d_cp_extn_cpp_pricing_sched_nm;
  out0.d_cp_extn.contract_no::d_cp_extn_contract_no;
  out0.d_cp_extn.pbp_id::d_cp_extn_pbp_id;
  out0.d_cp_extn.segment_id::d_cp_extn_segment_id;
  out0.d_cp_extn.pdp_frmlry_notice_list::d_cp_extn_pdp_frmlry_notice_list;
  out0.d_cp_extn.pdp_copay_coinsur_val1::d_cp_extn_pdp_copay_coinsur_val1;
  out0.d_cp_extn.pdp_copay_coinsur_val2::d_cp_extn_pdp_copay_coinsur_val2;
  out0.d_cp_extn.pdp_copay_coinsur_val3::d_cp_extn_pdp_copay_coinsur_val3;
  out0.d_cp_extn.pdp_thrshld_ctstr_cvg::d_cp_extn_pdp_thrshld_ctstr_cvg;
  out0.d_cp_extn.pdp_website_addr::d_cp_extn_pdp_website_addr;
  out0.d_cp_extn.pdp_med_pln_type::d_cp_extn_pdp_med_pln_type;
  out0.d_cp_extn.src_env_sk::d_cp_extn_src_env_sk;
  out0.d_cag_sk.carrier_id::d_cag_sk_carrier_id;
  out0.d_cag_sk.account_id::d_cag_sk_account_id;
  out0.d_cag_sk.employer_group_id::d_cag_sk_employer_group_id;
  out0.d_cntrct_pb.carrier_id::d_cntrct_pb_carrier_id;
  out0.d_cntrct_pb.account_id::d_cntrct_pb_account_id;
  out0.d_cntrct_pb.employer_group_id::d_cntrct_pb_employer_group_id;
  out0.d_cntrct_pb.plan_cd::d_cntrct_pb_plan_cd;
  out0.d_cntrct_pb.sequence_no::d_cntrct_pb_sequence_no;
  out0.*::in0.*;

end;
