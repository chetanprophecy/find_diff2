type lookup_s_clm_c632 =
record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
  integer(8)  dxf_sk =  0 /*Added by Integration Framework. Surrogate key.*/;
  decimal("\x01",0, maximum_length=16, sign_reserved) claimnbr /*DECIMAL(15) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved) sequnnbr /*DECIMAL(3) NOT NULL*/;
  string("\x01", maximum_length=1) claimsta /*CHAR(1) NOT NULL*/;
  string("\x01", maximum_length=9) carierid /*CHAR(9) NOT NULL*/;
  string("\x01", maximum_length=15) acontnbr /*CHAR(15) NOT NULL*/;
  string("\x01", maximum_length=15) groupnbr /*CHAR(15) NOT NULL*/;
  string("\x01", maximum_length=10) plancode /*CHAR(10) NOT NULL*/;
  decimal("\x01",0, maximum_length=3, sign_reserved) tcd_tier /*DECIMAL(2) NOT NULL*/;
  decimal("\x01",0, maximum_length=3, sign_reserved) fomlryst /*DECIMAL(2) NOT NULL*/;
  decimal("\x01",0, maximum_length=9, sign_reserved) submdate /*DECIMAL(8) NOT NULL*/;
  string("\x01", maximum_length=1) sdpp_ind /*CHAR(1) NOT NULL*/;
  string("\x01", maximum_length=1) delg_ind /*CHAR(1) NOT NULL*/;
  string("\x01", maximum_length=1) tiercrct /*CHAR(1) NOT NULL*/;
  string("\x01", maximum_length=1) planflag /*CHAR(1) NOT NULL*/;
  decimal("\x01",0)   src_env_sk = NULL("") /*BIGINT NOT NULL*/;
  decimal("\x01", maximum_length=5)   dxf_src_sys_id =   0;
  datetime("YYYYMMDDHH24MISS")("\x01")   ids_create_dttm = NULL("");
  string("\x01", maximum_length=20)   ids_create_uid = NULL("");
  decimal("\x01",maximum_length=20)   ids_create_run_id =   0;
  datetime("YYYYMMDDHH24MISS")("\x01")   ids_updt_dttm = NULL("");
  string("\x01", maximum_length=20)   ids_updt_uid = NULL("");
  decimal("\x01",maximum_length=20)   ids_updt_run_id =   0;
  string("\x01",maximum_length=2)   ids_rec_stat_cd = NULL("");
  string(1)  newline = NULL("");
end

;

/*Reformat operation*/
out::reformat(in)=
begin

  let decimal("\x01",0)     temp_tier_level = allocate_with_nulls() /*INTEGER*/;
  let string("\x01",charset="iso-8859-15", maximum_length=2)     temp_client_cost_tier_amt = allocate_with_nulls() /*VARCHAR(2)*/;
  let decimal(1) temp_drop_record = 3;
  let lookup_s_clm_c632 temp_lookup_s_clm_c632 = allocate_with_defaults();
  let int count = lookup_count("s_clm_c632",in.dxf_hk_part1);
  
  if(count == 0)//If there is no change in record pass the record as it is .
  begin
        temp_tier_level = in.tier_level;
        temp_client_cost_tier_amt = in.client_cost_tier_amt;
        temp_drop_record = 1;
  end;
  else 
  begin
  
  for(let int i = 0,i < count)
  begin
        temp_lookup_s_clm_c632 = lookup_next("s_clm_c632");
        if(temp_lookup_s_clm_c632.dxf_hk_part2 == in.dxf_hk_part2)//If we get a record with match then update the tier level.
        begin
            temp_tier_level = temp_lookup_s_clm_c632.tcd_tier;
            temp_client_cost_tier_amt = if(temp_lookup_s_clm_c632.fomlryst == 0 or is_null(temp_lookup_s_clm_c632.fomlryst)) temp_lookup_s_clm_c632.tcd_tier else temp_lookup_s_clm_c632.fomlryst;
            temp_drop_record = 0;
        end
  
  end
  
  end;
  out.* :1: in.*;
  out.f_clm_trx_mn.* :: in.*;
  out.f_clm_trx_mn.drop_record :: temp_drop_record;
  out.f_clm_trx_mn.tier_level :: temp_tier_level;
  out.f_clm_trx_mn.client_cost_tier_amt :: temp_client_cost_tier_amt;
end;
