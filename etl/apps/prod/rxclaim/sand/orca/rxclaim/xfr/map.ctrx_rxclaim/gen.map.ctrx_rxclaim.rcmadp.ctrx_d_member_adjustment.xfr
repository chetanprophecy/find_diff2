/*   Do not edit. Generated file - BRE 4.0.2.6;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_ctrx_rxclaim_rcmadp_to_the_ctrx_d_member_adjustment_ILM_documentation(in)=
begin

out0.d_mem_adj.mad_adjtmnt_dt::depends_on(
         in.i5h1dt
         /*   Rule: "Compute d_mem_adj.mad_adjtmnt_dt"   */ );


out0.d_mem_adj.mbr_id::depends_on(
         in.i5abcd
         );


out0.d_mem_adj.mad_sender_desc::depends_on(
         in.i5dlih
         );


out0.d_mem_adj.src_env_sk::depends_on(
         in.dxf_src_sys_id
         );


out0.d_mem_adj.account_id::depends_on(
         in.i5accd
         );


out0.d_mem_adj.mad_adjtmnt_amt::depends_on(
         in.i5nbpr
         );


out0.d_mem_adj.employer_group_id::depends_on(
         in.i5adcd
         );


out0.d_mem_adj.mad_rec_order::depends_on(
         in.i5yshr
         );


out0.d_mem_adj.mad_rec_ts::depends_on(
         in.i5dhih
         /*   Rule: "Compute d_mem_adj.mad_rec_ts"   */ );


out0.adj_cag.carrier_id::depends_on(
         in.i5aacd
         );


out0.d_mem_adj.mad_sender_typ_cd::depends_on(
         in.i5b4h9
         );


out0.d_mem_adj.mad_clt_bnft_cd::depends_on(
         in.i5dgih
         );


out0.d_mem_adj.mad_sender_ts::depends_on(
         in.i5dpih
         /*   Rule: "Compute d_mem_adj.mad_sender_ts"   */ );


out0.d_mem_adj.mad_sender_claim_seq_nbr::depends_on(
         in.i5dnih
         );


out0.adj_mbr.carrier_id::depends_on(
         in.i5aacd
         );


out0.d_mem_adj.mad_ben_ded_typ_cd::depends_on(
         in.i5d6s2
         );


out0.adj_carr.carrier_id::depends_on(
         in.i5aacd
         );


out0.d_mem_adj.mad_sender_claim_stat_cd::depends_on(
         in.i5doih
         );


out0.adj_cag.account_id::depends_on(
         in.i5accd
         );


out0.adj_mbr.mbr_id::depends_on(
         in.i5abcd
         );


out0.adj_mbr.account_id::depends_on(
         in.i5accd
         );


out0.d_mem_adj.mad_seq_nbr::depends_on(
         in.i5emn1
         );


out0.d_mem_adj.adj_adjtmnt_cd::depends_on(
         in.i5rkc2
         );


out0.d_mem_adj.acm_accumultn_cd::depends_on(
         in.i5rjc2
         );


out0.adj_cag.employer_group_id::depends_on(
         in.i5adcd
         );


out0.d_mem_adj.carrier_id::depends_on(
         in.i5aacd
         );


out0.d_mem_adj.mad_adj_time::depends_on(
         in.i5bltx
         );


out0.d_mem_adj.mad_amt_typ_cd::depends_on(
         in.i5b3h9
         );


out0.d_mem_adj.mad_rec_id::depends_on(
         in.i5djih
         );


out0.d_mem_adj.mad_sender_claim_nbr::depends_on(
         in.i5dmih
         );


out0.adj_mbr.employer_group_id::depends_on(
         in.i5adcd
         );


out0.d_mem_adj.mad_sender_id::depends_on(
         in.i5dkih
         );


out0.d_mem_adj.mad_stat_cd::depends_on(
         in.i5yns2
         );


out0.d_mem_adj.mad_adj_ms::depends_on(
         in.i5hibr
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_ctrx_rxclaim_rcmadp_to_the_ctrx_d_member_adjustment_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.d_mem_adj.cag_sk,'d_mem_adj.cag_sk',1,0]
     [out0.d_mem_adj.mad_adjtmnt_dt,'d_mem_adj.mad_adjtmnt_dt',3,2]
     [out0.d_mem_adj.mbr_id,'d_mem_adj.mbr_id',1,0]
     [out0.d_mem_adj.mad_sender_desc,'d_mem_adj.mad_sender_desc',1,0]
     [out0.d_mem_adj.src_env_sk,'d_mem_adj.src_env_sk',1,0]
     [out0.d_mem_adj.account_id,'d_mem_adj.account_id',1,0]
     [out0.d_mem_adj.mad_adjtmnt_amt,'d_mem_adj.mad_adjtmnt_amt',1,0]
     [out0.d_mem_adj.employer_group_id,'d_mem_adj.employer_group_id',1,0]
     [out0.d_mem_adj.mad_rec_order,'d_mem_adj.mad_rec_order',1,0]
     [out0.d_mem_adj.mad_rec_ts,'d_mem_adj.mad_rec_ts',5,4]
     [out0.d_mem_adj.mbr_sk,'d_mem_adj.mbr_sk',1,0]
     [out0.adj_cag.carrier_id,'adj_cag.carrier_id',1,0]
     [out0.d_mem_adj.mad_sender_typ_cd,'d_mem_adj.mad_sender_typ_cd',1,0]
     [out0.d_mem_adj.mad_clt_bnft_cd,'d_mem_adj.mad_clt_bnft_cd',1,0]
     [out0.d_mem_adj.mad_sender_ts,'d_mem_adj.mad_sender_ts',5,4]
     [out0.d_mem_adj.mad_sender_claim_seq_nbr,'d_mem_adj.mad_sender_claim_seq_nbr',1,0]
     [out0.adj_mbr.carrier_id,'adj_mbr.carrier_id',1,0]
     [out0.d_mem_adj.mad_ben_ded_typ_cd,'d_mem_adj.mad_ben_ded_typ_cd',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.adj_carr.carrier_id,'adj_carr.carrier_id',1,0]
     [out0.d_mem_adj.mad_sender_claim_stat_cd,'d_mem_adj.mad_sender_claim_stat_cd',1,0]
     [out0.adj_cag.account_id,'adj_cag.account_id',1,0]
     [out0.adj_mbr.mbr_id,'adj_mbr.mbr_id',1,0]
     [out0.adj_mbr.account_id,'adj_mbr.account_id',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.d_mem_adj.carrier_sk,'d_mem_adj.carrier_sk',1,0]
     [out0.d_mem_adj.mad_seq_nbr,'d_mem_adj.mad_seq_nbr',1,0]
     [out0.d_mem_adj.adj_adjtmnt_cd,'d_mem_adj.adj_adjtmnt_cd',1,0]
     [out0.d_mem_adj.acm_accumultn_cd,'d_mem_adj.acm_accumultn_cd',1,0]
     [out0.adj_cag.employer_group_id,'adj_cag.employer_group_id',1,0]
     [out0.d_mem_adj.carrier_id,'d_mem_adj.carrier_id',1,0]
     [out0.d_mem_adj.mad_adj_time,'d_mem_adj.mad_adj_time',1,0]
     [out0.d_mem_adj.mad_sk,'d_mem_adj.mad_sk',1,0]
     [out0.d_mem_adj.mad_amt_typ_cd,'d_mem_adj.mad_amt_typ_cd',1,0]
     [out0.d_mem_adj.mad_rec_id,'d_mem_adj.mad_rec_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.d_mem_adj.mad_sender_claim_nbr,'d_mem_adj.mad_sender_claim_nbr',1,0]
     [out0.adj_mbr.employer_group_id,'adj_mbr.employer_group_id',1,0]
     [out0.d_mem_adj.mad_sender_id,'d_mem_adj.mad_sender_id',1,0]
     [out0.d_mem_adj.mad_stat_cd,'d_mem_adj.mad_stat_cd',1,0]
     [out0.d_mem_adj.mad_adj_ms,'d_mem_adj.mad_adj_ms',1,0]
  ]
  impacts:
  [
     [in0.i5adcd,'RCMADP: GRP Group ID',3,3]
     [in0.i5dnih,'RCMADP: MAD Sender Claim Sequence',1,1]
     [in0.i5b3h9,'RCMADP: MAD Amount Type',1,1]
     [in0.i5abcd,'RCMADP: MBR Member ID',2,2]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.i5emn1,'RCMADP: MAD Seq Nbr',1,1]
     [in0.i5hibr,'i5hibr',1,1]
     [in0.i5d6s2,'RCMADP: MAD Ben/Ded Type',1,1]
     [in0.i5nbpr,'RCMADP: MAD Adjustment Amount',1,1]
     [in0.i5b4h9,'RCMADP: MAD Sender Type',1,1]
     [in0.i5dmih,'RCMADP: MAD Sender Claim #',1,1]
     [in0.i5bltx,'i5bltx',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
     [in0.i5djih,'RCMADP: MAD Record ID',1,1]
     [in0.i5dkih,'RCMADP: MAD Sender ID',1,1]
     [in0.i5yshr,'RCMADP: MAD Record Order',1,1]
     [in0.i5rjc2,'RCMADP: ACM Accumulation Code',1,1]
     [in0.i5dpih,'RCMADP: MAD Sender Timestamp',8,5]
     [in0.i5dhih,'RCMADP: MAD Record Timestamp',8,5]
     [in0.i5doih,'RCMADP: MAD Sender Claim Status',1,1]
     [in0.i5dgih,'RCMADP: MAD Client Benefit Code',1,1]
     [in0.i5accd,'RCMADP: ACC Account ID',3,3]
     [in0.i5yns2,'RCMADP: MAD Status',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.i5dlih,'RCMADP: MAD Sender Description',1,1]
     [in0.i5h1dt,'RCMADP: MAD Adjustment Date',5,3]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.i5aacd,'RCMADP: CAR Carrier ID',4,4]
     [in0.i5rkc2,'RCMADP: ADJ Adjustment Code',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let int bzt_0 not NULL = 0;
let int bzt_1 not NULL = 0;
let int bzt_2 not NULL = 0;
let decimal("\x01",0) d_mem_adj_mad_sk = -1;
let decimal("\x01",0) d_mem_adj_mbr_sk = -1;
let decimal("\x01",0) d_mem_adj_cag_sk = -1;
let decimal("\x01",0) d_mem_adj_carrier_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=20) d_mem_adj_mbr_id = fail_if_error(in0.i5abcd);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_mem_adj_carrier_id = fail_if_error(in0.i5aacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_mem_adj_account_id = fail_if_error(in0.i5accd);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_mem_adj_employer_group_id = fail_if_error(in0.i5adcd);
let date("YYYYMMDD")("\x01") d_mem_adj_mad_adjtmnt_dt;
let decimal("\x01",0) d_mem_adj_mad_seq_nbr = fail_if_error(in0.i5emn1);
let string("\x01",charset="iso-8859-15", maximum_length=1) d_mem_adj_mad_stat_cd = fail_if_error(in0.i5yns2);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_mem_adj_acm_accumultn_cd = fail_if_error(in0.i5rjc2);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_mem_adj_adj_adjtmnt_cd = fail_if_error(in0.i5rkc2);
let decimal("\x01".2, maximum_length=11, sign_reserved) d_mem_adj_mad_adjtmnt_amt = fail_if_error(in0.i5nbpr);
let string("\x01",charset="iso-8859-15", maximum_length=1) d_mem_adj_mad_ben_ded_typ_cd = fail_if_error(in0.i5d6s2);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_mem_adj_mad_clt_bnft_cd = fail_if_error(in0.i5dgih);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") d_mem_adj_mad_rec_ts;
let decimal("\x01",0) d_mem_adj_mad_rec_order = fail_if_error(in0.i5yshr);
let string("\x01",charset="iso-8859-15", maximum_length=50) d_mem_adj_mad_rec_id = fail_if_error(in0.i5djih);
let string("\x01",charset="iso-8859-15", maximum_length=1) d_mem_adj_mad_amt_typ_cd = fail_if_error(in0.i5b3h9);
let string("\x01",charset="iso-8859-15", maximum_length=1) d_mem_adj_mad_sender_typ_cd = fail_if_error(in0.i5b4h9);
let string("\x01",charset="iso-8859-15", maximum_length=10) d_mem_adj_mad_sender_id = fail_if_error(in0.i5dkih);
let string("\x01",charset="iso-8859-15", maximum_length=50) d_mem_adj_mad_sender_desc = fail_if_error(in0.i5dlih);
let string("\x01",charset="iso-8859-15", maximum_length=50) d_mem_adj_mad_sender_claim_nbr = fail_if_error(in0.i5dmih);
let string("\x01",charset="iso-8859-15", maximum_length=5) d_mem_adj_mad_sender_claim_seq_nbr = fail_if_error(in0.i5dnih);
let string("\x01",charset="iso-8859-15", maximum_length=1) d_mem_adj_mad_sender_claim_stat_cd = fail_if_error(in0.i5doih);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") d_mem_adj_mad_sender_ts;
let datetime("HH24:MI:SS.NNNNNN")("\x01") d_mem_adj_mad_adj_time = fail_if_error((datetime("HH24MISS"))decimal_lpad((decimal(""))in0.i5bltx , 6));
let decimal("\x01",0) d_mem_adj_mad_adj_ms = fail_if_error(in0.i5hibr);
let decimal("\x01",0) d_mem_adj_src_env_sk = fail_if_error(in0.dxf_src_sys_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) adj_cag_carrier_id = fail_if_error(in0.i5aacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) adj_cag_account_id = fail_if_error(in0.i5accd);
let string("\x01",charset="iso-8859-15", maximum_length=30) adj_cag_employer_group_id = fail_if_error(in0.i5adcd);
let string("\x01",charset="iso-8859-15", maximum_length=30) adj_carr_carrier_id = fail_if_error(in0.i5aacd);
let string("\x01",charset="iso-8859-15", maximum_length=30) adj_mbr_carrier_id = fail_if_error(in0.i5aacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) adj_mbr_account_id = fail_if_error(in0.i5accd);
let string("\x01",charset="iso-8859-15", maximum_length=30) adj_mbr_employer_group_id = fail_if_error(in0.i5adcd);
let string("\x01",charset="iso-8859-15", maximum_length=20) adj_mbr_mbr_id = fail_if_error(in0.i5abcd);



/*   Rule:Compute d_mem_adj.mad_adjtmnt_dt  (#1)   */
if(first_defined(fail_if_error(((length_of((decimal(""))in0.i5h1dt)) ==8) && ((is_valid(YYYYMMDD((decimal(""))in0.i5h1dt))) ==1)),0))begin
  bzt_0=1;
  d_mem_adj_mad_adjtmnt_dt=YYYYMMDD((decimal(""))in0.i5h1dt);
end
else if(first_defined(fail_if_error(((length_of(((decimal(""))in0.i5h1dt)) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000+(decimal(""))in0.i5h1dt))) ==1)),0))begin
  bzt_0=1;
  d_mem_adj_mad_adjtmnt_dt=YYYYMMDD((decimal(""))in0.i5h1dt+19000000);
end

/*   Default value   */
if(!bzt_0)begin
  d_mem_adj_mad_adjtmnt_dt=fail_if_error(low_date());
end

/*   Rule:Compute d_mem_adj.mad_rec_ts  (#2)   */
if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD-HH24.MI.SS.NNNNNN'))in0.i5dhih)) ==1)),0))begin
  bzt_1=1;
  d_mem_adj_mad_rec_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD-HH24.MI.SS.NNNNNN'))in0.i5dhih;
end
else if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDHH24.MI.SS.NNNNNN'))string_substring(in0.i5dhih,1,25) )) ==1)),0))begin
  bzt_1=1;
  d_mem_adj_mad_rec_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDHH24.MI.SS.NNNNNN'))string_substring(in0.i5dhih,1,25);
end
else if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD HH24.MI.SS.NNNNNN'))in0.i5dhih)) ==1)),0))begin
  bzt_1=1;
  d_mem_adj_mad_rec_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD HH24.MI.SS.NNNNNN'))in0.i5dhih;
end
else if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDTHH24:MI:SS.NNNNNN'))in0.i5dhih)) ==1)),0))begin
  bzt_1=1;
  d_mem_adj_mad_rec_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDTHH24:MI:SS.NNNNNN'))in0.i5dhih;
end

/*   Default value   */
if(!bzt_1)begin
  d_mem_adj_mad_rec_ts=fail_if_error((datetime('YYYYMMDD HH24:MI:SS'))'19000101 00:00:00');
end

/*   Rule:Compute d_mem_adj.mad_sender_ts  (#3)   */
if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDTHH24:MI:SS.NNNNNN'))in0.i5dpih)) ==1)),0))begin
  bzt_2=1;
  d_mem_adj_mad_sender_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDTHH24:MI:SS.NNNNNN'))in0.i5dpih;
end
else if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD-HH24.MI.SS.NNNNNN'))in0.i5dpih)) ==1)),0))begin
  bzt_2=1;
  d_mem_adj_mad_sender_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD-HH24.MI.SS.NNNNNN'))in0.i5dpih;
end
else if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDHH24.MI.SS.NNNNNN'))string_substring(in0.i5dpih,1,25) )) ==1)),0))begin
  bzt_2=1;
  d_mem_adj_mad_sender_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DDHH24.MI.SS.NNNNNN'))string_substring(in0.i5dpih,1,25);
end
else if(first_defined(fail_if_error(((is_valid((datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD HH24.MI.SS.NNNNNN'))in0.i5dpih)) ==1)),0))begin
  bzt_2=1;
  d_mem_adj_mad_sender_ts=(datetime('YYYYMMDD HH24:MI:SS'))(datetime('YYYY-MM-DD HH24.MI.SS.NNNNNN'))in0.i5dpih;
end

/*   Default value   */
if(!bzt_2)begin
  d_mem_adj_mad_sender_ts=fail_if_error((datetime('YYYYMMDD HH24:MI:SS')) '19000101 00:00:00');
end

  out0.d_mem_adj.mad_sk::d_mem_adj_mad_sk;
  out0.d_mem_adj.mbr_sk::d_mem_adj_mbr_sk;
  out0.d_mem_adj.cag_sk::d_mem_adj_cag_sk;
  out0.d_mem_adj.carrier_sk::d_mem_adj_carrier_sk;
  out0.d_mem_adj.mbr_id::d_mem_adj_mbr_id;
  out0.d_mem_adj.carrier_id::d_mem_adj_carrier_id;
  out0.d_mem_adj.account_id::d_mem_adj_account_id;
  out0.d_mem_adj.employer_group_id::d_mem_adj_employer_group_id;
  out0.d_mem_adj.mad_adjtmnt_dt::d_mem_adj_mad_adjtmnt_dt;
  out0.d_mem_adj.mad_seq_nbr::d_mem_adj_mad_seq_nbr;
  out0.d_mem_adj.mad_stat_cd::d_mem_adj_mad_stat_cd;
  out0.d_mem_adj.acm_accumultn_cd::d_mem_adj_acm_accumultn_cd;
  out0.d_mem_adj.adj_adjtmnt_cd::d_mem_adj_adj_adjtmnt_cd;
  out0.d_mem_adj.mad_adjtmnt_amt::d_mem_adj_mad_adjtmnt_amt;
  out0.d_mem_adj.mad_ben_ded_typ_cd::d_mem_adj_mad_ben_ded_typ_cd;
  out0.d_mem_adj.mad_clt_bnft_cd::d_mem_adj_mad_clt_bnft_cd;
  out0.d_mem_adj.mad_rec_ts::d_mem_adj_mad_rec_ts;
  out0.d_mem_adj.mad_rec_order::d_mem_adj_mad_rec_order;
  out0.d_mem_adj.mad_rec_id::d_mem_adj_mad_rec_id;
  out0.d_mem_adj.mad_amt_typ_cd::d_mem_adj_mad_amt_typ_cd;
  out0.d_mem_adj.mad_sender_typ_cd::d_mem_adj_mad_sender_typ_cd;
  out0.d_mem_adj.mad_sender_id::d_mem_adj_mad_sender_id;
  out0.d_mem_adj.mad_sender_desc::d_mem_adj_mad_sender_desc;
  out0.d_mem_adj.mad_sender_claim_nbr::d_mem_adj_mad_sender_claim_nbr;
  out0.d_mem_adj.mad_sender_claim_seq_nbr::d_mem_adj_mad_sender_claim_seq_nbr;
  out0.d_mem_adj.mad_sender_claim_stat_cd::d_mem_adj_mad_sender_claim_stat_cd;
  out0.d_mem_adj.mad_sender_ts::d_mem_adj_mad_sender_ts;
  out0.d_mem_adj.mad_adj_time::d_mem_adj_mad_adj_time;
  out0.d_mem_adj.mad_adj_ms::d_mem_adj_mad_adj_ms;
  out0.d_mem_adj.src_env_sk::d_mem_adj_src_env_sk;
  out0.adj_cag.carrier_id::adj_cag_carrier_id;
  out0.adj_cag.account_id::adj_cag_account_id;
  out0.adj_cag.employer_group_id::adj_cag_employer_group_id;
  out0.adj_carr.carrier_id::adj_carr_carrier_id;
  out0.adj_mbr.carrier_id::adj_mbr_carrier_id;
  out0.adj_mbr.account_id::adj_mbr_account_id;
  out0.adj_mbr.employer_group_id::adj_mbr_employer_group_id;
  out0.adj_mbr.mbr_id::adj_mbr_mbr_id;
  out0.*::in0.*;
end;
