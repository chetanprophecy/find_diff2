/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5bd17c33_f632_2 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.dcpo.src_update_prog_nm,[passthrough],in0.abaevn]
  [out0.dcpo.drg_dea_cd,[passthrough],in0.abpqh6]
  [out0.dcpo.pco_desi_ind,[passthrough],in0.abpth6]
  [out0.dcpo.anda_ovrd_flg,[passthrough],in0.abqdoc]
  [out0.dcpo.ovrd_metric_qty_ind,[passthrough],in0.abvsh6]
  [out0.dcpo.pco_seq_nbr,[passthrough],in0.abrzht]
  [out0.dcpo.pco_mkting_end_dt,[transform],in0.abmuce]
  [out0.dcpo.drg_dosag_frm_id,[passthrough],in0.abfvc4]
  [out0.dcpo.src_env_sk,[passthrough],in0.dxf_src_sys_id]
  [out0.dcpo.src_update_uid,[passthrough],in0.abadvn]
  [out0.dcpo.prod_key,[passthrough],in0.abiin2]
  [out0.dcpo.ahfs_cd,[passthrough],in0.abebc4]
  [out0.dcpo.src_insert_ts,[transform],in0.abadtm,
     in0.abc2dt]
  [out0.dcpo.carrier_id,[passthrough],in0.abaacd]
  [out0.dcpo.bla_ovrd_flg,[passthrough],in0.aberai]
  [out0.dcpo.pco_ovrd_src,[passthrough],in0.abjjar]
  [out0.dcpo.account_id,[passthrough],in0.abfshn]
  [out0.dcpo.drg_multi_src_cd,[passthrough],in0.abguh6]
  [out0.dcpo.admin_route_cd,[passthrough],in0.abgxc4]
  [out0.dcpo.pco_from_dt,[transform],in0.abdxhh]
  [out0.dcpo.cag_prod_ovrd_sk,[transform],]
  [out0.dcpo.drg_unit_dose_use_ind,[passthrough],in0.abpvh6]
  [out0.dcpo.src_insert_prog_nm,[passthrough],in0.abalvn]
  [out0.dcpo.drg_3rd_prty_excpn_ind,[passthrough],in0.abecc4]
  [out0.dcpo.pco_mkting_start_dt,[transform],in0.abmtce]
  [out0.dcpo.nda_ovrd_flg,[passthrough],in0.abepai]
  [out0.dcpo.pco_stat_cd,[passthrough],in0.abh5ic]
  [out0.dcpo.employer_group_id,[passthrough],in0.abfthn]
  [out0.dcpo.drg_fda_thrpc_eqvlc_cd,[passthrough],in0.abprh6]
  [out0.dcpo.src_update_ts,[transform],in0.ababtm,
     in0.abbmdt]
  [out0.dcpo.pco_thru_dt,[transform],in0.abdyhh]
  [out0.dcpo.pco_mkting_category,[passthrough],in0.abnxho]
  [out0.dcpo.drg_maint_ind,[passthrough],in0.abpuh6]
  [out0.dcpo.src_insert_uid,[passthrough],in0.abakvn]
  [out0.dcpo.hic3_ovrd_flg,[passthrough],in0.abh0hn]
  [out0.dcpo.drg_rx_otc_ind,[passthrough],in0.abpsh6]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.dcpo.src_update_prog_nm,'dcpo.src_update_prog_nm',1,0]
     [out0.dcpo.drg_dea_cd,'dcpo.drg_dea_cd',1,0]
     [out0.dcpo.pco_desi_ind,'dcpo.pco_desi_ind',1,0]
     [out0.dcpo.anda_ovrd_flg,'dcpo.anda_ovrd_flg',1,0]
     [out0.dcpo.ovrd_metric_qty_ind,'dcpo.ovrd_metric_qty_ind',1,0]
     [out0.dcpo.pco_seq_nbr,'dcpo.pco_seq_nbr',1,0]
     [out0.dcpo.pco_mkting_end_dt,'dcpo.pco_mkting_end_dt',1,0]
     [out0.dcpo.drg_dosag_frm_id,'dcpo.drg_dosag_frm_id',1,0]
     [out0.dcpo.src_env_sk,'dcpo.src_env_sk',1,0]
     [out0.dcpo.src_update_uid,'dcpo.src_update_uid',1,0]
     [out0.dcpo.prod_key,'dcpo.prod_key',1,0]
     [out0.dcpo.ahfs_cd,'dcpo.ahfs_cd',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.dcpo.src_insert_ts,'dcpo.src_insert_ts',1,0]
     [out0.dcpo.carrier_id,'dcpo.carrier_id',1,0]
     [out0.dcpo.bla_ovrd_flg,'dcpo.bla_ovrd_flg',1,0]
     [out0.dcpo.pco_ovrd_src,'dcpo.pco_ovrd_src',1,0]
     [out0.dcpo.account_id,'dcpo.account_id',1,0]
     [out0.dcpo.drg_multi_src_cd,'dcpo.drg_multi_src_cd',1,0]
     [out0.dcpo.admin_route_cd,'dcpo.admin_route_cd',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.dcpo.pco_from_dt,'dcpo.pco_from_dt',1,0]
     [out0.dcpo.cag_prod_ovrd_sk,'dcpo.cag_prod_ovrd_sk',1,0]
     [out0.dcpo.drg_unit_dose_use_ind,'dcpo.drg_unit_dose_use_ind',1,0]
     [out0.dcpo.src_insert_prog_nm,'dcpo.src_insert_prog_nm',1,0]
     [out0.dcpo.drg_3rd_prty_excpn_ind,'dcpo.drg_3rd_prty_excpn_ind',1,0]
     [out0.dcpo.pco_mkting_start_dt,'dcpo.pco_mkting_start_dt',1,0]
     [out0.dcpo.nda_ovrd_flg,'dcpo.nda_ovrd_flg',1,0]
     [out0.dcpo.pco_stat_cd,'dcpo.pco_stat_cd',1,0]
     [out0.dcpo.employer_group_id,'dcpo.employer_group_id',1,0]
     [out0.dcpo.drg_fda_thrpc_eqvlc_cd,'dcpo.drg_fda_thrpc_eqvlc_cd',1,0]
     [out0.dcpo.src_update_ts,'dcpo.src_update_ts',1,0]
     [out0.dcpo.pco_thru_dt,'dcpo.pco_thru_dt',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dcpo.pco_mkting_category,'dcpo.pco_mkting_category',1,0]
     [out0.dcpo.drg_maint_ind,'dcpo.drg_maint_ind',1,0]
     [out0.dcpo.src_insert_uid,'dcpo.src_insert_uid',1,0]
     [out0.dcpo.hic3_ovrd_flg,'dcpo.hic3_ovrd_flg',1,0]
     [out0.dcpo.drg_rx_otc_ind,'dcpo.drg_rx_otc_ind',1,0]
  ]
  impacts:
  [
     [in0.abadvn,'abadvn',1,1]
     [in0.abbmdt,'abbmdt',2,2]
     [in0.abaevn,'abaevn',1,1]
     [in0.abdyhh,'abdyhh',1,1]
     [in0.abakvn,'abakvn',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.abebc4,'abebc4',1,1]
     [in0.aberai,'aberai',1,1]
     [in0.abfshn,'abfshn',1,1]
     [in0.abpth6,'abpth6',1,1]
     [in0.abpuh6,'abpuh6',1,1]
     [in0.abrzht,'abrzht',1,1]
     [in0.abfvc4,'abfvc4',1,1]
     [in0.abgxc4,'abgxc4',1,1]
     [in0.abh5ic,'abh5ic',1,1]
     [in0.abadtm,'abadtm',4,2]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
     [in0.abvsh6,'abvsh6',1,1]
     [in0.abqdoc,'abqdoc',1,1]
     [in0.abpqh6,'abpqh6',1,1]
     [in0.abiin2,'abiin2',1,1]
     [in0.abpvh6,'abpvh6',1,1]
     [in0.abh0hn,'abh0hn',1,1]
     [in0.abaacd,'abaacd',1,1]
     [in0.abpsh6,'abpsh6',1,1]
     [in0.abdxhh,'abdxhh',1,1]
     [in0.abecc4,'abecc4',1,1]
     [in0.abnxho,'abnxho',1,1]
     [in0.abc2dt,'abc2dt',2,2]
     [in0.ababtm,'ababtm',4,2]
     [in0.abguh6,'abguh6',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.abalvn,'abalvn',1,1]
     [in0.abfthn,'abfthn',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.abmtce,'abmtce',1,1]
     [in0.abmuce,'abmuce',1,1]
     [in0.abjjar,'abjjar',1,1]
     [in0.abprh6,'abprh6',1,1]
     [in0.abepai,'abepai',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) dcpo_cag_prod_ovrd_sk = 0;
let decimal("\x01",0) dcpo_prod_key = fail_if_error(in0.abiin2);
let string("\x01",charset="iso-8859-15", maximum_length=30) dcpo_carrier_id = fail_if_error(in0.abaacd);
let string("\x01",charset="iso-8859-15", maximum_length=40) dcpo_account_id = fail_if_error(in0.abfshn);
let string("\x01",charset="iso-8859-15", maximum_length=30) dcpo_employer_group_id = fail_if_error(in0.abfthn);
let decimal("\x01",0) dcpo_pco_seq_nbr = fail_if_error(in0.abrzht);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_drg_multi_src_cd = fail_if_error(in0.abguh6);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_drg_rx_otc_ind = fail_if_error(in0.abpsh6);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_drg_3rd_prty_excpn_ind = fail_if_error(in0.abecc4);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_drg_dea_cd = fail_if_error(in0.abpqh6);
let string("\x01",charset="iso-8859-15", maximum_length=2) dcpo_admin_route_cd = fail_if_error(in0.abgxc4);
let string("\x01",charset="iso-8859-15", maximum_length=4) dcpo_drg_dosag_frm_id = fail_if_error(in0.abfvc4);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_pco_desi_ind = fail_if_error(in0.abpth6);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_drg_maint_ind = fail_if_error(in0.abpuh6);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_drg_unit_dose_use_ind = fail_if_error(in0.abpvh6);
let string("\x01",charset="iso-8859-15", maximum_length=3) dcpo_drg_fda_thrpc_eqvlc_cd = fail_if_error(in0.abprh6);
let string("\x01",charset="iso-8859-15", maximum_length=8) dcpo_ahfs_cd = fail_if_error(in0.abebc4);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_ovrd_metric_qty_ind = fail_if_error(in0.abvsh6);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_pco_stat_cd = fail_if_error(in0.abh5ic);
let date("YYYYMMDD")("\x01") dcpo_pco_from_dt;
let date("YYYYMMDD")("\x01") dcpo_pco_thru_dt;
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_anda_ovrd_flg = fail_if_error(in0.abqdoc);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_nda_ovrd_flg = fail_if_error(in0.abepai);
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_bla_ovrd_flg = fail_if_error(in0.aberai);
let string("\x01",charset="iso-8859-15", maximum_length=3) dcpo_hic3_ovrd_flg = fail_if_error(in0.abh0hn);
let string("\x01",charset="iso-8859-15", maximum_length=2) dcpo_pco_mkting_category = fail_if_error(in0.abnxho);
let date("YYYYMMDD")("\x01") dcpo_pco_mkting_start_dt;
let date("YYYYMMDD")("\x01") dcpo_pco_mkting_end_dt;
let string("\x01",charset="iso-8859-15", maximum_length=1) dcpo_pco_ovrd_src = fail_if_error(in0.abjjar);
let string("\x01",charset="iso-8859-15", maximum_length=10) dcpo_src_insert_uid = fail_if_error(in0.abakvn);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") dcpo_src_insert_ts;
let string("\x01",charset="iso-8859-15", maximum_length=10) dcpo_src_insert_prog_nm = fail_if_error(in0.abalvn);
let string("\x01",charset="iso-8859-15", maximum_length=10) dcpo_src_update_uid = fail_if_error(in0.abadvn);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") dcpo_src_update_ts;
let string("\x01",charset="iso-8859-15", maximum_length=10) dcpo_src_update_prog_nm = fail_if_error(in0.abaevn);
let decimal("\x01",0) dcpo_src_env_sk = fail_if_error(in0.dxf_src_sys_id);
let unicode date('YYYY-MM-DD') dcpo_src_insert_dt;
let unicode datetime('YYYY-MM-DD HH24:MI:SS.NNNNNN') dcpo_src_insert_tm;
let unicode date('YYYY-MM-DD') dcpo_src_update_dt;
let unicode datetime('YYYY-MM-DD HH24:MI:SS.NNNNNN') dcpo_src_update_tm;



/*   Default value   */
dcpo_src_insert_dt=fail_if_error(date_check(in0.abc2dt));

/*   Default value   */
dcpo_pco_mkting_end_dt=fail_if_error(date_check(in0.abmuce));

/*   Default value   */
dcpo_src_insert_tm=fail_if_error(time_check(in0.abadtm));

/*   Default value   */
dcpo_src_insert_ts=fail_if_error(string_concat(date_check(in0.abc2dt)," ",string_substring(time_check(in0.abadtm),1,2),":",string_substring(time_check(in0.abadtm),3,2),":",string_substring(time_check(in0.abadtm),5,2)));

/*   Default value   */
dcpo_src_update_dt=fail_if_error(date_check(in0.abbmdt));

/*   Default value   */
dcpo_pco_from_dt=fail_if_error(date_check(in0.abdxhh));

/*   Default value   */
dcpo_pco_mkting_start_dt=fail_if_error(date_check(in0.abmtce));

/*   Default value   */
dcpo_src_update_ts=fail_if_error((datetime("YYYYMMDD HH24:MI:SS")) string_concat(date_check(in0.abbmdt)," ",string_substring(time_check(in0.ababtm),1,2),":",string_substring(time_check(in0.ababtm),3,2),":",string_substring(time_check(in0.ababtm),5,2)));

/*   Default value   */
dcpo_pco_thru_dt=fail_if_error(date_check(in0.abdyhh));

/*   Default value   */
dcpo_src_update_tm=fail_if_error(time_check(in0.ababtm));

  out0.dcpo.cag_prod_ovrd_sk::dcpo_cag_prod_ovrd_sk;
  out0.dcpo.prod_key::dcpo_prod_key;
  out0.dcpo.carrier_id::dcpo_carrier_id;
  out0.dcpo.account_id::dcpo_account_id;
  out0.dcpo.employer_group_id::dcpo_employer_group_id;
  out0.dcpo.pco_seq_nbr::dcpo_pco_seq_nbr;
  out0.dcpo.drg_multi_src_cd::dcpo_drg_multi_src_cd;
  out0.dcpo.drg_rx_otc_ind::dcpo_drg_rx_otc_ind;
  out0.dcpo.drg_3rd_prty_excpn_ind::dcpo_drg_3rd_prty_excpn_ind;
  out0.dcpo.drg_dea_cd::dcpo_drg_dea_cd;
  out0.dcpo.admin_route_cd::dcpo_admin_route_cd;
  out0.dcpo.drg_dosag_frm_id::dcpo_drg_dosag_frm_id;
  out0.dcpo.pco_desi_ind::dcpo_pco_desi_ind;
  out0.dcpo.drg_maint_ind::dcpo_drg_maint_ind;
  out0.dcpo.drg_unit_dose_use_ind::dcpo_drg_unit_dose_use_ind;
  out0.dcpo.drg_fda_thrpc_eqvlc_cd::dcpo_drg_fda_thrpc_eqvlc_cd;
  out0.dcpo.ahfs_cd::dcpo_ahfs_cd;
  out0.dcpo.ovrd_metric_qty_ind::dcpo_ovrd_metric_qty_ind;
  out0.dcpo.pco_stat_cd::dcpo_pco_stat_cd;
  out0.dcpo.pco_from_dt::dcpo_pco_from_dt;
  out0.dcpo.pco_thru_dt::dcpo_pco_thru_dt;
  out0.dcpo.anda_ovrd_flg::dcpo_anda_ovrd_flg;
  out0.dcpo.nda_ovrd_flg::dcpo_nda_ovrd_flg;
  out0.dcpo.bla_ovrd_flg::dcpo_bla_ovrd_flg;
  out0.dcpo.hic3_ovrd_flg::dcpo_hic3_ovrd_flg;
  out0.dcpo.pco_mkting_category::dcpo_pco_mkting_category;
  out0.dcpo.pco_mkting_start_dt::dcpo_pco_mkting_start_dt;
  out0.dcpo.pco_mkting_end_dt::dcpo_pco_mkting_end_dt;
  out0.dcpo.pco_ovrd_src::dcpo_pco_ovrd_src;
  out0.dcpo.src_insert_uid::dcpo_src_insert_uid;
  out0.dcpo.src_insert_ts::dcpo_src_insert_ts;
  out0.dcpo.src_insert_prog_nm::dcpo_src_insert_prog_nm;
  out0.dcpo.src_update_uid::dcpo_src_update_uid;
  out0.dcpo.src_update_ts::dcpo_src_update_ts;
  out0.dcpo.src_update_prog_nm::dcpo_src_update_prog_nm;
  out0.dcpo.src_env_sk::dcpo_src_env_sk;
  out0.*::in0.*;

end;
