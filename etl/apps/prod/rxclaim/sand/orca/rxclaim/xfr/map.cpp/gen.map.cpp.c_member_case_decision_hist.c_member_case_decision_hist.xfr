/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5a546c34_3fea_2 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_mem_dis.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_mem_dis.review_dt,[passthrough],in0.review_dt]
  [out0.c_mem_dis.member_case_decision_hist_id,[passthrough],in0.member_case_decision_hist_id]
  [out0.c_mem_dis.pos_edit_notification_dt,[passthrough],in0.pos_edit_notification_dt]
  [out0.c_mem_dis.src_env_sk,[transform],]
  [out0.c_mem_dis.standardized_verbiage,[passthrough],in0.standardized_verbiage]
  [out0.c_mem_dis.pos_edit_eff_dt,[passthrough],in0.pos_edit_eff_dt]
  [out0.c_mem_dis.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_mem_dis.recommendation,[passthrough],in0.recommendation]
  [out0.c_mem_dis.decision_verbiage,[passthrough],in0.decision_verbiage]
  [out0.c_mem_dis.pos_edit_flag,[passthrough],in0.pos_edit_flag]
  [out0.c_mem_dis.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_mem_dis.pos_edit_end_dt,[passthrough],in0.pos_edit_end_dt]
  [out0.c_mem_dis.case_decision,[passthrough],in0.case_decision]
  [out0.c_mem_dis.case_id,[passthrough],in0.case_id]
  [out0.c_mem_dis.pos_edit_modification_dt,[passthrough],in0.pos_edit_modification_dt]
  [out0.c_mem_dis.cpp_member_case_decision_hist_sk,[transform],]
  [out0.c_mem_dis.attendees,[passthrough],in0.attendees]
  [out0.c_mem_dis.lock_standardized_verbiage,[passthrough],in0.lock_prescriber_verbiage]
  [out0.c_mem_dis.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_mem_dis.sequence_num,[passthrough],in0.sequence_num]
  [out0.c_mem_dis.reason_cd,[passthrough],in0.reason_cd]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_mem_dis.lock_pharmcy_verbiage,'c_mem_dis.lock_pharmcy_verbiage',1,0]
     [out0.c_mem_dis.cpp_updated_by,'c_mem_dis.cpp_updated_by',1,0]
     [out0.c_mem_dis.review_dt,'c_mem_dis.review_dt',1,0]
     [out0.c_mem_dis.committee_review_flag,'c_mem_dis.committee_review_flag',1,0]
     [out0.c_mem_dis.member_case_decision_hist_id,'c_mem_dis.member_case_decision_hist_id',1,0]
     [out0.c_mem_dis.pos_edit_notification_dt,'c_mem_dis.pos_edit_notification_dt',1,0]
     [out0.c_mem_dis.src_env_sk,'c_mem_dis.src_env_sk',1,0]
     [out0.c_mem_dis.standardized_verbiage,'c_mem_dis.standardized_verbiage',1,0]
     [out0.c_mem_dis.pos_edit_eff_dt,'c_mem_dis.pos_edit_eff_dt',1,0]
     [out0.c_mem_dis.cpp_update_ts,'c_mem_dis.cpp_update_ts',1,0]
     [out0.c_mem_dis.recommendation,'c_mem_dis.recommendation',1,0]
     [out0.c_mem_dis.decision_verbiage,'c_mem_dis.decision_verbiage',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_mem_dis.pos_edit_flag,'c_mem_dis.pos_edit_flag',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_mem_dis.lock_type,'c_mem_dis.lock_type',1,0]
     [out0.c_mem_dis.cpp_create_ts,'c_mem_dis.cpp_create_ts',1,0]
     [out0.c_mem_dis.pos_edit_end_dt,'c_mem_dis.pos_edit_end_dt',1,0]
     [out0.c_mem_dis.case_decision,'c_mem_dis.case_decision',1,0]
     [out0.c_mem_dis.case_id,'c_mem_dis.case_id',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_mem_dis.pos_edit_modification_dt,'c_mem_dis.pos_edit_modification_dt',1,0]
     [out0.c_mem_dis.cpp_member_case_decision_hist_sk,'c_mem_dis.cpp_member_case_decision_hist_sk',1,0]
     [out0.c_mem_dis.attendees,'c_mem_dis.attendees',1,0]
     [out0.c_mem_dis.lock_standardized_verbiage,'c_mem_dis.lock_standardized_verbiage',1,0]
     [out0.c_mem_dis.lock_reason_cd,'c_mem_dis.lock_reason_cd',1,0]
     [out0.c_mem_dis.cpp_created_by,'c_mem_dis.cpp_created_by',1,0]
     [out0.c_mem_dis.sequence_num,'c_mem_dis.sequence_num',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_mem_dis.reason_cd,'c_mem_dis.reason_cd',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.attendees,'attendees',1,1]
     [in0.standardized_verbiage,'standardized_verbiage',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.pos_edit_notification_dt,'pos_edit_notification_dt',1,1]
     [in0.lock_reason_cd,'lock_reason_cd',1,1]
     [in0.lock_type,'lock_type',1,1]
     [in0.pos_edit_flag,'pos_edit_flag',1,1]
     [in0.pos_edit_end_dt,'pos_edit_end_dt',1,1]
     [in0.committee_review_flag,'committee_review_flag',1,1]
     [in0.decision_verbiage,'decision_verbiage',1,1]
     [in0.sequence_num,'sequence_num',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.case_id,'case_id',1,1]
     [in0.review_dt,'review_dt',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.lock_prescriber_verbiage,'lock_prescriber_verbiage',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.reason_cd,'reason_cd',1,1]
     [in0.recommendation,'recommendation',1,1]
     [in0.member_case_decision_hist_id,'member_case_decision_hist_id',1,1]
     [in0.pos_edit_eff_dt,'pos_edit_eff_dt',1,1]
     [in0.pos_edit_modification_dt,'pos_edit_modification_dt',1,1]
     [in0.case_decision,'case_decision',1,1]
     [in0.lock_pharmcy_verbiage,'lock_pharmcy_verbiage',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_mem_dis_cpp_member_case_decision_hist_sk = -1;
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_dis_member_case_decision_hist_id = fail_if_error(in0.member_case_decision_hist_id);
let decimal("\x01",0, maximum_length=39, sign_reserved) c_mem_dis_sequence_num = fail_if_error(in0.sequence_num);
let string("\x01",charset="iso-8859-15", maximum_length=15) c_mem_dis_case_id = fail_if_error(in0.case_id);
let utf8 string("\x01", maximum_length=1024) c_mem_dis_case_decision = fail_if_error(in0.case_decision);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_dis_pos_edit_notification_dt = fail_if_error(in0.pos_edit_notification_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_dis_pos_edit_modification_dt = fail_if_error(in0.pos_edit_modification_dt);
let utf8 string("\x01", maximum_length=8192) c_mem_dis_decision_verbiage = fail_if_error(in0.decision_verbiage);
let utf8 string("\x01", maximum_length=4096) c_mem_dis_standardized_verbiage = fail_if_error(in0.standardized_verbiage);
let utf8 string("\x01", maximum_length=120) c_mem_dis_recommendation = fail_if_error(in0.recommendation);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_dis_review_dt = fail_if_error(in0.review_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_dis_pos_edit_eff_dt = fail_if_error(in0.pos_edit_eff_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_dis_pos_edit_end_dt = fail_if_error(in0.pos_edit_end_dt);
let utf8 string("\x01", maximum_length=128) c_mem_dis_reason_cd = fail_if_error(in0.reason_cd);
let utf8 string("\x01", maximum_length=1024) c_mem_dis_attendees = fail_if_error(in0.attendees);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_mem_dis_pos_edit_flag = fail_if_error(in0.pos_edit_flag);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_mem_dis_committee_review_flag = fail_if_error(in0.committee_review_flag);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_dis_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_mem_dis_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_mem_dis_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_mem_dis_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_mem_dis_src_env_sk = 710;
let string("\x01",charset="iso-8859-15", maximum_length=64) c_mem_dis_lock_type = fail_if_error(in0.lock_type);
let string("\x01",charset="iso-8859-15", maximum_length=32) c_mem_dis_lock_reason_cd = fail_if_error(in0.lock_reason_cd);
let utf8 string("\x01", maximum_length=1024) c_mem_dis_lock_standardized_verbiage = fail_if_error(in0.lock_prescriber_verbiage);
let utf8 string("\x01", maximum_length=1024) c_mem_dis_lock_pharmcy_verbiage = fail_if_error(in0.lock_pharmcy_verbiage);



  out0.c_mem_dis.cpp_member_case_decision_hist_sk::c_mem_dis_cpp_member_case_decision_hist_sk;
  out0.c_mem_dis.member_case_decision_hist_id::c_mem_dis_member_case_decision_hist_id;
  out0.c_mem_dis.sequence_num::c_mem_dis_sequence_num;
  out0.c_mem_dis.case_id::c_mem_dis_case_id;
  out0.c_mem_dis.case_decision::c_mem_dis_case_decision;
  out0.c_mem_dis.pos_edit_notification_dt::c_mem_dis_pos_edit_notification_dt;
  out0.c_mem_dis.pos_edit_modification_dt::c_mem_dis_pos_edit_modification_dt;
  out0.c_mem_dis.decision_verbiage::c_mem_dis_decision_verbiage;
  out0.c_mem_dis.standardized_verbiage::c_mem_dis_standardized_verbiage;
  out0.c_mem_dis.recommendation::c_mem_dis_recommendation;
  out0.c_mem_dis.review_dt::c_mem_dis_review_dt;
  out0.c_mem_dis.pos_edit_eff_dt::c_mem_dis_pos_edit_eff_dt;
  out0.c_mem_dis.pos_edit_end_dt::c_mem_dis_pos_edit_end_dt;
  out0.c_mem_dis.reason_cd::c_mem_dis_reason_cd;
  out0.c_mem_dis.attendees::c_mem_dis_attendees;
  out0.c_mem_dis.pos_edit_flag::c_mem_dis_pos_edit_flag;
  out0.c_mem_dis.committee_review_flag::c_mem_dis_committee_review_flag;
  out0.c_mem_dis.cpp_update_ts::c_mem_dis_cpp_update_ts;
  out0.c_mem_dis.cpp_updated_by::c_mem_dis_cpp_updated_by;
  out0.c_mem_dis.cpp_create_ts::c_mem_dis_cpp_create_ts;
  out0.c_mem_dis.cpp_created_by::c_mem_dis_cpp_created_by;
  out0.c_mem_dis.src_env_sk::c_mem_dis_src_env_sk;
  out0.c_mem_dis.lock_type::c_mem_dis_lock_type;
  out0.c_mem_dis.lock_reason_cd::c_mem_dis_lock_reason_cd;
  out0.c_mem_dis.lock_standardized_verbiage::c_mem_dis_lock_standardized_verbiage;
  out0.c_mem_dis.lock_pharmcy_verbiage::c_mem_dis_lock_pharmcy_verbiage;
  out0.*::in0.*;

end;
