/*   Do not edit. Generated file - BRE 4.0.2.18;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_ctrx_rcfasp_to_the_ctrx_f_claim_facility_seg_ILM_documentation(in)=
begin

out0.f_claim_faci.src_env_sk::depends_on(
         in.rxt_src_envrt_id
         );


out0.f_claim_faci.claim_seq_nbr::depends_on(
         in.bsoinb
         );


out0.f_claim_faci.claim_nbr::depends_on(
         in.bsp2nb
         );


out0.f_claim_faci.facility_zip::depends_on(
         in.bsrhip
         );


out0.f_claim_faci.facility_street::depends_on(
         in.bsrfip
         );


out0.f_claim_faci.facility_id::depends_on(
         in.facilityid
         );


out0.d_cag.account_id::depends_on(
         in.accountid
         );


out0.d_mbr.account_id::depends_on(
         in.accountid
         );


out0.f_claim_faci.claim_nbr_encrp::depends_on(
         in.bsp2nb
         );


out0.f_claim_faci.facility_nm::depends_on(
         in.bsreip
         );


out0.d_mbr.mbr_id::depends_on(
         in.cardholder,
         in.memberid,
         in.claimsts
         );


out0.f_claim_faci.facility_state::depends_on(
         in.bsuooc
         );


out0.d_cag.carrier_id::depends_on(
         in.carrierid
         );


out0.d_mbr.carrier_id::depends_on(
         in.carrierid
         );


out0.d_carrier.carrier_id::depends_on(
         in.carrierid
         );


out0.d_mbr.employer_group_id::depends_on(
         in.groupid
         );


out0.f_claim_faci.facility_city::depends_on(
         in.bsrgip
         );


out0.d_cag.employer_group_id::depends_on(
         in.groupid
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_ctrx_rcfasp_to_the_ctrx_f_claim_facility_seg_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.f_claim_faci.cag_sk,'f_claim_faci.cag_sk',1,0]
     [out0.f_claim_faci.src_env_sk,'f_claim_faci.src_env_sk',1,0]
     [out0.f_claim_faci.claim_seq_nbr,'f_claim_faci.claim_seq_nbr',1,0]
     [out0.f_claim_faci.claim_nbr,'f_claim_faci.claim_nbr',1,0]
     [out0.f_claim_faci.facility_zip,'f_claim_faci.facility_zip',1,0]
     [out0.f_claim_faci.facility_street,'f_claim_faci.facility_street',1,0]
     [out0.f_claim_faci.mbr_sk,'f_claim_faci.mbr_sk',1,0]
     [out0.f_claim_faci.facility_id,'f_claim_faci.facility_id',1,0]
     [out0.d_cag.account_id,'d_cag.account_id',1,0]
     [out0.d_mbr.account_id,'d_mbr.account_id',1,0]
     [out0.f_claim_faci.claim_nbr_encrp,'f_claim_faci.claim_nbr_encrp',1,0]
     [out0.f_claim_faci.facility_nm,'f_claim_faci.facility_nm',1,0]
     [out0.d_mbr.mbr_id,'d_mbr.mbr_id',1,0]
     [out0.f_claim_faci.facility_state,'f_claim_faci.facility_state',1,0]
     [out0.d_cag.carrier_id,'d_cag.carrier_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.d_mbr.carrier_id,'d_mbr.carrier_id',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.f_claim_faci.carrier_sk,'f_claim_faci.carrier_sk',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.d_carrier.carrier_id,'d_carrier.carrier_id',1,0]
     [out0.d_mbr.employer_group_id,'d_mbr.employer_group_id',1,0]
     [out0.f_claim_faci.facility_city,'f_claim_faci.facility_city',1,0]
     [out0.d_cag.employer_group_id,'d_cag.employer_group_id',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
  ]
  impacts:
  [
     [in0.accountid,'accountid',2,2]
     [in0.bsrhip,'bsrhip',1,1]
     [in0.claimsts,'claimsts',1,1]
     [in0.cardholder,'cardholder',1,1]
     [in0.bsp2nb,'bsp2nb',6,2]
     [in0.memberid,'memberid',2,1]
     [in0.carrierid,'carrierid',3,3]
     [in0.bsoinb,'bsoinb',3,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',1,1]
     [in0.bsrgip,'bsrgip',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.bsuooc,'bsuooc',1,1]
     [in0.bsreip,'bsreip',1,1]
     [in0.facilityid,'facilityid',1,1]
     [in0.groupid,'groupid',2,2]
     [in0.bsrfip,'bsrfip',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) f_claim_faci_claim_nbr = fail_if_error(in0.bsp2nb);
let decimal("\x01",0) f_claim_faci_claim_seq_nbr = fail_if_error(if(in0.bsoinb < 0) in0.bsoinb else (1000 - in0.bsoinb));
let string("\x01",charset="iso-8859-15", maximum_length=30) f_claim_faci_facility_city = fail_if_error(in0.bsrgip);
let string("\x01",charset="iso-8859-15", maximum_length=2) f_claim_faci_facility_state = fail_if_error(in0.bsuooc);
let string("\x01",charset="iso-8859-15", maximum_length=30) f_claim_faci_facility_street = fail_if_error(in0.bsrfip);
let string("\x01",charset="iso-8859-15", maximum_length=30) f_claim_faci_facility_nm = fail_if_error(in0.bsreip);
let string("\x01",charset="iso-8859-15", maximum_length=15) f_claim_faci_facility_zip = fail_if_error(in0.bsrhip);
let string("\x01",charset="iso-8859-15", maximum_length=10) f_claim_faci_facility_id = fail_if_error(in0.facilityid);
let decimal("\x01",0) f_claim_faci_cag_sk = -1;
let decimal("\x01",0) f_claim_faci_mbr_sk = -1;
let decimal("\x01",0) f_claim_faci_src_env_sk = fail_if_error((decimal(''))(in0.rxt_src_envrt_id));
let decimal("\x01",0) f_claim_faci_carrier_sk = -1;
let decimal("\x01",0) f_claim_faci_claim_nbr_encrp;
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cag_carrier_id = fail_if_error(in0.carrierid);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_cag_account_id = fail_if_error(in0.accountid);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_cag_employer_group_id = fail_if_error(in0.groupid);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_carrier_carrier_id = fail_if_error(in0.carrierid);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_mbr_carrier_id = fail_if_error(in0.carrierid);
let string("\x01",charset="iso-8859-15", maximum_length=40) d_mbr_account_id = fail_if_error(in0.accountid);
let string("\x01",charset="iso-8859-15", maximum_length=30) d_mbr_employer_group_id = fail_if_error(in0.groupid);
let string("\x01",charset="iso-8859-15", maximum_length=20) d_mbr_mbr_id = fail_if_error((if (sql_and((string_lrtrim(in0.claimsts)!='R'),is_blank(in0.memberid)))
   in0.cardholder
 else
   in0.memberid));



/*   Default value   */
f_claim_faci_claim_nbr_encrp=fail_if_error(if(in0.bsp2nb>0) (decimal(''))(string_concat(string_substring((decimal(''))in0.bsp2nb,1,2),ff3_encrypt_idwdata((decimal(''))in0.bsp2nb))) 
else  (decimal(''))(string_concat(string_substring((decimal(''))in0.bsp2nb,1,3),ff3_encrypt_idwdata(decimal_strip(math_abs((decimal(''))in0.bsp2nb))))));

  out0.f_claim_faci.claim_nbr::f_claim_faci_claim_nbr;
  out0.f_claim_faci.claim_seq_nbr::f_claim_faci_claim_seq_nbr;
  out0.f_claim_faci.facility_city::f_claim_faci_facility_city;
  out0.f_claim_faci.facility_state::f_claim_faci_facility_state;
  out0.f_claim_faci.facility_street::f_claim_faci_facility_street;
  out0.f_claim_faci.facility_nm::f_claim_faci_facility_nm;
  out0.f_claim_faci.facility_zip::f_claim_faci_facility_zip;
  out0.f_claim_faci.facility_id::f_claim_faci_facility_id;
  out0.f_claim_faci.cag_sk::f_claim_faci_cag_sk;
  out0.f_claim_faci.mbr_sk::f_claim_faci_mbr_sk;
  out0.f_claim_faci.src_env_sk::f_claim_faci_src_env_sk;
  out0.f_claim_faci.carrier_sk::f_claim_faci_carrier_sk;
  out0.f_claim_faci.claim_nbr_encrp::f_claim_faci_claim_nbr_encrp;
  out0.d_cag.carrier_id::d_cag_carrier_id;
  out0.d_cag.account_id::d_cag_account_id;
  out0.d_cag.employer_group_id::d_cag_employer_group_id;
  out0.d_carrier.carrier_id::d_carrier_carrier_id;
  out0.d_mbr.carrier_id::d_mbr_carrier_id;
  out0.d_mbr.account_id::d_mbr_account_id;
  out0.d_mbr.employer_group_id::d_mbr_employer_group_id;
  out0.d_mbr.mbr_id::d_mbr_mbr_id;
  out0.*::in0.*;
end;
