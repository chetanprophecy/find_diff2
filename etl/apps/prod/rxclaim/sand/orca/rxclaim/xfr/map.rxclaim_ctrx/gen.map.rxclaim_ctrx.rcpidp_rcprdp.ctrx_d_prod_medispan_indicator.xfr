/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5d15f1e9_5fec_0 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.d_product.prod_id_qlfr_cd,[passthrough],in0.s4nqs3]
  [out0.ctrx_d_prd_m.prod_id_qlfr_cd,[passthrough],in0.s4nqs3]
  [out0.d_product.prod_id,[passthrough],in0.s4e6c4]
  [out0.ctrx_d_prd_m.src_env_sk,[passthrough],in0.rxt_src_envrt_id]
  [out0.ctrx_d_prd_m.gnrc_mdspn_ind,[passthrough],in0.szozs3]
  [out0.ctrx_d_prd_m.prod_sk,[transform],]
  [out0.ctrx_d_prd_m.gnrc_mdspn_ind_nm,[transform],in0.szozs3]
  [out0.ctrx_d_prd_m.prod_id,[passthrough],in0.s4e6c4]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.d_product.prod_id_qlfr_cd,'d_product.prod_id_qlfr_cd',1,0]
     [out0.ctrx_d_prd_m.prod_id_qlfr_cd,'ctrx_d_prd_m.prod_id_qlfr_cd',1,0]
     [out0.d_product.prod_id,'d_product.prod_id',1,0]
     [out0.ctrx_d_prd_m.src_env_sk,'ctrx_d_prd_m.src_env_sk',1,0]
     [out0.ctrx_d_prd_m.gnrc_mdspn_ind,'ctrx_d_prd_m.gnrc_mdspn_ind',5,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.ctrx_d_prd_m.prod_sk,'ctrx_d_prd_m.prod_sk',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.ctrx_d_prd_m.gnrc_mdspn_ind_nm,'ctrx_d_prd_m.gnrc_mdspn_ind_nm',1,1]
     [out0.ctrx_d_prd_m.prod_id,'ctrx_d_prd_m.prod_id',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
  ]
  impacts:
  [
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.s4e6c4,'s4e6c4',2,2]
     [in0.s4nqs3,'s4nqs3',2,2]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.szozs3,'szozs3',1,2]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) ctrx_d_prd_m_prod_sk = -1;
let string("\x01",charset="iso-8859-15", maximum_length=20) ctrx_d_prd_m_prod_id = fail_if_error(in0.s4e6c4);
let string("\x01",charset="iso-8859-15", maximum_length=2) ctrx_d_prd_m_prod_id_qlfr_cd = fail_if_error(in0.s4nqs3);
let string("\x01",charset="iso-8859-15", maximum_length=1) ctrx_d_prd_m_gnrc_mdspn_ind = fail_if_error(in0.szozs3);
let string("\x01",charset="iso-8859-15", maximum_length=50) ctrx_d_prd_m_gnrc_mdspn_ind_nm;
let decimal("\x01",0) ctrx_d_prd_m_src_env_sk = fail_if_error(in0.rxt_src_envrt_id);
let string("\x01",charset="iso-8859-15", maximum_length=20) d_product_prod_id = fail_if_error(in0.s4e6c4);
let string("\x01",charset="iso-8859-15", maximum_length=2) d_product_prod_id_qlfr_cd = fail_if_error(in0.s4nqs3);



/*   Default value   */
ctrx_d_prd_m_gnrc_mdspn_ind_nm=fail_if_error(if(ctrx_d_prd_m_gnrc_mdspn_ind == "M") "Not generic, multiple manufacturers" else if(ctrx_d_prd_m_gnrc_mdspn_ind == "N") "Not generic, single manufacturer" else if(ctrx_d_prd_m_gnrc_mdspn_ind == "O") "Original prod, multiple manufacturers" else if(ctrx_d_prd_m_gnrc_mdspn_ind == "Y") "Generic prod, multiple manufacturers" else "Not Specified");

  out0.ctrx_d_prd_m.prod_sk::ctrx_d_prd_m_prod_sk;
  out0.ctrx_d_prd_m.prod_id::ctrx_d_prd_m_prod_id;
  out0.ctrx_d_prd_m.prod_id_qlfr_cd::ctrx_d_prd_m_prod_id_qlfr_cd;
  out0.ctrx_d_prd_m.gnrc_mdspn_ind::ctrx_d_prd_m_gnrc_mdspn_ind;
  out0.ctrx_d_prd_m.gnrc_mdspn_ind_nm::ctrx_d_prd_m_gnrc_mdspn_ind_nm;
  out0.ctrx_d_prd_m.src_env_sk::ctrx_d_prd_m_src_env_sk;
  out0.d_product.prod_id::d_product_prod_id;
  out0.d_product.prod_id_qlfr_cd::d_product_prod_id_qlfr_cd;
  out0.*::in0.*;

end;
