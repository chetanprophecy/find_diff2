/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@
dependency_analysis:
[
  [out0.ctrx_rcpucp.cost_origin_cd,[passthrough],in0.s7qrs3]
  [out0.ctrx_rcpucp.cost_src_cd,[passthrough],in0.s7e8c4]
  [out0.ctrx_rcpucp.cost_thru_dt,[transform],in0.s7jqhg]
  [out0.ctrx_rcpucp.cost_type_cd,[passthrough],in0.s7e9c4]
  [out0.ctrx_rcpucp.prod_key,[passthrough],in0.s7iin2]
  [out0.ctrx_rcpucp.src_env_sk,[passthrough],in0.rxt_src_envrt_id]
  [out0.ctrx_rcpucp.cost_eff_dt,[transform],in0.s7n3dt]
  [out0.ctrx_rcpucp.unit_cost_amt,[passthrough],in0.s7kbp1]
  [out0.ctrx_rcpucp.cost_stat_cd,[passthrough],in0.s7qqs3]
  [out0.ctrx_rcpucp.cost_seq_no,[passthrough],in0.s7ipn2]
  [out0.ctrx_rcpucp.price_src_cd,[transform],in0.s7e8c4]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.ctrx_rcpucp.cost_origin_cd,'ctrx_rcpucp.cost_origin_cd',1,0]
     [out0.ctrx_rcpucp.cost_src_cd,'ctrx_rcpucp.cost_src_cd',1,0]
     [out0.ctrx_rcpucp.cost_thru_dt,'ctrx_rcpucp.cost_thru_dt',3,2]
     [out0.ctrx_rcpucp.cost_type_cd,'ctrx_rcpucp.cost_type_cd',1,0]
     [out0.ctrx_rcpucp.prod_key,'ctrx_rcpucp.prod_key',1,0]
     [out0.ctrx_rcpucp.src_env_sk,'ctrx_rcpucp.src_env_sk',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.ctrx_rcpucp.cost_eff_dt,'ctrx_rcpucp.cost_eff_dt',3,2]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.ctrx_rcpucp.unit_cost_amt,'ctrx_rcpucp.unit_cost_amt',1,0]
     [out0.ctrx_rcpucp.cost_stat_cd,'ctrx_rcpucp.cost_stat_cd',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.ctrx_rcpucp.cost_seq_no,'ctrx_rcpucp.cost_seq_no',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.ctrx_rcpucp.price_src_cd,'ctrx_rcpucp.price_src_cd',7,7]
  ]
  impacts:
  [
     [in0.s7ipn2,'s7ipn2',1,1]
     [in0.s7e8c4,'s7e8c4',3,9]
     [in0.s7iin2,'s7iin2',1,1]
     [in0.s7qqs3,'s7qqs3',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.rxt_src_envrt_id,'rxt_src_envrt_id',1,1]
     [in0.s7jqhg,'s7jqhg',6,3]
     [in0.s7qrs3,'s7qrs3',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.s7kbp1,'s7kbp1',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.s7n3dt,'s7n3dt',6,3]
     [in0.s7e9c4,'s7e9c4',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) ctrx_rcpucp_prod_key = fail_if_error(in0.s7iin2);
let string("\x01", maximum_length=10) ctrx_rcpucp_cost_src_cd = fail_if_error(in0.s7e8c4);
let string("\x01", maximum_length=10) ctrx_rcpucp_cost_type_cd = fail_if_error(in0.s7e9c4);
let decimal("\x01",0) ctrx_rcpucp_cost_seq_no = fail_if_error(in0.s7ipn2);
let string("\x01", maximum_length=1) ctrx_rcpucp_price_src_cd;
let string("\x01", maximum_length=1) ctrx_rcpucp_cost_stat_cd = fail_if_error(in0.s7qqs3);
let date("YYYYMMDD")("\x01") ctrx_rcpucp_cost_eff_dt = 00010101;
let date("YYYYMMDD")("\x01") ctrx_rcpucp_cost_thru_dt = 00010101;
let decimal("\x01",13) ctrx_rcpucp_unit_cost_amt = fail_if_error(in0.s7kbp1);
let string("\x01", maximum_length=1) ctrx_rcpucp_cost_origin_cd = fail_if_error(in0.s7qrs3);
let decimal("\x01",0) ctrx_rcpucp_src_env_sk = fail_if_error(in0.rxt_src_envrt_id);



/*   Rule:Compute ctrx_rcpucp.cost_eff_dt  (#1)   */
if(first_defined(fail_if_error(((length_of(in0.s7n3dt) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000+in0.s7n3dt))) ==YYYYMMDD(19000000+in0.s7n3dt))),0))begin
  ctrx_rcpucp_cost_eff_dt=YYYYMMDD(19000000+in0.s7n3dt);
end
else if(first_defined(fail_if_error(((length_of(in0.s7n3dt)) ==8) && ((is_valid(YYYYMMDD(in0.s7n3dt))) ==1)),0))begin
  ctrx_rcpucp_cost_eff_dt=(date("YYYYMMDD"))in0.s7n3dt;
end

/*   Rule:Compute ctrx_rcpucp.cost_thru_dt  (#2)   */
if(first_defined(fail_if_error(((length_of(in0.s7jqhg) member [vector 6,7])) && ((is_valid(YYYYMMDD(19000000+in0.s7jqhg))) ==YYYYMMDD(19000000+in0.s7jqhg))),0))begin
  ctrx_rcpucp_cost_thru_dt=YYYYMMDD(19000000+in0.s7jqhg);
end
else if(first_defined(fail_if_error(((length_of(in0.s7jqhg)) ==8) && ((is_valid(YYYYMMDD(in0.s7jqhg))) ==1)),0))begin
  ctrx_rcpucp_cost_thru_dt=(date("YYYYMMDD"))in0.s7jqhg;
end

/*   Rule:Compute ctrx_rcpucp.price_src_cd  (#3)   */
if(first_defined(fail_if_error(((string_substring(in0.s7e8c4 , 1 , 3 )) =='MED')),0))begin
  ctrx_rcpucp_price_src_cd='M';
end
else if((in0.s7e8c4 =='FDB'))begin
  ctrx_rcpucp_price_src_cd='F';
end
else if((in0.s7e8c4 =='FDBD'))begin
  ctrx_rcpucp_price_src_cd='D';
end
else if((in0.s7e8c4 =='PLAN'))begin
  ctrx_rcpucp_price_src_cd='P';
end
else if((in0.s7e8c4 =='REDBOOK'))begin
  ctrx_rcpucp_price_src_cd='R';
end
else if((in0.s7e8c4 =='S'))begin
  ctrx_rcpucp_price_src_cd='S';
end
else begin
  ctrx_rcpucp_price_src_cd='U';
end

  out0.ctrx_rcpucp.prod_key::ctrx_rcpucp_prod_key;
  out0.ctrx_rcpucp.cost_src_cd::ctrx_rcpucp_cost_src_cd;
  out0.ctrx_rcpucp.cost_type_cd::ctrx_rcpucp_cost_type_cd;
  out0.ctrx_rcpucp.cost_seq_no::ctrx_rcpucp_cost_seq_no;
  out0.ctrx_rcpucp.price_src_cd::ctrx_rcpucp_price_src_cd;
  out0.ctrx_rcpucp.cost_stat_cd::ctrx_rcpucp_cost_stat_cd;
  out0.ctrx_rcpucp.cost_eff_dt::ctrx_rcpucp_cost_eff_dt;
  out0.ctrx_rcpucp.cost_thru_dt::ctrx_rcpucp_cost_thru_dt;
  out0.ctrx_rcpucp.unit_cost_amt::ctrx_rcpucp_unit_cost_amt;
  out0.ctrx_rcpucp.cost_origin_cd::ctrx_rcpucp_cost_origin_cd;
  out0.ctrx_rcpucp.src_env_sk::ctrx_rcpucp_src_env_sk;
  out0.*::in0.*;

end;
