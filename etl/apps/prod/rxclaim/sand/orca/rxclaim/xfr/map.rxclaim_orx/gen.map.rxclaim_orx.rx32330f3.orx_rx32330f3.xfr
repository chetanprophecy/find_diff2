/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@
dependency_analysis:
[
  [out0.awpxtract.src_env_sk,[passthrough],in0.dxf_src_sys_id]
  [out0.awpxtract.createdate,[transform],in0.createdate]
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.awpxtract.baseplnss,'awpxtract.baseplnss',1,0]
     [out0.awpxtract.psnonpref,'awpxtract.psnonpref',1,0]
     [out0.awpxtract.splrgpgmid,'awpxtract.splrgpgmid',1,0]
     [out0.awpxtract.comingcou,'awpxtract.comingcou',1,0]
     [out0.awpxtract.ncpdprjver,'awpxtract.ncpdprjver',1,0]
     [out0.awpxtract.psbrdnpre,'awpxtract.psbrdnpre',1,0]
     [out0.awpxtract.sbmdate,'awpxtract.sbmdate',1,0]
     [out0.awpxtract.mincopay,'awpxtract.mincopay',1,0]
     [out0.awpxtract.rxclaimnbr,'awpxtract.rxclaimnbr',1,0]
     [out0.awpxtract.nbrgenmaf,'awpxtract.nbrgenmaf',1,0]
     [out0.awpxtract.pharmreim,'awpxtract.pharmreim',1,0]
     [out0.awpxtract.claimsts,'awpxtract.claimsts',1,0]
     [out0.awpxtract.cltdispfee,'awpxtract.cltdispfee',1,0]
     [out0.awpxtract.patage,'awpxtract.patage',1,0]
     [out0.awpxtract.mbrelgind,'awpxtract.mbrelgind',1,0]
     [out0.awpxtract.splrgpgpid,'awpxtract.splrgpgpid',1,0]
     [out0.awpxtract.suppcon,'awpxtract.suppcon',1,0]
     [out0.awpxtract.splnetpgid,'awpxtract.splnetpgid',1,0]
     [out0.awpxtract.adhincprog,'awpxtract.adhincprog',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.awpxtract.cdhindic,'awpxtract.cdhindic',1,0]
     [out0.awpxtract.src_env_sk,'awpxtract.src_env_sk',1,0]
     [out0.awpxtract.cobppamtp,'awpxtract.cobppamtp',1,0]
     [out0.awpxtract.drgelgind,'awpxtract.drgelgind',1,0]
     [out0.awpxtract.drucatcod,'awpxtract.drucatcod',1,0]
     [out0.awpxtract.cobcarsamt,'awpxtract.cobcarsamt',1,0]
     [out0.awpxtract.amtcoinsur,'awpxtract.amtcoinsur',1,0]
     [out0.awpxtract.cobsecpaya,'awpxtract.cobsecpaya',1,0]
     [out0.awpxtract.ingcostcde,'awpxtract.ingcostcde',1,0]
     [out0.awpxtract.awp_pub,'awpxtract.awp_pub',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.awpxtract.insulinpln,'awpxtract.insulinpln',1,0]
     [out0.awpxtract.cobsecpay,'awpxtract.cobsecpay',1,0]
     [out0.awpxtract.ndcdiff,'awpxtract.ndcdiff',1,0]
     [out0.awpxtract.createdate,'awpxtract.createdate',1,0]
     [out0.awpxtract.cltcostier,'awpxtract.cltcostier',1,0]
     [out0.awpxtract.plnsponss,'awpxtract.plnsponss',1,0]
     [out0.awpxtract.awp_adj,'awpxtract.awp_adj',1,0]
     [out0.awpxtract.clntbill,'awpxtract.clntbill',1,0]
     [out0.awpxtract.cobppayid,'awpxtract.cobppayid',1,0]
     [out0.awpxtract.adhincramt,'awpxtract.adhincramt',1,0]
     [out0.awpxtract.cobpclmtyp,'awpxtract.cobpclmtyp',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.awpxtract.spldrgpgid,'awpxtract.spldrgpgid',1,0]
     [out0.awpxtract.clmseqnbr,'awpxtract.clmseqnbr',1,0]
     [out0.awpxtract.adhincreda,'awpxtract.adhincreda',1,0]
  ]
  impacts:
  [
     [in0.psnonpref,'psnonpref',1,1]
     [in0.rxclaimnbr,'rxclaimnbr',1,1]
     [in0.clmseqnbr,'clmseqnbr',1,1]
     [in0.splrgpgpid,'splrgpgpid',1,1]
     [in0.plnsponss,'plnsponss',1,1]
     [in0.mincopay,'mincopay',1,1]
     [in0.ingcostcde,'ingcostcde',1,1]
     [in0.cltcostier,'cltcostier',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.splrgpgmid,'splrgpgmid',1,1]
     [in0.baseplnss,'baseplnss',1,1]
     [in0.cltdispfee,'cltdispfee',1,1]
     [in0.drucatcod,'drucatcod',1,1]
     [in0.sbmdate,'sbmdate',1,1]
     [in0.psbrdnpre,'psbrdnpre',1,1]
     [in0.adhincramt,'adhincramt',1,1]
     [in0.awp_pub,'awp_pub',1,1]
     [in0.createdate,'createdate',1,1]
     [in0.amtcoinsur,'amtcoinsur',1,1]
     [in0.cobppamtp,'cobppamtp',1,1]
     [in0.suppcon,'suppcon',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]
     [in0.patage,'patage',1,1]
     [in0.cobcarsamt,'cobcarsamt',1,1]
     [in0.cobpclmtyp,'cobpclmtyp',1,1]
     [in0.adhincreda,'adhincreda',1,1]
     [in0.splnetpgid,'splnetpgid',1,1]
     [in0.adhincprog,'adhincprog',1,1]
     [in0.nbrgenmaf,'nbrgenmaf',1,1]
     [in0.cobsecpaya,'cobsecpaya',1,1]
     [in0.drgelgind,'drgelgind',1,1]
     [in0.insulinpln,'insulinpln',1,1]
     [in0.claimsts,'claimsts',1,1]
     [in0.comingcou,'comingcou',1,1]
     [in0.pharmreim,'pharmreim',1,1]
     [in0.ndcdiff,'ndcdiff',1,1]
     [in0.cobsecpay,'cobsecpay',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.ncpdprjver,'ncpdprjver',1,1]
     [in0.cobppayid,'cobppayid',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.spldrgpgid,'spldrgpgid',1,1]
     [in0.clntbill,'clntbill',1,1]
     [in0.cdhindic,'cdhindic',1,1]
     [in0.awp_adj,'awp_adj',1,1]
     [in0.mbrelgind,'mbrelgind',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal('') DXF_Source_Record_Count = fail_if_error(in0.dxf_src_rec_cnt);
let decimal("\001", maximum_length=17) awpxtract_rxclaimnbr = fail_if_error(in0.rxclaimnbr);
let decimal("\001", maximum_length=5) awpxtract_clmseqnbr = fail_if_error(in0.clmseqnbr);
let string("\001", maximum_length=1) awpxtract_claimsts = fail_if_error(in0.claimsts);
let decimal("\001", maximum_length=10) awpxtract_sbmdate = fail_if_error(in0.sbmdate);
let decimal("\001".5, maximum_length=15) awpxtract_awp_adj = fail_if_error(in0.awp_adj);
let decimal("\001".5, maximum_length=15) awpxtract_awp_pub = fail_if_error(in0.awp_pub);
let string("\001", maximum_length=1) awpxtract_drucatcod = fail_if_error(in0.drucatcod);
let decimal("\001", maximum_length=5) awpxtract_nbrgenmaf = fail_if_error(in0.nbrgenmaf);
let decimal("\001".2, maximum_length=11) awpxtract_amtcoinsur = fail_if_error(in0.amtcoinsur);
let decimal("\001".2, maximum_length=11) awpxtract_psnonpref = fail_if_error(in0.psnonpref);
let decimal("\001".2, maximum_length=11) awpxtract_psbrdnpre = fail_if_error(in0.psbrdnpre);
let decimal("\001".2, maximum_length=11) awpxtract_cobcarsamt = fail_if_error(in0.cobcarsamt);
let string("\001", maximum_length=1) awpxtract_cobpclmtyp = fail_if_error(in0.cobpclmtyp);
let string("\001", maximum_length=10) awpxtract_cobppayid = fail_if_error(in0.cobppayid);
let decimal("\001".2, maximum_length=11) awpxtract_cobppamtp = fail_if_error(in0.cobppamtp);
let string("\001", maximum_length=2) awpxtract_cltcostier = fail_if_error(in0.cltcostier);
let string("\001", maximum_length=1) awpxtract_spldrgpgid = fail_if_error(in0.spldrgpgid);
let string("\001", maximum_length=1) awpxtract_splrgpgmid = fail_if_error(in0.splrgpgmid);
let string("\001", maximum_length=1) awpxtract_splrgpgpid = fail_if_error(in0.splrgpgpid);
let string("\001", maximum_length=1) awpxtract_adhincprog = fail_if_error(in0.adhincprog);
let string("\001", maximum_length=1) awpxtract_adhincreda = fail_if_error(in0.adhincreda);
let decimal("\001".2, maximum_length=11) awpxtract_adhincramt = fail_if_error(in0.adhincramt);
let string("\001", maximum_length=1) awpxtract_drgelgind = fail_if_error(in0.drgelgind);
let string("\001", maximum_length=1) awpxtract_mbrelgind = fail_if_error(in0.mbrelgind);
let decimal("\001".2, maximum_length=9) awpxtract_baseplnss = fail_if_error(in0.baseplnss);
let decimal("\001".2, maximum_length=9) awpxtract_plnsponss = fail_if_error(in0.plnsponss);
let decimal("\001".2, maximum_length=9) awpxtract_suppcon = fail_if_error(in0.suppcon);
let decimal("\001".2, maximum_length=9) awpxtract_mincopay = fail_if_error(in0.mincopay);
let string("\001", maximum_length=1) awpxtract_cdhindic = fail_if_error(in0.cdhindic);
let string("\001", maximum_length=1) awpxtract_splnetpgid = fail_if_error(in0.splnetpgid);
let string("\001", maximum_length=10) awpxtract_ingcostcde = fail_if_error(in0.ingcostcde);
let decimal("\001", maximum_length=4) awpxtract_comingcou = fail_if_error(in0.comingcou);
let decimal("\001", maximum_length=5) awpxtract_patage = fail_if_error(in0.patage);
let decimal("\001".2, maximum_length=11) awpxtract_ndcdiff = fail_if_error(in0.ndcdiff);
let string("\001", maximum_length=1) awpxtract_insulinpln = fail_if_error(in0.insulinpln);
let string("\001", maximum_length=10) awpxtract_cobsecpay = fail_if_error(in0.cobsecpay);
let decimal("\001".2, maximum_length=11) awpxtract_cobsecpaya = fail_if_error(in0.cobsecpaya);
let string("\001", maximum_length=2) awpxtract_ncpdprjver = fail_if_error(in0.ncpdprjver);
let datetime("YYYY-MM-DD HH24:MI:SS.nnn")("\001") awpxtract_createdate = fail_if_error((datetime("YYYY-MM-DD HH24:MI:SS.nnn")) (datetime("YYYY-MM-DD-HH24.MI.SS.nnnnnn")) (string(""))in0.createdate);
let string("\001", maximum_length=10) awpxtract_pharmreim = fail_if_error(in0.pharmreim);
let string("\001", maximum_length=10) awpxtract_clntbill = fail_if_error(in0.clntbill);
let decimal("\001".2, maximum_length=8) awpxtract_cltdispfee = fail_if_error(in0.cltdispfee);
let decimal("\x01",0) awpxtract_src_env_sk = fail_if_error(in0.dxf_src_sys_id);



  out0.dxf_src_rec_cnt::DXF_Source_Record_Count;
  out0.awpxtract.rxclaimnbr::awpxtract_rxclaimnbr;
  out0.awpxtract.clmseqnbr::awpxtract_clmseqnbr;
  out0.awpxtract.claimsts::awpxtract_claimsts;
  out0.awpxtract.sbmdate::awpxtract_sbmdate;
  out0.awpxtract.awp_adj::awpxtract_awp_adj;
  out0.awpxtract.awp_pub::awpxtract_awp_pub;
  out0.awpxtract.drucatcod::awpxtract_drucatcod;
  out0.awpxtract.nbrgenmaf::awpxtract_nbrgenmaf;
  out0.awpxtract.amtcoinsur::awpxtract_amtcoinsur;
  out0.awpxtract.psnonpref::awpxtract_psnonpref;
  out0.awpxtract.psbrdnpre::awpxtract_psbrdnpre;
  out0.awpxtract.cobcarsamt::awpxtract_cobcarsamt;
  out0.awpxtract.cobpclmtyp::awpxtract_cobpclmtyp;
  out0.awpxtract.cobppayid::awpxtract_cobppayid;
  out0.awpxtract.cobppamtp::awpxtract_cobppamtp;
  out0.awpxtract.cltcostier::awpxtract_cltcostier;
  out0.awpxtract.spldrgpgid::awpxtract_spldrgpgid;
  out0.awpxtract.splrgpgmid::awpxtract_splrgpgmid;
  out0.awpxtract.splrgpgpid::awpxtract_splrgpgpid;
  out0.awpxtract.adhincprog::awpxtract_adhincprog;
  out0.awpxtract.adhincreda::awpxtract_adhincreda;
  out0.awpxtract.adhincramt::awpxtract_adhincramt;
  out0.awpxtract.drgelgind::awpxtract_drgelgind;
  out0.awpxtract.mbrelgind::awpxtract_mbrelgind;
  out0.awpxtract.baseplnss::awpxtract_baseplnss;
  out0.awpxtract.plnsponss::awpxtract_plnsponss;
  out0.awpxtract.suppcon::awpxtract_suppcon;
  out0.awpxtract.mincopay::awpxtract_mincopay;
  out0.awpxtract.cdhindic::awpxtract_cdhindic;
  out0.awpxtract.splnetpgid::awpxtract_splnetpgid;
  out0.awpxtract.ingcostcde::awpxtract_ingcostcde;
  out0.awpxtract.comingcou::awpxtract_comingcou;
  out0.awpxtract.patage::awpxtract_patage;
  out0.awpxtract.ndcdiff::awpxtract_ndcdiff;
  out0.awpxtract.insulinpln::awpxtract_insulinpln;
  out0.awpxtract.cobsecpay::awpxtract_cobsecpay;
  out0.awpxtract.cobsecpaya::awpxtract_cobsecpaya;
  out0.awpxtract.ncpdprjver::awpxtract_ncpdprjver;
  out0.awpxtract.createdate::awpxtract_createdate;
  out0.awpxtract.pharmreim::awpxtract_pharmreim;
  out0.awpxtract.clntbill::awpxtract_clntbill;
  out0.awpxtract.cltdispfee::awpxtract_cltdispfee;
  out0.awpxtract.src_env_sk::awpxtract_src_env_sk;
  out0.*::in0.*;

end;
