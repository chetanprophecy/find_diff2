/*   Do not edit. Generated file - BRE 4.0.2.18;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_18_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_22_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_16_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_17_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_19_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_12_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_21_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;


/*@ BizHidden:true @*/
/*   lookup LKP:F_CLAIM_TXN   */
out0::bzt_15_6c54cc0a_5a911d72_fca9_1(in0,in1,in2,in3)=
begin
let record
  unsigned integer(8) dxf_hk_part1 = 0, dxf_hk_part2 = 0;
  integer(8) dxf_sk = 0;
  decimal("\x01",0) claim_nbr = NULL(""), claim_seq_nbr = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) claim_stat_id = NULL("");
  decimal("\x01",0) mbr_sk = NULL(""), cag_sk = NULL(""), src_env_sk = NULL("");
end __bzt_local_res__;
__bzt_local_res__ = fail_if_error(lookup("LKP:F_CLAIM_TXN",in0,in1,in2,in3));
  out0::__bzt_local_res__;
end;

/*@ BizHidden:true @*/
constant string(int) RUN_ID parameter  = allocate_with_defaults();

out0::Map_rxclaim_orx_rcpd7p_upd_to_the_orx_f_saving_acct_pay_dtl_upd_ILM_documentation(in)=
begin

out0.w_saving_apd.extract_flg::depends_on(
         in.asukh9
         );


out0.w_saving_apd.src_insert_dt::depends_on(
         in.asc2dt
         );


out0.w_saving_apd.payment_sys_ind::depends_on(
         in.asrhh9
         );


out0.w_saving_apd.reprocess_pat_pay_amt::depends_on(
         in.asalhy
         );


out0.w_saving_apd.reprocess_user::depends_on(
         in.asb2io
         );


out0.w_saving_apd.adj_prim_liab::depends_on(
         in.asxzqv
         );


out0.w_saving_apd.adj_sec_diff::depends_on(
         in.asx0qv
         );


out0.w_saving_apd.claim_nbr_encrp::depends_on(
         in.asp2nb
         );


out0.w_saving_apd.pos_id::depends_on(
         in.asm1ih
         );


out0.w_saving_apd.rxclaim_src::depends_on(
         in.asrgh9
         );


out0.w_saving_apd.src_env_sk::depends_on(
         in.dxf_src_sys_id
         );


out0.w_saving_apd.sav_acct_id::depends_on(
         in.asochc
         );


out0.w_saving_apd.src_update_dt::depends_on(
         in.asbmdt
         );


out0.w_saving_apd.reprocess_claim_seq::depends_on(
         in.asfihs
         );


out0.w_saving_apd.reprocess_pay_nbr::depends_on(
         in.asfjhs
         );


out0.w_saving_apd.mbr_pay_amt::depends_on(
         in.asf1qu
         );


out0.w_saving_apd.claim_stat_id::depends_on(
         in.asp2nb,
         in.asoinb,
         in.dxf_src_sys_id,
         in.asd9hs,
         lookup("LKP:F_CLAIM_TXN",'keystr','keystr','keystr','keystr').claim_stat_id  
         );


out0.w_saving_apd.pos_financial_field_applied_desc::depends_on(
         in.asrih9
         );


out0.w_saving_apd.cag_sk::depends_on(
         in.asp2nb,
         in.asoinb,
         in.dxf_src_sys_id,
         in.asd9hs,
         lookup("LKP:F_CLAIM_TXN",'keystr','keystr','keystr','keystr').cag_sk  
         /*   Rule: "Compute w_saving_apd.cag_sk"   */ );


out0.w_saving_apd.reprocess_chk_nbr::depends_on(
         in.asb3hd
         );


out0.w_saving_apd.claim_seq_nbr::depends_on(
         in.asd9hs,
         in.asoinb
         );


out0.w_saving_apd.pay_phr_flg::depends_on(
         in.aso4ic
         );


out0.w_saving_apd.pos_financial_field_applied::depends_on(
         in.asrih9
         );


out0.w_saving_apd.reprocess_posted_dt::depends_on(
         in.asc9hk
         );


out0.w_saving_apd.sav_acct_subtype_id::depends_on(
         in.asokhc
         );


out0.w_saving_apd.src_insert_tm::depends_on(
         in.asadtm
         );


out0.w_saving_apd.src_update_uid::depends_on(
         in.asadvn
         );


out0.w_saving_apd.src_update_tm::depends_on(
         in.asabtm
         );


out0.w_saving_apd.src_insert_uid::depends_on(
         in.asakvn
         );


out0.w_saving_apd.adjustment_typ::depends_on(
         in.asi6h9
         );


out0.w_saving_apd.adjustment_seq::depends_on(
         in.asd9hs
         );


out0.w_saving_apd.src_update_prog_nm::depends_on(
         in.asaevn
         );


out0.w_saving_apd.pay_amt::depends_on(
         in.asamhy
         );


out0.w_saving_apd.mbr_sk::depends_on(
         in.asp2nb,
         in.asoinb,
         in.dxf_src_sys_id,
         in.asd9hs,
         lookup("LKP:F_CLAIM_TXN",'keystr','keystr','keystr','keystr').mbr_sk  
         /*   Rule: "Compute w_saving_apd.mbr_sk"   */ );


out0.w_saving_apd.src_insert_prog_nm::depends_on(
         in.asalvn
         );


out0.w_saving_apd.reprocess_dt::depends_on(
         in.asoxhg
         );


out0.w_saving_apd.pos_rebate_amt::depends_on(
         in.astshx
         );


out0.w_saving_apd.oth_payer_pay_amt::depends_on(
         in.asf2qu
         );


out0.w_saving_apd.financial_fld_applied_ind::depends_on(
         in.asrih9
         );


out0.w_saving_apd.claim_nbr::depends_on(
         in.asp2nb
         );

out0.*::in.*;
end;

/*@
dependency_analysis_function:Map_rxclaim_orx_rcpd7p_upd_to_the_orx_f_saving_acct_pay_dtl_upd_ILM_documentation
metrics:
{
  dependencies:
  [
     [out0.w_saving_apd.extract_flg,'w_saving_apd.extract_flg',1,0]
     [out0.w_saving_apd.src_insert_dt,'w_saving_apd.src_insert_dt',1,0]
     [out0.w_saving_apd.payment_sys_ind,'w_saving_apd.payment_sys_ind',1,0]
     [out0.w_saving_apd.reprocess_pat_pay_amt,'w_saving_apd.reprocess_pat_pay_amt',1,0]
     [out0.w_saving_apd.reprocess_user,'w_saving_apd.reprocess_user',1,0]
     [out0.w_saving_apd.adj_prim_liab,'w_saving_apd.adj_prim_liab',1,0]
     [out0.w_saving_apd.adj_sec_diff,'w_saving_apd.adj_sec_diff',1,0]
     [out0.w_saving_apd.claim_nbr_encrp,'w_saving_apd.claim_nbr_encrp',1,0]
     [out0.w_saving_apd.pos_id,'w_saving_apd.pos_id',1,0]
     [out0.w_saving_apd.rxclaim_src,'w_saving_apd.rxclaim_src',1,0]
     [out0.w_saving_apd.src_env_sk,'w_saving_apd.src_env_sk',1,0]
     [out0.w_saving_apd.sav_acct_id,'w_saving_apd.sav_acct_id',1,0]
     [out0.w_saving_apd.src_update_dt,'w_saving_apd.src_update_dt',1,0]
     [out0.w_saving_apd.reprocess_claim_seq,'w_saving_apd.reprocess_claim_seq',1,0]
     [out0.w_saving_apd.reprocess_pay_nbr,'w_saving_apd.reprocess_pay_nbr',1,0]
     [out0.w_saving_apd.mbr_pay_amt,'w_saving_apd.mbr_pay_amt',1,0]
     [out0.w_saving_apd.carrier_sk,'w_saving_apd.carrier_sk',1,0]
     [out0.w_saving_apd.claim_stat_id,'w_saving_apd.claim_stat_id',1,7]
     [out0.w_saving_apd.pos_financial_field_applied_desc,'w_saving_apd.pos_financial_field_applied_desc',1,6]
     [out0.w_saving_apd.cag_sk,'w_saving_apd.cag_sk',5,6]
     [out0.w_saving_apd.reprocess_chk_nbr,'w_saving_apd.reprocess_chk_nbr',1,0]
     [out0.w_saving_apd.claim_seq_nbr,'w_saving_apd.claim_seq_nbr',1,1]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.w_saving_apd.pay_phr_flg,'w_saving_apd.pay_phr_flg',1,0]
     [out0.w_saving_apd.pos_financial_field_applied,'w_saving_apd.pos_financial_field_applied',1,0]
     [out0.w_saving_apd.reprocess_posted_dt,'w_saving_apd.reprocess_posted_dt',1,0]
     [out0.w_saving_apd.sav_acct_subtype_id,'w_saving_apd.sav_acct_subtype_id',1,0]
     [out0.w_saving_apd.src_insert_tm,'w_saving_apd.src_insert_tm',1,0]
     [out0.w_saving_apd.src_update_uid,'w_saving_apd.src_update_uid',1,0]
     [out0.w_saving_apd.src_update_tm,'w_saving_apd.src_update_tm',1,0]
     [out0.w_saving_apd.src_insert_uid,'w_saving_apd.src_insert_uid',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.w_saving_apd.adjustment_typ,'w_saving_apd.adjustment_typ',1,0]
     [out0.w_saving_apd.adjustment_seq,'w_saving_apd.adjustment_seq',1,0]
     [out0.w_saving_apd.src_update_prog_nm,'w_saving_apd.src_update_prog_nm',1,0]
     [out0.w_saving_apd.pay_amt,'w_saving_apd.pay_amt',1,0]
     [out0.w_saving_apd.mbr_sk,'w_saving_apd.mbr_sk',5,6]
     [out0.w_saving_apd.src_insert_prog_nm,'w_saving_apd.src_insert_prog_nm',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.w_saving_apd.reprocess_dt,'w_saving_apd.reprocess_dt',1,0]
     [out0.w_saving_apd.pos_rebate_amt,'w_saving_apd.pos_rebate_amt',1,0]
     [out0.w_saving_apd.oth_payer_pay_amt,'w_saving_apd.oth_payer_pay_amt',1,0]
     [out0.w_saving_apd.financial_fld_applied_ind,'w_saving_apd.financial_fld_applied_ind',1,0]
     [out0.w_saving_apd.claim_nbr,'w_saving_apd.claim_nbr',1,0]
     [out0.w_saving_apd.sec_flg,'w_saving_apd.sec_flg',1,0]
  ]
  impacts:
  [
     [in0.asokhc,'asokhc',1,1]
     [in0.asp2nb,'asp2nb',21,21]
     [in0.asoxhg,'asoxhg',1,1]
     [in0.asalhy,'asalhy',1,1]
     [in0.asadtm,'asadtm',1,1]
     [in0.asfjhs,'asfjhs',1,1]
     [in0.asochc,'asochc',1,1]
     [in0.asfihs,'asfihs',3,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.asxzqv,'asxzqv',1,1]
     [in0.asrih9,'asrih9',7,9]
     [in0.asf1qu,'asf1qu',1,1]
     [in0.asb2io,'asb2io',1,1]
     [in0.asamhy,'asamhy',1,1]
     [in0.asukh9,'asukh9',1,1]
     [in0.asakvn,'asakvn',1,1]
     [in0.asoinb,'asoinb',2,21]
     [in0.asadvn,'asadvn',1,1]
     [in0.asbmdt,'asbmdt',1,1]
     [in0.asaevn,'asaevn',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',17,21]
     [in0.astshx,'astshx',1,1]
     [in0.asc9hk,'asc9hk',1,1]
     [in0.asx0qv,'asx0qv',1,1]
     [in0.asalvn,'asalvn',1,1]
     [in0.asrhh9,'asrhh9',1,1]
     [in0.asc2dt,'asc2dt',1,1]
     [in0.asf2qu,'asf2qu',1,1]
     [in0.asabtm,'asabtm',1,1]
     [in0.asi6h9,'asi6h9',1,1]
     [in0.asb3hd,'asb3hd',1,1]
     [in0.aso4ic,'aso4ic',1,1]
     [in0.asrgh9,'asrgh9',1,1]
     [in0.asm1ih,'asm1ih',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.asd9hs,'asd9hs',4,22]
     ['lookup("LKP:F_CLAIM_TXN").mbr_sk','mbr_sk',5,6]
     ['lookup("LKP:F_CLAIM_TXN").cag_sk','cag_sk',5,6]
     ['lookup("LKP:F_CLAIM_TXN").claim_stat_id','claim_stat_id',5,7]
  ]
}
@*/

out0::reformat(in0)=
begin
let int bzt_0 not NULL = 0;
let long bzt_9 = allocate_with_defaults();
let long bzt_10 = allocate_with_defaults();
let long bzt_11 = allocate_with_defaults();
let decimal("\x01",0) bzt_13;
let int bzt_14 not NULL = 0;
let decimal("\x01",0) bzt_20;
let unicode string(integer(4)) bzt_23;
let decimal("\x01",0)[int] w_saving_apd_cag_sk = allocate_with_defaults();
let decimal("\x01",0)[int] w_saving_apd_mbr_sk = allocate_with_defaults();
let decimal("\x01",0) w_saving_apd_claim_nbr = fail_if_error(in0.asp2nb);
let decimal("\x01",0) w_saving_apd_claim_seq_nbr;
let string("\x01",charset="iso-8859-15", maximum_length=9) w_saving_apd_reprocess_chk_nbr = fail_if_error(in0.asb3hd);
let decimal("\x01",0) w_saving_apd_reprocess_claim_seq = fail_if_error(if(in0.asfihs <= 0)in0.asfihs else (1000 - in0.asfihs));
let date("YYYYMMDD")("\x01") w_saving_apd_reprocess_posted_dt;
let string("\x01",charset="iso-8859-15", maximum_length=9) w_saving_apd_reprocess_pay_nbr = fail_if_error(in0.asfjhs);
let decimal("\x01".2, maximum_length=11, sign_reserved) w_saving_apd_oth_payer_pay_amt = fail_if_error(in0.asf2qu);
let string("\x01",charset="iso-8859-15", maximum_length=1) w_saving_apd_pay_phr_flg = fail_if_error(in0.aso4ic);
let string("\x01",charset="iso-8859-15", maximum_length=10) w_saving_apd_sav_acct_subtype_id = fail_if_error(in0.asokhc);
let decimal("\x01".2, maximum_length=11, sign_reserved) w_saving_apd_mbr_pay_amt = fail_if_error(in0.asf1qu);
let decimal("\x01".2, maximum_length=11, sign_reserved) w_saving_apd_pay_amt = fail_if_error(in0.asamhy);
let decimal("\x01".2, maximum_length=11, sign_reserved) w_saving_apd_reprocess_pat_pay_amt = fail_if_error(in0.asalhy);
let string("\x01",charset="iso-8859-15", maximum_length=10) w_saving_apd_reprocess_user = fail_if_error(in0.asb2io);
let date("YYYYMMDD")("\x01") w_saving_apd_reprocess_dt;
let string("\x01",charset="iso-8859-15", maximum_length=1) w_saving_apd_extract_flg = fail_if_error(in0.asukh9);
let string("\x01",charset="iso-8859-15", maximum_length=1) w_saving_apd_financial_fld_applied_ind = fail_if_error(in0.asrih9);
let string("\x01",charset="iso-8859-15", maximum_length=1) w_saving_apd_payment_sys_ind = fail_if_error(in0.asrhh9);
let string("\x01",charset="iso-8859-15", maximum_length=1) w_saving_apd_rxclaim_src = fail_if_error(in0.asrgh9);
let decimal("\x01".2, maximum_length=17, sign_reserved) w_saving_apd_pos_rebate_amt = fail_if_error(in0.astshx);
let string("\x01",charset="iso-8859-15", maximum_length=19) w_saving_apd_sav_acct_id = fail_if_error(in0.asochc);
let string("\x01",charset="iso-8859-15", maximum_length=10) w_saving_apd_pos_id = fail_if_error(in0.asm1ih);
let decimal("\x01",0) w_saving_apd_adjustment_seq = fail_if_error(if(in0.asd9hs < 0)in0.asd9hs else (1000 - in0.asd9hs));
let string("\x01",charset="iso-8859-15", maximum_length=3) w_saving_apd_adjustment_typ = fail_if_error(in0.asi6h9);
let string("\x01",charset="iso-8859-15", maximum_length=1) w_saving_apd_pos_financial_field_applied = fail_if_error(in0.asrih9);
let string("\x01",charset="iso-8859-15", maximum_length=100) w_saving_apd_pos_financial_field_applied_desc;
let string("\x01",charset="iso-8859-15", maximum_length=10) w_saving_apd_src_insert_uid = fail_if_error(in0.asakvn);
let date("YYYYMMDD")("\x01") w_saving_apd_src_insert_dt;
let datetime("HH24:MI:SS.NNNNNN")("\x01") w_saving_apd_src_insert_tm;
let string("\x01",charset="iso-8859-15", maximum_length=10) w_saving_apd_src_insert_prog_nm = fail_if_error(in0.asalvn);
let string("\x01",charset="iso-8859-15", maximum_length=10) w_saving_apd_src_update_uid = fail_if_error(in0.asadvn);
let date("YYYYMMDD")("\x01") w_saving_apd_src_update_dt;
let datetime("HH24:MI:SS.NNNNNN")("\x01") w_saving_apd_src_update_tm;
let string("\x01",charset="iso-8859-15", maximum_length=10) w_saving_apd_src_update_prog_nm = fail_if_error(in0.asaevn);
let decimal("\x01",0) w_saving_apd_src_env_sk = fail_if_error(in0.dxf_src_sys_id);
let string("\x01",charset="iso-8859-15", maximum_length=1)[integer(4)] w_saving_apd_claim_stat_id = allocate_with_defaults();
let decimal("\x01".2, maximum_length=11, sign_reserved) w_saving_apd_adj_prim_liab = fail_if_error(in0.asxzqv);
let decimal("\x01".2, maximum_length=11, sign_reserved) w_saving_apd_adj_sec_diff = fail_if_error(in0.asx0qv);
let decimal("\x01",0) w_saving_apd_claim_nbr_encrp;
let decimal("\x01",0) w_saving_apd_carrier_sk = 0;
let decimal("\x01",0) w_saving_apd_sec_flg = 0;
let unicode string(int) f_sav_apd_pos_financial_field_applied_desc;
let unicode string(int) claim_seq_nbr_idw = fail_if_error(if(in0.asoinb < 0)in0.asd9hs else (1000 - in0.asoinb));
let unicode string(int)[int] claim_status_list = allocate_with_defaults();



/*   Rule:Compute f_sav_apd.pos_financial_field_applied_desc  (#1)   */
bzt_9 = fail_if_error(in0.asrih9=='4');
bzt_10 = fail_if_error(in0.asrih9=='5');
bzt_11 = fail_if_error(in0.asrih9=='6');
if(first_defined(fail_if_error(((in0.asrih9=='1') ==1) && (bzt_9 ==0) && (bzt_10 ==0) && (bzt_11 ==0) && ((in0.asrih9=='7') ==0)),0))begin
  bzt_0=1;
  f_sav_apd_pos_financial_field_applied_desc="Patient Pay. The financial amount is applied to the patient pay of the claim.";
end
else if(first_defined(fail_if_error(((in0.asrih9=='1') ==0)),0))begin
  if(first_defined(fail_if_error((bzt_9 ==1) && (bzt_10 ==0) && (bzt_11 ==0) && ((in0.asrih9=='7') ==0)),0))begin
     bzt_0=1;
     f_sav_apd_pos_financial_field_applied_desc="Other Payer Amount";
  end
  else if(first_defined(fail_if_error((bzt_9 ==0) && (bzt_10 ==1) && (bzt_11 ==0) && ((in0.asrih9=='7') ==0)),0))begin
     bzt_0=1;
     f_sav_apd_pos_financial_field_applied_desc="Nx Transaction Reorder";
  end
  else if(first_defined(fail_if_error((bzt_9 ==0) && (bzt_10 ==0) && (bzt_11 ==1) && ((in0.asrih9=='7') ==0)),0))begin
     bzt_0=1;
     f_sav_apd_pos_financial_field_applied_desc="Client Ingredient Cost";
  end
  else if(first_defined(fail_if_error((bzt_9 ==0) && (bzt_10 ==0) && (bzt_11 ==0) && ((in0.asrih9=='7') ==1)),0))begin
     bzt_0=1;
     f_sav_apd_pos_financial_field_applied_desc="Patient Pay (Alternate)";
  end
end

/*   Default value   */
if(!bzt_0)begin
  f_sav_apd_pos_financial_field_applied_desc='-';
end

/*   Default value   */
w_saving_apd_pos_financial_field_applied_desc=fail_if_error(f_sav_apd_pos_financial_field_applied_desc);

/*   Default value   */
w_saving_apd_src_insert_dt=fail_if_error(date_check(in0.asc2dt));

/*   Default value   */
w_saving_apd_claim_nbr_encrp=fail_if_error(if(in0.asp2nb>0) (decimal(''))(string_concat(string_substring((decimal(''))in0.asp2nb,1,2),ff3_encrypt_idwdata((decimal(''))in0.asp2nb))) 
else  (decimal(''))(string_concat(string_substring((decimal(''))in0.asp2nb,1,3),ff3_encrypt_idwdata(decimal_strip(math_abs((decimal(''))in0.asp2nb))))));

/*   Default value   */
w_saving_apd_src_update_dt=fail_if_error(date_check(in0.asbmdt));

/*   Default value   */
w_saving_apd_claim_seq_nbr=fail_if_error((decimal(''))(claim_seq_nbr_idw));

/*   Rule:Compute w_saving_apd.mbr_sk  (#4)   */
bzt_13=fail_if_error(bzt_12_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'P',in0.dxf_src_sys_id).mbr_sk);
if(is_defined(bzt_13))begin
  w_saving_apd_mbr_sk=vector_append(w_saving_apd_mbr_sk,bzt_13);
end
bzt_13=fail_if_error(bzt_15_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'X',in0.dxf_src_sys_id).mbr_sk);
if(is_defined(bzt_13))begin
  w_saving_apd_mbr_sk=vector_append(w_saving_apd_mbr_sk,bzt_13);
end
bzt_13=fail_if_error(bzt_16_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'Z',in0.dxf_src_sys_id).mbr_sk);
if(is_defined(bzt_13))begin
  w_saving_apd_mbr_sk=vector_append(w_saving_apd_mbr_sk,bzt_13);
end
bzt_13=fail_if_error(bzt_17_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'R',in0.dxf_src_sys_id).mbr_sk);
if(is_defined(bzt_13))begin
  w_saving_apd_mbr_sk=vector_append(w_saving_apd_mbr_sk,bzt_13);
end
bzt_13=fail_if_error(bzt_18_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'C',in0.dxf_src_sys_id).mbr_sk);
if(is_defined(bzt_13))begin
  w_saving_apd_mbr_sk=vector_append(w_saving_apd_mbr_sk,bzt_13);
end

/*   Rule:Compute w_saving_apd.cag_sk  (#3)   */
bzt_20=fail_if_error(bzt_19_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'P',in0.dxf_src_sys_id).cag_sk);
if(is_defined(bzt_20))begin
  w_saving_apd_cag_sk=vector_append(w_saving_apd_cag_sk,bzt_20);
end
bzt_20=fail_if_error(bzt_21_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'X',in0.dxf_src_sys_id).cag_sk);
if(is_defined(bzt_20))begin
  w_saving_apd_cag_sk=vector_append(w_saving_apd_cag_sk,bzt_20);
end
bzt_20=fail_if_error(bzt_22_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'Z',in0.dxf_src_sys_id).cag_sk);
if(is_defined(bzt_20))begin
  w_saving_apd_cag_sk=vector_append(w_saving_apd_cag_sk,bzt_20);
end
bzt_20=fail_if_error(bzt_17_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'R',in0.dxf_src_sys_id).cag_sk);
if(is_defined(bzt_20))begin
  w_saving_apd_cag_sk=vector_append(w_saving_apd_cag_sk,bzt_20);
end
bzt_20=fail_if_error(bzt_18_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'C',in0.dxf_src_sys_id).cag_sk);
if(is_defined(bzt_20))begin
  w_saving_apd_cag_sk=vector_append(w_saving_apd_cag_sk,bzt_20);
end

/*   Rule:Compute claim_status_list  (#2)   */
bzt_23=fail_if_error(bzt_12_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'P',in0.dxf_src_sys_id).claim_stat_id);
if(is_defined(bzt_23))begin
  claim_status_list=vector_append(claim_status_list,bzt_23);
end
bzt_23=fail_if_error(bzt_15_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'X',in0.dxf_src_sys_id).claim_stat_id);
if(is_defined(bzt_23))begin
  claim_status_list=vector_append(claim_status_list,bzt_23);
end
bzt_23=fail_if_error(bzt_16_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'Z',in0.dxf_src_sys_id).claim_stat_id);
if(is_defined(bzt_23))begin
  claim_status_list=vector_append(claim_status_list,bzt_23);
end
bzt_23=fail_if_error(bzt_17_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'R',in0.dxf_src_sys_id).claim_stat_id);
if(is_defined(bzt_23))begin
  claim_status_list=vector_append(claim_status_list,bzt_23);
end
bzt_23=fail_if_error(bzt_18_6c54cc0a_5a911d72_fca9_1(in0.asp2nb,claim_seq_nbr_idw,'C',in0.dxf_src_sys_id).claim_stat_id);
if(is_defined(bzt_23))begin
  claim_status_list=vector_append(claim_status_list,bzt_23);
end

/*   Default value   */
w_saving_apd_claim_stat_id=first_defined(fail_if_error(claim_status_list),[vector ]);

/*   Default value   */
w_saving_apd_reprocess_posted_dt=fail_if_error(date_check(in0.asc9hk));

/*   Default value   */
w_saving_apd_src_insert_tm=fail_if_error(time_check(in0.asadtm));

/*   Default value   */
w_saving_apd_src_update_tm=fail_if_error(time_check(in0.asabtm));

/*   Default value   */
w_saving_apd_reprocess_dt=fail_if_error(date_check(in0.asoxhg));

  out0.w_saving_apd.cag_sk::(length_of(w_saving_apd_cag_sk) == 0)?NULL:w_saving_apd_cag_sk;
  out0.w_saving_apd.mbr_sk::(length_of(w_saving_apd_mbr_sk) == 0)?NULL:w_saving_apd_mbr_sk;
  out0.w_saving_apd.claim_nbr::w_saving_apd_claim_nbr;
  out0.w_saving_apd.claim_seq_nbr::w_saving_apd_claim_seq_nbr;
  out0.w_saving_apd.reprocess_chk_nbr::w_saving_apd_reprocess_chk_nbr;
  out0.w_saving_apd.reprocess_claim_seq::w_saving_apd_reprocess_claim_seq;
  out0.w_saving_apd.reprocess_posted_dt::w_saving_apd_reprocess_posted_dt;
  out0.w_saving_apd.reprocess_pay_nbr::w_saving_apd_reprocess_pay_nbr;
  out0.w_saving_apd.oth_payer_pay_amt::w_saving_apd_oth_payer_pay_amt;
  out0.w_saving_apd.pay_phr_flg::w_saving_apd_pay_phr_flg;
  out0.w_saving_apd.sav_acct_subtype_id::w_saving_apd_sav_acct_subtype_id;
  out0.w_saving_apd.mbr_pay_amt::w_saving_apd_mbr_pay_amt;
  out0.w_saving_apd.pay_amt::w_saving_apd_pay_amt;
  out0.w_saving_apd.reprocess_pat_pay_amt::w_saving_apd_reprocess_pat_pay_amt;
  out0.w_saving_apd.reprocess_user::w_saving_apd_reprocess_user;
  out0.w_saving_apd.reprocess_dt::w_saving_apd_reprocess_dt;
  out0.w_saving_apd.extract_flg::w_saving_apd_extract_flg;
  out0.w_saving_apd.financial_fld_applied_ind::w_saving_apd_financial_fld_applied_ind;
  out0.w_saving_apd.payment_sys_ind::w_saving_apd_payment_sys_ind;
  out0.w_saving_apd.rxclaim_src::w_saving_apd_rxclaim_src;
  out0.w_saving_apd.pos_rebate_amt::w_saving_apd_pos_rebate_amt;
  out0.w_saving_apd.sav_acct_id::w_saving_apd_sav_acct_id;
  out0.w_saving_apd.pos_id::w_saving_apd_pos_id;
  out0.w_saving_apd.adjustment_seq::w_saving_apd_adjustment_seq;
  out0.w_saving_apd.adjustment_typ::w_saving_apd_adjustment_typ;
  out0.w_saving_apd.pos_financial_field_applied::w_saving_apd_pos_financial_field_applied;
  out0.w_saving_apd.pos_financial_field_applied_desc::w_saving_apd_pos_financial_field_applied_desc;
  out0.w_saving_apd.src_insert_uid::w_saving_apd_src_insert_uid;
  out0.w_saving_apd.src_insert_dt::w_saving_apd_src_insert_dt;
  out0.w_saving_apd.src_insert_tm::w_saving_apd_src_insert_tm;
  out0.w_saving_apd.src_insert_prog_nm::w_saving_apd_src_insert_prog_nm;
  out0.w_saving_apd.src_update_uid::w_saving_apd_src_update_uid;
  out0.w_saving_apd.src_update_dt::w_saving_apd_src_update_dt;
  out0.w_saving_apd.src_update_tm::w_saving_apd_src_update_tm;
  out0.w_saving_apd.src_update_prog_nm::w_saving_apd_src_update_prog_nm;
  out0.w_saving_apd.src_env_sk::w_saving_apd_src_env_sk;
  out0.w_saving_apd.claim_stat_id::(length_of(w_saving_apd_claim_stat_id) == 0)?NULL:w_saving_apd_claim_stat_id;
  out0.w_saving_apd.adj_prim_liab::w_saving_apd_adj_prim_liab;
  out0.w_saving_apd.adj_sec_diff::w_saving_apd_adj_sec_diff;
  out0.w_saving_apd.claim_nbr_encrp::w_saving_apd_claim_nbr_encrp;
  out0.w_saving_apd.carrier_sk::w_saving_apd_carrier_sk;
  out0.w_saving_apd.sec_flg::w_saving_apd_sec_flg;
  out0.*::in0.*;
end;
