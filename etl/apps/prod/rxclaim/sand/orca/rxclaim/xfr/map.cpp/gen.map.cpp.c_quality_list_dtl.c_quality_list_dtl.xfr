/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';
let string(int) bzt_0_6c54cc0a_5818773c_71ec_5 = $RUN_ID;

/*@
dependency_analysis:
[
  [out0.c_qlty_ls_dl.end_dt,[passthrough],in0.end_dt]
  [out0.c_qlty_ls_dl.measure_value,[passthrough],in0.measure_value]
  [out0.c_qlty_ls_dl.quality_list_id,[passthrough],in0.quality_list_id]
  [out0.c_qlty_ls_dl.cpp_create_ts,[passthrough],in0.create_timestamp]
  [out0.c_qlty_ls_dl.cpp_update_ts,[transform],in0.create_timestamp,
     in0.update_timestamp]
  [out0.c_qlty_ls_dl.eff_dt,[passthrough],in0.eff_dt]
  [out0.c_qlty_ls_dl.quality_list_version,[passthrough],in0.quality_list_version]
  [out0.c_qlty_ls_dl.cpp_updated_by,[passthrough],in0.updated_by]
  [out0.c_qlty_ls_dl.cpp_created_by,[passthrough],in0.created_by]
  [out0.c_qlty_ls_dl.idntfn_cd,[passthrough],in0.idntfn_cd]
  [out0.c_qlty_ls_dl.cpp_quality_list_dtl_sk,[transform],]
  [out0.c_qlty_ls_dl.measure_type,[passthrough],in0.measure_type]
  [out0.c_qlty_ls_dl.src_env_sk,[transform],]
  [out0.c_qlty_ls_dl.cpp_quality_list_sk,[transform],in0.quality_list_version,
     in0.quality_list_id,
     'lookup("c_quality_list").dxf_sk']
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_qlty_ls_dl.end_dt,'c_qlty_ls_dl.end_dt',1,0]
     [out0.c_qlty_ls_dl.measure_value,'c_qlty_ls_dl.measure_value',1,0]
     [out0.c_qlty_ls_dl.quality_list_id,'c_qlty_ls_dl.quality_list_id',1,0]
     [out0.c_qlty_ls_dl.cpp_create_ts,'c_qlty_ls_dl.cpp_create_ts',1,0]
     [out0.c_qlty_ls_dl.cpp_update_ts,'c_qlty_ls_dl.cpp_update_ts',1,0]
     [out0.c_qlty_ls_dl.eff_dt,'c_qlty_ls_dl.eff_dt',1,0]
     [out0.c_qlty_ls_dl.quality_list_version,'c_qlty_ls_dl.quality_list_version',1,0]
     [out0.c_qlty_ls_dl.cpp_updated_by,'c_qlty_ls_dl.cpp_updated_by',1,0]
     [out0.c_qlty_ls_dl.cpp_created_by,'c_qlty_ls_dl.cpp_created_by',1,0]
     [out0.c_qlty_ls_dl.idntfn_cd,'c_qlty_ls_dl.idntfn_cd',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.c_qlty_ls_dl.cpp_quality_list_dtl_sk,'c_qlty_ls_dl.cpp_quality_list_dtl_sk',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_qlty_ls_dl.measure_type,'c_qlty_ls_dl.measure_type',1,0]
     [out0.c_qlty_ls_dl.src_env_sk,'c_qlty_ls_dl.src_env_sk',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_qlty_ls_dl.cpp_quality_list_sk,'c_qlty_ls_dl.cpp_quality_list_sk',1,0]
  ]
  impacts:
  [
     [in0.created_by,'created_by',1,1]
     [in0.update_timestamp,'update_timestamp',1,1]
     [in0.measure_type,'measure_type',1,1]
     [in0.create_timestamp,'create_timestamp',2,2]
     [in0.updated_by,'updated_by',1,1]
     [in0.end_dt,'end_dt',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.measure_value,'measure_value',1,1]
     [in0.idntfn_cd,'idntfn_cd',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.eff_dt,'eff_dt',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     ['lookup("c_quality_list").dxf_sk','dxf_sk',1,1]
     [in0.quality_list_version,'quality_list_version',2,2]
     [in0.quality_list_id,'quality_list_id',2,2]
  ]
}
@*/

out0::reformat(in0)=
begin
let decimal("\x01",0) c_qlty_ls_dl_cpp_quality_list_dtl_sk = -1;
let utf8 string("\x01", maximum_length=60) c_qlty_ls_dl_quality_list_id = fail_if_error(in0.quality_list_id);
let decimal("\x01",0) c_qlty_ls_dl_quality_list_version = fail_if_error(in0.quality_list_version);
let decimal("\x01",0) c_qlty_ls_dl_cpp_quality_list_sk;
let utf8 string("\x01", maximum_length=40) c_qlty_ls_dl_idntfn_cd = fail_if_error(in0.idntfn_cd);
let utf8 string("\x01", maximum_length=100) c_qlty_ls_dl_measure_type = fail_if_error(in0.measure_type);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_qlty_ls_dl_measure_value = fail_if_error(in0.measure_value);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_qlty_ls_dl_eff_dt = fail_if_error(in0.eff_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_qlty_ls_dl_end_dt = fail_if_error(in0.end_dt);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_qlty_ls_dl_cpp_update_ts = fail_if_error(first_defined(in0.update_timestamp,in0.create_timestamp));
let utf8 string("\x01", maximum_length=80) c_qlty_ls_dl_cpp_updated_by = fail_if_error(in0.updated_by);
let datetime("YYYYMMDD HH24:MI:SS")("\x01") c_qlty_ls_dl_cpp_create_ts = fail_if_error(in0.create_timestamp);
let utf8 string("\x01", maximum_length=80) c_qlty_ls_dl_cpp_created_by = fail_if_error(in0.created_by);
let decimal("\x01",0) c_qlty_ls_dl_src_env_sk = 710;



/*   Default value   */
c_qlty_ls_dl_cpp_quality_list_sk=fail_if_error(first_defined(lookup("c_quality_list",in0.quality_list_id,in0.quality_list_version).dxf_sk,-1));

  out0.c_qlty_ls_dl.cpp_quality_list_dtl_sk::c_qlty_ls_dl_cpp_quality_list_dtl_sk;
  out0.c_qlty_ls_dl.quality_list_id::c_qlty_ls_dl_quality_list_id;
  out0.c_qlty_ls_dl.quality_list_version::c_qlty_ls_dl_quality_list_version;
  out0.c_qlty_ls_dl.cpp_quality_list_sk::c_qlty_ls_dl_cpp_quality_list_sk;
  out0.c_qlty_ls_dl.idntfn_cd::c_qlty_ls_dl_idntfn_cd;
  out0.c_qlty_ls_dl.measure_type::c_qlty_ls_dl_measure_type;
  out0.c_qlty_ls_dl.measure_value::c_qlty_ls_dl_measure_value;
  out0.c_qlty_ls_dl.eff_dt::c_qlty_ls_dl_eff_dt;
  out0.c_qlty_ls_dl.end_dt::c_qlty_ls_dl_end_dt;
  out0.c_qlty_ls_dl.cpp_update_ts::c_qlty_ls_dl_cpp_update_ts;
  out0.c_qlty_ls_dl.cpp_updated_by::c_qlty_ls_dl_cpp_updated_by;
  out0.c_qlty_ls_dl.cpp_create_ts::c_qlty_ls_dl_cpp_create_ts;
  out0.c_qlty_ls_dl.cpp_created_by::c_qlty_ls_dl_cpp_created_by;
  out0.c_qlty_ls_dl.src_env_sk::c_qlty_ls_dl_src_env_sk;
  out0.*::in0.*;

end;
