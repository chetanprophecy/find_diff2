/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */
include '~$AI_XFR/bre_helper.map.xfr';

/*@
dependency_analysis:
[
  [out0.*,in0.*]
]
metrics:
{
  dependencies:
  [
     [out0.c_hse_cl_res.sequence_num,'c_hse_cl_res.sequence_num',1,0]
     [out0.c_hse_cl_res.cognitive_impairement_flag,'c_hse_cl_res.cognitive_impairement_flag',1,0]
     [out0.c_hse_cl_res.criteria_dt,'c_hse_cl_res.criteria_dt',1,0]
     [out0.c_hse_cl_res.member_id,'c_hse_cl_res.member_id',1,0]
     [out0.c_hse_cl_res.case_id,'c_hse_cl_res.case_id',1,0]
     [out0.c_hse_cl_res.cmr_dt,'c_hse_cl_res.cmr_dt',1,0]
     [out0.c_hse_cl_res.username,'c_hse_cl_res.username',1,0]
     [out0.c_hse_cl_res.pickup_dt,'c_hse_cl_res.pickup_dt',1,0]
     [out0.c_hse_cl_res.cmr_topics_count,'c_hse_cl_res.cmr_topics_count',1,0]
     [out0.c_hse_cl_res.mtmp_enrollment_dt,'c_hse_cl_res.mtmp_enrollment_dt',1,0]
     [out0.c_hse_cl_res.uhcpk,'c_hse_cl_res.uhcpk',1,0]
     [out0.c_hse_cl_res.recipient_type,'c_hse_cl_res.recipient_type',1,0]
     [out0.c_hse_cl_res.offer_dt,'c_hse_cl_res.offer_dt',1,0]
     [out0.c_hse_cl_res.cmr_received,'c_hse_cl_res.cmr_received',1,0]
     [out0.c_hse_cl_res.cli_acct_id,'c_hse_cl_res.cli_acct_id',1,0]
     [out0.c_hse_cl_res.element_x2,'c_hse_cl_res.element_x2',1,0]
     [out0.c_hse_cl_res.optout_dt,'c_hse_cl_res.optout_dt',1,0]
     [out0.c_hse_cl_res.tmr_count,'c_hse_cl_res.tmr_count',1,0]
     [out0.c_hse_cl_res.element_x1,'c_hse_cl_res.element_x1',1,0]
     [out0.c_hse_cl_res.carrier_id,'c_hse_cl_res.carrier_id',1,0]
     [out0.c_hse_cl_res.cmr_count,'c_hse_cl_res.cmr_count',1,0]
     [out0.c_hse_cl_res.cli_member_id,'c_hse_cl_res.cli_member_id',1,0]
     [out0.c_hse_cl_res.cli_carrier_id,'c_hse_cl_res.cli_carrier_id',1,0]
     [out0.c_hse_cl_res.element_x4,'c_hse_cl_res.element_x4',1,0]
     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]
     [out0.c_hse_cl_res.date_of_birth,'c_hse_cl_res.date_of_birth',1,0]
     [out0.c_hse_cl_res.emplyr_group_id,'c_hse_cl_res.emplyr_group_id',1,0]
     [out0.c_hse_cl_res.init,'c_hse_cl_res.init',1,0]
     [out0.c_hse_cl_res.first_name,'c_hse_cl_res.first_name',1,0]
     [out0.c_hse_cl_res.isprocessed,'c_hse_cl_res.isprocessed',1,0]
     [out0.c_hse_cl_res.acct_id,'c_hse_cl_res.acct_id',1,0]
     [out0.c_hse_cl_res.cli_emplyr_group_id,'c_hse_cl_res.cli_emplyr_group_id',1,0]
     [out0.c_hse_cl_res.cms_criteria_met,'c_hse_cl_res.cms_criteria_met',1,0]
     [out0.c_hse_cl_res.delivery_method_type,'c_hse_cl_res.delivery_method_type',1,0]
     [out0.dxf_src_file_name,'DXF Source File Name',1,0]
     [out0.c_hse_cl_res.last_name,'c_hse_cl_res.last_name',1,0]
     [out0.c_hse_cl_res.element_x3,'c_hse_cl_res.element_x3',1,0]
     [out0.c_hse_cl_res.optout_reason,'c_hse_cl_res.optout_reason',1,0]
     [out0.c_hse_cl_res.dtp_resolution_count,'c_hse_cl_res.dtp_resolution_count',1,0]
     [out0.c_hse_cl_res.element_x5,'c_hse_cl_res.element_x5',1,0]
     [out0.c_hse_cl_res.credentials,'c_hse_cl_res.credentials',1,0]
     [out0.c_hse_cl_res.hic_num,'c_hse_cl_res.hic_num',1,0]
     [out0.c_hse_cl_res.cmr_offered,'c_hse_cl_res.cmr_offered',1,0]
     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]
     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]
     [out0.c_hse_cl_res.contract_num,'c_hse_cl_res.contract_num',1,0]
  ]
  impacts:
  [
     [in0.recipient_type,'recipient_type',1,1]
     [in0.credentials,'credentials',1,1]
     [in0.uhcpk,'uhcpk',1,1]
     [in0.offer_dt,'offer_dt',1,1]
     [in0.delivery_method_type,'delivery_method_type',1,1]
     [in0.cognitive_impairement_flag,'cognitive_impairement_flag',1,1]
     [in0.dxf_src_file_name,'DXF Source File Name',1,1]
     [in0.cli_carrier_id,'cli_carrier_id',1,1]
     [in0.element_x2,'element_x2',1,1]
     [in0.member_id,'member_id',1,1]
     [in0.tmr_count,'tmr_count',1,1]
     [in0.cmr_topics_count,'cmr_topics_count',1,1]
     [in0.first_name,'first_name',1,1]
     [in0.sequence_num,'sequence_num',1,1]
     [in0.carrier_id,'carrier_id',1,1]
     [in0.case_id,'case_id',1,1]
     [in0.username,'username',1,1]
     [in0.last_name,'last_name',1,1]
     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]
     [in0.cli_member_id,'cli_member_id',1,1]
     [in0.emplyr_group_id,'emplyr_group_id',1,1]
     [in0.cmr_count,'cmr_count',1,1]
     [in0.init,'init',1,1]
     [in0.contract_num,'contract_num',1,1]
     [in0.dtp_resolution_count,'dtp_resolution_count',1,1]
     [in0.element_x5,'element_x5',1,1]
     [in0.cmr_received,'cmr_received',1,1]
     [in0.date_of_birth,'date_of_birth',1,1]
     [in0.cli_emplyr_group_id,'cli_emplyr_group_id',1,1]
     [in0.hic_num,'hic_num',1,1]
     [in0.cms_criteria_met,'cms_criteria_met',1,1]
     [in0.optout_dt,'optout_dt',1,1]
     [in0.optout_reason,'optout_reason',1,1]
     [in0.mtmp_enrollment_dt,'mtmp_enrollment_dt',1,1]
     [in0.element_x3,'element_x3',1,1]
     [in0.cmr_offered,'cmr_offered',1,1]
     [in0.pickup_dt,'pickup_dt',1,1]
     [in0.isprocessed,'isprocessed',1,1]
     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]
     [in0.criteria_dt,'criteria_dt',1,1]
     [in0.element_x4,'element_x4',1,1]
     [in0.cli_acct_id,'cli_acct_id',1,1]
     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]
     [in0.acct_id,'acct_id',1,1]
     [in0.element_x1,'element_x1',1,1]
     [in0.cmr_dt,'cmr_dt',1,1]
  ]
}
@*/

out0::reformat(in0)=
begin
let string("\x01",charset="iso-8859-15", maximum_length=15) c_hse_cl_res_case_id = fail_if_error(in0.case_id);
let decimal("\x01",0) c_hse_cl_res_sequence_num = fail_if_error(in0.sequence_num);
let decimal("\x01",0) c_hse_cl_res_cli_carrier_id = fail_if_error(in0.cli_carrier_id);
let decimal("\x01",0) c_hse_cl_res_cli_acct_id = fail_if_error(in0.cli_acct_id);
let decimal("\x01",0) c_hse_cl_res_cli_emplyr_group_id = fail_if_error(in0.cli_emplyr_group_id);
let decimal("\x01",0) c_hse_cl_res_cli_member_id = fail_if_error(in0.cli_member_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_hse_cl_res_carrier_id = fail_if_error(in0.carrier_id);
let string("\x01",charset="iso-8859-15", maximum_length=40) c_hse_cl_res_acct_id = fail_if_error(in0.acct_id);
let string("\x01",charset="iso-8859-15", maximum_length=30) c_hse_cl_res_emplyr_group_id = fail_if_error(in0.emplyr_group_id);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_hse_cl_res_member_id = fail_if_error(in0.member_id);
let string("\x01",charset="iso-8859-15", maximum_length=5) c_hse_cl_res_contract_num = fail_if_error(in0.contract_num);
let string("\x01",charset="iso-8859-15", maximum_length=3) c_hse_cl_res_hic_num = fail_if_error(in0.hic_num);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_hse_cl_res_first_name = fail_if_error(in0.first_name);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_hse_cl_res_init = fail_if_error(in0.init);
let string("\x01",charset="iso-8859-15", maximum_length=50) c_hse_cl_res_last_name = fail_if_error(in0.last_name);
let string("\x01",charset="iso-8859-15", maximum_length=15) c_hse_cl_res_date_of_birth = fail_if_error(in0.date_of_birth);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_hse_cl_res_cms_criteria_met = fail_if_error(in0.cms_criteria_met);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_hse_cl_res_cognitive_impairement_flag = fail_if_error(in0.cognitive_impairement_flag);
let date("YYYYMMDD")("\x01") c_hse_cl_res_mtmp_enrollment_dt = fail_if_error(in0.mtmp_enrollment_dt);
let date("YYYYMMDD")("\x01") c_hse_cl_res_criteria_dt = fail_if_error(in0.criteria_dt);
let date("YYYYMMDD")("\x01") c_hse_cl_res_optout_dt = fail_if_error(in0.optout_dt);
let string("\x01",charset="iso-8859-15", maximum_length=2) c_hse_cl_res_optout_reason = fail_if_error(in0.optout_reason);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_hse_cl_res_cmr_offered = fail_if_error(in0.cmr_offered);
let date("YYYYMMDD")("\x01") c_hse_cl_res_offer_dt = fail_if_error(in0.offer_dt);
let string("\x01",charset="iso-8859-15", maximum_length=8) c_hse_cl_res_cmr_received = fail_if_error(in0.cmr_received);
let decimal("\x01",0) c_hse_cl_res_cmr_count = fail_if_error(in0.cmr_count);
let date("YYYYMMDD")("\x01") c_hse_cl_res_cmr_dt = fail_if_error(in0.cmr_dt);
let string("\x01",charset="iso-8859-15", maximum_length=2) c_hse_cl_res_delivery_method_type = fail_if_error(in0.delivery_method_type);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_hse_cl_res_username = fail_if_error(in0.username);
let string("\x01",charset="iso-8859-15", maximum_length=20) c_hse_cl_res_credentials = fail_if_error(in0.credentials);
let string("\x01",charset="iso-8859-15", maximum_length=2) c_hse_cl_res_recipient_type = fail_if_error(in0.recipient_type);
let decimal("\x01",0) c_hse_cl_res_tmr_count = fail_if_error(in0.tmr_count);
let decimal("\x01",0) c_hse_cl_res_dtp_resolution_count = fail_if_error(in0.dtp_resolution_count);
let decimal("\x01",0) c_hse_cl_res_cmr_topics_count = fail_if_error(in0.cmr_topics_count);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_hse_cl_res_uhcpk = fail_if_error(in0.uhcpk);
let decimal("\x01",0) c_hse_cl_res_element_x1 = fail_if_error(in0.element_x1);
let string("\x01",charset="iso-8859-15", maximum_length=15) c_hse_cl_res_element_x2 = fail_if_error(in0.element_x2);
let string("\x01",charset="iso-8859-15", maximum_length=75) c_hse_cl_res_element_x3 = fail_if_error(in0.element_x3);
let string("\x01",charset="iso-8859-15", maximum_length=75) c_hse_cl_res_element_x4 = fail_if_error(in0.element_x4);
let string("\x01",charset="iso-8859-15", maximum_length=75) c_hse_cl_res_element_x5 = fail_if_error(in0.element_x5);
let date("YYYYMMDD")("\x01") c_hse_cl_res_pickup_dt = fail_if_error(in0.pickup_dt);
let string("\x01",charset="iso-8859-15", maximum_length=1) c_hse_cl_res_isprocessed = fail_if_error(in0.isprocessed);



  out0.c_hse_cl_res.case_id::c_hse_cl_res_case_id;
  out0.c_hse_cl_res.sequence_num::c_hse_cl_res_sequence_num;
  out0.c_hse_cl_res.cli_carrier_id::c_hse_cl_res_cli_carrier_id;
  out0.c_hse_cl_res.cli_acct_id::c_hse_cl_res_cli_acct_id;
  out0.c_hse_cl_res.cli_emplyr_group_id::c_hse_cl_res_cli_emplyr_group_id;
  out0.c_hse_cl_res.cli_member_id::c_hse_cl_res_cli_member_id;
  out0.c_hse_cl_res.carrier_id::c_hse_cl_res_carrier_id;
  out0.c_hse_cl_res.acct_id::c_hse_cl_res_acct_id;
  out0.c_hse_cl_res.emplyr_group_id::c_hse_cl_res_emplyr_group_id;
  out0.c_hse_cl_res.member_id::c_hse_cl_res_member_id;
  out0.c_hse_cl_res.contract_num::c_hse_cl_res_contract_num;
  out0.c_hse_cl_res.hic_num::c_hse_cl_res_hic_num;
  out0.c_hse_cl_res.first_name::c_hse_cl_res_first_name;
  out0.c_hse_cl_res.init::c_hse_cl_res_init;
  out0.c_hse_cl_res.last_name::c_hse_cl_res_last_name;
  out0.c_hse_cl_res.date_of_birth::c_hse_cl_res_date_of_birth;
  out0.c_hse_cl_res.cms_criteria_met::c_hse_cl_res_cms_criteria_met;
  out0.c_hse_cl_res.cognitive_impairement_flag::c_hse_cl_res_cognitive_impairement_flag;
  out0.c_hse_cl_res.mtmp_enrollment_dt::c_hse_cl_res_mtmp_enrollment_dt;
  out0.c_hse_cl_res.criteria_dt::c_hse_cl_res_criteria_dt;
  out0.c_hse_cl_res.optout_dt::c_hse_cl_res_optout_dt;
  out0.c_hse_cl_res.optout_reason::c_hse_cl_res_optout_reason;
  out0.c_hse_cl_res.cmr_offered::c_hse_cl_res_cmr_offered;
  out0.c_hse_cl_res.offer_dt::c_hse_cl_res_offer_dt;
  out0.c_hse_cl_res.cmr_received::c_hse_cl_res_cmr_received;
  out0.c_hse_cl_res.cmr_count::c_hse_cl_res_cmr_count;
  out0.c_hse_cl_res.cmr_dt::c_hse_cl_res_cmr_dt;
  out0.c_hse_cl_res.delivery_method_type::c_hse_cl_res_delivery_method_type;
  out0.c_hse_cl_res.username::c_hse_cl_res_username;
  out0.c_hse_cl_res.credentials::c_hse_cl_res_credentials;
  out0.c_hse_cl_res.recipient_type::c_hse_cl_res_recipient_type;
  out0.c_hse_cl_res.tmr_count::c_hse_cl_res_tmr_count;
  out0.c_hse_cl_res.dtp_resolution_count::c_hse_cl_res_dtp_resolution_count;
  out0.c_hse_cl_res.cmr_topics_count::c_hse_cl_res_cmr_topics_count;
  out0.c_hse_cl_res.uhcpk::c_hse_cl_res_uhcpk;
  out0.c_hse_cl_res.element_x1::c_hse_cl_res_element_x1;
  out0.c_hse_cl_res.element_x2::c_hse_cl_res_element_x2;
  out0.c_hse_cl_res.element_x3::c_hse_cl_res_element_x3;
  out0.c_hse_cl_res.element_x4::c_hse_cl_res_element_x4;
  out0.c_hse_cl_res.element_x5::c_hse_cl_res_element_x5;
  out0.c_hse_cl_res.pickup_dt::c_hse_cl_res_pickup_dt;
  out0.c_hse_cl_res.isprocessed::c_hse_cl_res_isprocessed;
  out0.*::in0.*;

end;
