/* Do Not Edit.  This file is generated automatically by combining
 * "$PUB_DXF_DML/split_header.type2.dml", "$AI_DML/dxf_header.dml", any "$ADDITIONAL_FIELDS_DML",
 * and "/~$PUB_DATAHUB_DML/ids_rxclaim/ids_rxclaim.l_eob_profile.dml".
 * Changing the target DML and re-running "$AI_PSET/setup.ilm/setup.ilm.l_eob_profile.pset" will update this file.
 */

type split_ids_rxclaim_l_eob_profile_t =
record
  decimal(1) is_equal = 0;
  decimal(1) drop_record = 0;
  datetime("YYYY-MM-DD HH24:MI:SS") matching__eff_dt = NULL("");
  little endian integer(8)  dxf_src_dataset_id =  0/*@ BizName:'DXF Source Dataset ID' BizComment:'The surrogate key for the DXF Process Log entry for this source.' @*/;
  unsigned integer(8)  dxf_src_rec_cnt =  0/*@ BizName:'DXF Source Record Count' BizComment:'Starts at 1 each time the Source File Name changes.' @*/;
  little endian integer(2)  dxf_src_sys_id =  0/*@ BizName:'DXF Source System ID' BizComment:'The numeric identifier of this source.' @*/;
  string(unsigned integer(1))  dxf_src_file_name =  ""/*@ BizName:'DXF Source File Name' BizComment:'The name of the source file, relative to $AI_SERIAL_PENDING.' @*/;
  unsigned integer(8)    dxf_hk_part1 =    0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)    dxf_hk_part2 =    0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
  integer(8)    dxf_sk =    0 /*Added by Integration Framework. Surrogate key.*/;
  string("\x01",charset="iso-8859-15", maximum_length=30)     carrier_id = NULL("") /*VARCHAR(30) NOT NULL*/;
  string("\x01",charset="iso-8859-15", maximum_length=40)     account_id = NULL("") /*VARCHAR(40) NOT NULL*/;
  string("\x01",charset="iso-8859-15", maximum_length=30)     group_id = NULL("") /*VARCHAR(30) NOT NULL*/;
  decimal("\x01",0)     cag_sk = NULL("") /*BIGINT*/;
  string("\x01",charset="iso-8859-15", maximum_length=6)     logo_cd = NULL("") /*VARCHAR(6) NOT NULL*/;
  string("\x01",charset="iso-8859-15", maximum_length=30)     logo_nm = NULL("") /*VARCHAR(30)*/;
  string("\x01",charset="iso-8859-15", maximum_length=60)     eob_plan_nm = NULL("") /*VARCHAR(60)*/;
  decimal("\x01",0)     cust_svc_phone_num = NULL("") /*BIGINT*/;
  decimal("\x01",0)     tty_tdd = NULL("") /*BIGINT*/;
  string("\x01",charset="iso-8859-15", maximum_length=60)     hours_oper = NULL("") /*VARCHAR(60)*/;
  string("\x01",charset="iso-8859-15", maximum_length=40)     return_addr1 = NULL("") /*VARCHAR(40)*/;
  string("\x01",charset="iso-8859-15", maximum_length=40)     return_addr2 = NULL("") /*VARCHAR(40)*/;
  string("\x01",charset="iso-8859-15", maximum_length=20)     return_city = NULL("") /*VARCHAR(20)*/;
  string("\x01",charset="iso-8859-15", maximum_length=2)     return_st = NULL("") /*CHAR(2)*/;
  string("\x01",charset="iso-8859-15", maximum_length=10)     return_zip_cd = NULL("") /*VARCHAR(10)*/;
  string("\x01",charset="iso-8859-15", maximum_length=20)     plan_typ_cd = NULL("") /*VARCHAR(20)*/;
  decimal("\x01",0)     ms_phone_num = NULL("") /*BIGINT*/;
  decimal("\x01",0)     ms_tty_tdd = NULL("") /*BIGINT*/;
  string("\x01",charset="iso-8859-15", maximum_length=60)     ms_hours_oper = NULL("") /*VARCHAR(60)*/;
  string("\x01",charset="iso-8859-15", maximum_length=3)     covrg_in_gap = NULL("") /*VARCHAR(3)*/;
  string("\x01",charset="iso-8859-15", maximum_length=20)     src_cd = NULL("") /*VARCHAR(20)*/;
  decimal("\x01",0)     expired_ind = NULL("") /*BYTEINT*/;
  string("\x01",charset="iso-8859-15", maximum_length=60)     spanish_hours_oper = NULL("") /*VARCHAR(60)*/;
  decimal("\x01",0)     split_tier_ind = NULL("") /*SMALLINT*/;
  decimal("\x01".2, maximum_length=14, sign_reserved)     split_tier_annual_amt = NULL("") /*DECIMAL(12,2)*/;
  decimal("\x01",0)     covrg_gap_suppress_ind = NULL("") /*SMALLINT*/;
  string("\x01",charset="iso-8859-15", maximum_length=3)     expr1 = NULL("") /*VARCHAR(3)*/;
  decimal("\x01",0)     src_env_sk = NULL("") /*BIGINT NOT NULL*/;
  decimal("\x01",0)     plan_yr = NULL("") /*SMALLINT*/;
  string(1)    newline = NULL("");
end;

metadata type = split_ids_rxclaim_l_eob_profile_t;
