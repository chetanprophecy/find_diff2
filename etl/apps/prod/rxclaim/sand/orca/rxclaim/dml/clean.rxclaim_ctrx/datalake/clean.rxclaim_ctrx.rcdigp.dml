/* Do Not Edit.  This file is generated automatically by combining
 * "$AI_DML/dxf_header.dml", any "$ADDITIONAL_FIELDS_DML", and
 * "$DATALAKE_DATA_FILE_DML generates at run time based on DATALAKE_META_FILE content".
 * Changing the Get DML and resaving the get configuration will update this file.
 */



type source_rxclaim_ctrx_rcdigp_t =
record
  little endian integer(8) dxf_src_dataset_id = 0/*@ BizName:'DXF Source Dataset ID' BizComment:'The surrogate key for the DXF Process Log entry for this source.' @*/;
  unsigned integer(8) dxf_src_rec_cnt = 0/*@ BizName:'DXF Source Record Count' BizComment:'Starts at 1 each time the Source File Name changes.' @*/;
  little endian integer(2) dxf_src_sys_id = 0/*@ BizName:'DXF Source System ID' BizComment:'The numeric identifier of this source.' @*/;
  string(unsigned integer(1)) dxf_src_file_name = ""/*@ BizName:'DXF Source File Name' BizComment:'The name of the source file, relative to $AI_SERIAL_PENDING.' @*/;
  string("\x01", maximum_length=2) axshaq;
  string("\x01", maximum_length=1) axsiaq;
  string("\x01", maximum_length=20) axblcd;
  string("\x01", maximum_length=50) axc1tx = NULL("");
  string("\x01", maximum_length=10) axakvn = NULL("");
  decimal("\x01", maximum_length=10) axc2dt = NULL("");
  decimal("\x01", maximum_length=9) axadtm = NULL("");
  string("\x01", maximum_length=10) axalvn = NULL("");
  string("\x01", maximum_length=10) axadvn = NULL("");
  decimal("\x01", maximum_length=10) axbmdt = NULL("");
  decimal("\x01", maximum_length=9) axabtm = NULL("");
  string("\x01", maximum_length=10) axaevn = NULL("");
  string("\x01", maximum_length=5) rxt_src_envrt_id;
  string("\x01", maximum_length=30) rxt_src_envrt_nm = NULL("");
  datetime("YYYYMMDDHH24MISS")("\x01") rxt_create_dttm = NULL("");
  string("\x01", maximum_length=20) rxt_create_uid = NULL("");
  decimal("\x01", maximum_length=16) rxt_create_run_id = NULL("");
  string("\x01", maximum_length=2) rxt_rec_stat_cd = NULL("");
  string(1) newline = "\n";
end
;
metadata type = source_rxclaim_ctrx_rcdigp_t;
