type logical_ids_common_d_product_unit_cost_t =
record
  unsigned integer(8) dxf_hk_part1 = 0;
  unsigned integer(8) dxf_hk_part2 = 0;
  unsigned integer(8) dxf_sk = 0;
  decimal("\x01",0) prod_cost_sk = NULL("");
  decimal("\x01",0) prod_sk = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=20) prod_id = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=2) prod_id_qlfr_cd = NULL("");
  decimal("\x01",0) price_src_sk = NULL("");
  decimal("\x01",0) cost_type_cd_sk = NULL("");
  decimal("\x01",0) prod_key = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=10) cost_src_cd = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=10) cost_type_cd = NULL("");
  decimal("\x01",0) cost_seq_no = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) price_src_cd = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) cost_stat_cd = NULL("");
  date("YYYYMMDD")("\x01") cost_eff_dt = NULL("");
  date("YYYYMMDD")("\x01") cost_thru_dt = NULL("");
  decimal("\x01".5, maximum_length=15, sign_reserved) unit_cost_amt = NULL("");
  string("\x01",charset="iso-8859-15", maximum_length=1) cost_origin_cd = NULL("");
  decimal("\x01",0) src_env_sk = NULL("");
end;


type opt_nk_ids_common_d_product_t =  // Used in ILMs and mappings
record
  decimal(1) _nk_is_available_ = 1;  /*@ xBizName:'d product: Natural Key Is Available'
    BizComment:'Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.'*/
  string("\x01",charset="iso-8859-15", maximum_length=20) prod_id = NULL("") /*VARCHAR(20)*/;
  string("\x01",charset="iso-8859-15", maximum_length=2) prod_id_qlfr_cd = NULL("") /*VARCHAR(2)*/;
end;
type nk_ids_common_d_product_t =  // Used in splits
record
  string("\x01",charset="iso-8859-15", maximum_length=20) prod_id = NULL("") /*VARCHAR(20)*/;
  string("\x01",charset="iso-8859-15", maximum_length=2) prod_id_qlfr_cd = NULL("") /*VARCHAR(2)*/;
end;

type opt_nk_ids_rxclaim_l_cost_type_t =  // Used in ILMs and mappings
record
  decimal(1) _nk_is_available_ = 1;  /*@ xBizName:'l cost type: Natural Key Is Available'
    BizComment:'Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.'*/
  string("\x01",charset="iso-8859-15", maximum_length=10) cost_type_cd = NULL("") /*VARCHAR(10)*/;
end;
type nk_ids_rxclaim_l_cost_type_t =  // Used in splits
record
  string("\x01",charset="iso-8859-15", maximum_length=10) cost_type_cd = NULL("") /*VARCHAR(10)*/;
end;

type opt_nk_ids_rxclaim_l_price_source_t =  // Used in ILMs and mappings
record
  decimal(1) _nk_is_available_ = 1;  /*@ xBizName:'l price src: Natural Key Is Available'
    BizComment:'Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.'*/
  string("\x01",charset="iso-8859-15", maximum_length=1) price_src_cd = NULL("") /*CHAR(1)*/;
end;
type nk_ids_rxclaim_l_price_source_t =  // Used in splits
record
  string("\x01",charset="iso-8859-15", maximum_length=1) price_src_cd = NULL("") /*CHAR(1)*/;
end;


metadata type =
record
  little endian integer(8) dxf_src_dataset_id = 0; /*@ BizName:'DXF Source Dataset ID' BizComment:'The surrogate key for the DXF Process Log entry for this source.' @*/
  little endian integer(4) dxf_src_rec_cnt = 0; /*@ BizName:'DXF Source Record Count' BizComment:'Starts at 1 each time the Source File Name changes.' @*/
  little endian integer(2) dxf_src_sys_id = 0; /*@ BizName:'DXF Source System ID' BizComment:'The numeric identifier of this source.' @*/
  string(unsigned integer(1)) dxf_src_file_name = ""; /*@ BizName:'DXF Source File Name' BizComment:'The name of the source file, relative to $AI_SERIAL_PENDING.' @*/
  logical_ids_common_d_product_unit_cost_t d_product_uc  /*@ BizName:'d product uc' */;
  opt_nk_ids_common_d_product_t d_product  /*@ BizName:'d product' */;
  opt_nk_ids_rxclaim_l_cost_type_t l_cost_type  /*@ BizName:'l cost type' */;
  opt_nk_ids_rxclaim_l_price_source_t l_price_src  /*@ BizName:'l price src' */;
end;
