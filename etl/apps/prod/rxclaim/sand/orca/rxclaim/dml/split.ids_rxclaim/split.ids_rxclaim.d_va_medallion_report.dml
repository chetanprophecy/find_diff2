/* Do Not Edit.  This file is generated automatically by combining
 * "$PUB_DXF_DML/split_header.type2.dml", "$AI_DML/dxf_header.dml", any "$ADDITIONAL_FIELDS_DML",
 * and "/~$PUB_DATAHUB_DML/ids_rxclaim/ids_rxclaim.d_va_medallion_report.dml".
 * Changing the target DML and re-running "$AI_PSET/setup.ilm/setup.ilm.d_va_medallion_report.pset" will update this file.
 */

type split_ids_rxclaim_d_va_medallion_report_t =
record
  decimal(1) is_equal = 0;
  decimal(1) drop_record = 0;
  datetime("YYYY-MM-DD HH24:MI:SS") matching__eff_dt = NULL("");
  little endian integer(8)  dxf_src_dataset_id =  0/*@ BizName:'DXF Source Dataset ID' BizComment:'The surrogate key for the DXF Process Log entry for this source.' @*/;
  unsigned integer(8)  dxf_src_rec_cnt =  0/*@ BizName:'DXF Source Record Count' BizComment:'Starts at 1 each time the Source File Name changes.' @*/;
  little endian integer(2)  dxf_src_sys_id =  0/*@ BizName:'DXF Source System ID' BizComment:'The numeric identifier of this source.' @*/;
  string(unsigned integer(1))  dxf_src_file_name =  ""/*@ BizName:'DXF Source File Name' BizComment:'The name of the source file, relative to $AI_SERIAL_PENDING.' @*/;
  unsigned integer(8)    dxf_hk_part1 =    0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)    dxf_hk_part2 =    0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
  integer(8)    dxf_sk =    0 /*Added by Integration Framework. Surrogate key.*/;
  string(4)   svc_ctr;
  string(2)   record_type;
  string(20)   cardholder_id;
  string(20)   alternate_id_number;
  string(15)   group_id;
  string(15)   subgroup_id;
  string(2)   patient_id_qualifier;
  string(20)   patient_id;
  string(35)   patient_last_name;
  string(35)   patient_first_name;
  string(1)   middle_initial;
  string(3)   person_cd;
  string(1)   patient_relationship_cd;
  string(1)   patient_gender_cd;
  string(8)   dob;
  string(1)   prod_cd_qualifier;
  string(40)   prod_cd;
  string(1)   drug_type;
  string(1)   compound_ind;
  string(8)   pa_create_dt;
  string(8)   pa_updt_dt;
  string(8)   pa_eff_dt;
  string(8)   pa_exp_dt;
  string(35)   pa_id_assigned;
  string(35)   pa_id_submitted;
  string(3)   pa_reason_cd;
  string(200)   additional_msg_info;
  string(10)   pa_quantity;
  string(10)   pa_quantity_accumulated;
  string(10)   dosage_per_day;
  string(3)   days_supply;
  string(3)   days_supply_used_to_dt;
  string(2)   pa_number_of_fills_authorized;
  string(2)   pa_number_of_refills_authorized;
  string(2)   fills_refills_used_to_dt;
  string(1)   copay_coinsurance_override_type;
  string(9)   copay_coinsurance_override_amount;
  string(1)   copay_conjunction_sequence;
  string(9)   claim_cost_ceiling_override_amount;
  string(1)   benefit_amount_type;
  string(1)   benefit_amount_time_period;
  string(9)   benefit_amount;
  string(9)   benefit_amount_used_to_dt;
  string(1)   prescriber_override_type;
  string(2)   prescriber_id_qualifier;
  string(15)   prescriber_id;
  string(1)   service_provider_override_type;
  string(2)   service_provider_id_qualifier;
  string(15)   service_provider_id;
  string(1)   dispense_as_written_daw_diff;
  string(1)   claim_origination;
  string(2)   product_service_id_qualifier;
  string(40)   product_service_id_;
  string(1)   prescription_service_reference_number_qualifier;
  string(12)   prescription_service_reference_number;
  string(8)   previous_dt_of_service;
  string(2)   service_provider_id_qualifier_paid_claim;
  string(15)   service_provider_id_paid_claim;
  string(74)   filler;
  decimal("\x01",0)     src_env_sk = NULL("") /*BIGINT NOT NULL*/;
  string(1)    newline =   "\n";
end;

metadata type = split_ids_rxclaim_d_va_medallion_report_t;
