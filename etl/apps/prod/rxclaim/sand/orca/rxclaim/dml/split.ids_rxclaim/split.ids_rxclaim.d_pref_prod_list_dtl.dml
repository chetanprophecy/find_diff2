/* Do Not Edit.  This file is generated automatically by combining
 * "$PUB_DXF_DML/split_header.type2.dml", "$AI_DML/dxf_header.dml", any "$ADDITIONAL_FIELDS_DML",
 * and "/~$PUB_DATAHUB_DML/ids_rxclaim/ids_rxclaim.d_pref_prod_list_dtl.dml".
 * Changing the target DML and re-running "$AI_PSET/setup.ilm/setup.ilm.ctrx_d_pref_prod_list_dtl.pset" will update this file.
 */

type opt_nk_ids_rxclaim_d_pref_prod_list_t =
record
  string("\x01",charset="iso-8859-15", maximum_length=10) pref_prod_lst_id = NULL("") /*VARCHAR(10)*/;
  decimal("\x01",0) src_env_sk = NULL("") /*BIGINT*/;
end;

type opt_nk_ids_common_d_gpi_t =
record
  string("\x01",charset="iso-8859-15", maximum_length=14) gpi_id = NULL("") /*VARCHAR(14) NOT NULL*/;
end;

type split_ids_rxclaim_d_pref_prod_list_dtl_t =
record
  decimal(1) is_equal = 0;
  decimal(1) drop_record = 0;
  datetime("YYYY-MM-DD HH24:MI:SS") matching__eff_dt = NULL("");
  little endian integer(8)  dxf_src_dataset_id =  0/*@ BizName:'DXF Source Dataset ID' BizComment:'The surrogate key for the DXF Process Log entry for this source.' @*/;
  unsigned integer(8)  dxf_src_rec_cnt =  0/*@ BizName:'DXF Source Record Count' BizComment:'Starts at 1 each time the Source File Name changes.' @*/;
  little endian integer(2)  dxf_src_sys_id =  0/*@ BizName:'DXF Source System ID' BizComment:'The numeric identifier of this source.' @*/;
  string(unsigned integer(1))  dxf_src_file_name =  ""/*@ BizName:'DXF Source File Name' BizComment:'The name of the source file, relative to $AI_SERIAL_PENDING.' @*/;
  unsigned integer(8)    dxf_hk_part1 =    0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)    dxf_hk_part2 =    0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
  integer(8)    dxf_sk =    0 /*Added by Integration Framework. Surrogate key.*/;
  decimal("\x01",0)     pref_prod_lst_dtl_sk = NULL("") /*BIGINT*/;
  decimal("\x01",0)     pref_prod_lst_sk = NULL("") /*BIGINT*/;
  decimal("\x01",0)     gpi_sk = NULL("") /*BIGINT*/;
  string("\x01",charset="iso-8859-15", maximum_length=10)     pref_prod_lst_id = NULL("") /*VARCHAR(10)*/;
  string("\x01",charset="iso-8859-15", maximum_length=14)     gpi_id = NULL("") /*VARCHAR(14)*/;
  string("\x01",charset="iso-8859-15", maximum_length=5)     ndc_labeler_cd = NULL("") /*VARCHAR(5)*/;
  string("\x01",charset="iso-8859-15", maximum_length=4)     ndc_prod_cd = NULL("") /*VARCHAR(4)*/;
  string("\x01",charset="iso-8859-15", maximum_length=2)     ndc_pkg_cd = NULL("") /*VARCHAR(2)*/;
  decimal("\x01",0)     ppd_seq_nbr = NULL("") /*INTEGER*/;
  string("\x01",charset="iso-8859-15", maximum_length=1)     ppd_stat_cd = NULL("") /*CHAR(1)*/;
  date("YYYYMMDD")("\x01")     ppd_from_dt = NULL("") /*DATE*/;
  decimal("\x01",0)     ppd_from_dt_sk = NULL("") /*BIGINT*/;
  date("YYYYMMDD")("\x01")     ppd_thru_dt = NULL("") /*DATE*/;
  decimal("\x01",0)     ppd_thru_dt_sk = NULL("") /*BIGINT*/;
  decimal("\x01",0)     ppd_tier = NULL("") /*INTEGER*/;
  string("\x01",charset="iso-8859-15", maximum_length=1)     ppd_appl_tier_to_genric_ind = NULL("") /*CHAR(1)*/;
  string("\x01",charset="iso-8859-15", maximum_length=1)     ppd_limit_ind = NULL("") /*CHAR(1)*/;
  decimal("\x01".2, maximum_length=10, sign_reserved)     ppd_limit_qty = NULL("") /*DECIMAL(8,2)*/;
  decimal("\x01",0)     ppd_limit_days = NULL("") /*INTEGER*/;
  string("\x01",charset="iso-8859-15", maximum_length=1)     ppd_pa_ind = NULL("") /*CHAR(1)*/;
  string("\x01",charset="iso-8859-15", maximum_length=60)     ppd_genric_nm = NULL("") /*VARCHAR(60)*/;
  string("\x01",charset="iso-8859-15", maximum_length=1)     ppd_step_thrpy_ind = NULL("") /*CHAR(1)*/;
  string("\x01",charset="iso-8859-15", maximum_length=1)     ppd_spclty_ind = NULL("") /*CHAR(1)*/;
  decimal("\x01",0)     src_env_sk = NULL("") /*BIGINT*/;
end;

metadata type =
record
  split_ids_rxclaim_d_pref_prod_list_dtl_t co_ppld;
  opt_nk_ids_rxclaim_d_pref_prod_list_t co_ppld_pplsk;
  opt_nk_ids_common_d_gpi_t co_ppld_gpi;
  string(1)   newline = "\n";
end;