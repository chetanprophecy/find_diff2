record
  little endian integer(8) dmf_src_dataset_id = 0; /*@ BizName:'DMF Source Dataset ID' BizComment:'The surrogate key for the DMF Process Log entry for this source.' @*/
  little endian integer(4) dmf_src_rec_cnt = 0; /*@ BizName:'DMF Source Record Count' BizComment:'Starts at 1 each time the Source File Name changes.' @*/
  little endian integer(2) dmf_src_sys_id = 0; /*@ BizName:'DMF Source System ID' BizComment:'The numeric identifier of this source.' @*/
  string(unsigned integer(1)) dmf_src_file_name = ""; /*@ BizName:'DMF Source File Name' BizComment:'The name of the source file, relative to $AI_SERIAL_PENDING.' @*/
  little endian integer(8)  amp2nb /*DECIMAL(15) NOT NULL*/;
  little endian integer(2)  ams6nb /*DECIMAL(3) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amzsst /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=9)  ams6cd /*CHAR(9) NOT NULL*/;
  little endian integer(4)  ame1hk /*DECIMAL(8) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  ams7cd /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  ams8cd /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=20)  ams5cd /*CHAR(20) NOT NULL*/;
  little endian integer(4)  ambbda /*DECIMAL(8) NOT NULL*/;
  string(unsigned integer(1),maximum_length=5)  amwihc /*CHAR(5) NOT NULL*/;
  string(unsigned integer(1),maximum_length=3)  amwjhc /*CHAR(3) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amwkhc /*CHAR(10) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amwlhc /*CHAR(10) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amo6h9 /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=9)  amidhe /*CHAR(9) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  amifhe /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  amighe /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amiehe /*CHAR(10) NOT NULL*/;
  little endian integer(4)  amurhg /*DECIMAL(7) NOT NULL*/;
  little endian integer(4)  amr5hs /*DECIMAL(5) NOT NULL*/;
  decimal("".2, sign_reserved)  amxfhx /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amxghx /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amdspr /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amv7hy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amv8hy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amv9hy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amwahy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amwbhy /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amj3cj /*CHAR(1) NOT NULL*/;
  decimal("".2, sign_reserved)  amnfhy /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amw2he /*CHAR(10) NOT NULL*/;
  little endian integer(2)  ambwht /*DECIMAL(2) NOT NULL*/;
  little endian integer(2)  ambxht /*DECIMAL(2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnghy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnjhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amoahy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnlhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amn3hy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnihy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amn4hy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amn5hy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnhhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amojhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amxihy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amokhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amwchy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amolhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amwdhy /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amwxhe /*CHAR(10) NOT NULL*/;
  decimal("".2, sign_reserved)  amomhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amwehy /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amnbia /*CHAR(1) NOT NULL*/;
  decimal("".2, sign_reserved)  amnmhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnnhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnohy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amnphy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amwfhy /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amwghy /*DECIMAL(9,2) NOT NULL*/;
  little endian integer(2)  amrhht /*DECIMAL(3) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amgiic /*CHAR(1) NOT NULL*/;
  little endian integer(8)  amtcn2 /*DECIMAL(9) NOT NULL*/;
  string(unsigned integer(1),maximum_length=20)  amric4 /*CHAR(20) NOT NULL*/;
  string(unsigned integer(1),maximum_length=14)  ampecd /*CHAR(14) NOT NULL*/;
  decimal("".3, sign_reserved)  amionb /*DECIMAL(11,3) NOT NULL*/;
  little endian integer(2)  amimnb /*DECIMAL(3) NOT NULL*/;
  string(unsigned integer(1),maximum_length=12)  amukcd /*CHAR(12) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amulcd /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amk2st /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amk3st /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amsoc4 /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amkwst /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amlrst /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amlest /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  ami9id /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=6)  amlrtx /*CHAR(6) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amiicj /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  amujcd /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amn5ia /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  amythe /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amilcj /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  amtccd /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amk0st /*CHAR(2) NOT NULL*/;
  decimal("".2, sign_reserved)  amvkp1 /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amhtik /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amhuik /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amejhz /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amenhz /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amjghz /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amjhhz /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amjdhz /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amjihz /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amjjhz /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amk6st /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amlcie /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amtfie /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amtjcd /*CHAR(10) NOT NULL*/;
  little endian integer(4)  amasda /*DECIMAL(7) NOT NULL*/;
  little endian integer(4)  amaqce /*DECIMAL(8) NOT NULL*/;
  string(unsigned integer(1),maximum_length=26)  ambqir /*CHAR(26) NOT NULL*/;
  decimal("".2, sign_reserved)  ambiqu /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  ambjqu /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amc4ai /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amc5ai /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amc6ai /*CHAR(1) NOT NULL*/;
  decimal("".2, sign_reserved)  ambkqu /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amc7ai /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amc8ai /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amc9ai /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amrmh9 /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=3)  amychc /*CHAR(3) NOT NULL*/;
  decimal("".2, sign_reserved)  amambj /*DECIMAL(11,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=5)  ame4hn /*CHAR(5) NOT NULL*/;
  string(unsigned integer(1),maximum_length=5)  ame5hn /*CHAR(5) NOT NULL*/;
  string(unsigned integer(1),maximum_length=5)  ame6hn /*CHAR(5) NOT NULL*/;
  decimal("".2, sign_reserved)  amcvqu /*DECIMAL(9,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amhgak /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amxfam /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amxgam /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amxham /*CHAR(1) NOT NULL*/;
  little endian integer(8)  amsaht /*DECIMAL(15) NOT NULL*/;
  little endian integer(2)  amsdht /*DECIMAL(3) NOT NULL*/;
  string(unsigned integer(1),maximum_length=20)  amquhq /*CHAR(20) NOT NULL*/;
  little endian integer(8)  amddap /*DECIMAL(9) NOT NULL*/;
  string(unsigned integer(1),maximum_length=14)  amqvhq /*CHAR(14) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amq1hq /*CHAR(10) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amavod /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amaxod /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amk7st /*CHAR(2) NOT NULL*/;
  decimal("".4, sign_reserved)  amp7ap /*DECIMAL(11,4) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amqrap /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amc2ap /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=15)  amqihq /*CHAR(15) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amc3ap /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amc4ap /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=2)  amc5ap /*CHAR(2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=5)  amqjhq /*CHAR(5) NOT NULL*/;
  string(unsigned integer(1),maximum_length=3)  amqkhq /*CHAR(3) NOT NULL*/;
  string(unsigned integer(1),maximum_length=3)  ampdiu /*CHAR(3) NOT NULL*/;
  string(unsigned integer(1),maximum_length=1)  amxli1 /*CHAR(1) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amzgbj /*CHAR(10) NOT NULL*/;
  little endian integer(2)  amzhbj /*DECIMAL(2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzibj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amznbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzobj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzjbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzkbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzlbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzmbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzpbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzqbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amvwbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amvxbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzabj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzbbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzebj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amzfbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amvsbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amvtbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amqxqu /*DECIMAL(9,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amumbj /*DECIMAL(11,2) NOT NULL*/;
  decimal("".2, sign_reserved)  amulbj /*DECIMAL(11,2) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amakvn /*CHAR(10) NOT NULL*/;
  little endian integer(4)  amc2dt /*DECIMAL(7) NOT NULL*/;
  little endian integer(4)  amadtm /*DECIMAL(6) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amalvn /*CHAR(10) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amadvn /*CHAR(10) NOT NULL*/;
  little endian integer(4)  ambmdt /*DECIMAL(7) NOT NULL*/;
  little endian integer(4)  amabtm /*DECIMAL(6) NOT NULL*/;
  string(unsigned integer(1),maximum_length=10)  amaevn /*CHAR(10) NOT NULL*/;
end
