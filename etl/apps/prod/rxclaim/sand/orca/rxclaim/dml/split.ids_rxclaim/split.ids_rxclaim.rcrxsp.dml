/* Do Not Edit.  This file is generated automatically by combining
 * "$PUB_DXF_DML/split_header.type2.dml", "$AI_DML/dxf_header.dml", any "$ADDITIONAL_FIELDS_DML",
 * and "/~$PUB_DATAHUB_DML/ids_rxclaim/ids_rxclaim.rcrxsp.dml".
 * Changing the target DML and re-running "$AI_PSET/setup.ilm/setup.ilm.clmprdfil_rcrxsp.pset" will update this file.
 */

type split_ids_rxclaim_rcrxsp_t =
record
  decimal(1) is_equal = 0;
  decimal(1) drop_record = 0;
  datetime("YYYY-MM-DD HH24:MI:SS") matching__eff_dt = NULL("");
  little endian integer(8)  dxf_src_dataset_id =  0/*@ BizName:'DXF Source Dataset ID' BizComment:'The surrogate key for the DXF Process Log entry for this source.' @*/;
  unsigned integer(8)  dxf_src_rec_cnt =  0/*@ BizName:'DXF Source Record Count' BizComment:'Starts at 1 each time the Source File Name changes.' @*/;
  little endian integer(2)  dxf_src_sys_id =  0/*@ BizName:'DXF Source System ID' BizComment:'The numeric identifier of this source.' @*/;
  string(unsigned integer(1))  dxf_src_file_name =  ""/*@ BizName:'DXF Source File Name' BizComment:'The name of the source file, relative to $AI_SERIAL_PENDING.' @*/;
  unsigned integer(8)    dxf_hk_part1 =    0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)    dxf_hk_part2 =    0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
  integer(8)    dxf_sk =    0 /*Added by Integration Framework. Surrogate key.*/;
  string("\x01", maximum_length=1)   cdc_flag = NULL;
  datetime("YYYY-MM-DD HH24:MI:SS.nnnnnn")("\x01")   cdc_ts = NULL;
  decimal("\x01",0, maximum_length=16, sign_reserved)   dnp2nb /*DECIMAL(15) NOT NULL*/;
  string("\x01", maximum_length=2)   dngicj /*CHAR(2) NOT NULL*/;
  string("\x01", maximum_length=15)   dns3cd /*CHAR(15) NOT NULL*/;
  string("\x01", maximum_length=1)   dngkcj /*CHAR(1) NOT NULL*/;
  string("\x01", maximum_length=12)   dnienb /*CHAR(12) NOT NULL*/;
  decimal("\x01",0, maximum_length=9, sign_reserved)   dnc3dt /*DECIMAL(8) NOT NULL*/;
  string("\x01", maximum_length=2)   dnifnb /*CHAR(2) NOT NULL*/;
  string("\x01", maximum_length=2)   dnt3c4 /*CHAR(2) NOT NULL*/;
  string("\x01", maximum_length=1)   dnkust /*CHAR(1) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dnihnb /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dniinb /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dnijnb /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dniknb /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dnq5n2 /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dnq8n2 /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dnq9n2 /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dnpsnb /*DECIMAL(3) NOT NULL*/;
  decimal("\x01",0, maximum_length=4, sign_reserved)   dnptnb /*DECIMAL(3) NOT NULL*/;
  string("\x01", maximum_length=9)   dnbicd /*CHAR(9) NOT NULL*/;
  string("\x01", maximum_length=10)   dnsfip /*CHAR(10) NOT NULL*/;
  string("\x01", maximum_length=15)   dnyhhk /*CHAR(15) NOT NULL*/;
  string("\x01", maximum_length=1)   dnodod /*CHAR(1) NOT NULL*/;
  string("\x01", maximum_length=1)   dnkuhl /*CHAR(1) NOT NULL*/;
  decimal("\x01",0)     src_env_sk = NULL("") /*BIGINT NOT NULL*/;
  string(1)   newline =   "\n";
end;

metadata type = split_ids_rxclaim_rcrxsp_t;
