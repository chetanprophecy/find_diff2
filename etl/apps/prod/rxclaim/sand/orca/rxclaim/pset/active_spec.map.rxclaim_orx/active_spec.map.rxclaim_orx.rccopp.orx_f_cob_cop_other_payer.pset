!prototype|P|||$AI_PSET/active_spec.pset
REPORT_NAME|l|||map.rxclaim_orx.rccopp.orx_f_cob_cop_other_payer
SOURCE_NAME||||rxclaim_orx.rccopp
ILM_NAME||||orx_f_cob_cop_other_payer
RULESET_XML|l|||<ruleset schema_version="7" compatibility_level="3" match_business_name="1" target_schema_version="19" rpath_type="1">\n  <guid>6c54cc0a-5ccaca46-e1df-0</guid>\n  <pretty_name>Map rxclaim_orx.rccopp to the orx_f_cob_cop_other_payer ILM</pretty_name>\n  <usexfr_rpath_type>1</usexfr_rpath_type>\n  <componentinfo>\n    <join_input_required>0</join_input_required>\n    <dedup>0</dedup>\n    <select_expression></select_expression>\n  </componentinfo>\n  <inputs>\n    <bzname>Input 1</bzname>\n    <datasets extdataset_rpath_type="3">\n      <bzname>Input 1</bzname>\n      <extdataset></extdataset>\n    </datasets>\n    <varbls vartype="1">\n      <comment>The surrogate key for the DXF Process Log entry for this source.</comment>\n      <bzname>DXF Source Dataset ID</bzname>\n      <xxname>dxf_src_dataset_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Starts at 1 each time the Source File Name changes.</comment>\n      <bzname>DXF Source Record Count</bzname>\n      <xxname>dxf_src_rec_cnt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>The numeric identifier of this source.</comment>\n      <bzname>DXF Source System ID</bzname>\n      <xxname>dxf_src_sys_id</xxname>\n    </varbls>\n    <varbls>\n      <comment>The name of the source file, relative to $AI_SERIAL_PENDING.</comment>\n      <bzname>DXF Source File Name</bzname>\n      <xxname>dxf_src_file_name</xxname>\n    </varbls>\n    <varbls>\n      <bzname>cdc_flag</bzname>\n      <xxname>cdc_flag</xxname>\n    </varbls>\n    <varbls vartype="3">\n      <bzname>cdc_ts</bzname>\n      <xxname>cdc_ts</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>nap2nb</bzname>\n      <xxname>nap2nb</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>naoinb</bzname>\n      <xxname>naoinb</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>naven2</bzname>\n      <xxname>naven2</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>nafspp</bzname>\n      <xxname>nafspp</xxname>\n    </varbls>\n    <varbls>\n      <bzname>naunoc</bzname>\n      <xxname>naunoc</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>naqghz</bzname>\n      <xxname>naqghz</xxname>\n    </varbls>\n    <varbls>\n      <bzname>carrierid</bzname>\n      <xxname>carrierid</xxname>\n    </varbls>\n    <varbls>\n      <bzname>accountid</bzname>\n      <xxname>accountid</xxname>\n    </varbls>\n    <varbls>\n      <bzname>groupid</bzname>\n      <xxname>groupid</xxname>\n    </varbls>\n    <varbls>\n      <bzname>groupnbr</bzname>\n      <xxname>groupnbr</xxname>\n    </varbls>\n    <varbls>\n      <bzname>memberid</bzname>\n      <xxname>memberid</xxname>\n    </varbls>\n    <varbls>\n      <bzname>cardholder</bzname>\n      <xxname>cardholder</xxname>\n    </varbls>\n    <varbls>\n      <bzname>claimsts</bzname>\n      <xxname>claimsts</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>datesbm</bzname>\n      <xxname>datesbm</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>dtefilled</bzname>\n      <xxname>dtefilled</xxname>\n    </varbls>\n    <varbls>\n      <bzname>newline</bzname>\n      <xxname>newline</xxname>\n    </varbls>\n  </inputs>\n  <outputs>\n    <bzname>Output</bzname>\n    <datasets extdataset_rpath_type="3">\n      <bzname>Output</bzname>\n      <extdataset></extdataset>\n    </datasets>\n    <varbls vartype="1">\n      <comment>The surrogate key for the DXF Process Log entry for this source.</comment>\n      <bzname>DXF Source Dataset ID</bzname>\n      <xxname>dxf_src_dataset_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Starts at 1 each time the Source File Name changes.</comment>\n      <bzname>DXF Source Record Count</bzname>\n      <xxname>dxf_src_rec_cnt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>The numeric identifier of this source.</comment>\n      <bzname>DXF Source System ID</bzname>\n      <xxname>dxf_src_sys_id</xxname>\n    </varbls>\n    <varbls>\n      <comment>The name of the source file, relative to $AI_SERIAL_PENDING.</comment>\n      <bzname>DXF Source File Name</bzname>\n      <xxname>dxf_src_file_name</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.dxf_hk_part1</bzname>\n      <xxname>c_f_oth_pyr.dxf_hk_part1</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.dxf_hk_part2</bzname>\n      <xxname>c_f_oth_pyr.dxf_hk_part2</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.dxf_sk</bzname>\n      <xxname>c_f_oth_pyr.dxf_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.claim_nbr</bzname>\n      <default_value>%[I|nap2nb|Input 1]</default_value>\n      <xxname>c_f_oth_pyr.claim_nbr</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.claim_seq_nbr</bzname>\n      <default_value>if(%[I|naoinb|Input 1]&lt;0) %[I|naoinb|Input 1] else (1000-%[I|naoinb|Input 1])</default_value>\n      <xxname>c_f_oth_pyr.claim_seq_nbr</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.cob_seq_nbr</bzname>\n      <default_value>%[I|naven2|Input 1]</default_value>\n      <xxname>c_f_oth_pyr.cob_seq_nbr</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.cop_seq_nbr</bzname>\n      <default_value>%[I|nafspp|Input 1]</default_value>\n      <xxname>c_f_oth_pyr.cop_seq_nbr</xxname>\n    </varbls>\n    <varbls>\n      <bzname>c_f_oth_pyr.cop_oth_pyr_id_qlfr</bzname>\n      <default_value>%[I|naunoc|Input 1]</default_value>\n      <xxname>c_f_oth_pyr.cop_oth_pyr_id_qlfr</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.cop_oth_pyr_rsp_amt</bzname>\n      <default_value>%[I|naqghz|Input 1]</default_value>\n      <xxname>c_f_oth_pyr.cop_oth_pyr_rsp_amt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.src_env_sk</bzname>\n      <default_value>%[I|DXF Source System ID|Input 1]</default_value>\n      <xxname>c_f_oth_pyr.src_env_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.cag_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>c_f_oth_pyr.cag_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.mbr_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>c_f_oth_pyr.mbr_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.carrier_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>c_f_oth_pyr.carrier_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.claim_nbr_encrp</bzname>\n      <default_value>if(%[I|nap2nb|Input 1]&gt;0) (decimal(&apos;&apos;))(string_concat(string_substring((decimal(&apos;&apos;))%[I|nap2nb|Input 1],1,2),ff3_encrypt_idwdata((decimal(&apos;&apos;))%[I|nap2nb|Input 1]))) \nelse  (decimal(&apos;&apos;))(string_concat(string_substring((decimal(&apos;&apos;))%[I|nap2nb|Input 1],1,3),ff3_encrypt_idwdata(decimal_strip(math_abs((decimal(&apos;&apos;))%[I|nap2nb|Input 1])))))</default_value>\n      <xxname>c_f_oth_pyr.claim_nbr_encrp</xxname>\n      <mapping_comment>Concatenating the first two characters of original claim id with the encrypted value if the value is positive else concatenating negative sign as well.</mapping_comment>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>c_f_oth_pyr.sec_flg</bzname>\n      <default_value>0</default_value>\n      <xxname>c_f_oth_pyr.sec_flg</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>d_cag._nk_is_available_</bzname>\n      <xxname>d_cag._nk_is_available_</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_cag.carrier_id</bzname>\n      <default_value>%[I|carrierid|Input 1]</default_value>\n      <xxname>d_cag.carrier_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_cag.account_id</bzname>\n      <default_value>%[I|accountid|Input 1]</default_value>\n      <xxname>d_cag.account_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_cag.employer_group_id</bzname>\n      <default_value>if(string_lrtrim(%[I|claimsts|Input 1]) != &apos;R&apos; and is_blank(%[I|groupid|Input 1])) %[I|groupnbr|Input 1] else %[I|groupid|Input 1]</default_value>\n      <xxname>d_cag.employer_group_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>d_carrier._nk_is_available_</bzname>\n      <xxname>d_carrier._nk_is_available_</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_carrier.carrier_id</bzname>\n      <default_value>%[I|carrierid|Input 1]</default_value>\n      <xxname>d_carrier.carrier_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>d_member._nk_is_available_</bzname>\n      <xxname>d_member._nk_is_available_</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_member.carrier_id</bzname>\n      <default_value>%[I|carrierid|Input 1]</default_value>\n      <xxname>d_member.carrier_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_member.account_id</bzname>\n      <default_value>%[I|accountid|Input 1]</default_value>\n      <xxname>d_member.account_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_member.employer_group_id</bzname>\n      <default_value>if(string_lrtrim(%[I|claimsts|Input 1]) != &apos;R&apos; and is_blank(%[I|groupid|Input 1])) %[I|groupnbr|Input 1] else %[I|groupid|Input 1]</default_value>\n      <xxname>d_member.employer_group_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_member.mbr_id</bzname>\n      <default_value>if(string_lrtrim(%[I|claimsts|Input 1]) != &apos;R&apos; and is_blank(%[I|memberid|Input 1])) %[I|cardholder|Input 1] else %[I|memberid|Input 1]</default_value>\n      <xxname>d_member.mbr_id</xxname>\n    </varbls>\n  </outputs>\n  <params>\n    <bzname>RUN_ID</bzname>\n    <xxname>RUN_ID</xxname>\n  </params>\n  <usexfrs></usexfrs>\n  <configs target_xfr_rpath_type="1" target_component_rpath_type="1">\n    <bzname>Default deployment</bzname>\n    <inputs_dataset_bzname>Input 1</inputs_dataset_bzname>\n    <outputs_dataset_bzname>Output</outputs_dataset_bzname>\n    <filetestconfigs>\n      <inputs_physical_location_type>1</inputs_physical_location_type>\n      <inputs_physical_location></inputs_physical_location>\n      <inputs_where_clause></inputs_where_clause>\n      <outputs_physical_location_type>1</outputs_physical_location_type>\n      <outputs_physical_location></outputs_physical_location>\n      <param_value>&quot;0&quot;</param_value>\n      <regression_physical_location_type>1</regression_physical_location_type>\n      <regression_physical_location></regression_physical_location>\n    </filetestconfigs>\n  </configs>\n</ruleset>\n
CATALOG_CONTENTS|$|||
