!prototype|P|||${AI_PSET}/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||ids_rxclaim.f_claim_transaction_sbmdt
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||rxclaim.a_cag_f_clm_d_latest_clm
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_596c66d8_403d_23 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_596c66d8_403d_23 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.grp_clt_ben_cd,'grp_clt_ben_cd',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.relationship_cd_sk,'relationship_cd_sk',1,0]\n     [out0.claim_nbr,'claim_nbr',1,0]\n     [out0.acct_benefit_cd,'acct_benefit_cd',1,0]\n     [out0.filled_dt,'filled_dt',1,0]\n     [out0.cag_sk,'cag_sk',1,0]\n     [out0.d_cag.carrier_id,'d_cag.carrier_id',1,0]\n     [out0.care_fac_adjud_sk,'care_fac_adjud_sk',1,0]\n     [out0.phr_adjud_sk,'phr_adjud_sk',1,0]\n     [out0.claim_seq_nbr,'claim_seq_nbr',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.mbr_sk,'mbr_sk',1,0]\n     [out0.d_cag.account_id,'d_cag.account_id',1,0]\n     [out0.gender_sk,'gender_sk',1,0]\n     [out0.claim_stat_id,'claim_stat_id',1,0]\n     [out0.d_mbr.mbr_id,'d_mbr.mbr_id',1,0]\n     [out0.recent_clm_flg,'recent_clm_flg',1,0]\n     [out0.mbr_eligty_adjud_sk,'mbr_eligty_adjud_sk',1,0]\n     [out0.group_sic,'group_sic',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.final_pln_sk,'final_pln_sk',1,0]\n     [out0.d_cag.employer_group_id,'d_cag.employer_group_id',1,0]\n     [out0.age_band_sk,'age_band_sk',1,0]\n  ]\n  impacts:\n  [\n     [in0.claim_stat_id,'claim_stat_id',1,1]\n     [in0.filled_dt,'filled_dt',1,1]\n     [in0.phr_adjud_sk,'phr_adjud_sk',1,1]\n     [in0.care_fac_adjud_sk,'care_fac_adjud_sk',1,1]\n     [in0.recent_clm_flg,'recent_clm_flg',1,1]\n     [in0.cag_sk,'cag_sk',1,1]\n     [in0.claim_nbr,'claim_nbr',1,1]\n     [in0.age_band_sk,'age_band_sk',1,1]\n     [in0.group_sic,'group_sic',1,1]\n     [in0.mbr_sk,'mbr_sk',1,1]\n     [in0.relationship_cd_sk,'relationship_cd_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.grp_clt_ben_cd,'grp_clt_ben_cd',1,1]\n     [in0.d_cag.account_id,'account_id',1,1]\n     [in0.d_cag.employer_group_id,'employer_group_id',1,1]\n     [in0.d_cag.carrier_id,'carrier_id',1,1]\n     [in0.mbr_eligty_adjud_sk,'mbr_eligty_adjud_sk',1,1]\n     [in0.final_pln_sk,'final_pln_sk',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.gender_sk,'gender_sk',1,1]\n     [in0.d_mbr.mbr_id,'mbr_id',1,1]\n     [in0.acct_benefit_cd,'acct_benefit_cd',1,1]\n     [in0.claim_seq_nbr,'claim_seq_nbr',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_596c66d8_403d_21 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_596c66d8_403d_21 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.lt_claim_stat_id,'lt_claim_stat_id',1,0]\n     [out0.lt_claim_seq_nbr,'lt_claim_seq_nbr',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.claim_nbr,'claim_nbr',1,0]\n  ]\n  impacts:\n  [\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.lt_claim_seq_nbr,'lt_claim_seq_nbr',1,1]\n     [in0.lt_claim_stat_id,'lt_claim_stat_id',1,1]\n     [in0.claim_nbr,'claim_nbr',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_596c66d8_403d_24 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_596c66d8_403d_24 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_596c66d8_403d_22 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_596c66d8_403d_22 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{claim_nbr; src_env_sk}
OVERRIDE_JOIN_LEVEL_2_KEY||||{}
OVERRIDE_JOIN_LEVEL_3_KEY||||{}
LOOKUP_FIELDS_KEY||||{}
DRIVER_OUTPUT_FIELDS||||claim_nbr,claim_seq_nbr,claim_stat_id,cag_sk,mbr_sk,gender_sk,age_band_sk,relationship_cd_sk,acct_benefit_cd,grp_clt_ben_cd,group_sic,final_pln_sk,mbr_eligty_adjud_sk,care_fac_adjud_sk,phr_adjud_sk,filled_dt,src_env_sk,d_cag,d_mbr
DRIVER_FILTER_EXPR||||claim_stat_id member [vector 'P', 'C']
NON_DRIVER_1_SOURCE_NAME||||ids_rxclaim.d_latest_claim
JOIN_TYPE||||Inner Join with ICFF Lookup
JOIN_KEY||||{claim_nbr; src_env_sk}
DO_CLEAN||||1
ADDITIONAL_FIELDS_DML||||record\nstring("\\x01",charset="iso-8859-15", maximum_length=1)   recent_clm_flg = NULL("");\nend
OUTPUT_FILTER_EXPR||||recent_clm_flg == 'Y'
JOIN_XFR:sandbox||||include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";\ninclude "~$PUB_DXF_XFR/common_functions.xfr";\ninclude "~$PUB_DXF_DML/generic_data_types.dml";\n\nlet lookup_identifier_type current_lookup = lookup_not_loaded(); \nlet string("") datafile = $"PUB_DATAHUB_MFS_LOOKUP" + "/ids/ids_rxclaim/one/d_latest_claim.dat.gz";\nlet string("") indexfile=this_partition_path(string_replace(datafile,".dat.gz", ".idx")); \ntype lookup_record_type = record\n  unsigned integer(8)     dxf_hk_part1 =     0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;\n  unsigned integer(8)     dxf_hk_part2 =     0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;\n  integer(8)     dxf_sk =     0 /*Added by Integration Framework. Surrogate key.*/;\n  decimal("\\x01",0)      claim_nbr = NULL("") /*BIGINT NOT NULL*/;\n  decimal("\\x01",0)      lt_claim_seq_nbr = NULL("") /*INTEGER NOT NULL*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)      lt_claim_stat_id = NULL("") /*CHAR(1) NOT NULL*/;\n  date("YYYYMMDD")("\\x01")      lt_claim_sbm_dt = NULL("") /*DATE*/;\n  date("YYYYMMDD")("\\x01")      lt_claim_filled_dt = NULL("") /*DATE*/;\n  decimal("\\x01",0)      ostd_paid_claim_seq_nbr = NULL("") /*INTEGER NOT NULL*/;\n  string("\\x01",charset="iso-8859-15")      paid_claim_seq_nbr_list = NULL("") /*CHAR(1) NOT NULL*/;\n  string("\\x01",charset="iso-8859-15")      rev_claim_seq_nbr_list = NULL("") /*CHAR(1) NOT NULL*/;\n  string("\\x01",charset="iso-8859-15")      rej_claim_seq_nbr_list = NULL("") /*CHAR(1) NOT NULL*/;\n  decimal("\\x01",0)      lt_paid_claim_seq_nbr = NULL("") /*INTEGER NOT NULL*/;\n  date("YYYYMMDD")("\\x01")      lt_paid_claim_sbm_dt = NULL("") /*DATE*/;\n  date("YYYYMMDD")("\\x01")      lt_paid_claim_filled_dt = NULL("") /*DATE*/;\n  decimal("\\x01",0)      lt_rev_claim_seq_nbr = NULL("") /*INTEGER NOT NULL*/;\n  date("YYYYMMDD")("\\x01")      lt_rev_claim_sbm_dt = NULL("") /*DATE*/;\n  date("YYYYMMDD")("\\x01")      lt_rev_claim_filled_dt = NULL("") /*DATE*/;\n  decimal("\\x01",0)      lt_rej_claim_seq_nbr = NULL("") /*INTEGER NOT NULL*/;\n  date("YYYYMMDD")("\\x01")      lt_rej_claim_sbm_dt = NULL("") /*DATE*/;\n  date("YYYYMMDD")("\\x01")      lt_rej_claim_filled_dt = NULL("") /*DATE*/;\n  decimal("\\x01",0)      cag_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01",0)      mbr_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01",0)      mbr_adjud_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01",0)      phr_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01",0)      pbr_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01",0)      prod_sk = NULL("") /*BIGINT*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=50)      clt_id = NULL("") /*VARCHAR(50)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=30)  carrier_id = NULL("") /*VARCHAR(30)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=40)  account_id = NULL("") /*VARCHAR(40)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=30)  employer_group_id = NULL("") /*VARCHAR(30)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=20)  mbr_id = NULL("") /*VARCHAR(20)*/;\n  decimal("\\x01",0)      src_env_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01", maximum_length=5)   dxf_src_sys_id =   0;\n  datetime("YYYYMMDDHH24MISS")("\\x01")  ids_create_dttm = NULL("");\n  string("\\x01", maximum_length=20)  ids_create_uid = NULL("");\n  decimal("\\x01", maximum_length=20)  ids_create_run_id =  0;\n  datetime("YYYYMMDDHH24MISS")("\\x01")  ids_updt_dttm = NULL("");\n  string("\\x01", maximum_length=20)  ids_updt_uid = NULL("");\n  decimal("\\x01", maximum_length=20)  ids_updt_run_id =  0;\n  string("\\x01", maximum_length=2)  ids_rec_stat_cd = NULL("");\n  string(1) newline = "\\n";\nend\n;\n\nout::reformat(in)=\nbegin \n  let lookup_record_type lookup_record_value = allocate_with_nulls();\n  let lookup_record_type exact_record_value=allocate_with_defaults();\n  let lookup_record_type exact_next_record_value=allocate_with_nulls();\n  \n  let unsigned integer(8) dxf_hk_part1 = in.dxf_hk_part1;\n  let unsigned integer(8) dxf_hk_part2 = in.dxf_hk_part2;\n\n  let decimal("") match_count = 0 ;\n  if (current_lookup == lookup_not_loaded()) \n  current_lookup = lookup_load(this_partition_path(datafile) ,indexfile, "IDS_LKP_TPL"); \n\n  lookup_record_value = if (current_lookup != lookup_not_loaded() ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else allocate_with_defaults() ;\n  exact_record_value=allocate_with_defaults();\n  exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.\n                      else if  ( dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself \n                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .\n                      begin\n                        match_count=lookup_count(current_lookup, "IDS_LKP_TPL", dxf_hk_part1);\n                          begin block exact_record_match\n                             for (let int k, k < match_count)\n                               begin \n                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else lookup_previous(current_lookup,"IDS_LKP_TPL");\n                                 if ( dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) \n                                  begin\n                                        exact_record_value = exact_next_record_value;\n                                        exit  exact_record_match;\n                                  end\n                                                                                                 \n                             end\n                          end block exact_record_match\n                       result :: exact_record_value ;\n                       end;\n  out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and exact_record_value.dxf_hk_part2==0 ) 0 else 1 ;  \n  out.dxf_hk_part1 :1: in.dxf_hk_part1;\n  out.dxf_hk_part2 :2: in.dxf_hk_part2;\n\n  out.recent_clm_flg :: if(exact_record_value.lt_claim_seq_nbr == in.claim_seq_nbr && exact_record_value.lt_claim_stat_id == in.claim_stat_id) 'Y' else 'N';\n  \n  out.* :: exact_record_value.*;\n  out.* :4: in.* ;\nend ;
NON_DRIVER_1_OUTPUT_FIELDS||||claim_nbr,lt_claim_seq_nbr,lt_claim_stat_id,src_env_sk
