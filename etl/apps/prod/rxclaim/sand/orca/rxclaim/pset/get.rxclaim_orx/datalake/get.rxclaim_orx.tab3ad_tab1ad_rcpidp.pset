!prototype|P|||${AI_PSET}/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||rxclaim_orx.tab3ad_tab1ad_dist
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||rxclaim_orx.tab3ad_tab1ad_rcpidp
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5943953c_4206_1 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5943953c_4206_1 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.ad3edt,'ad3edt',1,0]\n     [out0.ad3nme,'ad3nme',1,0]\n     [out0.ad1cmt,'ad1cmt',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.ad3cst,'ad3cst',1,0]\n     [out0.ad3sdt,'ad3sdt',1,0]\n     [out0.ad3ndc,'ad3ndc',1,0]\n     [out0.ad3alt,'ad3alt',1,0]\n     [out0.filename,'filename',1,0]\n  ]\n  impacts:\n  [\n     [in0.ad3edt,'ad3edt',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.ad3nme,'ad3nme',1,1]\n     [in0.ad1cmt,'ad1cmt',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.ad3cst,'ad3cst',1,1]\n     [in0.ad3sdt,'ad3sdt',1,1]\n     [in0.ad3ndc,'ad3ndc',1,1]\n     [in0.ad3alt,'ad3alt',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5943953c_4206_3 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5943953c_4206_3 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.s4e6c4_key,[transform],in0.s4e6c4]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.s4nqs3,'s4nqs3',1,0]\n     [out0.s4e6c4_key,'s4e6c4_key',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.s4e6c4,'s4e6c4',1,0]\n  ]\n  impacts:\n  [\n     [in0.filename,'filename',1,1]\n     [in0.s4nqs3,'s4nqs3',1,1]\n     [in0.s4e6c4,'s4e6c4',2,2]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet string("\\001", maximum_length=20) s4e6c4_key = fail_if_error(string_substring(in0.s4e6c4,1,9 ));\n\n\n\n  out0.s4e6c4_key::s4e6c4_key;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5943953c_4206_0 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5943953c_4206_0 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5943953c_4206_2 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5943953c_4206_2 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{s4e6c4_key}
OVERRIDE_JOIN_LEVEL_2_KEY||||{}
OVERRIDE_JOIN_LEVEL_3_KEY||||{}
LOOKUP_FIELDS_KEY||||{}
DRIVER_FILE_TYPE||||Clean
DRIVER_OUTPUT_FIELDS||||ad3ndc,ad3nme,ad3alt,ad3cst,ad3sdt,ad3edt,ad1cmt
NON_DRIVER_1_SOURCE_NAME||||rxclaim_orx.rcpidp_cons
NON_DRIVER_1_FILE_TYPE||||Clean
NON_DRIVER_1_OUTPUT_FIELDS||||s4nqs3,s4e6c4
JOIN_TYPE||||Inner Join
JOIN_KEY||||{ad3ndc}
JOIN_XFR:sandbox||||$[\nbegin\n\nlet join_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 ""\n               else \n                 make_transform("join", [vector make_arg("in0"), make_arg("in1")], [vector make_arg("out")]);\n                 \nlet rfmt_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 make_transform("reformat", [vector make_arg("in")], [vector make_arg("out")])\n               else \n                 "";\n                 \nlet join_key = key_info(JOIN_KEY);\nlet override_join_key = key_info(OVERRIDE_JOIN_KEY);\n\nlet in_vec = for(let key in join_key) : "in." + key.field_name;\n\nlet string("") global_vars = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n"let lookup_identifier_type sec_icff_id = lookup_load('" + NON_DRIVER_1_SEC_FILES_VEC[0] + "', '" + NON_DRIVER_1_SEC_INDEX_VEC[0] + "', 'LKP: DA SEC 1 Template');\nlet bc_lookup_address_type da_address =  allocate_with_defaults();\nlet decimal(\\"\\") match_found =  0;" else "";\n\nif(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) begin\n  rfmt_xfr = add_statement(rfmt_xfr, "  if(lookup_match(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ")) begin \n    da_address = lookup_last(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ").prim_da_address;\n    match_found = 1;\n  end\n  else begin\n    da_address = allocate_with_defaults();\n    match_found = 0;\n  end");\n  \n  for(let key in join_key) \n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + key.field_name, "in." + key.field_name, 1)]);\n      \n  for(let field in string_split(NON_DRIVER_1_OUTPUT_FIELDS , ","))\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1)\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + field, "allocate_with_defaults()", 1)]);\n      \n  rfmt_xfr = add_rule(rfmt_xfr, "out.da_address", "da_address");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.match_found", "match_found");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.*", "in.*");\nend\nelse  begin\n  if(join_key != override_join_key)\n    for(let key in join_key) \n      if(key.field_name != override_join_key[index_of(key)].field_name)\n        join_xfr = add_rules(join_xfr, [vector make_rule("out." + key.field_name, "in0." + key.field_name, 1)\n                                          ,make_rule("out." + key.field_name, "in1." + override_join_key[index_of(key)].field_name, 2)\n                                          ]);\n   \n  join_xfr = add_rules(join_xfr, [vector make_rule("out.*", "in0.*", 1)\n                                          ,make_rule("out.*", "in1.*", 2)\n                                          ]);\nend\n\nresult :: if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) global_vars + "\\r\\n\\r\\n" + rfmt_xfr \n          else global_vars + "\\r\\n\\r\\n" + join_xfr;\n\nend\n]
DO_CLEAN||||1
ADDITIONAL_FIELDS_DML||||record\nstring("\\001", maximum_length=20)   s4e6c4_key = NULL("");\nend
DRIVER_DEDUP_ON_JOIN_KEY||||False
NON_DRIVER_1_DEDUP_ON_JOIN_KEY||||False
