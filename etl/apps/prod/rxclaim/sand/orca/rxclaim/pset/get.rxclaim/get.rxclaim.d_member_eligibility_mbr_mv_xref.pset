!prototype|P|||$AI_PSET/get.database.interim.pset
QUERY_TYPE_ID||||3
SOURCE_NAME||||rxclaim.d_member_eligibility_mbr_mv_xref
SOURCE_DB_PROJECT||||DB_RXCLAIM
SOURCE_TABLE_LIST||||# Schema Name Unqualified Table Name  Fields
SOURCE_DBMS_TYPE||||netezza
SOURCE_UNLOAD_INTERFACE||||api
SQL|$|||SELECT\r\n  '$START_CHANGES_TIME'  month_start_dt,\r\n  '$END_CHANGES_TIME'   month_end_dt,\r\n  xref.cag_sk ,\r\n  xref.new_cag_sk ,\r\n  xref.mbr_sk ,\r\n  xref.curr_mbr_sk,\r\n  d_melp.mbr_eligty_sk,\r\n  d_melp.cag_sk,\r\n  d_mbr.mbr_sk,\r\n  d_melp.carrier_id,\r\n  d_melp.account_id,\r\n  d_melp.employer_group_id,\r\n  d_melp.mbr_id,\r\n  d_melp.seq_nbr,\r\n  d_melp.mel_stat_cd,\r\n  d_melp.mel_eff_dt,\r\n  d_melp.mel_thru_dt,\r\n  d_melp.copay_brnd_amt,\r\n  d_melp.copay_gen_amt,\r\n  d_melp.copay3_amt,\r\n  d_melp.copay4_amt,\r\n  d_melp.clt_prod_cd,\r\n  d_melp.clt_rdr_cd,\r\n  d_melp.pln_cd,\r\n  d_melp.plan_eff_dt,\r\n  d_melp.spnd_dwn_amt,\r\n  d_melp.src_env_sk,\r\n  d_mbr.mbr_dt_of_brth,\r\n  d_mbr.mbr_relshp_cd,\r\n  d_mbr.mbr_sex,\r\n  d_gelp.grp_eligty_sk,\r\n  d_gelp.gel_seq_nbr,\r\n  d_gelp.gel_status,\r\n  d_gelp.gel_eff_dt,\r\n  d_gelp.gel_thru_dt,\r\n  d_gelp.gel_brand_copay,\r\n  d_gelp.gel_generic_copay,\r\n  d_gelp.gel_copay3,\r\n  d_gelp.gel_copay4,\r\n  d_gelp.gel_copay5,\r\n  d_gelp.gel_copay6,\r\n  d_gelp.gel_copay7,\r\n  d_gelp.gel_copay8,\r\n  d_gelp.gel_clt_benefit_cd,\r\n  d_gelp.pln_eff_dt\r\n\r\n\r\nFROM\r\nD_MEMBER D_MBR ,\r\nD_MEMBER_MOVE_XREF XREF,\r\n(select * FROM\r\n        (select *,  row_number() over (partition by carrier_id, account_id, employer_group_id, mbr_id order by carrier_id, account_id, employer_group_id, mbr_id, SEQ_NBR) rnum\r\n                FROM d_member_eligibility\r\n                WHERE MEL_STAT_CD = 'A'\r\n                AND (MEL_THRU_DT >= to_date('$START_CHANGES_TIME','YYYYMMDD') AND MEL_EFF_DT <= to_date('$END_CHANGES_TIME', 'YYYYMMDD') )) mel\r\n                WHERE mel.rnum = 1) D_MELP\r\n\r\n,(select * FROM\r\n        (select *, row_number() over (partition by carrier_id, account_id, employer_group_id order by carrier_id, account_id, employer_group_id, GEL_SEQ_NBR) rnum\r\n                FROM d_group_eligibility\r\n                WHERE GEL_STATUS = 'A'\r\n                                AND (GEL_THRU_DT >= to_date('$START_CHANGES_TIME','YYYYMMDD') AND GEL_EFF_DT <= to_date('$END_CHANGES_TIME', 'YYYYMMDD') )) gel\r\n                WHERE gel.rnum = 1) D_GELP\r\nWHERE\r\nD_MELP.mbr_sk = D_MBR.mbr_sk\r\nAND D_MELP.cag_sk = D_GELP.cag_sk\r\nAND D_MELP.MBR_SK = XREF.CURR_MBR_SK\r\nAND XREF.update_ts >   to_date('$WHERE_CLAUSE','YYYYMMDD')
START_CHANGES_TIME:sandbox||||$[  (date("YYYYMM01"))(date_add_months((date("YYYYMMDD")) now() ,-1 ) )]
END_CHANGES_TIME:sandbox||||$[ begin  let decode_datetime_type dt = decode_datetime ( (date("YYYYMMDD"))(date_add_months((date("YYYYMMDD")) now() ,-1 ) ) ) ;   result :: string_concat( (decimal(""))dt.year , (decimal(""))dt.month , (decimal(""))date_month_end(dt.month,dt.year )); end]
WHERE_CLAUSE||||$[  \r\n begin\r\n\r\nlet mbr_mv_watermark_file = AI_SERIAL + "/get." + SOURCE_SYSTEM + "/get.watermark." + SOURCE_NAME + ".dat" ;\r\nresult :: first_without_error ( read_file (mbr_mv_watermark_file) , '19000101');\r\nend]
DO_CLEAN||||1
RUN_ID||||20171201
