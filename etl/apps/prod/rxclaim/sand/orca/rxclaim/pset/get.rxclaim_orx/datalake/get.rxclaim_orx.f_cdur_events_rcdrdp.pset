!prototype|P|||${AI_PSET}/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||rxclaim_orx.f_cdur_events
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||rxclaim_orx.f_cdur_events_rcdrdp
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_58a3e3f5_3570_2 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_58a3e3f5_3570_2 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.claim_match_ind,[transform],]\n  [out0.src_env_sk,[passthrough],in0.dxf_src_sys_id]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.fnlplandte,'fnlplandte',1,0]\n     [out0.rejcde3,'rejcde3',1,0]\n     [out0.phringrcst,'phringrcst',1,0]\n     [out0.clmseqnbr,'clmseqnbr',1,0]\n     [out0.prescriber,'prescriber',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.rejcde1,'rejcde1',1,0]\n     [out0.dayssupply,'dayssupply',1,0]\n     [out0.message1,'message1',1,0]\n     [out0.srvprovid,'srvprovid',1,0]\n     [out0.cltslstax,'cltslstax',1,0]\n     [out0.message3,'message3',1,0]\n     [out0.claim_match_ind,'claim_match_ind',1,0]\n     [out0.cltpatpay,'cltpatpay',1,0]\n     [out0.compoundcd,'compoundcd',1,0]\n     [out0.phrdispfee,'phrdispfee',1,0]\n     [out0.message2,'message2',1,0]\n     [out0.carrierid,'carrierid',1,0]\n     [out0.decimalqty,'decimalqty',1,0]\n     [out0.cltdueamt,'cltdueamt',1,0]\n     [out0.claimsts,'claimsts',1,0]\n     [out0.memberid,'memberid',1,0]\n     [out0.groupnbr,'groupnbr',1,0]\n     [out0.prodtypcde,'prodtypcde',1,0]\n     [out0.prsstate,'prsstate',1,0]\n     [out0.productid,'productid',1,0]\n     [out0.groupid,'groupid',1,0]\n     [out0.prescridql,'prescridql',1,0]\n     [out0.accountid,'accountid',1,0]\n     [out0.dtefilled,'dtefilled',1,0]\n     [out0.cardholder,'cardholder',1,0]\n     [out0.datesbm,'datesbm',1,0]\n     [out0.gpinumber,'gpinumber',1,0]\n     [out0.refill,'refill',1,0]\n     [out0.phrdueamt,'phrdueamt',1,0]\n     [out0.rxclaimnbr,'rxclaimnbr',1,0]\n     [out0.phrslstax,'phrslstax',1,0]\n     [out0.phrpatpay,'phrpatpay',1,0]\n     [out0.cltdispfee,'cltdispfee',1,0]\n     [out0.fnlplancde,'fnlplancde',1,0]\n     [out0.rejcde2,'rejcde2',1,0]\n     [out0.cltingrcst,'cltingrcst',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]\n     [out0.rxnumber,'rxnumber',1,0]\n  ]\n  impacts:\n  [\n     [in0.prescridql,'prescridql',1,1]\n     [in0.rejcde2,'rejcde2',1,1]\n     [in0.rxnumber,'rxnumber',1,1]\n     [in0.cardholder,'cardholder',1,1]\n     [in0.phrslstax,'phrslstax',1,1]\n     [in0.dxf_src_sys_id,'DXF Source System ID',2,2]\n     [in0.phrpatpay,'phrpatpay',1,1]\n     [in0.rxclaimnbr,'rxclaimnbr',1,1]\n     [in0.cltdispfee,'cltdispfee',1,1]\n     [in0.accountid,'accountid',1,1]\n     [in0.fnlplancde,'fnlplancde',1,1]\n     [in0.dtefilled,'dtefilled',1,1]\n     [in0.cltingrcst,'cltingrcst',1,1]\n     [in0.phrdueamt,'phrdueamt',1,1]\n     [in0.gpinumber,'gpinumber',1,1]\n     [in0.datesbm,'datesbm',1,1]\n     [in0.fnlplandte,'fnlplandte',1,1]\n     [in0.groupnbr,'groupnbr',1,1]\n     [in0.phringrcst,'phringrcst',1,1]\n     [in0.carrierid,'carrierid',1,1]\n     [in0.prsstate,'prsstate',1,1]\n     [in0.cltdueamt,'cltdueamt',1,1]\n     [in0.groupid,'groupid',1,1]\n     [in0.prescriber,'prescriber',1,1]\n     [in0.dayssupply,'dayssupply',1,1]\n     [in0.productid,'productid',1,1]\n     [in0.message2,'message2',1,1]\n     [in0.claimsts,'claimsts',1,1]\n     [in0.memberid,'memberid',1,1]\n     [in0.phrdispfee,'phrdispfee',1,1]\n     [in0.compoundcd,'compoundcd',1,1]\n     [in0.clmseqnbr,'clmseqnbr',1,1]\n     [in0.rejcde1,'rejcde1',1,1]\n     [in0.message1,'message1',1,1]\n     [in0.decimalqty,'decimalqty',1,1]\n     [in0.message3,'message3',1,1]\n     [in0.srvprovid,'srvprovid',1,1]\n     [in0.refill,'refill',1,1]\n     [in0.cltslstax,'cltslstax',1,1]\n     [in0.cltpatpay,'cltpatpay',1,1]\n     [in0.prodtypcde,'prodtypcde',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.rejcde3,'rejcde3',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet string("\\x01", maximum_length=1) claim_match_ind = "N";\nlet decimal("\\x01",0) src_env_sk = fail_if_error(in0.dxf_src_sys_id);\n\n\n\n  out0.claim_match_ind::claim_match_ind;\n  out0.src_env_sk::src_env_sk;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_58a3e3f5_3570_3 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_58a3e3f5_3570_3 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.rxclaimnbr,[passthrough],in0.d3p2nb]\n  [out0.clmseqnbr,[passthrough],in0.d3oinb]\n  [out0.claim_match_ind,[transform],]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.d3l3st,'d3l3st',1,0]\n     [out0.d3z5ha,'d3z5ha',1,0]\n     [out0.d3ithr,'d3ithr',1,0]\n     [out0.rxclaimnbr,'rxclaimnbr',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.d3bzik,'d3bzik',1,0]\n     [out0.d3l8st,'d3l8st',1,0]\n     [out0.d3aeda,'d3aeda',1,0]\n     [out0.d3alvn,'d3alvn',1,0]\n     [out0.d3l7st,'d3l7st',1,0]\n     [out0.d3l1st,'d3l1st',1,0]\n     [out0.d3abtm,'d3abtm',1,0]\n     [out0.d3iohr,'d3iohr',1,0]\n     [out0.d3jdhr,'d3jdhr',1,0]\n     [out0.clmseqnbr,'clmseqnbr',1,0]\n     [out0.d3c2dt,'d3c2dt',1,0]\n     [out0.d3jjnb,'d3jjnb',1,0]\n     [out0.d3iphr,'d3iphr',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.d3akvn,'d3akvn',1,0]\n     [out0.d3advn,'d3advn',1,0]\n     [out0.d3oinb,'d3oinb',1,0]\n     [out0.d3aevn,'d3aevn',1,0]\n     [out0.d3bmdt,'d3bmdt',1,0]\n     [out0.d3b0ik,'d3b0ik',1,0]\n     [out0.d3r2ip,'d3r2ip',1,0]\n     [out0.d3jgnb,'d3jgnb',1,0]\n     [out0.d3aeh6,'d3aeh6',1,0]\n     [out0.d3irhr,'d3irhr',1,0]\n     [out0.dxf_sk,'dxf_sk',1,0]\n     [out0.d3p2nb,'d3p2nb',1,0]\n     [out0.d3adtm,'d3adtm',1,0]\n     [out0.d3iqhr,'d3iqhr',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.d3lvtx,'d3lvtx',1,0]\n     [out0.d3afh6,'d3afh6',1,0]\n     [out0.d3ishr,'d3ishr',1,0]\n     [out0.d3nkcd,'d3nkcd',1,0]\n     [out0.d3l2st,'d3l2st',1,0]\n     [out0.claim_match_ind,'claim_match_ind',1,0]\n  ]\n  impacts:\n  [\n     [in0.d3l3st,'d3l3st',1,1]\n     [in0.d3ithr,'d3ithr',1,1]\n     [in0.d3z5ha,'d3z5ha',1,1]\n     [in0.d3bzik,'d3bzik',1,1]\n     [in0.d3l8st,'d3l8st',1,1]\n     [in0.d3aeda,'d3aeda',1,1]\n     [in0.d3alvn,'d3alvn',1,1]\n     [in0.d3l7st,'d3l7st',1,1]\n     [in0.d3l1st,'d3l1st',1,1]\n     [in0.d3jdhr,'d3jdhr',1,1]\n     [in0.d3iohr,'d3iohr',1,1]\n     [in0.d3abtm,'d3abtm',1,1]\n     [in0.d3jjnb,'d3jjnb',1,1]\n     [in0.d3c2dt,'d3c2dt',1,1]\n     [in0.d3iphr,'d3iphr',1,1]\n     [in0.d3akvn,'d3akvn',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.d3oinb,'d3oinb',2,2]\n     [in0.d3advn,'d3advn',1,1]\n     [in0.d3bmdt,'d3bmdt',1,1]\n     [in0.d3aevn,'d3aevn',1,1]\n     [in0.d3b0ik,'d3b0ik',1,1]\n     [in0.d3r2ip,'d3r2ip',1,1]\n     [in0.d3jgnb,'d3jgnb',1,1]\n     [in0.d3aeh6,'d3aeh6',1,1]\n     [in0.d3irhr,'d3irhr',1,1]\n     [in0.dxf_sk,'dxf_sk',1,1]\n     [in0.d3p2nb,'d3p2nb',2,2]\n     [in0.d3adtm,'d3adtm',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.d3iqhr,'d3iqhr',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.d3lvtx,'d3lvtx',1,1]\n     [in0.d3afh6,'d3afh6',1,1]\n     [in0.d3nkcd,'d3nkcd',1,1]\n     [in0.d3ishr,'d3ishr',1,1]\n     [in0.d3l2st,'d3l2st',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\001", maximum_length=16) rxclaimnbr = fail_if_error(in0.d3p2nb);\nlet decimal("\\001", maximum_length=4) clmseqnbr = fail_if_error(in0.d3oinb);\nlet string("\\x01", maximum_length=1) claim_match_ind = "N";\n\n\n\n  out0.rxclaimnbr::rxclaimnbr;\n  out0.clmseqnbr::clmseqnbr;\n  out0.claim_match_ind::claim_match_ind;\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{rxclaimnbr; clmseqnbr; src_env_sk}
LOOKUP_FIELDS_KEY||||{}
DRIVER_FILE_TYPE||||Clean
NON_DRIVER_1_SOURCE_NAME||||ids_rxclaim.rcdrdp
NON_DRIVER_1_OUTPUT_FIELDS||||dxf_sk,d3p2nb,d3oinb,d3jjnb,d3l7st,d3l1st,d3l2st,d3aeda,d3jgnb,d3l3st,d3l8st,d3lvtx,d3aeh6,d3afh6,d3jdhr,d3nkcd,d3iqhr,d3irhr,d3ithr,d3bzik,d3b0ik,d3ishr,d3z5ha,d3iohr,d3iphr,d3r2ip,d3akvn,d3c2dt,d3adtm,d3alvn,d3advn,d3bmdt,d3abtm,d3aevn,src_env_sk
JOIN_TYPE||||Inner Join with ICFF Lookup
JOIN_KEY||||{rxclaimnbr; clmseqnbr; src_env_sk}
DO_CLEAN||||1
DRIVER_OUTPUT_FIELDS||||rxclaimnbr,clmseqnbr,claimsts,carrierid,accountid,groupid,datesbm,dtefilled,rejcde1,rejcde2,rejcde3,phringrcst,phrdispfee,phrslstax,phrpatpay,phrdueamt,cltingrcst,cltdispfee,cltslstax,cltpatpay,cltdueamt,dayssupply,decimalqty,gpinumber,prescriber,prescridql,prsstate,memberid,cardholder,compoundcd,productid,prodtypcde,srvprovid,groupnbr,rxnumber,refill,message1,message2,message3,fnlplancde,fnlplandte,dxf_src_sys_id
ADDITIONAL_FIELDS_DML||||record\n  decimal("\\001", maximum_length=16) rxclaimnbr = NULL("");\n  decimal("\\001", maximum_length=4) clmseqnbr = NULL("");\n  string("\\x01", maximum_length=1) claim_match_ind;\nend
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_58ad3190_5841_4 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_58ad3190_5841_4 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_58ad3190_5841_3 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_58ad3190_5841_3 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_LEVEL_2_KEY||||{}
OVERRIDE_JOIN_LEVEL_3_KEY||||{}
NON_DRIVER_1_FILE_TYPE||||IDS
NON_DRIVER_1_FILTER_EXPR||||src_env_sk member [vector 480, 490]
JOIN_XFR:sandbox||||include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";\ninclude "~$PUB_DXF_XFR/common_functions.xfr";\ninclude "~$PUB_DXF_DML/generic_data_types.dml";\n\nlet lookup_identifier_type current_lookup = lookup_not_loaded(); \nlet string("") datafile = "/etl/data/dev//mfs/mfs_4way/aicoe/pub_datahub/lookup/rxclaim_bc/ids/ids_rxclaim/one/rcdrdp.dat.gz";\nlet string("") indexfile=this_partition_path(string_replace(datafile,".dat.gz", ".idx")); \ntype lookup_record_type = record\n  decimal("\\x01",maximum_length=5) dxf_src_sys_id = 0;\n  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;\n  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;\n  unsigned integer(8)  dxf_sk =  0 /*Added by Integration Framework. Surrogate key.*/;\n  decimal("\\x01", maximum_length=18) d3p2nb = NULL("");\n  decimal("\\x01", maximum_length=6) d3oinb = NULL("");\n  decimal("\\x01", maximum_length=6) d3jjnb = NULL("");\n  string("\\x01", maximum_length=2) d3l7st = NULL("");\n  string("\\x01", maximum_length=1) d3l1st = NULL("");\n  string("\\x01", maximum_length=1) d3l2st = NULL("");\n  decimal("\\x01", maximum_length=11) d3aeda = NULL("");\n  decimal("\\x01".3, maximum_length=18) d3jgnb = NULL("");\n  string("\\x01", maximum_length=1) d3l3st = NULL("");\n  string("\\x01", maximum_length=1) d3l8st = NULL("");\n  string("\\x01", maximum_length=30) d3lvtx = NULL("");\n  string("\\x01", maximum_length=1) d3aeh6 = NULL("");\n  string("\\x01", maximum_length=1) d3afh6 = NULL("");\n  decimal("\\x01", maximum_length=5) d3jdhr = NULL("");\n  string("\\x01", maximum_length=8) d3nkcd = NULL("");\n  decimal("\\x01", maximum_length=18) d3iqhr = NULL("");\n  decimal("\\x01", maximum_length=6) d3irhr = NULL("");\n  decimal("\\x01", maximum_length=5) d3ithr = NULL("");\n  decimal("\\x01", maximum_length=4) d3bzik = NULL("");\n  decimal("\\x01", maximum_length=4) d3b0ik = NULL("");\n  decimal("\\x01", maximum_length=5) d3ishr = NULL("");\n  string("\\x01", maximum_length=1) d3z5ha = NULL("");\n  decimal("\\x01", maximum_length=5) d3iohr = NULL("");\n  decimal("\\x01", maximum_length=5) d3iphr = NULL("");\n  string("\\x01", maximum_length=100) d3r2ip = NULL("");\n  string("\\x01", maximum_length=10) d3akvn = NULL("");\n  decimal("\\x01", maximum_length=10) d3c2dt = NULL("");\n  decimal("\\x01", maximum_length=9) d3adtm = NULL("");\n  string("\\x01", maximum_length=10) d3alvn = NULL("");\n  string("\\x01", maximum_length=10) d3advn = NULL("");\n  date("YYYYMMDD")("\\x01") d3bmdt = NULL("");\n  decimal("\\x01", maximum_length=9) d3abtm = NULL("");\n  string("\\x01", maximum_length=10) d3aevn = NULL("");\n  decimal("\\x01",0) src_env_sk = NULL("") /*BIGINT*/;\n  datetime("YYYYMMDDHH24MISS")("\\x01")   ids_create_dttm = NULL("");\n  string("\\x01", maximum_length=20)   ids_create_uid = NULL("");\n  decimal("\\x01",maximum_length=20)   ids_create_run_id =   0;\n  datetime("YYYYMMDDHH24MISS")("\\x01")   ids_updt_dttm = NULL("");\n  string("\\x01", maximum_length=20)   ids_updt_uid = NULL("");\n  decimal("\\x01",maximum_length=20)   ids_updt_run_id =   0;\n  string("\\x01",maximum_length=2)   ids_rec_stat_cd = NULL("");\n  string(1)  newline =  "\\n";\nend;\n;\n\nout::reformat(in)=\nbegin \n  let lookup_record_type lookup_record_value = allocate_with_nulls();\n  let lookup_record_type exact_record_value=allocate_with_defaults();\n  let lookup_record_type exact_next_record_value=allocate_with_nulls();\n\n  let hash_key_combine_type dxf_hk = reinterpret(hash_value(in, {rxclaimnbr; clmseqnbr; src_env_sk}, "murmur"));\n  let unsigned integer(8) dxf_hk_part1 = dxf_hk.dxf_hk_part1;\n  let unsigned integer(8) dxf_hk_part2 = dxf_hk.dxf_hk_part2;\n\n  let decimal("") match_count = 0 ;\n  if (current_lookup == lookup_not_loaded()) \n  current_lookup = lookup_load(this_partition_path(datafile) ,indexfile, "IDS_LKP_TPL"); \n\n  lookup_record_value = if (current_lookup != lookup_not_loaded() ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else allocate_with_defaults() ;\n  exact_record_value=allocate_with_defaults();\n  exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.\n                      else if  ( dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself \n                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .\n                      begin\n                        match_count=lookup_count(current_lookup, "IDS_LKP_TPL", dxf_hk_part1);\n                          begin block exact_record_match\n                             for (let int k, k < match_count)\n                               begin \n                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else lookup_previous(current_lookup,"IDS_LKP_TPL");\n                                 if ( dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) \n                                  begin\n                                        exact_record_value = exact_next_record_value;\n                                        exit  exact_record_match;\n                                  end\n                                                                                                 \n                             end\n                          end block exact_record_match\n                       result :: exact_record_value ;\n                       end;\n  out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  \n  out.claim_match_ind :: if( !is_null( exact_record_value) and exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) "N" else "Y" ;  \n  out.* :1: exact_record_value.*;  \n  out.* :2: in.* ;\nend ;
