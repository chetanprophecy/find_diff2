!prototype|P|||${AI_PSET}/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||ids_rxclaim.f_claim_trx_month
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||ids_rxclaim.f_claim_trx_month_s_clm_c632
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5aa14d87_121d_2 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5aa14d87_121d_2 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.clt_formulary_sk,'clt_formulary_sk',1,0]\n     [out0.ids_create_run_id,'ids_create_run_id',1,0]\n     [out0.ids_rec_stat_cd,'ids_rec_stat_cd',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.prior_auth_sk,'prior_auth_sk',1,0]\n     [out0.clt_formulary_flg,'clt_formulary_flg',1,0]\n     [out0.custom_client_ind,'custom_client_ind',1,0]\n     [out0.injectable_ind,'injectable_ind',1,0]\n     [out0.dxf_hk_part2,'dxf_hk_part2',1,0]\n     [out0.tier_level,'tier_level',1,0]\n     [out0.claim_nbr,'claim_nbr',1,0]\n     [out0.claim_origin_cd,'claim_origin_cd',1,0]\n     [out0.sbm_dt,'sbm_dt',1,0]\n     [out0.reported_gap_discount_amt,'reported_gap_discount_amt',1,0]\n     [out0.ntpn_ind,'ntpn_ind',1,0]\n     [out0.cag_sk,'cag_sk',1,0]\n     [out0.ids_create_dttm,'ids_create_dttm',1,0]\n     [out0.rxsol_formulary_sk,'rxsol_formulary_sk',1,0]\n     [out0.claim_seq_nbr,'claim_seq_nbr',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.prior_auth_id,'prior_auth_id',1,0]\n     [out0.mbr_sk,'mbr_sk',1,0]\n     [out0.dmr_ind,'dmr_ind',1,0]\n     [out0.injectable_ind_sk,'injectable_ind_sk',1,0]\n     [out0.dxf_hk_part1,'dxf_hk_part1',1,0]\n     [out0.claim_stat_id,'claim_stat_id',1,0]\n     [out0.ids_create_uid,'ids_create_uid',1,0]\n     [out0.newline,'newline',1,0]\n     [out0.ids_updt_uid,'ids_updt_uid',1,0]\n     [out0.rxsol_formulary_id,'rxsol_formulary_id',1,0]\n     [out0.dxf_sk,'dxf_sk',1,0]\n     [out0.ids_updt_run_id,'ids_updt_run_id',1,0]\n     [out0.claim_origination_code_sk,'claim_origination_code_sk',1,0]\n     [out0.risk_pool_sk,'risk_pool_sk',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.custom_client_ind_sk,'custom_client_ind_sk',1,0]\n     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]\n     [out0.client_cost_tier_amt,'client_cost_tier_amt',1,0]\n     [out0.risk_pool_id,'risk_pool_id',1,0]\n     [out0.dmr_ind_sk,'dmr_ind_sk',1,0]\n  ]\n  impacts:\n  [\n     [in0.dmr_ind,'dmr_ind',1,1]\n     [in0.rxsol_formulary_id,'rxsol_formulary_id',1,1]\n     [in0.claim_stat_id,'claim_stat_id',1,1]\n     [in0.prior_auth_id,'prior_auth_id',1,1]\n     [in0.ids_create_uid,'ids_create_uid',1,1]\n     [in0.tier_level,'tier_level',1,1]\n     [in0.newline,'newline',1,1]\n     [in0.claim_origination_code_sk,'claim_origination_code_sk',1,1]\n     [in0.sbm_dt,'sbm_dt',1,1]\n     [in0.ids_create_run_id,'ids_create_run_id',1,1]\n     [in0.custom_client_ind,'custom_client_ind',1,1]\n     [in0.custom_client_ind_sk,'custom_client_ind_sk',1,1]\n     [in0.clt_formulary_flg,'clt_formulary_flg',1,1]\n     [in0.cag_sk,'cag_sk',1,1]\n     [in0.client_cost_tier_amt,'client_cost_tier_amt',1,1]\n     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]\n     [in0.dxf_hk_part2,'dxf_hk_part2',1,1]\n     [in0.claim_nbr,'claim_nbr',1,1]\n     [in0.ids_updt_run_id,'ids_updt_run_id',1,1]\n     [in0.mbr_sk,'mbr_sk',1,1]\n     [in0.prior_auth_sk,'prior_auth_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.clt_formulary_sk,'clt_formulary_sk',1,1]\n     [in0.risk_pool_sk,'risk_pool_sk',1,1]\n     [in0.claim_origin_cd,'claim_origin_cd',1,1]\n     [in0.injectable_ind,'injectable_ind',1,1]\n     [in0.risk_pool_id,'risk_pool_id',1,1]\n     [in0.ids_rec_stat_cd,'ids_rec_stat_cd',1,1]\n     [in0.dxf_sk,'dxf_sk',1,1]\n     [in0.injectable_ind_sk,'injectable_ind_sk',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.dxf_hk_part1,'dxf_hk_part1',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.rxsol_formulary_sk,'rxsol_formulary_sk',1,1]\n     [in0.reported_gap_discount_amt,'reported_gap_discount_amt',1,1]\n     [in0.dmr_ind_sk,'dmr_ind_sk',1,1]\n     [in0.ids_create_dttm,'ids_create_dttm',1,1]\n     [in0.ntpn_ind,'ntpn_ind',1,1]\n     [in0.ids_updt_uid,'ids_updt_uid',1,1]\n     [in0.claim_seq_nbr,'claim_seq_nbr',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5aa14d87_121d_0 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5aa14d87_121d_0 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.claimsta,'claimsta',1,0]\n     [out0.sequnnbr,'sequnnbr',1,0]\n     [out0.claimnbr,'claimnbr',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.tcd_tier,'tcd_tier',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.fomlryst,'fomlryst',1,0]\n     [out0.filename,'filename',1,0]\n  ]\n  impacts:\n  [\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.fomlryst,'fomlryst',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.sequnnbr,'sequnnbr',1,1]\n     [in0.claimnbr,'claimnbr',1,1]\n     [in0.claimsta,'claimsta',1,1]\n     [in0.tcd_tier,'tcd_tier',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5aa14d87_121d_3 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5aa14d87_121d_3 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5aa14d87_121d_1 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5aa14d87_121d_1 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{claimnbr; sequnnbr; claimsta; src_env_sk}
OVERRIDE_JOIN_LEVEL_2_KEY||||{}
OVERRIDE_JOIN_LEVEL_3_KEY||||{}
LOOKUP_FIELDS_KEY||||{}
NON_DRIVER_1_SOURCE_NAME||||ids_rxclaim.s_clm_c632
NON_DRIVER_1_FILE_TYPE||||IDS
JOIN_TYPE||||Inner Join
DO_CLEAN||||1
JOIN_KEY||||{claim_nbr; claim_seq_nbr; claim_stat_id; src_env_sk}
DRIVER_OUTPUT_FIELDS||||dxf_src_sys_id,dxf_hk_part1,dxf_hk_part2,dxf_sk,claim_nbr,claim_seq_nbr,claim_stat_id,cag_sk,mbr_sk,injectable_ind_sk,clt_formulary_sk,risk_pool_sk,prior_auth_sk,rxsol_formulary_sk,dmr_ind_sk,custom_client_ind_sk,claim_origination_code_sk,injectable_ind,clt_formulary_flg,risk_pool_id,prior_auth_id,rxsol_formulary_id,claim_origin_cd,ntpn_ind,reported_gap_discount_amt,dmr_ind,custom_client_ind,sbm_dt,src_env_sk,tier_level,client_cost_tier_amt,injct_ind.injectable_ind,frmlry.formulary_id,risk_pool.risk_pool_id,prior_auth.prior_auth_id,rxsol_frmlry.rxsol_formulary_id,dmrind.dmr_ind,cst_clnt_ind.custom_client_ind,clm_orgn_cd.clam_origin_cd,ids_create_dttm,ids_create_uid,ids_create_run_id,ids_updt_dttm,ids_updt_uid,ids_updt_run_id,ids_rec_stat_cd,newline
NON_DRIVER_1_OUTPUT_FIELDS||||claimnbr,sequnnbr,claimsta,src_env_sk,tcd_tier,fomlryst
JOIN_XFR:sandbox||||$[\r\nbegin\r\n\r\nlet join_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \r\n                 ""\r\n               else \r\n                 make_transform("join", [vector make_arg("in0"), make_arg("in1")], [vector make_arg("out")]);\r\n                 \r\nlet rfmt_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \r\n                 make_transform("reformat", [vector make_arg("in")], [vector make_arg("out")])\r\n               else \r\n                 "";\r\n                 \r\nlet join_key = key_info(JOIN_KEY);\r\nlet override_join_key = key_info(OVERRIDE_JOIN_KEY);\r\n\r\nlet in_vec = for(let key in join_key) : "in." + key.field_name;\r\n\r\nlet string("") global_vars = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \r\n"let lookup_identifier_type sec_icff_id = lookup_load('" + NON_DRIVER_1_SEC_FILES_VEC[0] + "', '" + NON_DRIVER_1_SEC_INDEX_VEC[0] + "', 'LKP: DA SEC 1 Template');\r\nlet bc_lookup_address_type da_address =  allocate_with_defaults();\r\nlet decimal(\\"\\") match_found =  0;" \r\n                              else if(JOIN_TYPE member [vector "Left Outer Join with ICFF Lookup", "Inner Join with ICFF Lookup"]) \r\n'include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";\r\ninclude "~$PUB_DXF_XFR/common_functions.xfr";\r\ninclude "~$PUB_DXF_DML/generic_data_types.dml";\r\n\r\nlet lookup_identifier_type current_lookup = lookup_not_loaded(); \r\nlet string("") datafile = "' + NON_DRIVER_1_FILES_VEC[0] + '";\r\nlet string("") indexfile=this_partition_path(string_replace(datafile,".dat.gz", ".idx")); \r\ntype lookup_record_type = ' + read_file(NON_DRIVER_1_DML_FILE_NAME) + ';' else "";\r\n\r\nif(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) begin\r\n  rfmt_xfr = add_statement(rfmt_xfr, "  if(lookup_match(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ")) begin \r\n    da_address = lookup_last(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ").prim_da_address;\r\n    match_found = 1;\r\n  end\r\n  else begin\r\n    da_address = allocate_with_defaults();\r\n    match_found = 0;\r\n  end");\r\n  \r\n  for(let key in join_key) \r\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + key.field_name, "in." + key.field_name, 1)]);\r\n      \r\n  for(let field in string_split(NON_DRIVER_1_OUTPUT_FIELDS , ","))\r\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1)\r\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + field, "allocate_with_defaults()", 1)]);\r\n      \r\n  rfmt_xfr = add_rule(rfmt_xfr, "out.da_address", "da_address");\r\n  rfmt_xfr = add_rule(rfmt_xfr, "out.match_found", "match_found");\r\n  rfmt_xfr = add_rule(rfmt_xfr, "out.*", "in.*");\r\nend\r\nelse if(JOIN_TYPE member [vector "Left Outer Join with ICFF Lookup", "Inner Join with ICFF Lookup"]) begin\r\n  rfmt_xfr = 'out::reformat(in)=\r\nbegin \r\n  let lookup_record_type lookup_record_value = allocate_with_nulls();\r\n  let lookup_record_type exact_record_value=allocate_with_defaults();\r\n  let lookup_record_type exact_next_record_value=allocate_with_nulls();\r\n  \r\n  let unsigned integer(8) dxf_hk_part1 = in.dxf_hk_part1;\r\n  let unsigned integer(8) dxf_hk_part2 = in.dxf_hk_part2;\r\n\r\n  let decimal("") match_count = 0 ;\r\n  if (current_lookup == lookup_not_loaded()) \r\n  current_lookup = lookup_load(this_partition_path(datafile) ,indexfile, "IDS_LKP_TPL"); \r\n\r\n  lookup_record_value = if (current_lookup != lookup_not_loaded() ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else allocate_with_defaults() ;\r\n  exact_record_value=allocate_with_defaults();\r\n  exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.\r\n                      else if  ( dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself \r\n                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .\r\n                      begin\r\n                        match_count=lookup_count(current_lookup, "IDS_LKP_TPL", dxf_hk_part1);\r\n                          begin block exact_record_match\r\n                             for (let int k, k < match_count)\r\n                               begin \r\n                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else lookup_previous(current_lookup,"IDS_LKP_TPL");\r\n                                 if ( dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) \r\n                                  begin\r\n                                        exact_record_value = exact_next_record_value;\r\n                                        exit  exact_record_match;\r\n                                  end\r\n                                                                                                 \r\n                             end\r\n                          end block exact_record_match\r\n                       result :: exact_record_value ;\r\n                       end;\r\n  out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and exact_record_value.dxf_hk_part2==0 ) 0 else 1 ;  \r\n  out.dxf_hk_part1 :1: in.dxf_hk_part1;\r\n  out.dxf_hk_part2 :2: in.dxf_hk_part2;\\n' +   \r\n  string_join(for(let field in string_split(NON_DRIVER_1_OUTPUT_FIELDS , ",")) : \r\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1) "  out." + field + " :: exact_record_value." + field, ";\\n")\r\n  + ';\\n  out.* :4: in.* ;\r\nend ;';\r\nend\r\nelse  begin\r\n  if(join_key != override_join_key)\r\n    for(let key in join_key) \r\n      if(key.field_name != override_join_key[index_of(key)].field_name)\r\n        join_xfr = add_rules(join_xfr, [vector make_rule("out." + key.field_name, "in0." + key.field_name, 1)\r\n                                          ,make_rule("out." + key.field_name, "in1." + override_join_key[index_of(key)].field_name, 2)\r\n                                          ]);\r\n   \r\n  join_xfr = add_rules(join_xfr, [vector make_rule("out.*", "in0.*", 1)\r\n                                          ,make_rule("out.*", "in1.*", 2)\r\n                                          ]);\r\nend\r\n\r\nresult :: if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF", "Left Outer Join with ICFF Lookup", "Inner Join with ICFF Lookup"]) global_vars + "\\r\\n\\r\\n" + rfmt_xfr \r\n          else global_vars + "\\r\\n\\r\\n" + join_xfr;\r\n\r\nend\r\n]
DRIVER_FILE_TYPE||||IDS
DRIVER_PRE_DEDUP_FILTER||||src_env_sk == 490
DRIVER_FILTER_EXPR||||src_env_sk == 490
NON_DRIVER_1_ILM_NAME||||s_clm_c632
