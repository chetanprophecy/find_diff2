!prototype|P|||$AI_PSET/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||rxclaim.f_clm_pln_mbrelad_crfcad
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||rxclaim.f_clm_pln_mbrelad_crfcad_phad
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_586f9755_31c3_2 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_586f9755_31c3_2 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.mbr_sk,'mbr_sk',1,0]\n     [out0.group_sic,'group_sic',1,0]\n     [out0.grp_clt_ben_cd,'grp_clt_ben_cd',1,0]\n     [out0.acct_benefit_cd,'acct_benefit_cd',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.care_fac_id,'care_fac_id',1,0]\n     [out0.d_cag.account_id,'d_cag.account_id',1,0]\n     [out0.filled_dt,'filled_dt',1,0]\n     [out0.gender_sk,'gender_sk',1,0]\n     [out0.clt_prod_cd,'clt_prod_cd',1,0]\n     [out0.cag_sk,'cag_sk',1,0]\n     [out0.perd_start_dt,'perd_start_dt',1,0]\n     [out0.pln_qlfr_cd_sk,'pln_qlfr_cd_sk',1,0]\n     [out0.d_mbr.mbr_id,'d_mbr.mbr_id',1,0]\n     [out0.d_cag.carrier_id,'d_cag.carrier_id',1,0]\n     [out0.care_fac_adjud_sk,'care_fac_adjud_sk',1,0]\n     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]\n     [out0.phr_adjud_sk,'phr_adjud_sk',1,0]\n     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]\n     [out0.newline,'newline',1,0]\n     [out0.dxf_src_file_name,'DXF Source File Name',1,0]\n     [out0.recent_clm_flg,'recent_clm_flg',1,0]\n     [out0.final_pln_sk,'final_pln_sk',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.d_cag.employer_group_id,'d_cag.employer_group_id',1,0]\n     [out0.mbr_eligty_adjud_sk,'mbr_eligty_adjud_sk',1,0]\n     [out0.relationship_cd_sk,'relationship_cd_sk',1,0]\n     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]\n     [out0.clt_rdr_cd,'clt_rdr_cd',1,0]\n     [out0.age_band_sk,'age_band_sk',1,0]\n  ]\n  impacts:\n  [\n     [in0.group_sic,'group_sic',1,1]\n     [in0.mbr_sk,'mbr_sk',1,1]\n     [in0.relationship_cd_sk,'relationship_cd_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.grp_clt_ben_cd,'grp_clt_ben_cd',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.perd_start_dt,'perd_start_dt',1,1]\n     [in0.d_cag.account_id,'account_id',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.care_fac_id,'care_fac_id',1,1]\n     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]\n     [in0.clt_prod_cd,'clt_prod_cd',1,1]\n     [in0.d_cag.employer_group_id,'employer_group_id',1,1]\n     [in0.d_cag.carrier_id,'carrier_id',1,1]\n     [in0.cag_sk,'cag_sk',1,1]\n     [in0.filled_dt,'filled_dt',1,1]\n     [in0.gender_sk,'gender_sk',1,1]\n     [in0.clt_rdr_cd,'clt_rdr_cd',1,1]\n     [in0.dxf_src_file_name,'DXF Source File Name',1,1]\n     [in0.newline,'newline',1,1]\n     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]\n     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]\n     [in0.pln_qlfr_cd_sk,'pln_qlfr_cd_sk',1,1]\n     [in0.phr_adjud_sk,'phr_adjud_sk',1,1]\n     [in0.care_fac_adjud_sk,'care_fac_adjud_sk',1,1]\n     [in0.mbr_eligty_adjud_sk,'mbr_eligty_adjud_sk',1,1]\n     [in0.d_mbr.mbr_id,'mbr_id',1,1]\n     [in0.final_pln_sk,'final_pln_sk',1,1]\n     [in0.recent_clm_flg,'recent_clm_flg',1,1]\n     [in0.acct_benefit_cd,'acct_benefit_cd',1,1]\n     [in0.age_band_sk,'age_band_sk',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_586f9755_31c3_3 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_586f9755_31c3_3 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.phr_adjud_sk,[passthrough],in0.dxf_sk]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.phr_adjud_sk,'phr_adjud_sk',1,0]\n     [out0.phr_super_carr_nm,'phr_super_carr_nm',1,0]\n     [out0.filename,'filename',1,0]\n  ]\n  impacts:\n  [\n     [in0.dxf_sk,'dxf_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.phr_super_carr_nm,'phr_super_carr_nm',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\x01",0) phr_adjud_sk = fail_if_error(in0.dxf_sk);\n\n\n\n  out0.phr_adjud_sk::phr_adjud_sk;\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{phr_adjud_sk}
LOOKUP_FIELDS_KEY||||{}
NON_DRIVER_1_ILM_NAME||||
NON_DRIVER_1_SOURCE_NAME||||ids_common.d_pharmacy_adjud
JOIN_TYPE||||Inner Join
JOIN_KEY||||{phr_adjud_sk}
NON_DRIVER_1_OUTPUT_FIELDS||||phr_adjud_sk,phr_super_carr_nm
DO_SOURCE||||0
ADDITIONAL_FIELDS_DML||||record\n  decimal("\\x01") age = NULL("");\nend
DRIVER_FILE_TYPE||||Source
DO_CLEAN||||1
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_58afe9e9_677a_1 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_58afe9e9_677a_1 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.mbr_sk,[passthrough],in0.dxf_sk]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.employer_group_id,'employer_group_id',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.mbr_dt_of_brth,'mbr_dt_of_brth',1,0]\n     [out0.carrier_id,'carrier_id',1,0]\n     [out0.account_id,'account_id',1,0]\n     [out0.mbr_id,'mbr_id',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.mbr_sk,'mbr_sk',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n  ]\n  impacts:\n  [\n     [in0.account_id,'account_id',1,1]\n     [in0.employer_group_id,'employer_group_id',1,1]\n     [in0.carrier_id,'carrier_id',1,1]\n     [in0.mbr_id,'mbr_id',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.mbr_dt_of_brth,'mbr_dt_of_brth',1,1]\n     [in0.dxf_sk,'dxf_sk',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\x01",0) mbr_sk = fail_if_error(in0.dxf_sk);\n\n\n\n  out0.mbr_sk::mbr_sk;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_58afe9e9_677a_0 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_58afe9e9_677a_0 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.age_band_sk,[passthrough],in0.dxf_sk]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.age,'age',1,0]\n     [out0.age_band_sk,'age_band_sk',1,0]\n  ]\n  impacts:\n  [\n     [in0.dxf_sk,'dxf_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.age,'age',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\x01",0) age_band_sk = fail_if_error(in0.dxf_sk);\nlet decimal("\\x01") age = fail_if_error(in0.age);\n\n\n\n  out0.age_band_sk::age_band_sk;\n  out0.age::age;\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_LEVEL_2_KEY||||{carrier_id; account_id; employer_group_id; mbr_id}
OVERRIDE_JOIN_LEVEL_3_KEY||||{age}
ENABLE_JOIN_LEVEL_2||||1
NON_DRIVER_2_SOURCE_NAME||||ids_common.d_member
NON_DRIVER_2_OUTPUT_FIELDS||||mbr_dt_of_brth,carrier_id,account_id,employer_group_id,mbr_id,mbr_sk
JOIN_LEVEL_2_KEY||||{d_cag.carrier_id; d_cag.account_id; d_cag.employer_group_id; d_mbr.mbr_id}
JOIN_LEVEL_2_TYPE||||Inner Join with ICFF Lookup
ENABLE_JOIN_LEVEL_3||||1
NON_DRIVER_3_SOURCE_NAME||||ids_rxclaim.l_age_band
NON_DRIVER_3_OUTPUT_FIELDS||||age_band_sk
JOIN_LEVEL_3_TYPE||||Inner Join
JOIN_LEVEL_3_KEY||||{age}
DRIVER_OUTPUT_FIELDS||||
JOIN_LEVEL_2_XFR:sandbox||||include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";\ninclude "~$PUB_DXF_XFR/common_functions.xfr";\ninclude "~$PUB_DXF_DML/generic_data_types.dml";\n\nlet lookup_identifier_type current_lookup = lookup_not_loaded(); \nlet string("") datafile = $"PUB_DATAHUB_MFS_LOOKUP" + "/ids/ids_common/one/d_member.dat.gz";\nlet string("") indexfile=this_partition_path(string_replace(datafile,".dat.gz", ".idx")); \ntype lookup_record_type = /* DML Generated by IDS Table DML Onboarding Process for table: ids_common.d_member\n * On: THU JUN 30 2016 05:04:51\n */\n\nrecord\n  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;\n  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;\n  integer(8)  dxf_sk =  0 /*Added by Integration Framework. Surrogate key.*/;\n  decimal("\\x01",0)   mbr_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01",0)   cag_sk = NULL("") /*BIGINT*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=30)   carrier_id = NULL("") /*VARCHAR(30)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=40)   account_id = NULL("") /*VARCHAR(40)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=30)   employer_group_id = NULL("") /*VARCHAR(30)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=20)   mbr_id = NULL("") /*VARCHAR(20)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=50)   clt_id = NULL("") /*VARCHAR(50)*/;\n  decimal("\\x01",0)   mast_prsn_id = NULL("") /*BIGINT*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=20)   mbr_fam_id = NULL("") /*VARCHAR(20)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_alt_ins_ind = NULL("") /*CHAR(1)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=10)   mbr_alt_ins_id = NULL("") /*VARCHAR(10)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=20)   mbr_alt_ins_mbr_id = NULL("") /*VARCHAR(20)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=10)   mbr_ssn_nbr = NULL("") /*VARCHAR(10)*/;\n  date("YYYYMMDD")("\\x01")   mbr_dt_of_brth = NULL("") /*DATE*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=20)   mbr_hic_cd = NULL("") /*VARCHAR(20)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=25)   mb_first_nm = NULL("") /*VARCHAR(25)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=35)   mb_last_nm = NULL("") /*VARCHAR(35)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mb_mid_init_nm = NULL("") /*CHAR(1)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=3)   mbr_prsn_cd = NULL("") /*VARCHAR(3)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_relshp_cd = NULL("") /*CHAR(1)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=6)   mbr_rdr = NULL("") /*VARCHAR(6)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_sex = NULL("") /*CHAR(1)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=30)   mbr_city_nm = NULL("") /*VARCHAR(30)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=3)   mbr_st_cd = NULL("") /*VARCHAR(3)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=15)   mbr_zip = NULL("") /*VARCHAR(15)*/;\n  date("YYYYMMDD")("\\x01")   mbr_mcre_covrg_from_dt = NULL("") /*DATE*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=60)   mbr_addr1 = NULL("") /*VARCHAR(60)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=60)   mbr_addr2 = NULL("") /*VARCHAR(60)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=60)   mbr_addr3 = NULL("") /*VARCHAR(60)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=5)   mbr_zip2 = NULL("") /*VARCHAR(5)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=5)   mbr_zip4 = NULL("") /*VARCHAR(5)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=4)   mbr_cntry = NULL("") /*VARCHAR(4)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=15)   mbr_phone = NULL("") /*VARCHAR(15)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=80)   mbr_eml_addr = NULL("") /*VARCHAR(80)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_mcre_covrg_typ = NULL("") /*CHAR(1)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_fam_typ_cd = NULL("") /*CHAR(1)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_fam_ind = NULL("") /*CHAR(1)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=18)   mbr_dur_keyvar = NULL("") /*CHAR(18)*/;\n  date("YYYYMMDD")("\\x01")   mbr_ben_reset_dt = NULL("") /*DATE*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=3)   mbr_lang_cd = NULL("") /*VARCHAR(3)*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_dur_prcs_flag = NULL("") /*CHAR(1)*/;\n  decimal("\\x01",0)   mbr_mltpl_brth_cd = NULL("") /*BYTEINT*/;\n  date("YYYYMMDD")("\\x01") mbr_orig_eff_dt = NULL("") /*DATE*/;\n  string("\\x01",charset="iso-8859-15", maximum_length=1)   mbr_typ = NULL("") /*CHAR(1)*/;\n  decimal("\\x01",0)   src_env_sk = NULL("") /*BIGINT*/;\n  decimal("\\x01", maximum_length=5)   dxf_src_sys_id =   0;\n  datetime("YYYYMMDDHH24MISS")("\\x01")   ids_create_dttm = NULL("");\n  string("\\x01", maximum_length=20)   ids_create_uid = NULL("");\n  decimal("\\x01",maximum_length=20)   ids_create_run_id =   0;\n  datetime("YYYYMMDDHH24MISS")("\\x01")   ids_updt_dttm = NULL("");\n  string("\\x01", maximum_length=20)   ids_updt_uid = NULL("");\n  decimal("\\x01",maximum_length=20)   ids_updt_run_id =   0;\n  string("\\x01",maximum_length=2)   ids_rec_stat_cd = NULL("");\n  string(1)  newline =  "\\n";\nend\n;\n;\n\nout::reformat(in)=\nbegin \n  let lookup_record_type lookup_record_value = allocate_with_nulls();\n  let lookup_record_type exact_record_value=allocate_with_defaults();\n  let lookup_record_type exact_next_record_value=allocate_with_nulls();\n  \n  let unsigned integer(8) dxf_hk_part1 = in.dxf_hk_part1;\n  let unsigned integer(8) dxf_hk_part2 = in.dxf_hk_part2;\n\n  let decimal("") match_count = 0 ;\n  if (current_lookup == lookup_not_loaded()) \n  current_lookup = lookup_load(this_partition_path(datafile) ,indexfile, "IDS_LKP_TPL_LEVEL_2"); \n\n  lookup_record_value = if (current_lookup != lookup_not_loaded() ) lookup_last(current_lookup, "IDS_LKP_TPL_LEVEL_2", dxf_hk_part1) else allocate_with_defaults() ;\n  exact_record_value=allocate_with_defaults();\n  exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.\n                      else if  ( dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself \n                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .\n                      begin\n                        match_count=lookup_count(current_lookup, "IDS_LKP_TPL_LEVEL_2", dxf_hk_part1);\n                          begin block exact_record_match\n                             for (let int k, k < match_count)\n                               begin \n                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup, "IDS_LKP_TPL_LEVEL_2", dxf_hk_part1) else lookup_previous(current_lookup,"IDS_LKP_TPL_LEVEL_2");\n                                 if ( dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) \n                                  begin\n                                        exact_record_value = exact_next_record_value;\n                                        exit  exact_record_match;\n                                  end\n                                                                                                 \n                             end\n                          end block exact_record_match\n                       result :: exact_record_value ;\n                       end;\n  out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and exact_record_value.dxf_hk_part2==0 ) 0 else 1 ;  \n  out.dxf_hk_part1 :1: in.dxf_hk_part1;\n  out.dxf_hk_part2 :2: in.dxf_hk_part2;\n  out.mbr_dt_of_brth :: exact_record_value.mbr_dt_of_brth;\n  out.age :: decimal_round(math_abs(date_difference_months(exact_record_value.mbr_dt_of_brth, in.perd_start_dt )/12),0);\n  out.* :4: in.* ;\nend ;
JOIN_LEVEL_3_XFR:sandbox||||out :: join(in0, in1)=\nbegin\n  out.age_band_sk :1: in1.age_band_sk;\n  out.age_band_sk :2: -1;\n  out.* :1: in0.*;\n  out.* :2: in1.*;\nend
