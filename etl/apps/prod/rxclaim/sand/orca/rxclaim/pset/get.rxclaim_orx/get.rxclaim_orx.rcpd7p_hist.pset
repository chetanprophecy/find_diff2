!prototype|P|||$AI_PSET/get.iseries.interim.pset
QUERY_TYPE_ID||||2
SOURCE_NAME||||clmprdfil_bk1.rcpd7p_hist
SOURCE_SYSTEM_OVERRIDE||||rxclaim_orx
SOURCE_TABLE_LIST||||# Schema Name  Unqualified Table Name  Fields\nclmprdext2_bk1 rcex1p                  claimsts\nclmprdfil_bk1  rcpd7p                  asp2nb,asoinb,asd9hs,asi6h9,asokhc,asm1ih,asochc,astshx,asrgh9,asrhh9,asrih9,asukh9,asoxhg,asb2io,asfihs,asalhy,asamhy,asf1qu,asf2qu,asb3hd,asc9hk,asfjhs,aso4ic,asxzqv,asx0qv,asakvn,asc2dt,asadtm,asalvn,asadvn,asbmdt,asabtm,asaevn
SOURCE_DB_LIST||||$[get_matching_db_list(AI_SOURCE_DB_LIST, AI_SOURCE_DB_GROUPS, 'clmprdext2_bk1', 'clmprdext2_bk1.rcex1p') + "\\r\\n" + get_matching_db_list(AI_SOURCE_DB_LIST, AI_SOURCE_DB_GROUPS, 'clmprdfil_bk1', 'clmprdfil_bk1.rcpd7p')]
DO_SOURCE||||0
DO_CLEAN||||1
WHERE_CLAUSE||||$[ \n\t\t"WHERE  RCEX1P.RXCLAIMNBR = RCPD7P.ASP2NB\tAND RCEX1P.CLMSEQNBR = RCPD7P.ASOINB \n\t\tAND TRIM(RCEX1P.CARRIERID) IS NOT NULL  AND TRIM(RCEX1P.CARRIERID) != '' AND TRIM(RCEX1P.CARRIERID) != 'JILL' AND RCEX1P.CARRIERID  NOT LIKE '%TEST%'\n\t\tAND (TRIM(RCEX1P.CLMORIGIN)  IN ('T', 'M', 'B', 'R' ,'A','I','J')  \n\t\t\t  AND ( (RCEX1P.SBMSRVPRID NOT IN ('1718634', '0556540', '1497704431', '1669498515') \n\t\t\t\tAND RCEX1P.SRVPROVID NOT IN ('1718634', '0556540', '1497704431', '1669498515')) \n\t\t\t\tOR (DECIMAL(RCEX1P.RXNUMBER) >= 10000) ))" +\n\t\t" OPTIMIZE FOR ALL ROWS"\n\t]
END_CHANGES_TIME||||$[ (string(""))(datetime("YYYY-MM-DD HH24:MI:SS")) (date("YYYY-MM-DD"))(today() - 1)]
DO_PUBLISH_CLEAN_FILE||||0
ALTERNATE_SOURCE||||$[ string_concat("rce", (string(""))(datetime("CYYMM"))(datetime('YYYYMMDD'))(datetime('YYYY-MM-DD HH24:MI:SS'))START_CHANGES_TIME)]
FROM_CLAUSE_VEC||||$[ \r\nbegin\r\n\r\nlet string("")[int] from_clause_vec = [vector];\r\nlet decimal("")[int] indexes = [vector];\r\nlet decimal("") curr_table_index = -1;\r\nlet string("")[int] from_clause = [vector];\r\n\r\nif(QUERY_TYPE_ID == "1")\r\n    from_clause_vec = for ( let db in SOURCE_DB_INFO_VEC ) : "  FROM " + string_join(\r\n     for ( let tbl in SOURCE_TABLE_INFO_VEC ) :      \r\n        if ( tbl.table_name member ONLY_IN_FIRST_DB_TABLE_VEC )\r\n          SOURCE_DB_INFO_VEC[0].physical_schema + "." + tbl.table_name + tbl.sql_alias\r\n        else\r\n          db.physical_schema + "." + tbl.table_name + tbl.sql_alias,\r\n    "\\n     , ");\r\nelse if(QUERY_TYPE_ID == "2") begin\r\n    \r\n    for ( let db in SOURCE_DB_INFO_VEC ) \r\n     for(let sys in SOURCE_TABLE_INFO_VEC) \r\n       if(db.logical_schema == sys.schema_name) indexes = vector_append(indexes,index_of(db));\r\n\r\n    for ( let i = 0 , i < length_of(SOURCE_DB_INFO_VEC)/length_of(SOURCE_TABLE_INFO_VEC) ) begin\r\n      from_clause = [vector];\r\n      for ( let tbl in SOURCE_TABLE_INFO_VEC ) begin\r\n        curr_table_index = index_of(tbl);\r\n\r\n      if ( DAILY_FLAG== 'N' and tbl.table_name == "rcex1p" and !is_blank(ALTERNATE_SOURCE) )\r\n          from_clause = vector_append(from_clause, SOURCE_DB_INFO_VEC[indexes[curr_table_index] + i].physical_schema + "." + ALTERNATE_SOURCE + tbl.sql_alias);\r\n       else if ( tbl.table_name member ONLY_IN_FIRST_DB_TABLE_VEC ) \r\n          from_clause = vector_append(from_clause, SOURCE_DB_INFO_VEC[indexes[curr_table_index]].physical_schema + "." + tbl.table_name + tbl.sql_alias);\r\n       else if (string_like(SOURCE_DB_INFO_VEC[indexes[curr_table_index] + i].physical_schema,'%nvm%') and  tbl.table_name == "rcex1p" and DAILY_FLAG== 'Y'  )\r\n          from_clause = vector_append(from_clause, SOURCE_DB_INFO_VEC[indexes[curr_table_index] + i].physical_schema + "." + ALTERNATE_SOURCE + tbl.sql_alias);\r\n       else \r\n          from_clause = vector_append(from_clause, SOURCE_DB_INFO_VEC[indexes[curr_table_index] + i].physical_schema + "." + tbl.table_name + tbl.sql_alias);\r\n      end\r\n      from_clause_vec = vector_append(from_clause_vec, "  FROM " + string_join(from_clause, "\\n     , "));\r\n    end\r\nend\r\nelse if(QUERY_TYPE_ID == "3") from_clause_vec = [vector];\r\nresult :: from_clause_vec;\r\nend\r\n\r\n\r\n]
RUN_ID||||20180831000001
