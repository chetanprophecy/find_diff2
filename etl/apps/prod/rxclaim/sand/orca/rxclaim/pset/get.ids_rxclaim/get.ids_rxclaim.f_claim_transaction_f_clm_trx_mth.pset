!prototype|P|||${AI_PSET}/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||ids_rxclaim.f_claim_transaction
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||ids_rxclaim.f_claim_transaction_f_clm_trx_mth
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_599e85b0_344c_2 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_599e85b0_344c_2 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.clt_formulary_sk,'clt_formulary_sk',1,0]\n     [out0.ids_rec_stat_cd,'ids_rec_stat_cd',1,0]\n     [out0.dsg_frm_sk,'dsg_frm_sk',1,0]\n     [out0.orig_cag_sk,'orig_cag_sk',1,0]\n     [out0.dxf_hk_part2,'dxf_hk_part2',1,0]\n     [out0.cost_basis_sk,'cost_basis_sk',1,0]\n     [out0.rej_cd1_sk,'rej_cd1_sk',1,0]\n     [out0.tier_level,'tier_level',1,0]\n     [out0.cal_cost_src_cd,'cal_cost_src_cd',1,0]\n     [out0.rej_cd8_sk,'rej_cd8_sk',1,0]\n     [out0.sbm_dt,'sbm_dt',1,0]\n     [out0.app_prof_svc_fee,'app_prof_svc_fee',1,0]\n     [out0.app_patient_pay_amt,'app_patient_pay_amt',1,0]\n     [out0.basis_of_reim_cd,'basis_of_reim_cd',1,0]\n     [out0.cal_admin_fee,'cal_admin_fee',1,0]\n     [out0.filled_dt,'filled_dt',1,0]\n     [out0.drug_maint_cd_sk,'drug_maint_cd_sk',1,0]\n     [out0.pst_patient_pay_amt,'pst_patient_pay_amt',1,0]\n     [out0.ids_create_dttm,'ids_create_dttm',1,0]\n     [out0.rej_cd5_sk,'rej_cd5_sk',1,0]\n     [out0.formulary_flg,'formulary_flg',1,0]\n     [out0.pst_prof_svc_fee,'pst_prof_svc_fee',1,0]\n     [out0.phr_pmt_cntr_sk,'phr_pmt_cntr_sk',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.mbr_sk,'mbr_sk',1,0]\n     [out0.sbm_sales_tax_paid,'sbm_sales_tax_paid',1,0]\n     [out0.prod_sk,'prod_sk',1,0]\n     [out0.cal_patient_pay_amt,'cal_patient_pay_amt',1,0]\n     [out0.cal_prof_svc_fee,'cal_prof_svc_fee',1,0]\n     [out0.claim_seq_nbr_src,'claim_seq_nbr_src',1,0]\n     [out0.drug_sk,'drug_sk',1,0]\n     [out0.rej_cd10_sk,'rej_cd10_sk',1,0]\n     [out0.dxf_src_file_name,'DXF Source File Name',1,0]\n     [out0.rsp_dispensing_fee,'rsp_dispensing_fee',1,0]\n     [out0.carrier_sk,'carrier_sk',1,0]\n     [out0.sbm_tm,'sbm_tm',1,0]\n     [out0.dxf_sk,'dxf_sk',1,0]\n     [out0.clt_sales_tax_paid,'clt_sales_tax_paid',1,0]\n     [out0.drug_rx_otc_ind_sk,'drug_rx_otc_ind_sk',1,0]\n     [out0.risk_pool_id,'risk_pool_id',1,0]\n     [out0.rej_cd9_sk,'rej_cd9_sk',1,0]\n     [out0.pbr_sk,'pbr_sk',1,0]\n     [out0.rej_cd3_sk,'rej_cd3_sk',1,0]\n     [out0.ids_create_run_id,'ids_create_run_id',1,0]\n     [out0.sbm_due_amt,'sbm_due_amt',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.cms_contract_id,'cms_contract_id',1,0]\n     [out0.sbm_ingred_cost_paid,'sbm_ingred_cost_paid',1,0]\n     [out0.clt_copay_amt,'clt_copay_amt',1,0]\n     [out0.clt_due_amt,'clt_due_amt',1,0]\n     [out0.low_day_supl_ind,'low_day_supl_ind',1,0]\n     [out0.rsp_patient_pay_amt,'rsp_patient_pay_amt',1,0]\n     [out0.clt_ingred_cost_paid,'clt_ingred_cost_paid',1,0]\n     [out0.tot_troop_amt,'tot_troop_amt',1,0]\n     [out0.rsp_prof_svc_fee,'rsp_prof_svc_fee',1,0]\n     [out0.claim_seq_nbr,'claim_seq_nbr',1,0]\n     [out0.rxsol_formulary_sk,'rxsol_formulary_sk',1,0]\n     [out0.rej_cd4_sk,'rej_cd4_sk',1,0]\n     [out0.cal_dispensing_fee,'cal_dispensing_fee',1,0]\n     [out0.admin_rte_sk,'admin_rte_sk',1,0]\n     [out0.injectable_ind_sk,'injectable_ind_sk',1,0]\n     [out0.awp_unit_cost,'awp_unit_cost',1,0]\n     [out0.gnrc_mdspn_ind_sk,'gnrc_mdspn_ind_sk',1,0]\n     [out0.ahfs_cd_sk,'ahfs_cd_sk',1,0]\n     [out0.newline,'newline',1,0]\n     [out0.claim_cntr,'claim_cntr',1,0]\n     [out0.app_dispensing_fee,'app_dispensing_fee',1,0]\n     [out0.pst_dispensing_fee,'pst_dispensing_fee',1,0]\n     [out0.drg_qty,'drg_qty',1,0]\n     [out0.gpi_sk,'gpi_sk',1,0]\n     [out0.extd_awp_cost,'extd_awp_cost',1,0]\n     [out0.drg_spend_amt,'drg_spend_amt',1,0]\n     [out0.processing_month_start_dt,'processing_month_start_dt',1,0]\n     [out0.cob_ind_sk,'cob_ind_sk',1,0]\n     [out0.sbm_patient_pay_amt,'sbm_patient_pay_amt',1,0]\n     [out0.claim_stat_sk,'claim_stat_sk',1,0]\n     [out0.sbm_prof_svc_fee,'sbm_prof_svc_fee',1,0]\n     [out0.clt_amt_covrg_gap,'clt_amt_covrg_gap',1,0]\n     [out0.cal_sales_tax_paid,'cal_sales_tax_paid',1,0]\n     [out0.refill_nbr,'refill_nbr',1,0]\n     [out0.rej_cnt,'rej_cnt',1,0]\n     [out0.rsp_copay_amt,'rsp_copay_amt',1,0]\n     [out0.claim_origin_cd,'claim_origin_cd',1,0]\n     [out0.pbr_adjud_sk,'pbr_adjud_sk',1,0]\n     [out0.clt_prof_svc_fee,'clt_prof_svc_fee',1,0]\n     [out0.rsp_ingred_cost_paid,'rsp_ingred_cost_paid',1,0]\n     [out0.clt_patient_pay_amt,'clt_patient_pay_amt',1,0]\n     [out0.adherence_incnt_reduction_amt,'adherence_incnt_reduction_amt',1,0]\n     [out0.cag_sk,'cag_sk',1,0]\n     [out0.days_sply,'days_sply',1,0]\n     [out0.rsp_due_amt,'rsp_due_amt',1,0]\n     [out0.rej_cd6_sk,'rej_cd6_sk',1,0]\n     [out0.pbr_spclty_sk,'pbr_spclty_sk',1,0]\n     [out0.clt_attrib_prod_sel_amt,'clt_attrib_prod_sel_amt',1,0]\n     [out0.rej_cd7_sk,'rej_cd7_sk',1,0]\n     [out0.gnrc_ind_sk,'gnrc_ind_sk',1,0]\n     [out0.dxf_src_dataset_id,'DXF Source Dataset ID',1,0]\n     [out0.clt_other_payer_amt,'clt_other_payer_amt',1,0]\n     [out0.wac_unit_cost,'wac_unit_cost',1,0]\n     [out0.zero_balance_ind,'zero_balance_ind',1,0]\n     [out0.manl_claim_trk_dt_sk,'manl_claim_trk_dt_sk',1,0]\n     [out0.app_sales_tax_paid,'app_sales_tax_paid',1,0]\n     [out0.fmly_type_sk,'fmly_type_sk',1,0]\n     [out0.pst_sales_tax_paid,'pst_sales_tax_paid',1,0]\n     [out0.troop_amt,'troop_amt',1,0]\n     [out0.filled_yr_mnth,'filled_yr_mnth',1,0]\n     [out0.co_insurance_amt,'co_insurance_amt',1,0]\n     [out0.rx_written_dt,'rx_written_dt',1,0]\n     [out0.phr_state_cd_sk,'phr_state_cd_sk',1,0]\n     [out0.orig_member_id,'orig_member_id',1,0]\n     [out0.hm_dlvry_ind_sk,'hm_dlvry_ind_sk',1,0]\n     [out0.pst_copay_amt,'pst_copay_amt',1,0]\n     [out0.sbm_mn_id,'sbm_mn_id',1,0]\n     [out0.app_copay_amt,'app_copay_amt',1,0]\n     [out0.pln_drg_stat_sk,'pln_drg_stat_sk',1,0]\n     [out0.claim_nbr,'claim_nbr',1,0]\n     [out0.cms_pbp_id,'cms_pbp_id',1,0]\n     [out0.rej_cd2_sk,'rej_cd2_sk',1,0]\n     [out0.compound_sk,'compound_sk',1,0]\n     [out0.app_due_amt,'app_due_amt',1,0]\n     [out0.pst_ingred_cost_paid,'pst_ingred_cost_paid',1,0]\n     [out0.submd_claim_dttm,'submd_claim_dttm',1,0]\n     [out0.app_ingred_cost_paid,'app_ingred_cost_paid',1,0]\n     [out0.pst_due_amt,'pst_due_amt',1,0]\n     [out0.care_fac_adjud_sk,'care_fac_adjud_sk',1,0]\n     [out0.processing_month_end_dt,'processing_month_end_dt',1,0]\n     [out0.daw_cd_sk,'daw_cd_sk',1,0]\n     [out0.clt_attrib_to_ded_amt,'clt_attrib_to_ded_amt',1,0]\n     [out0.ntwk_sk,'ntwk_sk',1,0]\n     [out0.orig_carrier_id,'orig_carrier_id',1,0]\n     [out0.cal_ingred_cost_paid,'cal_ingred_cost_paid',1,0]\n     [out0.dxf_hk_part1,'dxf_hk_part1',1,0]\n     [out0.claim_stat_id,'claim_stat_id',1,0]\n     [out0.cal_due_amt,'cal_due_amt',1,0]\n     [out0.orig_account_id,'orig_account_id',1,0]\n     [out0.ids_create_uid,'ids_create_uid',1,0]\n     [out0.clt_dispensing_fee,'clt_dispensing_fee',1,0]\n     [out0.days_of_supply_sk,'days_of_supply_sk',1,0]\n     [out0.ids_updt_uid,'ids_updt_uid',1,0]\n     [out0.ids_updt_run_id,'ids_updt_run_id',1,0]\n     [out0.orig_employer_group_id,'orig_employer_group_id',1,0]\n     [out0.grp_nbr_submd,'grp_nbr_submd',1,0]\n     [out0.phr_afflt_sk,'phr_afflt_sk',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.rsp_sales_tax_paid,'rsp_sales_tax_paid',1,0]\n     [out0.phr_sk,'phr_sk',1,0]\n     [out0.dxf_src_rec_cnt,'DXF Source Record Count',1,0]\n     [out0.sbm_dispensing_fee,'sbm_dispensing_fee',1,0]\n     [out0.rx_nbr,'rx_nbr',1,0]\n     [out0.dxf_src_sys_id,'DXF Source System ID',1,0]\n     [out0.dea_cd_sk,'dea_cd_sk',1,0]\n     [out0.dmr_ind_sk,'dmr_ind_sk',1,0]\n     [out0.sbm_usual_customary_amt,'sbm_usual_customary_amt',1,0]\n     [out0.carrier_acct_sk,'carrier_acct_sk',1,0]\n     [out0.super_ntwk_sk,'super_ntwk_sk',1,0]\n  ]\n  impacts:\n  [\n     [in0.pbr_adjud_sk,'pbr_adjud_sk',1,1]\n     [in0.cal_ingred_cost_paid,'cal_ingred_cost_paid',1,1]\n     [in0.pst_dispensing_fee,'pst_dispensing_fee',1,1]\n     [in0.sbm_patient_pay_amt,'sbm_patient_pay_amt',1,1]\n     [in0.app_dispensing_fee,'app_dispensing_fee',1,1]\n     [in0.cob_ind_sk,'cob_ind_sk',1,1]\n     [in0.cal_due_amt,'cal_due_amt',1,1]\n     [in0.ids_create_uid,'ids_create_uid',1,1]\n     [in0.care_fac_adjud_sk,'care_fac_adjud_sk',1,1]\n     [in0.daw_cd_sk,'daw_cd_sk',1,1]\n     [in0.refill_nbr,'refill_nbr',1,1]\n     [in0.clt_patient_pay_amt,'clt_patient_pay_amt',1,1]\n     [in0.dxf_src_sys_id,'DXF Source System ID',1,1]\n     [in0.clt_other_payer_amt,'clt_other_payer_amt',1,1]\n     [in0.claim_nbr,'claim_nbr',1,1]\n     [in0.rej_cd7_sk,'rej_cd7_sk',1,1]\n     [in0.rej_cd6_sk,'rej_cd6_sk',1,1]\n     [in0.sbm_mn_id,'sbm_mn_id',1,1]\n     [in0.fmly_type_sk,'fmly_type_sk',1,1]\n     [in0.dea_cd_sk,'dea_cd_sk',1,1]\n     [in0.cms_contract_id,'cms_contract_id',1,1]\n     [in0.orig_member_id,'orig_member_id',1,1]\n     [in0.cost_basis_sk,'cost_basis_sk',1,1]\n     [in0.low_day_supl_ind,'low_day_supl_ind',1,1]\n     [in0.app_due_amt,'app_due_amt',1,1]\n     [in0.compound_sk,'compound_sk',1,1]\n     [in0.cal_admin_fee,'cal_admin_fee',1,1]\n     [in0.gpi_sk,'gpi_sk',1,1]\n     [in0.pst_ingred_cost_paid,'pst_ingred_cost_paid',1,1]\n     [in0.formulary_flg,'formulary_flg',1,1]\n     [in0.cal_dispensing_fee,'cal_dispensing_fee',1,1]\n     [in0.app_ingred_cost_paid,'app_ingred_cost_paid',1,1]\n     [in0.rxsol_formulary_sk,'rxsol_formulary_sk',1,1]\n     [in0.dxf_src_dataset_id,'DXF Source Dataset ID',1,1]\n     [in0.rsp_prof_svc_fee,'rsp_prof_svc_fee',1,1]\n     [in0.pst_due_amt,'pst_due_amt',1,1]\n     [in0.ntwk_sk,'ntwk_sk',1,1]\n     [in0.days_of_supply_sk,'days_of_supply_sk',1,1]\n     [in0.rsp_dispensing_fee,'rsp_dispensing_fee',1,1]\n     [in0.awp_unit_cost,'awp_unit_cost',1,1]\n     [in0.days_sply,'days_sply',1,1]\n     [in0.cal_prof_svc_fee,'cal_prof_svc_fee',1,1]\n     [in0.rej_cd2_sk,'rej_cd2_sk',1,1]\n     [in0.cms_pbp_id,'cms_pbp_id',1,1]\n     [in0.manl_claim_trk_dt_sk,'manl_claim_trk_dt_sk',1,1]\n     [in0.sbm_sales_tax_paid,'sbm_sales_tax_paid',1,1]\n     [in0.extd_awp_cost,'extd_awp_cost',1,1]\n     [in0.sbm_dt,'sbm_dt',1,1]\n     [in0.drg_spend_amt,'drg_spend_amt',1,1]\n     [in0.clt_amt_covrg_gap,'clt_amt_covrg_gap',1,1]\n     [in0.filled_yr_mnth,'filled_yr_mnth',1,1]\n     [in0.clt_sales_tax_paid,'clt_sales_tax_paid',1,1]\n     [in0.drug_rx_otc_ind_sk,'drug_rx_otc_ind_sk',1,1]\n     [in0.mbr_sk,'mbr_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.clt_formulary_sk,'clt_formulary_sk',1,1]\n     [in0.cal_cost_src_cd,'cal_cost_src_cd',1,1]\n     [in0.phr_afflt_sk,'phr_afflt_sk',1,1]\n     [in0.troop_amt,'troop_amt',1,1]\n     [in0.clt_copay_amt,'clt_copay_amt',1,1]\n     [in0.rej_cnt,'rej_cnt',1,1]\n     [in0.sbm_tm,'sbm_tm',1,1]\n     [in0.ids_rec_stat_cd,'ids_rec_stat_cd',1,1]\n     [in0.dxf_sk,'dxf_sk',1,1]\n     [in0.basis_of_reim_cd,'basis_of_reim_cd',1,1]\n     [in0.tot_troop_amt,'tot_troop_amt',1,1]\n     [in0.rsp_ingred_cost_paid,'rsp_ingred_cost_paid',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.app_prof_svc_fee,'app_prof_svc_fee',1,1]\n     [in0.dxf_hk_part1,'dxf_hk_part1',1,1]\n     [in0.phr_pmt_cntr_sk,'phr_pmt_cntr_sk',1,1]\n     [in0.pst_prof_svc_fee,'pst_prof_svc_fee',1,1]\n     [in0.clt_attrib_to_ded_amt,'clt_attrib_to_ded_amt',1,1]\n     [in0.drug_maint_cd_sk,'drug_maint_cd_sk',1,1]\n     [in0.rsp_due_amt,'rsp_due_amt',1,1]\n     [in0.dmr_ind_sk,'dmr_ind_sk',1,1]\n     [in0.ids_create_dttm,'ids_create_dttm',1,1]\n     [in0.gnrc_ind_sk,'gnrc_ind_sk',1,1]\n     [in0.pbr_sk,'pbr_sk',1,1]\n     [in0.ids_updt_uid,'ids_updt_uid',1,1]\n     [in0.claim_seq_nbr,'claim_seq_nbr',1,1]\n     [in0.clt_dispensing_fee,'clt_dispensing_fee',1,1]\n     [in0.orig_account_id,'orig_account_id',1,1]\n     [in0.dsg_frm_sk,'dsg_frm_sk',1,1]\n     [in0.wac_unit_cost,'wac_unit_cost',1,1]\n     [in0.rej_cd8_sk,'rej_cd8_sk',1,1]\n     [in0.tier_level,'tier_level',1,1]\n     [in0.newline,'newline',1,1]\n     [in0.rej_cd1_sk,'rej_cd1_sk',1,1]\n     [in0.orig_carrier_id,'orig_carrier_id',1,1]\n     [in0.drg_qty,'drg_qty',1,1]\n     [in0.pst_patient_pay_amt,'pst_patient_pay_amt',1,1]\n     [in0.rej_cd5_sk,'rej_cd5_sk',1,1]\n     [in0.carrier_acct_sk,'carrier_acct_sk',1,1]\n     [in0.ids_create_run_id,'ids_create_run_id',1,1]\n     [in0.app_patient_pay_amt,'app_patient_pay_amt',1,1]\n     [in0.sbm_dispensing_fee,'sbm_dispensing_fee',1,1]\n     [in0.dxf_hk_part2,'dxf_hk_part2',1,1]\n     [in0.clt_attrib_prod_sel_amt,'clt_attrib_prod_sel_amt',1,1]\n     [in0.processing_month_start_dt,'processing_month_start_dt',1,1]\n     [in0.rsp_sales_tax_paid,'rsp_sales_tax_paid',1,1]\n     [in0.ids_updt_run_id,'ids_updt_run_id',1,1]\n     [in0.cal_patient_pay_amt,'cal_patient_pay_amt',1,1]\n     [in0.pln_drg_stat_sk,'pln_drg_stat_sk',1,1]\n     [in0.sbm_due_amt,'sbm_due_amt',1,1]\n     [in0.phr_state_cd_sk,'phr_state_cd_sk',1,1]\n     [in0.sbm_ingred_cost_paid,'sbm_ingred_cost_paid',1,1]\n     [in0.claim_stat_sk,'claim_stat_sk',1,1]\n     [in0.hm_dlvry_ind_sk,'hm_dlvry_ind_sk',1,1]\n     [in0.carrier_sk,'carrier_sk',1,1]\n     [in0.risk_pool_id,'risk_pool_id',1,1]\n     [in0.rsp_copay_amt,'rsp_copay_amt',1,1]\n     [in0.clt_due_amt,'clt_due_amt',1,1]\n     [in0.injectable_ind_sk,'injectable_ind_sk',1,1]\n     [in0.clt_ingred_cost_paid,'clt_ingred_cost_paid',1,1]\n     [in0.phr_sk,'phr_sk',1,1]\n     [in0.adherence_incnt_reduction_amt,'adherence_incnt_reduction_amt',1,1]\n     [in0.submd_claim_dttm,'submd_claim_dttm',1,1]\n     [in0.rej_cd3_sk,'rej_cd3_sk',1,1]\n     [in0.gnrc_mdspn_ind_sk,'gnrc_mdspn_ind_sk',1,1]\n     [in0.rx_nbr,'rx_nbr',1,1]\n     [in0.rej_cd9_sk,'rej_cd9_sk',1,1]\n     [in0.orig_employer_group_id,'orig_employer_group_id',1,1]\n     [in0.pbr_spclty_sk,'pbr_spclty_sk',1,1]\n     [in0.prod_sk,'prod_sk',1,1]\n     [in0.claim_stat_id,'claim_stat_id',1,1]\n     [in0.zero_balance_ind,'zero_balance_ind',1,1]\n     [in0.filled_dt,'filled_dt',1,1]\n     [in0.dxf_src_file_name,'DXF Source File Name',1,1]\n     [in0.drug_sk,'drug_sk',1,1]\n     [in0.rej_cd10_sk,'rej_cd10_sk',1,1]\n     [in0.rsp_patient_pay_amt,'rsp_patient_pay_amt',1,1]\n     [in0.cag_sk,'cag_sk',1,1]\n     [in0.grp_nbr_submd,'grp_nbr_submd',1,1]\n     [in0.processing_month_end_dt,'processing_month_end_dt',1,1]\n     [in0.super_ntwk_sk,'super_ntwk_sk',1,1]\n     [in0.pst_sales_tax_paid,'pst_sales_tax_paid',1,1]\n     [in0.rej_cd4_sk,'rej_cd4_sk',1,1]\n     [in0.co_insurance_amt,'co_insurance_amt',1,1]\n     [in0.app_sales_tax_paid,'app_sales_tax_paid',1,1]\n     [in0.sbm_prof_svc_fee,'sbm_prof_svc_fee',1,1]\n     [in0.claim_origin_cd,'claim_origin_cd',1,1]\n     [in0.rx_written_dt,'rx_written_dt',1,1]\n     [in0.orig_cag_sk,'orig_cag_sk',1,1]\n     [in0.app_copay_amt,'app_copay_amt',1,1]\n     [in0.cal_sales_tax_paid,'cal_sales_tax_paid',1,1]\n     [in0.claim_cntr,'claim_cntr',1,1]\n     [in0.ahfs_cd_sk,'ahfs_cd_sk',1,1]\n     [in0.pst_copay_amt,'pst_copay_amt',1,1]\n     [in0.admin_rte_sk,'admin_rte_sk',1,1]\n     [in0.clt_prof_svc_fee,'clt_prof_svc_fee',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.dxf_src_rec_cnt,'DXF Source Record Count',1,1]\n     [in0.claim_seq_nbr_src,'claim_seq_nbr_src',1,1]\n     [in0.sbm_usual_customary_amt,'sbm_usual_customary_amt',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_599e85b0_344c_0 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_599e85b0_344c_0 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.clt_formulary_sk,'clt_formulary_sk',1,0]\n     [out0.injectable_ind_sk,'injectable_ind_sk',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.claim_stat_id,'claim_stat_id',1,0]\n     [out0.rxsol_formulary_sk,'rxsol_formulary_sk',1,0]\n     [out0.claim_seq_nbr,'claim_seq_nbr',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.claim_nbr,'claim_nbr',1,0]\n  ]\n  impacts:\n  [\n     [in0.injectable_ind_sk,'injectable_ind_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.clt_formulary_sk,'clt_formulary_sk',1,1]\n     [in0.claim_stat_id,'claim_stat_id',1,1]\n     [in0.rxsol_formulary_sk,'rxsol_formulary_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.claim_nbr,'claim_nbr',1,1]\n     [in0.claim_seq_nbr,'claim_seq_nbr',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_599e85b0_344c_3 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_599e85b0_344c_3 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_599e85b0_344c_1 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_599e85b0_344c_1 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{claim_nbr; claim_seq_nbr; claim_stat_id; src_env_sk}
OVERRIDE_JOIN_LEVEL_2_KEY||||{}
OVERRIDE_JOIN_LEVEL_3_KEY||||{}
LOOKUP_FIELDS_KEY||||{}
DRIVER_FILE_TYPE||||Clean
NON_DRIVER_1_SOURCE_NAME||||ids_rxclaim.f_claim_trx_month
NON_DRIVER_1_OUTPUT_FIELDS||||claim_nbr,claim_seq_nbr,claim_stat_id,src_env_sk,clt_formulary_sk,injectable_ind_sk,rxsol_formulary_sk
JOIN_TYPE||||Left Outer Join with ICFF Lookup
JOIN_KEY||||{claim_nbr; claim_seq_nbr; claim_stat_id; src_env_sk}
JOIN_XFR:sandbox||||$[\nbegin\n\nlet join_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 ""\n               else \n                 make_transform("join", [vector make_arg("in0"), make_arg("in1")], [vector make_arg("out")]);\n                 \nlet rfmt_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 make_transform("reformat", [vector make_arg("in")], [vector make_arg("out")])\n               else \n                 "";\n                 \nlet join_key = key_info(JOIN_KEY);\nlet override_join_key = key_info(OVERRIDE_JOIN_KEY);\n\nlet in_vec = for(let key in join_key) : "in." + key.field_name;\n\nlet string("") global_vars = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n"let lookup_identifier_type sec_icff_id = lookup_load('" + NON_DRIVER_1_SEC_FILES_VEC[0] + "', '" + NON_DRIVER_1_SEC_INDEX_VEC[0] + "', 'LKP: DA SEC 1 Template');\nlet bc_lookup_address_type da_address =  allocate_with_defaults();\nlet decimal(\\"\\") match_found =  0;" \n                              else if(JOIN_TYPE member [vector "Left Outer Join with ICFF Lookup", "Inner Join with ICFF Lookup"]) \n'include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";\ninclude "~$PUB_DXF_XFR/common_functions.xfr";\ninclude "~$PUB_DXF_DML/generic_data_types.dml";\n\nlet lookup_identifier_type current_lookup = lookup_not_loaded(); \nlet string("") datafile = "' + NON_DRIVER_1_FILES_VEC[0] + '";\nlet string("") indexfile=this_partition_path(string_replace(datafile,".dat.gz", ".idx")); \ntype lookup_record_type = ' + read_file(NON_DRIVER_1_FILE_INFO.full_dml_url + "/" + NON_DRIVER_1_FILE_INFO.dml_name) + ';' else "";\n\nif(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) begin\n  rfmt_xfr = add_statement(rfmt_xfr, "  if(lookup_match(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ")) begin \n    da_address = lookup_last(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ").prim_da_address;\n    match_found = 1;\n  end\n  else begin\n    da_address = allocate_with_defaults();\n    match_found = 0;\n  end");\n  \n  for(let key in join_key) \n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + key.field_name, "in." + key.field_name, 1)]);\n      \n  for(let field in string_split(NON_DRIVER_1_OUTPUT_FIELDS , ","))\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1)\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + field, "allocate_with_defaults()", 1)]);\n      \n  rfmt_xfr = add_rule(rfmt_xfr, "out.da_address", "da_address");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.match_found", "match_found");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.*", "in.*");\nend\nelse if(JOIN_TYPE member [vector "Left Outer Join with ICFF Lookup", "Inner Join with ICFF Lookup"]) begin\n  rfmt_xfr = 'out::reformat(in)=\nbegin \n  let lookup_record_type lookup_record_value = allocate_with_nulls();\n  let lookup_record_type exact_record_value=allocate_with_defaults();\n  let lookup_record_type exact_next_record_value=allocate_with_nulls();\n  \n  let unsigned integer(8) dxf_hk_part1 = in.dxf_hk_part1;\n  let unsigned integer(8) dxf_hk_part2 = in.dxf_hk_part2;\n\n  let decimal("") match_count = 0 ;\n  if (current_lookup == lookup_not_loaded()) \n  current_lookup = lookup_load(this_partition_path(datafile) ,indexfile, "IDS_LKP_TPL"); \n\n  lookup_record_value = if (current_lookup != lookup_not_loaded() ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else allocate_with_defaults() ;\n  exact_record_value=allocate_with_defaults();\n  exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.\n                      else if  ( dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself \n                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .\n                      begin\n                        match_count=lookup_count(current_lookup, "IDS_LKP_TPL", dxf_hk_part1);\n                          begin block exact_record_match\n                             for (let int k, k < match_count)\n                               begin \n                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup, "IDS_LKP_TPL", dxf_hk_part1) else lookup_previous(current_lookup,"IDS_LKP_TPL");\n                                 if ( dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) \n                                  begin\n                                        exact_record_value = exact_next_record_value;\n                                        exit  exact_record_match;\n                                  end\n                                                                                                 \n                             end\n                          end block exact_record_match\n                       result :: exact_record_value ;\n                       end;\n  out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and exact_record_value.dxf_hk_part2==0 ) 0 else 1 ;  \n  out.dxf_hk_part1 :1: in.dxf_hk_part1;\n  out.dxf_hk_part2 :2: in.dxf_hk_part2;\\n' +   \n  string_join(for(let field in string_split(NON_DRIVER_1_OUTPUT_FIELDS , ",")) : \n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1) "  out." + field + " :: first_defined(exact_record_value." + field + ", in." + field +")", ";\\n")\n  + ';\\n  out.* :4: in.* ;\nend ;';\nend\nelse  begin\n  if(join_key != override_join_key)\n    for(let key in join_key) \n      if(key.field_name != override_join_key[index_of(key)].field_name)\n        join_xfr = add_rules(join_xfr, [vector make_rule("out." + key.field_name, "in0." + key.field_name, 1)\n                                          ,make_rule("out." + key.field_name, "in1." + override_join_key[index_of(key)].field_name, 2)\n                                          ]);\n   \n  join_xfr = add_rules(join_xfr, [vector make_rule("out.*", "in0.*", 1)\n                                          ,make_rule("out.*", "in1.*", 2)\n                                          ]);\nend\n\nresult :: if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF", "Left Outer Join with ICFF Lookup", "Inner Join with ICFF Lookup"]) global_vars + "\\r\\n\\r\\n" + rfmt_xfr \n          else global_vars + "\\r\\n\\r\\n" + join_xfr;\n\nend\n]
DO_CLEAN||||1
