!prototype|P|||${AI_PSET}/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||ids_common.d_member
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||ids_rxclaim.disenrollment_rpt
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5927e371_4b72_6 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5927e371_4b72_6 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.carrier_id,[transform],in0.carrier_id,\n     in0.mbr_id]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.employer_group_id,'employer_group_id',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.dxf_hk_part2,'dxf_hk_part2',1,0]\n     [out0.mbr_dt_of_brth,'mbr_dt_of_brth',1,0]\n     [out0.mb_last_nm,'mb_last_nm',1,0]\n     [out0.carrier_id,'carrier_id',1,0]\n     [out0.account_id,'account_id',1,0]\n     [out0.mbr_id,'mbr_id',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.dxf_hk_part1,'dxf_hk_part1',1,0]\n     [out0.mbr_sex,'mbr_sex',1,0]\n     [out0.mb_first_nm,'mb_first_nm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.mb_mid_init_nm,'mb_mid_init_nm',1,0]\n  ]\n  impacts:\n  [\n     [in0.mb_first_nm,'mb_first_nm',1,1]\n     [in0.mbr_sex,'mbr_sex',1,1]\n     [in0.account_id,'account_id',1,1]\n     [in0.employer_group_id,'employer_group_id',1,1]\n     [in0.carrier_id,'carrier_id',1,1]\n     [in0.mb_mid_init_nm,'mb_mid_init_nm',1,1]\n     [in0.mb_last_nm,'mb_last_nm',1,1]\n     [in0.dxf_hk_part2,'dxf_hk_part2',1,1]\n     [in0.mbr_id,'mbr_id',3,2]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.mbr_dt_of_brth,'mbr_dt_of_brth',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.dxf_hk_part1,'dxf_hk_part1',1,1]\n     [in0.filename,'filename',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet string("\\x01",charset="iso-8859-15", maximum_length=30) carrier_id = fail_if_error((if (sql_or((in0.mbr_id=="01654614500"),(in0.mbr_id=="00045058400")))\n   "ACUVAEC"\n else\n   in0.carrier_id));\n\n\n\n  out0.carrier_id::carrier_id;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5927e371_4b72_8 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5927e371_4b72_8 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.carrier_id,[transform],in0.carrier_id,\n     in0.mbr_id]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.employer_group_id,'employer_group_id',1,0]\n     [out0.carrier_id,'carrier_id',1,0]\n     [out0.dxf_hk_part1,'dxf_hk_part1',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.account_id,'account_id',1,0]\n     [out0.dxf_hk_part2,'dxf_hk_part2',1,0]\n     [out0.prior_auth_nbr,'prior_auth_nbr',1,0]\n     [out0.mbr_id,'mbr_id',1,0]\n     [out0.mpa_type_cd,'mpa_type_cd',1,0]\n     [out0.mpa_thru_dt,'mpa_thru_dt',1,0]\n     [out0.mpa_eff_dt,'mpa_eff_dt',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.mpa_prod_id,'mpa_prod_id',1,0]\n  ]\n  impacts:\n  [\n     [in0.account_id,'account_id',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.employer_group_id,'employer_group_id',1,1]\n     [in0.dxf_hk_part1,'dxf_hk_part1',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.carrier_id,'carrier_id',1,1]\n     [in0.prior_auth_nbr,'prior_auth_nbr',1,1]\n     [in0.mpa_eff_dt,'mpa_eff_dt',1,1]\n     [in0.mbr_id,'mbr_id',3,2]\n     [in0.dxf_hk_part2,'dxf_hk_part2',1,1]\n     [in0.mpa_type_cd,'mpa_type_cd',1,1]\n     [in0.mpa_thru_dt,'mpa_thru_dt',1,1]\n     [in0.mpa_prod_id,'mpa_prod_id',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet string("\\x01",charset="iso-8859-15", maximum_length=30) carrier_id = fail_if_error((if (sql_or((in0.mbr_id=="01654614500"),(in0.mbr_id=="00045058400")))\n   "ACUVAEC"\n else\n   in0.carrier_id));\n\n\n\n  out0.carrier_id::carrier_id;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5927e371_4b72_5 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5927e371_4b72_5 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.mel_stat_cd,[transform],in0.mel_stat_cd,\n     in0.mbr_id]\n  [out0.carrier_id,[transform],in0.carrier_id,\n     in0.mbr_id]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.mel_stat_cd,'mel_stat_cd',1,0]\n     [out0.employer_group_id,'employer_group_id',1,0]\n     [out0.carrier_id,'carrier_id',1,0]\n     [out0.dxf_hk_part1,'dxf_hk_part1',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.account_id,'account_id',1,0]\n     [out0.dxf_hk_part2,'dxf_hk_part2',1,0]\n     [out0.mbr_id,'mbr_id',1,0]\n     [out0.mel_thru_dt,'mel_thru_dt',1,0]\n     [out0.mel_eff_dt,'mel_eff_dt',1,0]\n     [out0.filename,'filename',1,0]\n  ]\n  impacts:\n  [\n     [in0.mel_stat_cd,'mel_stat_cd',1,1]\n     [in0.account_id,'account_id',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.employer_group_id,'employer_group_id',1,1]\n     [in0.dxf_hk_part1,'dxf_hk_part1',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.carrier_id,'carrier_id',1,1]\n     [in0.mel_eff_dt,'mel_eff_dt',1,1]\n     [in0.mbr_id,'mbr_id',5,3]\n     [in0.dxf_hk_part2,'dxf_hk_part2',1,1]\n     [in0.mel_thru_dt,'mel_thru_dt',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet string("\\x01",charset="iso-8859-15", maximum_length=30) carrier_id = fail_if_error((if (sql_or((in0.mbr_id=="01654614500"),(in0.mbr_id=="00045058400")))\n   "ACUVAEC"\n else\n   in0.carrier_id));\nlet string("\\x01",charset="iso-8859-15", maximum_length=1) mel_stat_cd = fail_if_error((if (sql_or((in0.mbr_id=="01654614500"),(in0.mbr_id=="00045058400")))\n   "A"\n else\n   in0.mel_stat_cd));\n\n\n\n  out0.carrier_id::carrier_id;\n  out0.mel_stat_cd::mel_stat_cd;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_5927e371_4b72_7 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_5927e371_4b72_7 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n  ]\n  impacts:\n  [\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\n\n\n\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{carrier_id; account_id; employer_group_id; mbr_id}
OVERRIDE_JOIN_LEVEL_2_KEY||||{carrier_id; account_id; employer_group_id; mbr_id}
OVERRIDE_JOIN_LEVEL_3_KEY||||{}
LOOKUP_FIELDS_KEY||||{}
DRIVER_ILM_NAME||||d_member
NON_DRIVER_1_ILM_NAME||||d_member_prior_auth
NON_DRIVER_1_SOURCE_NAME||||ids_rxclaim.d_member_prior_auth
NON_DRIVER_1_FILE_TYPE||||Clean
NON_DRIVER_1_OUTPUT_FIELDS||||mpa_type_cd,mpa_prod_id,prior_auth_nbr,mpa_eff_dt,mpa_thru_dt,carrier_id,account_id,employer_group_id,mbr_id
JOIN_TYPE||||Inner Join
JOIN_KEY||||{carrier_id; account_id; employer_group_id; mbr_id}
DO_CLEAN||||1
ENABLE_JOIN_LEVEL_2||||1
DRIVER_OUTPUT_FIELDS||||mb_last_nm,mb_first_nm,mb_mid_init_nm,mbr_dt_of_brth,mbr_sex,carrier_id,account_id,employer_group_id,mbr_id
NON_DRIVER_2_ILM_NAME||||d_member_eligibility
NON_DRIVER_2_SOURCE_NAME||||ids_common.d_member_eligibility_disenroll
NON_DRIVER_2_FILE_TYPE||||Clean
NON_DRIVER_2_OUTPUT_FIELDS||||mel_eff_dt,carrier_id,account_id,employer_group_id,mbr_id,mel_thru_dt,mel_stat_cd
JOIN_LEVEL_2_TYPE||||Inner Join
JOIN_LEVEL_2_KEY||||{carrier_id; account_id; employer_group_id; mbr_id}
ADDITIONAL_FIELDS_DML||||record\nunsigned integer(8)     dxf_hk_part1 =     0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;\n  unsigned integer(8)     dxf_hk_part2 =     0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;\nend
JOIN_XFR:sandbox||||$[\r\nbegin\r\n\r\nlet join_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \r\n                 ""\r\n               else \r\n                 make_transform("join", [vector make_arg("in0"), make_arg("in1")], [vector make_arg("out")]);\r\n                 \r\nlet rfmt_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \r\n                 make_transform("reformat", [vector make_arg("in")], [vector make_arg("out")])\r\n               else \r\n                 "";\r\n                 \r\nlet join_key = key_info(JOIN_KEY);\r\nlet override_join_key = key_info(OVERRIDE_JOIN_KEY);\r\n\r\nlet in_vec = for(let key in join_key) : "in." + key.field_name;\r\n\r\nlet string("") global_vars = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \r\n"let lookup_identifier_type sec_icff_id = lookup_load('" + NON_DRIVER_1_SEC_FILES_VEC[0] + "', '" + NON_DRIVER_1_SEC_INDEX_VEC[0] + "', 'LKP: DA SEC 1 Template');\r\nlet bc_lookup_address_type da_address =  allocate_with_defaults();\r\nlet decimal(\\"\\") match_found =  0;" else "";\r\n\r\nif(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) begin\r\n  rfmt_xfr = add_statement(rfmt_xfr, "  if(lookup_match(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ")) begin \r\n    da_address = lookup_last(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ").prim_da_address;\r\n    match_found = 1;\r\n  end\r\n  else begin\r\n    da_address = allocate_with_defaults();\r\n    match_found = 0;\r\n  end");\r\n  \r\n  for(let key in join_key) \r\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + key.field_name, "in." + key.field_name, 1)]);\r\n      \r\n  for(let field in string_split(NON_DRIVER_1_OUTPUT_FIELDS , ","))\r\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1)\r\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + field, "allocate_with_defaults()", 1)]);\r\n      \r\n  rfmt_xfr = add_rule(rfmt_xfr, "out.da_address", "da_address");\r\n  rfmt_xfr = add_rule(rfmt_xfr, "out.match_found", "match_found");\r\n  rfmt_xfr = add_rule(rfmt_xfr, "out.*", "in.*");\r\nend\r\nelse  begin\r\n  if(join_key != override_join_key)\r\n    for(let key in join_key) \r\n      if(key.field_name != override_join_key[index_of(key)].field_name)\r\n        join_xfr = add_rules(join_xfr, [vector make_rule("out." + key.field_name, "in0." + key.field_name, 1)\r\n                                          ,make_rule("out." + key.field_name, "in1." + override_join_key[index_of(key)].field_name, 2)\r\n                                          ]);\r\n   \r\n  join_xfr = add_rules(join_xfr, [vector make_rule("out.*", "in0.*", 1)\r\n                                          ,make_rule("out.*", "in1.*", 2)\r\n                                          ]);\r\nend\r\n\r\nresult :: if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) global_vars + "\\r\\n\\r\\n" + rfmt_xfr \r\n          else global_vars + "\\r\\n\\r\\n" + join_xfr;\r\n\r\nend\r\n]
