!prototype|P|||$AI_PSET/active_spec.pset
REPORT_NAME|l|||map.ctrx_rxclaim.rcqmbp.ctrx_d_qual_medicare_benf
SOURCE_NAME||||ctrx_rxclaim.rcqmbp
ILM_NAME||||ctrx_d_qual_medicare_benf
RULESET_XML|l|||<ruleset schema_version="27" compatibility_level="3" match_business_name="1" rpath_type="1">\n  <guid>a56949b-63440f69-7bf5-2</guid>\n  <pretty_name>Map ctrx_rxclaim.rcqmbp to the ctrx_d_qual_medicare_benf ILM</pretty_name>\n  <usexfr_rpath_type>1</usexfr_rpath_type>\n  <mapping_grid_column_width>314</mapping_grid_column_width>\n  <mapping_grid_column_width>266</mapping_grid_column_width>\n  <mapping_grid_column_width>0</mapping_grid_column_width>\n  <mapping_grid_column_width>0</mapping_grid_column_width>\n  <componentinfo>\n    <join_input_required>0</join_input_required>\n    <dedup>0</dedup>\n    <select_expression></select_expression>\n  </componentinfo>\n  <inputs>\n    <bzname>Input 1</bzname>\n    <datasets extdataset_rpath_type="3">\n      <bzname>Input 1</bzname>\n      <extdataset></extdataset>\n    </datasets>\n    <varbls vartype="1">\n      <comment>The surrogate key for the DXF Process Log entry for this source.</comment>\n      <bzname>DXF Source Dataset ID</bzname>\n      <xxname>dxf_src_dataset_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Starts at 1 each time the Source File Name changes.</comment>\n      <bzname>DXF Source Record Count</bzname>\n      <xxname>dxf_src_rec_cnt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>The numeric identifier of this source.</comment>\n      <bzname>DXF Source System ID</bzname>\n      <xxname>dxf_src_sys_id</xxname>\n    </varbls>\n    <varbls>\n      <comment>The name of the source file, relative to $AI_SERIAL_PENDING.</comment>\n      <bzname>DXF Source File Name</bzname>\n      <xxname>dxf_src_file_name</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahabcd</bzname>\n      <xxname>ahabcd</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahaacd</bzname>\n      <xxname>ahaacd</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahaccd</bzname>\n      <xxname>ahaccd</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahadcd</bzname>\n      <xxname>ahadcd</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahg1vi</bzname>\n      <xxname>ahg1vi</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>ahp0bt</bzname>\n      <xxname>ahp0bt</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahiiax</bzname>\n      <xxname>ahiiax</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>ahm5cg</bzname>\n      <xxname>ahm5cg</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>ahm6cg</bzname>\n      <xxname>ahm6cg</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahijax</bzname>\n      <xxname>ahijax</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahakvn</bzname>\n      <xxname>ahakvn</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>ahc2dt</bzname>\n      <xxname>ahc2dt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>ahadtm</bzname>\n      <xxname>ahadtm</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahalvn</bzname>\n      <xxname>ahalvn</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahadvn</bzname>\n      <xxname>ahadvn</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>ahbmdt</bzname>\n      <xxname>ahbmdt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>ahabtm</bzname>\n      <xxname>ahabtm</xxname>\n    </varbls>\n    <varbls>\n      <bzname>ahaevn</bzname>\n      <xxname>ahaevn</xxname>\n    </varbls>\n    <varbls>\n      <bzname>newline</bzname>\n      <xxname>newline</xxname>\n    </varbls>\n  </inputs>\n  <outputs>\n    <bzname>Output</bzname>\n    <datasets extdataset_rpath_type="3">\n      <bzname>Output</bzname>\n      <extdataset></extdataset>\n    </datasets>\n    <varbls vartype="1">\n      <comment>The surrogate key for the DXF Process Log entry for this source.</comment>\n      <bzname>DXF Source Dataset ID</bzname>\n      <xxname>dxf_src_dataset_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Starts at 1 each time the Source File Name changes.</comment>\n      <bzname>DXF Source Record Count</bzname>\n      <xxname>dxf_src_rec_cnt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>The numeric identifier of this source.</comment>\n      <bzname>DXF Source System ID</bzname>\n      <xxname>dxf_src_sys_id</xxname>\n    </varbls>\n    <varbls>\n      <comment>The name of the source file, relative to $AI_SERIAL_PENDING.</comment>\n      <bzname>DXF Source File Name</bzname>\n      <xxname>dxf_src_file_name</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.dxf_hk_part1</bzname>\n      <xxname>d_q_med_benf.dxf_hk_part1</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.dxf_hk_part2</bzname>\n      <xxname>d_q_med_benf.dxf_hk_part2</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.dxf_sk</bzname>\n      <xxname>d_q_med_benf.dxf_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.qmb_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>d_q_med_benf.qmb_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.mbr_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>d_q_med_benf.mbr_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.cag_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>d_q_med_benf.cag_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.carrier_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>d_q_med_benf.carrier_sk</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_q_med_benf.carrier_id</bzname>\n      <default_value>str_nk(%[I|ahaacd|Input 1])</default_value>\n      <xxname>d_q_med_benf.carrier_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_q_med_benf.account_id</bzname>\n      <default_value>str_nk(%[I|ahaccd|Input 1])</default_value>\n      <xxname>d_q_med_benf.account_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_q_med_benf.employer_group_id</bzname>\n      <default_value>str_nk(%[I|ahadcd|Input 1])</default_value>\n      <xxname>d_q_med_benf.employer_group_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_q_med_benf.mbr_id</bzname>\n      <default_value>str_nk(%[I|ahabcd|Input 1])</default_value>\n      <xxname>d_q_med_benf.mbr_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_q_med_benf.qmb_medicare_id</bzname>\n      <default_value>str_nk(%[I|ahg1vi|Input 1])</default_value>\n      <xxname>d_q_med_benf.qmb_medicare_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.qmb_seq_no</bzname>\n      <default_value>numeric_nk(%[I|ahp0bt|Input 1])</default_value>\n      <xxname>d_q_med_benf.qmb_seq_no</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_q_med_benf.qmb_medicaid_dual_sts_cd</bzname>\n      <default_value>str_non_nk(%[I|ahiiax|Input 1])</default_value>\n      <xxname>d_q_med_benf.qmb_medicaid_dual_sts_cd</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.qmb_from_dt_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>d_q_med_benf.qmb_from_dt_sk</xxname>\n    </varbls>\n    <varbls vartype="2">\n      <bzname>d_q_med_benf.qmb_from_dt</bzname>\n      <default_value>low_date()</default_value>\n      <xxname>d_q_med_benf.qmb_from_dt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.qmb_thru_dt_sk</bzname>\n      <default_value>-1</default_value>\n      <xxname>d_q_med_benf.qmb_thru_dt_sk</xxname>\n    </varbls>\n    <varbls vartype="2">\n      <bzname>d_q_med_benf.qmb_thru_dt</bzname>\n      <default_value>low_date()</default_value>\n      <xxname>d_q_med_benf.qmb_thru_dt</xxname>\n    </varbls>\n    <varbls>\n      <bzname>d_q_med_benf.qmb_status_cd</bzname>\n      <default_value>str_non_nk(%[I|ahijax|Input 1])</default_value>\n      <xxname>d_q_med_benf.qmb_status_cd</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.src_env_sk</bzname>\n      <default_value>%[I|DXF Source System ID|Input 1]</default_value>\n      <xxname>d_q_med_benf.src_env_sk</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <bzname>d_q_med_benf.sec_flg</bzname>\n      <default_value>0</default_value>\n      <xxname>d_q_med_benf.sec_flg</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>benf_cag_sk._nk_is_available_</bzname>\n      <xxname>benf_cag_sk._nk_is_available_</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_cag_sk.carrier_id</bzname>\n      <default_value>str_nk(%[I|ahaacd|Input 1])</default_value>\n      <xxname>benf_cag_sk.carrier_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_cag_sk.account_id</bzname>\n      <default_value>str_nk(%[I|ahaacd|Input 1])</default_value>\n      <xxname>benf_cag_sk.account_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_cag_sk.employer_group_id</bzname>\n      <default_value>str_nk(%[I|ahadcd|Input 1])</default_value>\n      <xxname>benf_cag_sk.employer_group_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>benf_carr_sk._nk_is_available_</bzname>\n      <xxname>benf_carr_sk._nk_is_available_</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_carr_sk.carrier_id</bzname>\n      <default_value>str_nk(%[I|ahaacd|Input 1])</default_value>\n      <xxname>benf_carr_sk.carrier_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>benf_from_dt_sk._nk_is_available_</bzname>\n      <xxname>benf_from_dt_sk._nk_is_available_</xxname>\n    </varbls>\n    <varbls vartype="2">\n      <bzname>benf_from_dt_sk.cal_day_dt</bzname>\n      <default_value>%[O|d_q_med_benf.qmb_from_dt]</default_value>\n      <xxname>benf_from_dt_sk.cal_day_dt</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>benf_mbr_sk._nk_is_available_</bzname>\n      <xxname>benf_mbr_sk._nk_is_available_</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_mbr_sk.carrier_id</bzname>\n      <default_value>str_nk(%[I|ahaacd|Input 1])</default_value>\n      <xxname>benf_mbr_sk.carrier_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_mbr_sk.account_id</bzname>\n      <default_value>str_nk(%[I|ahaccd|Input 1])</default_value>\n      <xxname>benf_mbr_sk.account_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_mbr_sk.employer_group_id</bzname>\n      <default_value>str_nk(%[I|ahadcd|Input 1])</default_value>\n      <xxname>benf_mbr_sk.employer_group_id</xxname>\n    </varbls>\n    <varbls>\n      <bzname>benf_mbr_sk.mbr_id</bzname>\n      <default_value>str_nk(%[I|ahabcd|Input 1])</default_value>\n      <xxname>benf_mbr_sk.mbr_id</xxname>\n    </varbls>\n    <varbls vartype="1">\n      <comment>Whether this natural key is available.  Defaults to 1 (True).  If 0 (False), then -1 is used for the Foreign Surrogate Key.</comment>\n      <bzname>benf_thru_dt_sk._nk_is_available_</bzname>\n      <xxname>benf_thru_dt_sk._nk_is_available_</xxname>\n    </varbls>\n    <varbls vartype="2">\n      <bzname>benf_thru_dt_sk.cal_day_dt</bzname>\n      <default_value>%[O|d_q_med_benf.qmb_thru_dt]</default_value>\n      <xxname>benf_thru_dt_sk.cal_day_dt</xxname>\n    </varbls>\n  </outputs>\n  <params>\n    <bzname>RUN_ID</bzname>\n    <xxname>RUN_ID</xxname>\n  </params>\n  <usexfrs></usexfrs>\n  <configs target_xfr_rpath_type="1" target_component_rpath_type="1">\n    <bzname>Default deployment</bzname>\n    <inputs_dataset_bzname>Input 1</inputs_dataset_bzname>\n    <outputs_dataset_bzname>Output</outputs_dataset_bzname>\n    <filetestconfigs>\n      <inputs_physical_location_type>1</inputs_physical_location_type>\n      <inputs_physical_location></inputs_physical_location>\n      <inputs_where_clause></inputs_where_clause>\n      <outputs_physical_location_type>1</outputs_physical_location_type>\n      <outputs_physical_location></outputs_physical_location>\n      <param_value>&quot;0&quot;</param_value>\n      <regression_physical_location_type>1</regression_physical_location_type>\n      <regression_physical_location></regression_physical_location>\n    </filetestconfigs>\n  </configs>\n  <rules schema_version="27">\n    <guid>a56949b-63440f69-7bf5-1-6</guid>\n    <pretty_name>Compute d_q_med_benf.qmb_from_dt</pretty_name>\n    <outvars>d_q_med_benf.qmb_from_dt</outvars>\n    <exprs>\n      <columns>\n        <heading>Length</heading>\n        <expression>length_of((decimal(&quot;&quot;))string_lrtrim(%[I|ahm5cg|Input 1]))</expression>\n      </columns>\n      <columns>\n        <heading>8DigitValid</heading>\n        <expression>is_valid(YYYYMMDD((decimal(&quot;&quot;))string_lrtrim(%[I|ahm5cg|Input 1])))</expression>\n      </columns>\n      <columns>\n        <heading>CobolValid</heading>\n        <expression>is_valid(YYYYMMDD(19000000+(decimal(&quot;&quot;))string_lrtrim(%[I|ahm5cg|Input 1])))</expression>\n      </columns>\n      <columns coltype="1">\n        <heading>d_q_med_benf.qmb_from_dt</heading>\n      </columns>\n      <rows>\n        <guid>a56949b-63440f69-7bf5-1-7</guid>\n        <cells>\n          <contents>6 or 7</contents>\n        </cells>\n        <cells></cells>\n        <cells>\n          <contents>1</contents>\n        </cells>\n        <cells>\n          <contents>YYYYMMDD(19000000+(decimal(&quot;&quot;))string_lrtrim(%[I|ahm5cg|Input 1]))</contents>\n        </cells>\n      </rows>\n      <rows>\n        <guid>a56949b-63440f69-7bf5-1-8</guid>\n        <cells>\n          <contents>8</contents>\n        </cells>\n        <cells>\n          <contents>1</contents>\n        </cells>\n        <cells></cells>\n        <cells>\n          <contents>YYYYMMDD((decimal(&quot;&quot;))string_lrtrim(%[I|ahm5cg|Input 1]))</contents>\n        </cells>\n      </rows>\n    </exprs>\n    <tests></tests>\n  </rules>\n  <rules schema_version="27">\n    <guid>a56949b-63440f69-7bf5-1-9</guid>\n    <pretty_name>Compute d_q_med_benf.qmb_thru_dt</pretty_name>\n    <outvars>d_q_med_benf.qmb_thru_dt</outvars>\n    <exprs>\n      <columns>\n        <heading>Length</heading>\n        <expression>length_of((decimal(&quot;&quot;))string_lrtrim(%[I|ahm6cg|Input 1]))</expression>\n      </columns>\n      <columns>\n        <heading>8DigitValid</heading>\n        <expression>is_valid(YYYYMMDD((decimal(&quot;&quot;))string_lrtrim(%[I|ahm6cg|Input 1])))</expression>\n      </columns>\n      <columns>\n        <heading>CobolValid</heading>\n        <expression>is_valid(YYYYMMDD(19000000+(decimal(&quot;&quot;))string_lrtrim(%[I|ahm6cg|Input 1])))</expression>\n      </columns>\n      <columns coltype="1">\n        <heading>d_q_med_benf.qmb_thru_dt</heading>\n      </columns>\n      <rows>\n        <guid>a56949b-63440f69-7bf5-1-10</guid>\n        <cells>\n          <contents>6 or 7</contents>\n        </cells>\n        <cells></cells>\n        <cells>\n          <contents>1</contents>\n        </cells>\n        <cells>\n          <contents>YYYYMMDD(19000000+(decimal(&quot;&quot;))string_lrtrim(%[I|ahm6cg|Input 1]))</contents>\n        </cells>\n      </rows>\n      <rows>\n        <guid>a56949b-63440f69-7bf5-1-11</guid>\n        <cells>\n          <contents>8</contents>\n        </cells>\n        <cells>\n          <contents>1</contents>\n        </cells>\n        <cells></cells>\n        <cells>\n          <contents>YYYYMMDD((decimal(&quot;&quot;))string_lrtrim(%[I|ahm6cg|Input 1]))</contents>\n        </cells>\n      </rows>\n    </exprs>\n    <tests></tests>\n  </rules>\n</ruleset>\n
CATALOG_CONTENTS|$|||
