!prototype|P|||${AI_PSET}/get.join.files.interim.pset
DRIVER_SOURCE_NAME||||ids_rxclaim.f_claim_transaction_sbmdt
DRIVER_SOURCE_LOGICAL_NAME||||orca_rxclaim
TARGET_NAME||||ids_rxclaim.f_clm_trx_l_age_bnd_d_drug_d_mem
DRIVER_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_592c0b86_38b5_1 = $DRIVER_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_592c0b86_38b5_1 = $DRIVER_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.v_dxf_sk,[transform],]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.refill_nbr,'refill_nbr',1,0]\n     [out0.clt_due_amt,'clt_due_amt',1,0]\n     [out0.sbm_dt,'sbm_dt',1,0]\n     [out0.filled_dt,'filled_dt',1,0]\n     [out0.cag_sk,'cag_sk',1,0]\n     [out0.adj_rxcount_stnd_days_sply,'adj_rxcount_stnd_days_sply',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.mbr_sk,'mbr_sk',1,0]\n     [out0.orig_carrier_id,'orig_carrier_id',1,0]\n     [out0.claim_stat_id,'claim_stat_id',1,0]\n     [out0.drug_sk,'drug_sk',1,0]\n     [out0.drg_qty,'drg_qty',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.v_dxf_sk,'v_dxf_sk',1,0]\n     [out0.phr_sk,'phr_sk',1,0]\n     [out0.pbr_sk,'pbr_sk',1,0]\n     [out0.age_band_sk,'age_band_sk',1,0]\n  ]\n  impacts:\n  [\n     [in0.claim_stat_id,'claim_stat_id',1,1]\n     [in0.filled_dt,'filled_dt',1,1]\n     [in0.drug_sk,'drug_sk',1,1]\n     [in0.drg_qty,'drg_qty',1,1]\n     [in0.orig_carrier_id,'orig_carrier_id',1,1]\n     [in0.refill_nbr,'refill_nbr',1,1]\n     [in0.sbm_dt,'sbm_dt',1,1]\n     [in0.cag_sk,'cag_sk',1,1]\n     [in0.adj_rxcount_stnd_days_sply,'adj_rxcount_stnd_days_sply',1,1]\n     [in0.age_band_sk,'age_band_sk',1,1]\n     [in0.mbr_sk,'mbr_sk',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.clt_due_amt,'clt_due_amt',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.phr_sk,'phr_sk',1,1]\n     [in0.pbr_sk,'pbr_sk',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\x01",0) v_dxf_sk = 0;\n\n\n\n  out0.v_dxf_sk::v_dxf_sk;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_1_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_592c0b86_38b5_3 = $NON_DRIVER_1_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_592c0b86_38b5_3 = $NON_DRIVER_1_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.v_dxf_sk,[passthrough],in0.dxf_sk]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.dxf_sk,'dxf_sk',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.v_dxf_sk,'v_dxf_sk',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.age,'age',1,0]\n  ]\n  impacts:\n  [\n     [in0.dxf_sk,'dxf_sk',2,2]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.age,'age',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\x01",0) v_dxf_sk = fail_if_error(in0.dxf_sk);\n\n\n\n  out0.v_dxf_sk::v_dxf_sk;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_2_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_592c0b86_38b5_0 = $NON_DRIVER_2_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_592c0b86_38b5_0 = $NON_DRIVER_2_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.v_dxf_sk,[passthrough],in0.dxf_sk]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.dxf_sk,'dxf_sk',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.v_dxf_sk,'v_dxf_sk',1,0]\n     [out0.drg_grp_id,'drg_grp_id',1,0]\n     [out0.drg_grp_desc,'drg_grp_desc',1,0]\n     [out0.filename,'filename',1,0]\n  ]\n  impacts:\n  [\n     [in0.dxf_sk,'dxf_sk',2,2]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.drg_grp_id,'drg_grp_id',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.drg_grp_desc,'drg_grp_desc',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\x01",0) v_dxf_sk = fail_if_error(in0.dxf_sk);\n\n\n\n  out0.v_dxf_sk::v_dxf_sk;\n  out0.*::in0.*;\n\nend;\n
NON_DRIVER_3_XFR||||/*   Do not edit. Generated file - BRE 3.2.6.4;;Default deployment;   */\nlet decimal('') bzt_0_6c54cc0a_592c0b86_38b5_2 = $NON_DRIVER_3_START_DATE;\nlet decimal('') bzt_1_6c54cc0a_592c0b86_38b5_2 = $NON_DRIVER_3_END_DATE;\n\n/*@\ndependency_analysis:\n[\n  [out0.v_dxf_sk,[passthrough],in0.dxf_sk]\n  [out0.*,in0.*]\n]\nmetrics:\n{\n  dependencies:\n  [\n     [out0.employer_group_id,'employer_group_id',1,0]\n     [out0.ids_updt_dttm,'ids_updt_dttm',1,0]\n     [out0.mbr_phone,'mbr_phone',1,0]\n     [out0.mbr_dt_of_brth,'mbr_dt_of_brth',1,0]\n     [out0.mb_last_nm,'mb_last_nm',1,0]\n     [out0.mbr_zip,'mbr_zip',1,0]\n     [out0.mbr_lang_cd,'mbr_lang_cd',1,0]\n     [out0.mbr_id,'mbr_id',1,0]\n     [out0.filename,'filename',1,0]\n     [out0.mbr_addr1,'mbr_addr1',1,0]\n     [out0.mbr_sex,'mbr_sex',1,0]\n     [out0.mb_first_nm,'mb_first_nm',1,0]\n     [out0.dxf_sk,'dxf_sk',1,0]\n     [out0.src_env_sk,'src_env_sk',1,0]\n     [out0.mbr_st_cd,'mbr_st_cd',1,0]\n     [out0.v_dxf_sk,'v_dxf_sk',1,0]\n     [out0.mb_mid_init_nm,'mb_mid_init_nm',1,0]\n     [out0.mbr_city_nm,'mbr_city_nm',1,0]\n     [out0.mbr_addr2,'mbr_addr2',1,0]\n  ]\n  impacts:\n  [\n     [in0.mb_first_nm,'mb_first_nm',1,1]\n     [in0.mbr_sex,'mbr_sex',1,1]\n     [in0.employer_group_id,'employer_group_id',1,1]\n     [in0.mb_mid_init_nm,'mb_mid_init_nm',1,1]\n     [in0.mb_last_nm,'mb_last_nm',1,1]\n     [in0.mbr_phone,'mbr_phone',1,1]\n     [in0.mbr_id,'mbr_id',1,1]\n     [in0.mbr_city_nm,'mbr_city_nm',1,1]\n     [in0.ids_updt_dttm,'ids_updt_dttm',1,1]\n     [in0.mbr_st_cd,'mbr_st_cd',1,1]\n     [in0.mbr_addr2,'mbr_addr2',1,1]\n     [in0.mbr_dt_of_brth,'mbr_dt_of_brth',1,1]\n     [in0.dxf_sk,'dxf_sk',2,2]\n     [in0.mbr_addr1,'mbr_addr1',1,1]\n     [in0.src_env_sk,'src_env_sk',1,1]\n     [in0.filename,'filename',1,1]\n     [in0.mbr_lang_cd,'mbr_lang_cd',1,1]\n     [in0.mbr_zip,'mbr_zip',1,1]\n  ]\n}\n@*/\n\nout0::reformat(in0)=\nbegin\nlet decimal("\\x01",0) v_dxf_sk = fail_if_error(in0.dxf_sk);\n\n\n\n  out0.v_dxf_sk::v_dxf_sk;\n  out0.*::in0.*;\n\nend;\n
OVERRIDE_JOIN_KEY||||{v_dxf_sk}
OVERRIDE_JOIN_LEVEL_2_KEY||||{v_dxf_sk}
OVERRIDE_JOIN_LEVEL_3_KEY||||{v_dxf_sk}
LOOKUP_FIELDS_KEY||||{}
NON_DRIVER_1_SOURCE_NAME||||ids_rxclaim.l_age_band
DRIVER_OUTPUT_FIELDS||||cag_sk,mbr_sk,drug_sk,pbr_sk,phr_sk,age_band_sk,filled_dt,refill_nbr,drg_qty,adj_rxcount_stnd_days_sply,clt_due_amt,claim_stat_id,orig_carrier_id,sbm_dt
NON_DRIVER_1_OUTPUT_FIELDS||||dxf_sk,age
ENABLE_JOIN_LEVEL_2||||1
NON_DRIVER_2_SOURCE_NAME||||ids_common.d_drug
NON_DRIVER_2_OUTPUT_FIELDS||||dxf_sk,drg_grp_id,drg_grp_desc
JOIN_TYPE||||Inner Join
JOIN_KEY||||{age_band_sk}
JOIN_LEVEL_2_TYPE||||Inner Join
JOIN_LEVEL_2_KEY||||{drug_sk}
DO_CLEAN||||1
JOIN_XFR:sandbox||||$[\nbegin\n\nlet join_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 ""\n               else \n                 make_transform("join", [vector make_arg("in0"), make_arg("in1")], [vector make_arg("out")]);\n                 \nlet rfmt_xfr = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 make_transform("reformat", [vector make_arg("in")], [vector make_arg("out")])\n               else \n                 "";\n                 \nlet join_key = key_info(JOIN_KEY);\nlet override_join_key = key_info(OVERRIDE_JOIN_KEY);\n\nlet in_vec = for(let key in join_key) : "in." + key.field_name;\n\nlet string("") global_vars = if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n"let lookup_identifier_type sec_icff_id = lookup_load('" + NON_DRIVER_1_SEC_FILES_VEC[0] + "', '" + NON_DRIVER_1_SEC_INDEX_VEC[0] + "', 'LKP: DA SEC 1 Template');\nlet bc_lookup_address_type da_address =  allocate_with_defaults();\nlet decimal(\\"\\") match_found =  0;" else "";\n\nif(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) begin\n  rfmt_xfr = add_statement(rfmt_xfr, "  if(lookup_match(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ")) begin \n    da_address = lookup_last(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ").prim_da_address;\n    match_found = 1;\n  end\n  else begin\n    da_address = allocate_with_defaults();\n    match_found = 0;\n  end");\n  \n  for(let key in join_key) \n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + key.field_name, "in." + key.field_name, 1)]);\n      \n  for(let field in string_split(NON_DRIVER_1_OUTPUT_FIELDS , ","))\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1)\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + field, "allocate_with_defaults()", 1)]);\n      \n  rfmt_xfr = add_rule(rfmt_xfr, "out.da_address", "da_address");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.match_found", "match_found");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.*", "in.*");\nend\nelse  begin\n  if(join_key != override_join_key)\n    for(let key in join_key) \n      if(key.field_name != override_join_key[index_of(key)].field_name)\n        join_xfr = add_rules(join_xfr, [vector make_rule("out." + key.field_name, "in0." + key.field_name, 1)\n                                          ,make_rule("out." + key.field_name, "in1." + override_join_key[index_of(key)].field_name, 2)\n                                          ]);\n   \n  join_xfr = add_rules(join_xfr, [vector make_rule("out.*", "in0.*", 1)\n                                          ,make_rule("out.*", "in1.*", 2)\n                                          ]);\nend\n\nresult :: if(JOIN_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) global_vars + "\\r\\n\\r\\n" + rfmt_xfr \n          else global_vars + "\\r\\n\\r\\n" + join_xfr;\n\nend\n]
DRIVER_FILTER_EXPR||||first_defined(refill_nbr,'1') == '0' && (orig_carrier_id member [vector "ACULA" , "ACUNY" , "ACUKS" , "ACUMI", "ACURI", "UHGRV2306", "ACUIA", "ACUIAC", "ACUIAEC"])
DRIVER_DEDUP_ON_JOIN_LEVEL_2_KEY||||False
NON_DRIVER_1_DEDUP_ON_JOIN_KEY||||False
ENABLE_JOIN_LEVEL_3||||1
NON_DRIVER_3_SOURCE_NAME||||ids_common.d_member
NON_DRIVER_3_OUTPUT_FIELDS||||dxf_sk,employer_group_id,mbr_id,mb_first_nm,mb_mid_init_nm,mb_last_nm,mbr_sex,mbr_city_nm,mbr_st_cd,mbr_zip,mbr_addr1,mbr_addr2,mbr_phone,mbr_dt_of_brth,mbr_lang_cd
JOIN_LEVEL_3_KEY||||{mbr_sk}
JOIN_LEVEL_3_XFR:sandbox||||$[\nbegin\n\nlet join_xfr = if(JOIN_LEVEL_3_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 ""\n               else \n                 make_transform("join", [vector make_arg("in0"), make_arg("in1")], [vector make_arg("out")]);\n                 \nlet rfmt_xfr = if(JOIN_LEVEL_3_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 make_transform("reformat", [vector make_arg("in")], [vector make_arg("out")])\n               else \n                 "";\n                 \nlet join_key = key_info(JOIN_LEVEL_3_KEY);\nlet override_join_key = key_info(OVERRIDE_JOIN_LEVEL_3_KEY);\n\nlet in_vec = for(let key in join_key) : "in." + key.field_name;\n\nlet string("") global_vars = if(JOIN_LEVEL_3_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n"let lookup_identifier_type sec_icff_id = lookup_load('" + NON_DRIVER_3_SEC_FILES_VEC[0] + "', '" + NON_DRIVER_3_SEC_INDEX_VEC[0] + "', 'LKP: DA SEC 1 Template');\nlet bc_lookup_address_type da_address =  allocate_with_defaults();\nlet decimal(\\"\\") match_found =  0;" else "";\n\nif(JOIN_LEVEL_3_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) begin\n  rfmt_xfr = add_statement(rfmt_xfr, "  if(lookup_match(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ")) begin \n    da_address = lookup_last(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ").prim_da_address;\n    match_found = 1;\n  end\n  else begin\n    da_address = allocate_with_defaults();\n    match_found = 0;\n  end");\n  \n  for(let key in join_key) \n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + key.field_name, "in." + key.field_name, 1)]);\n      \n  for(let field in string_split(NON_DRIVER_3_OUTPUT_FIELDS , ","))\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1)\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + field, "allocate_with_defaults()", 1)]);\n      \n  rfmt_xfr = add_rule(rfmt_xfr, "out.da_address", "da_address");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.match_found", "match_found");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.*", "in.*");\nend\nelse  begin\n  if(join_key != override_join_key)\n    for(let key in join_key) \n      if(key.field_name != override_join_key[index_of(key)].field_name)\n        join_xfr = add_rules(join_xfr, [vector make_rule("out." + key.field_name, "in0." + key.field_name, 1)\n                                          ,make_rule("out." + key.field_name, "in1." + override_join_key[index_of(key)].field_name, 2)\n                                          ]);\n   \n  join_xfr = add_rules(join_xfr, [vector make_rule("out.*", "in0.*", 1)\n                                          ,make_rule("out.*", "in1.*", 2)\n                                          ]);\nend\n\nresult :: if(JOIN_LEVEL_3_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) global_vars + "\\r\\n\\r\\n" + rfmt_xfr \n          else global_vars + "\\r\\n\\r\\n" + join_xfr;\n\nend\n]
NON_DRIVER_3_FILTER_EXPR||||1
OUTPUT_LEVEL_3_FILTER_EXPR||||1
OUTPUT_FILTER_EXPR||||1
ADDITIONAL_FIELDS_DML||||record\ndecimal("\\x01",0) v_dxf_sk;\nend
NON_DRIVER_1_FILTER_EXPR||||age>=6 && age<=12
NON_DRIVER_2_FILTER_EXPR||||first_defined(drg_grp_id,'0')=='61'
JOIN_LEVEL_2_XFR:sandbox||||$[\nbegin\n\nlet join_xfr = if(JOIN_LEVEL_2_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 ""\n               else \n                 make_transform("join", [vector make_arg("in0"), make_arg("in1")], [vector make_arg("out")]);\n                 \nlet rfmt_xfr = if(JOIN_LEVEL_2_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n                 make_transform("reformat", [vector make_arg("in")], [vector make_arg("out")])\n               else \n                 "";\n                 \nlet join_key = key_info(JOIN_LEVEL_2_KEY);\nlet override_join_key = key_info(OVERRIDE_JOIN_LEVEL_2_KEY);\n\nlet in_vec = for(let key in join_key) : "in." + key.field_name;\n\nlet string("") global_vars = if(JOIN_LEVEL_2_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) \n"let lookup_identifier_type sec_icff_id = lookup_load('" + NON_DRIVER_2_SEC_FILES_VEC[0] + "', '" + NON_DRIVER_2_SEC_INDEX_VEC[0] + "', 'LKP: DA SEC 1 Template');\nlet bc_lookup_address_type da_address =  allocate_with_defaults();\nlet decimal(\\"\\") match_found =  0;" else "";\n\nif(JOIN_LEVEL_2_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) begin\n  rfmt_xfr = add_statement(rfmt_xfr, "  if(lookup_match(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ")) begin \n    da_address = lookup_last(sec_icff_id, 'LKP: DA SEC 1 Template', " + string_join(in_vec, ",") + ").prim_da_address;\n    match_found = 1;\n  end\n  else begin\n    da_address = allocate_with_defaults();\n    match_found = 0;\n  end");\n  \n  for(let key in join_key) \n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + key.field_name, "in." + key.field_name, 1)]);\n      \n  for(let field in string_split(NON_DRIVER_2_OUTPUT_FIELDS , ","))\n    if(vector_search(override_join_key, [record field_name field modifiers [vector]], {field_name}) == -1)\n      rfmt_xfr = add_rules(rfmt_xfr, [vector make_rule("out." + field, "allocate_with_defaults()", 1)]);\n      \n  rfmt_xfr = add_rule(rfmt_xfr, "out.da_address", "da_address");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.match_found", "match_found");\n  rfmt_xfr = add_rule(rfmt_xfr, "out.*", "in.*");\nend\nelse  begin\n  if(join_key != override_join_key)\n    for(let key in join_key) \n      if(key.field_name != override_join_key[index_of(key)].field_name)\n        join_xfr = add_rules(join_xfr, [vector make_rule("out." + key.field_name, "in0." + key.field_name, 1)\n                                          ,make_rule("out." + key.field_name, "in1." + override_join_key[index_of(key)].field_name, 2)\n                                          ]);\n   \n  join_xfr = add_rules(join_xfr, [vector make_rule("out.*", "in0.*", 1)\n                                          ,make_rule("out.*", "in1.*", 2)\n                                          ]);\nend\n\nresult :: if(JOIN_LEVEL_2_TYPE member [vector "Left Outer Join with ICFF", "Inner Join with ICFF"]) global_vars + "\\r\\n\\r\\n" + rfmt_xfr \n          else global_vars + "\\r\\n\\r\\n" + join_xfr;\n\nend\n]
