!prototype|P|||$AI_PSET/get.iseries.interim.pset
QUERY_TYPE_ID||||2
SOURCE_SYSTEM_OVERRIDE||||rxclaim_orx
SOURCE_TABLE_LIST||||# Schema Name Unqualified Table Name  Fields\r\n$SOURCE_SYSTEM  rcex1p                  rxclaimnbr,clmseqnbr,claimsts,carrierid,scarrierid,carrproc,accountid,acctbencde,versionnbr,groupid,groupplan,grpclibenf,groupsic,clmrespsts,memberid,mbrlstnme,mbrfstnme,mbrmdinit,mbrprsncde,mbrrelcde,mbrsex,mbrbirth,mbrage,mbrzip,socsecnbr,durkey,durflag,mbrfamlyid,mbrfamlind,mbrfamltyp,cobind,mbrplan,mbrprodcde,mbrridercd,carenetid,carequalid,carefacid,carefacnam,mbrpcphys,pprsfstnme,pprslstnme,pprsmdinit,pprsspccde,mbraltinfl,mbraltincd,mbraltinid,mbrmeddte,mbrmedtype,mbrhiccde,cardholder,patlastnme,patfrstnme,personcde,relationcd,sexcode,birthdte,eligclarif,custloc,prmcareprv,prmcareprq,facilityid,othcoverag,binnumber,processor,groupnbr,transcde,datesbm,timesbm,orgpdsbmdt,rvdatesbm,clmcounter,genericctr,formlryctr,rxnumber,rxnumberql,refill,dispstatus,dtefilled,compoundcd,prodtypcde,productid,productkey,metricqty,decimalqty,dayssupply,psc,writtendte,nbrflsauth,origincde,sbmclarcd1,pamcnbr,pamccde,prauthnbr,prauthrsn,prauthfdte,prauthtdte,labelname,prodname,drugmfgrid,drugmfgr,gpinumber,genericnme,prdpacuom,prdpacsize,ddid,gcn,gcnseq,kdc,ahfs,drugdeacod,rxotcind,multsrccde,genindover,prdreimind,brndtrdnme,fdatheraeq,metricstrg,drgstrguom,adminroute,dosageform,mntdrugcde,thrdpartyx,drgunitdos,sbmunitdos,altprodtyp,altprodcde,srxnetwrk,srxnettype,rxnetwork,rxnetwrknm,rxnetcarr,regioncde,phraffil,netprior,nettype,netseq,paycntr,phrndclst,phrgpilst,srvprovid,srvprovidq,npiprov,prvncpdpid,sbmsrvprid,sbmsrvprql,srvprovnme,provlockql,provlockid,storenbr,affiliatin,payeeid,disprclass,disprother,pharmzip,presnetwid,prescriber,prescridql,npiprescr,prescdeaid,preslstnme,presfstnme,presmdinit,presspccde,presspccdq,fnlplancde,fnlplandte,planqual,plnndclist,plngpilist,plnpndclst,plnpgpilst,plandrugst,planfrmlry,plnfnlpsch,phrdcschid,phrdcschsq,cltdcschid,cltdcschsq,phrdccscid,phrdccscsq,cltdccscid,cltdccscsq,phrprtscid,cltprtscid,phrrmschid,cltrmschid,prdpflstid,prfprdscid,formulary,formlrflag,tiervalue,contherapy,message1,message2,message3,rejcnt,rejcde1,rejcde2,rejcde3,rjcplanid,durconflct,durintervn,duroutcome,lvlservice,diagnosis,diagnosisq,rvdurcnflc,rvdurintrv,rvduroutcm,rvlvlservc,drgcnflct1,severity1,othrpharm1,dteprvfil1,qtyprvfil1,database1,othrpresc1,freetext1,drgcnflct2,severity2,othrpharm2,dteprvfil2,qtyprvfil2,database2,othrpresc2,freetext2,drgcnflct3,severity3,othrpharm3,dteprvfil3,qtyprvfil3,database3,othrpresc3,freetext3,feetype,awpunitcst,wacunitcst,geapuntcst,ctypeucost,basiscost,priceqty,prodayssup,proqty,rvincntvsb,sbmingrcst,sbmdispfee,sbmpslstax,sbmfslstax,sbmslstax,sbmpatpay,sbmamtdue,sbmincentv,sbmproffee,sbmtothamt,sbmopamtct,sbmopamtql,usualncust,denialdte,othrpayor,calingrcst,caldispfee,calpstax,calfstax,calslstax,calpatpay,caldueamt,calwithhld,calfcopay,calpcopay,calcopay,calprodsel,calatrtax,calexcebft,calincentv,calatrded,calcob,caltothamt,calproffee,calothpaya,calcostsrc,caladmnfee,phringrcst,phrdispfee,phrppstax,phrfstax,phrslstax,phrpatpay,phrdueamt,phrwithhld,phrpprcs,phrprcst,phrptps,unused1,phrcopaysc,phrcopayss,phrfcopay,phrpcopay,phrcopay,phrprodsel,phratrtax,phrexcebft,phrincentv,phratrded,phrcob,phrtothamt,phrproffee,phrothpaya,phrcostsrc,phrcosttyp,phrprctype,phrrate,posingrcst,posdispfee,pospslstax,posfslstax,posslstax,pospatpay,posdueamt,poswithhld,poscopay,posprodsel,posatrtax,posexcebft,posincentv,posatrded,postothamt,posproffee,posothpaya,poscostsrc,clientflag,cltingrcst,cltdispfee,cltslstax,cltpatpay,cltdueamt,cltwithhld,cltprcs,cltprcst,cltptps,unused2,cltcopays,cltcopayss,cltfcopay,cltpcopay,cltcopay,cltprodsel,cltpstax,cltfstax,cltatrtax,cltexcebft,cltincentv,cltatrded,clttothamt,cltproffee,cltcob,cltothpaya,cltcostsrc,cltcosttyp,cltprctype,cltrate,cltprscstp,cltprschnm,cltprocfee,cltpatstax,cltplnstax,cltprvnsel,cltpscbrnd,cltpscnonp,cltpscbrnp,cltcovgap,cltingcstc,cltdspfeec,rspprocfee,rsppatstax,rspplnstax,rspprvnsel,rsppscbrnd,rsppscnonp,rsppscbrnp,rspcovgap,rspingcstc,rspdspfeec,payertype,rspreimbur,rspingrcst,rspdispfee,rsppslstax,rspfslstax,rspslstax,rsppatpay,rspdueamt,rspfcopay,rsppcopay,rspcopay,rspprodsel,rspatrtax,rspexcebft,rspincentv,rspatrded,rsptothamt,rspprofee,rspothpaya,rspaccuded,rsprembft,rspremded,rspplanid,inddedptd,inddedrem,famdedptd,famdedrem,dedsched,dedaccc,dedflag,indlbftut,indlbftptd,indlbftrem,famlbftut,famlbftptd,famlbftrem,lftbftmsch,lftbftaccc,lftbftflag,indbftut,indbmaxptd,fambftut,fambmaxptd,indbmaxrem,fambmaxrem,bftmaxschd,bftmaxaccc,bftmaxflag,indoopptd,famoopptd,indooprem,famooprem,oopsched,oopaccc,oopflag,contribut,contbasis,contsched,contacccd,contflag,rxtflag,reimbursmt,clmorigin,hldclmflag,hldclmdays,partdflag,cobextflg,paextflg,hsaextind,ffpmedrmst,ffpmedpxst,ffpmedmsst,incidentid,etcnbr,dteinjury,adduser,chguser,dmruserid,prauserid,claimrefid,eobdenov,eobpdov,mantrknbr,manrecvdte,pasauthtyp,pasauthid,pasreqtype,pasreqfrom,pasreqthru,pasbasisrq,pasrepfn,pasrepln,passtreet,pascity,passtate,paszip,paspanbr,pasauthnbr,passdocct,clientdef1,clientdef2,clientdef3,clientdef4,clientdef5,cctreserv1,cctreserv2,cctreserv3,cctreserv4,cctreserv5,cctreserv6,cctreserv7,cctreserv8,cctreserv9,cctresrv10,cctresrv11,cctresrv12,cctresrv13,cctresrv14,userfield,messagecd1,messagecd2,messagecd3,extractdte,batchctrl,clntid,clntsgmnt,clntregion,pprstate,sbmplsrvce,sbmpatresd,chgdate,chgtime,sbmcmpdtyp,sbmclarcd2,sbmclarcd3,adminrtesn,nda,anda,andaor,rxnormcode,mntsource,mntcarpror,mntgpilist,cpqspcprg,cpqspcpgin,cpqspcschd,rxnetwrkql,rxnetprcql,prsstate,sbmrphid,sbmrphidql,plantype,lstqualndc,lstqualgpi,ctschedid,prbasischd,regdisor,drugststbl,transben,pharsrvtyp,benunitcst,sbmmdpdamt,calprocfee,calpatstax,calplnstax,calprvnsel,calpscbrnd,calpscnonp,calpscbrnp,calcovgap,calingcstc,caldspfeec,phrprocfee,phrpatstax,phrplnstax,phrprvnsel,phrpscbrnd,phrpscnonp,phrpscbrnp,phrcovgap,phringcstc,phrdspfeec,posprocfee,pospatstax,posplnstax,posprvnsel,pospscbrnd,pospscnonp,pospscbrnp,poscovgap,posingcstc,posdspfeec,cltptpst,phrptpst,benstgql1,benstgamt1,benstgql2,benstgamt2,benstgql3,benstgamt3,benstgql4,benstgamt4,estgensav,spdacctrem,hlthplnamt,delayrsncd,medcdind,medcdid,medcdagnbr,medcdtcn,fmstier,fmsstatus,fmsdfltind,fmsbenlst,fmslstlvl3,fmslstlvl2,fmslstlvl1,fmsruleset,fmsrule,fmsproccd,newline
SOURCE_DB_LIST||||$[get_matching_db_list(AI_SOURCE_DB_LIST, SOURCE_LOGICAL_NAME, SOURCE_SYSTEM, SOURCE_LOWER)]
DO_SOURCE||||0
DO_CLEAN||||1
DO_LOOKUP||||0
LOOKUP_NAME_OVERRIDE||||rcex1p_lkp
LOOKUP_KEY||||{dxf_src_sys_id; rxclaimnbr; clmseqnbr; claimsts}
DO_QUERY_IN_PARALLEL||||1
FROM_CLAUSE_VEC||||$[ \r\nbegin\r\n\r\nlet string("")[int] from_clause_vec = [vector];\r\nlet decimal("")[int] indexes = [vector];\r\nlet decimal("") curr_table_index = -1;\r\nlet string("")[int] from_clause = [vector];\r\n\r\nif(QUERY_TYPE_ID == "1")\r\n    from_clause_vec = for ( let db in SOURCE_DB_INFO_VEC ) : "  FROM " + string_join(\r\n     for ( let tbl in SOURCE_TABLE_INFO_VEC ) :      \r\n        if ( tbl.table_name member ONLY_IN_FIRST_DB_TABLE_VEC )\r\n          SOURCE_DB_INFO_VEC[0].physical_schema + "." + tbl.table_name + tbl.sql_alias\r\n        else\r\n          db.physical_schema + "." + tbl.table_name + tbl.sql_alias,\r\n    "\\n     , ");\r\nelse if(QUERY_TYPE_ID == "2") begin\r\n    \r\n    for ( let db in SOURCE_DB_INFO_VEC ) \r\n     for(let sys in SOURCE_TABLE_INFO_VEC) \r\n       if(db.logical_schema == sys.schema_name) indexes = vector_append(indexes,index_of(db));\r\n\r\n    for ( let i = 0 , i < length_of(SOURCE_DB_INFO_VEC)/length_of(SOURCE_TABLE_INFO_VEC) ) begin\r\n      from_clause = [vector];\r\n      for ( let tbl in SOURCE_TABLE_INFO_VEC ) begin\r\n        curr_table_index = index_of(tbl);\r\n        if ( tbl.table_name member ONLY_IN_FIRST_DB_TABLE_VEC ) \r\n          from_clause = vector_append(from_clause, SOURCE_DB_INFO_VEC[indexes[curr_table_index]].physical_schema + "." + tbl.table_name + tbl.sql_alias);\r\n        else\r\n          from_clause = vector_append(from_clause, SOURCE_DB_INFO_VEC[indexes[curr_table_index] + i].physical_schema + "." + ALTERNATE_SOURCE + tbl.sql_alias);\r\n      end\r\n      from_clause_vec = vector_append(from_clause_vec, "  FROM " + string_join(from_clause, "\\n     , "));\r\n    end\r\nend\r\nelse if(QUERY_TYPE_ID == "3") from_clause_vec = [vector];\r\nresult :: from_clause_vec;\r\nend\r\n\r\n\r\n]
SOURCE_NAME||||dwxtracth_bk1.rcex1p
ALTERNATE_SOURCE||||NAE2202XT
