@
{18|Type|XXGrepository|Primary_Name|XXGgraph|_ab_object_schema|0|_ab_semantic_schema|6|eme_flatten_format|1|schema_version|34|root_id|0|ent_count|7089|rel_count|11779|}
{2010001002|XXGdirectory|0|1|1|0|{@{}@}}
{2010600005|XXGgraph|1|0|1|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl||{0|}}
{30001002|XXparameter|AB_DML_DEFS|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "/~$PUB_DB_XFR/db_list.xfr";
/*
fk_map_type has been defined to interpret the contents of the "FK_MAP" parameter.
*/
type fk_map_type =
record
  string("\|") target;
  string("\|") fsk_field;
  string("\|") nk_fields;
  string("\|") sk_lookup_name;
end;

type fk_map_fkl_type =
record
  string("\|") fsk_field;
  string("\|") nk_fields;
  string("\|") sk_lookup_name;
end;

type target_dml_info_type = 
record 
string("") target; 
dml_field_info_item_vec target_field_names;  
string("")[int] target_field_subrecord_name; 
end;

type ilm_split_attr_type = 
record 
string("") xfr; 
string("") fbe_expr; 
string("") data_file_name; 
string("") dml_path; 
end;

out :: convert_voids_to_strings(dml)=
begin
  let info_vec = record_info(dml);
  info_vec =
  for ( let field in info_vec ) begin
    if (starts_with(field.dml_type, "void("))
    begin
      field.dml_type = string_replace_first(field.dml_type, "void(", "string(");
      field.comment = first_defined(field.comment, "") + " - Blob or binary type, converted from void to string at runtime in graph map.mp";
    end
  end :
    field;
    
  out :: add_fields("record\\nend", info_vec);
end|8|9|RK|@{0|}}
{30001002|XXparameter|AB_GRAPH_RUN_MODE|batch|3|1|REKl|The graph run mode.|{0|}}
{30001002|XXparameter|AI_SERIAL_LOOKUP|$AI_SERIAL_LOOKUP|3|2|REK$|Export AI_SERIAL_LOOKUP to the environment.  This is needed for lookup catalogs to work if stdenv does not already export this.  For other projects, just set the _LOOKUP parameter to export.|{0|}}
{30001002|XXparameter|AB_MAX_RECORD_BUFFER|5000000|3|9|EFK|@{0|}}
{30001002|XXparameter|___Runtime_Parameters___||3|1|Kl||{0|}}
{30001002|XXparameter|RUN_ID|0|3|9|REFK|The numeric ID that identifies this run uniquely.  Defaults to 0, but should be set the same for all tables loaded in a single job by the invoking plan.|{0|}}
{30001002|XXparameter|SYS_ID||3|9|K|Obsolete|{0|}}
{30001002|XXparameter|EFF_DATE||3|9|K|Obsolete|{0|}}
{30001002|XXparameter|___PSet_Parameters___||3|1|Kl||{0|}}
{30001002|XXparameter|NOTES||3|2|FK$|Use this to save useful information, such as run times, record counts, and data sizes.  For example: 30.5 min, 122.5 M rec, 64.0 GB|{0|}}
{30001002|XXparameter|SOURCE_NAME|\{SYSTEM\}.\{SOURCE\}  // This must be set appropriately in the private pset.|3|9|RFK|The fully qualified "logical" name of the source dataset.  One period (.) is expected.|{0|}}
{30001002|XXparameter|SOURCE_LOWER|$[ string_downcase(SOURCE_NAME) ]|3|9|RK|The source name, downcased to avoid problems with case-insensitive file systems, such as Windows.|{0|}}
{30001002|XXparameter|TARGET_SYSTEM|rxclaim_ctrx.rcmddp_d_cms_pharmacy_cost|3|9|RFK|The name for the system providing this data source.  Defaults to a value based on the source name's prefix.|{0|}}
{30001002|XXparameter|SOURCE_SYSTEM|$[ re_replace(SOURCE_LOWER, "[.].*", "") ]|3|9|RK|The name for the system providing this data source.  Defaults to a value based on the source name's prefix.|{0|}}
{30001002|XXparameter|CLEAN_FILE_NAME_OP|AB_PARAMETER_ENV|3|10|RKd|Path to the clean file produced by a clean step.  Defaults to a file name based on the source name.|{0|}}
{30001002|XXparameter|CLEAN_FILE_NAME_OP:eme|$AI_MFS/clean.$SOURCE_SYSTEM/clean.$\{TARGET_SYSTEM\}.\{RUN_ID\}.dat.gz|3|9||@{0|}}
{30001002|XXparameter|CLEAN_FILE_NAME_OP:sandbox|$AI_MFS/clean.$SOURCE_SYSTEM/clean.$\{TARGET_SYSTEM\}.$\{RUN_ID\}.dat.gz|3|9||@{0|}}
{30001002|XXparameter|CLEAN_FILE_NAME|AB_PARAMETER_ENV|3|10|RKd|Path to the clean file produced by a clean step.  Defaults to a file name based on the source name.|{0|}}
{30001002|XXparameter|CLEAN_DML_FILE|$AI_DML/clean.$SOURCE_SYSTEM/clean.$SOURCE_LOWER.dml|3|9|K|Path to the record format for the clean source.  Defaults to a file name based on the source name.|{0|}}
{30001002|XXparameter|CLEAN_DML_ORIGINAL|$[expand_type(read_type(CLEAN_DML_FILE))]|3|9|K|@{0|}}
{30001002|XXparameter|READ_VOIDS_AS_STRINGS|False|13|9|FK|@{0|}}
{30001002|XXparameter|CLEAN_DML|$[
if(not READ_VOIDS_AS_STRINGS)
  CLEAN_DML_ORIGINAL
else
  convert_voids_to_strings(CLEAN_DML_ORIGINAL)
]|3|9|RK|The record format for the clean source.|{0|}}
{30001002|XXparameter|DO_PUBLISH_ILM_FL|False|13|9|FK|@{0|}}
{30001002|XXparameter|ILM_NAME|\{ILM\}  // This must be set appropriately in the private pset.|3|9|RFK|The name of the Intermediate Logical Model (ILM).  No periods (.) are allowed.|{0|}}
{30001002|XXparameter|ILM_DML_FILE|$AI_DML/ilm/ilm.$ILM_NAME.dml|3|9|REFK|Path to the record format for the ILM.  Defaults to a file name based on the ILM name.|{0|}}
{30001002|XXparameter|ILM_DML_FILE_PUBLIC_PATH|$[if(DO_PUBLISH_ILM_FL) PUB_DATAHUB_DML + "/ilm/ilm." + ILM_NAME + ".dml" else ""]|3|9|FK|Path to the record format for the ILM.  Defaults to a file name based on the ILM name.|{0|}}
{30001002|XXparameter|ILM_DML|$[ expand_type(read_file(ILM_DML_FILE)) ]|3|9|RK|The record format for the ILM.|{0|}}
{30001002|XXparameter|ILM_PSET|$[read_file(AI_PSET + "/setup.ilm/setup.ilm." + ILM_NAME + ".pset")]|3|9|RK|@{0|}}
{30001002|XXparameter|VARIATION||3|9|FK|Optional: The name of this variation of the aggregation.  For example, by_submitted_date or by_fill_date.  No periods (.) are allowed.  Defaults to an empty string.|{0|}}
{30001002|XXparameter|REJECTS_URL|mfile:$AI_MFS_REJECT/map.$SOURCE_SYSTEM/map.$SOURCE_LOWER.$VARIATION.$ILM_NAME.rejects.dat.gz|28|9|R|The URL for any rejected source records.  Exported from the Rejects dataset.|{0|}}
{30001002|XXparameter|ERRORS_URL|mfile:$AI_MFS_REJECT/map.$SOURCE_SYSTEM/map.$SOURCE_LOWER.$VARIATION.$ILM_NAME.errors.dat.gz|28|9|R|The URL for the mapping errors log.  Exported from the Errors dataset.|{0|}}
{30001002|XXparameter|ERRORS_DML|$AB_HOME/include/error-info.dml|7|2|RFf$|The DML record format for error logs, exported from the error port of the Map component.|{0|}}
{30001002|XXparameter|ILM_URL|mfile:$PUB_DATAHUB_MFS/ilm/$SOURCE_SYSTEM/ilm.$SOURCE_LOWER.$VARIATION.$ILM_NAME.$RUN_ID.dat.gz|28|9|R|The URL for the results of the mapping.  Exported from the ILM dataset.|{0|}}
{30001002|XXparameter|ERROR_SUMMARY_URL|file:$AI_SERIAL_REJECT/map.$SOURCE_SYSTEM/map.$SOURCE_LOWER.$VARIATION.$ILM_NAME.summary.dat|28|2|R$|The URL for the error summary file.  Exported from the Error Summary dataset.|{0|}}
{30001002|XXparameter|ERROR_SUMMARY_DML|metadata type =
record
  string("\\t") error;
  decimal("\\n") occurs;
  $[ add_fields("record\\nend", record_info(CLEAN_DML)) ][unsigned integer(1)] src_examples = [vector];
  $[ add_fields("record\\nend", record_info(ILM_DML)) ][unsigned integer(1)] ilm_examples = [vector];
end;|7|9|R|The record format of the error summary file.   Exported from the Error Summary dataset.|{0|}}
{30001002|XXparameter|FILTER_EXPR||20|9|FK|Optional: Filter expression to reduce the number of source records that are processed.|{0|}}
{30001002|XXparameter|MAPPING_XFR_BRE|$AI_XFR/map.$SOURCE_SYSTEM/gen.map.$SOURCE_LOWER.$ILM_NAME.xfr|3|9|FK|@{0|}}
{30001002|XXparameter|MAPPING_XFR_MANUAL|$AI_XFR/map.$SOURCE_SYSTEM/map.$SOURCE_LOWER.$ILM_NAME.xfr|3|9|FK|@{0|}}
{30001002|XXparameter|MAPPING_XFR|AB_PARAMETER_ENV|8|10|Kd|The XFR produced by the BRE.|{0|}}
{30001002|XXparameter|AB_CATALOG|$AI_CAT/map.$SOURCE_SYSTEM/map.$SOURCE_LOWER.$ILM_NAME.cat|3|9|REFK|Path to the lookup catalog.  Defaults to a file name based on the source and ILM names.|{0|}}
{30001002|XXparameter|___Intermediate_PSet_Parameters___||3|1|Kl||{0|}}
{30001002|XXparameter|MAP_REJECT_LIMIT|$[ if ( AB_APPCONF_EXECUTION ) "0" else AI_REJECT_LIMIT // This must be evaluated in the intermediate pset. ]|3|9|RFK|The number of rejected records to allow before checking the Map Reject Ramp for failure.|{0|}}
{30001002|XXparameter|MAP_REJECT_RAMP|$[ if ( AB_APPCONF_EXECUTION ) "-1" else AI_REJECT_RAMP // This must be evaluated in the intermediate pset. ]|3|9|RFK|0.###: The rate of rejected records (after the Map Reject Limit) to allow.  If this rate is exceeded, then the graph will fail.  Defaults to a project setting.|{0|}}
{30001002|XXparameter|___ACE_Template_Parameters___||3|1|Kl||{0|}}
{30001002|XXparameter|ACE_LOOKUP_PROJECT_LIST|$[ re_replace(AI_PROJECT_DIR, ".*/", "")  // This may be overridden in the intermediate pset. ]|3|9|FK|A comma-separated list of EME project basenames (excluding their directory part) that should be searched for lookup files.  Defaults to the current project.|{0|}}
{30001002|XXparameter|ACE_CATALOG_CONTENTS||3|2|FK$|Optional: The contents of the lookup catalog, if any.|{0|}}
{30001002|XXparameter|___Operational_Console_Parameters___||3|1|Kl||{0|}}
{30001002|XXparameter|OC_INFO|Source: $SOURCE_NAME
ILM: $ILM_NAME
Filter: $FILTER_EXPR
Notes: $NOTES|3|9|RFK|Information to display in the Operational Console.|{0|}}
{30001002|XXparameter|!ab_compatibility|4.0.2.0|3|9|P|@{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
{30001002|XXparameter|MAPPING_XFR:eme|$[read_file(MAPPING_XFR_BRE)]|3|9||@{0|}}
{30001002|XXparameter|MAPPING_XFR:sandbox|$[
begin

let string("") mapping_xfr;
let string("") error_msg = 'MAPPING_XFR is missing for "' + ILM_NAME + '", hence please create either "' + MAPPING_XFR_MANUAL + '" or "' + MAPPING_XFR_BRE + '" transform xfr.';

if ( file_information(MAPPING_XFR_MANUAL).found )
        mapping_xfr = read_file(MAPPING_XFR_MANUAL);
else if ( file_information(MAPPING_XFR_BRE).found )
        mapping_xfr = read_file(MAPPING_XFR_BRE);
else
        force_error(error_msg);
        
result :: mapping_xfr;

end;
]|3|9||@{0|}}
{30001002|XXparameter|CLEAN_FILE_NAME:eme|$AI_MFS/clean.$SOURCE_SYSTEM/clean.$\{SOURCE_LOWER\}.\{RUN_ID\}.dat.gz|3|9||@{0|}}
{30001002|XXparameter|CLEAN_FILE_NAME:sandbox|$AI_MFS/clean.$SOURCE_SYSTEM/clean.$\{SOURCE_LOWER\}.$\{RUN_ID\}.dat.gz|3|9||@{0|}}
{30001002|XXparameter|_____Parameters_related_with_Custom_LKP|@3|9|K|Below parameters are only for a special lookup scenario|{0|}}
{30001002|XXparameter|CUSTOM_MLKP_IDS_LIST||3|9|FK|Please provide list of ids datasets where custom lookup will be performed|{0|}}
{30001002|XXparameter|DO_CUSTOM_FSK_LKP|False|13|9|FK|@{0|}}
{30001002|XXparameter|REDUCED_ICFF_IDS_LIST||3|9|FK|Provide actual name of ids dataset with a pipe separated value |{0|}}
{30001002|XXparameter|IDS_LKP_ICFF_NK_KEY_EXPR_LIST|\|\|\|\|\|\|\|\|\||3|9|FK|Natural key expression , each NK expression should have pipe separator|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR_LIST|\|\|\|\|\|\|\|\|\||3|9|FK|Provide valid sort key expression|{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR_LIST|\|\|\|\|\|\|\|\|\||3|9|FK|Provide valid key expression|{0|}}
{30001002|XXparameter|GET_ALL_RECORD_FROM_IDS_LIST|0\|0\|0\|0\|0\|0\|0\|0\|0\|0|3|9|FK|If a value 1 is passed , a get all record process executes via Normalize lookup process|{0|}}
{30001002|XXparameter|NUM_OF_PRE_ICFF_LOOKUP|$[if(is_blank(REDUCED_ICFF_IDS_LIST)) 0 else length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|"))]|1|9|K|@{0|}}
{30001002|XXparameter|IDS_LKP_DATASET_DML_VEC|AB_PARAMETER_ENV|3|10|Kd|IDS ICFF DML file name based on passed list in REDUCED_ICFF_IDS_LIST Parameter|{0|}}
{30001002|XXparameter|IDS_LKP_DATASET_FILE_VEC|$[
begin 
 let int v_vec_len=NUM_OF_PRE_ICFF_LOOKUP;
 let string("")[v_vec_len] v_ids_dataset=string_split(REDUCED_ICFF_IDS_LIST,"\|");
 let string("")[v_vec_len] v_file_path_vec=allocate_with_defaults();
 let int i=0;
  for (i, i < v_vec_len )
      begin
        let string("") subject_area=string_split(v_ids_dataset[i],".")[0];
        let string("") file_nm=if(string_index(v_ids_dataset[i],"reduced")) string_split(v_ids_dataset[i],".")[1] + ".reduced" 
                                else string_split(v_ids_dataset[i],".")[1] ; 
        v_file_path_vec[i]=if(re_index(v_ids_dataset[i],"_c([0-9])$")) PUB_DATAHUB_MFS_LOOKUP + "/ids/" + subject_area + "/columnar/" + file_nm + ".dat.gz"
                           else   PUB_DATAHUB_MFS_LOOKUP + "/ids/" + subject_area + "/one/" + file_nm + ".dat.gz" ;
       end
 result :: vector_slice(vector_concat(v_file_path_vec , make_constant_vector(10,"")), 0, 9);
end 
]|3|9|K|IDS ICFF file name based on passed list in REDUCED_ICFF_IDS_LIST Parameter|{0|}}
{30001002|XXparameter|DRIVER_TO_LOOKUP_COL_XFR_LIST|out :: reformat(in) =
begin
  out.* :: in.*;
end;   \| 
out :: reformat(in) =
begin
  out.* :: in.*;
end;   \|
out :: reformat(in) =
begin
  out.* :: in.*;
end;  \|
out :: reformat(in) =
begin
  out.* :: in.*;
end; \|
out :: reformat(in) =
begin
  out.* :: in.*;
end;  \|
out :: reformat(in) =
begin
  out.* :: in.*;
end;  \|
out :: reformat(in) =
begin
  out.* :: in.*;
end;  \|
out :: reformat(in) =
begin
  out.* :: in.*;
end;  \|
out :: reformat(in) =
begin
  out.* :: in.*;
end;  \|
out :: reformat(in) =
begin
  out.* :: in.*;
end;|3|9|FK|A Manual xfr will be provided for each ids list with pipe separated |{0|}}
{30001002|XXparameter|NK_DML_VEC|$[if(NUM_OF_PRE_ICFF_LOOKUP > 0 )
begin 
 let int v_vec_len=NUM_OF_PRE_ICFF_LOOKUP;
 let string("")[v_vec_len] v_ids_dataset=string_split(REDUCED_ICFF_IDS_LIST,"\|");
 let string("")[v_vec_len] v_nk_key_vec=string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|");
 let string("")[v_vec_len] v_nk_key_dml_vec=allocate_with_defaults();
 
 let int i=0;
  for (i, i < v_vec_len )
      begin
        let string("") current_dml=read_type(IDS_LKP_DATASET_DML_VEC[i]);
        let string("")[int] v_dml_info_nm_vec=record_info_item(current_dml,item="name");
        let string("")[int] v_dml_info_dml_type_vec=record_info_item(current_dml,item="dml_type");
        let string("")[int] v_dml_info_def_val_vec=record_info_item(current_dml,item="default");
        let string("")[int] v_nk_key_local_vec=string_split(string_filter_out(string_split(v_nk_key_vec[i],"\{")[1],"\}"),";");
        let int nk_col_len=length_of(v_nk_key_local_vec);
        let string("") v_record="record \\n ";
        let int j=0;
         for (j ,j < nk_col_len )
              begin
               let int v_index=vector_search(v_dml_info_nm_vec,string_lrtrim(v_nk_key_local_vec[j]));
               let string("") v_default_val=if(v_index != -1 and !is_blank(v_dml_info_def_val_vec[v_index])) "=" + v_dml_info_def_val_vec[v_index] + " ; \\n"
                                              else  " ; \\n" ;
               v_record = if( v_index != -1 )  v_record + v_dml_info_dml_type_vec[v_index] + " " + v_dml_info_nm_vec[v_index] + v_default_val
                          else force_error(string_concat(" All natural key column must exist in ids pub_datahub_dml:   This nk key column :- " ,v_dml_info_def_val_vec[v_index] , " is not present in ids dml"))  ;
                // Construct a nk record from ids lookup dataset
              end  
           v_nk_key_dml_vec[i]= v_record  + " \\n end;" ;       
       end
 result :: vector_slice(vector_concat(v_nk_key_dml_vec, make_constant_vector(10, "string(1)")), 0, 9) ;
end 


else  make_constant_vector(10, "string(1)");
]|3|9|K|@{0|}}
{30001002|XXparameter|DRIVER_TO_LOOKUP_COL_XFR_VEC|$[
 vector_slice(vector_concat(string_split(DRIVER_TO_LOOKUP_COL_XFR_LIST,"\|"), make_constant_vector(10,"out :: reformat(in) =
begin
  out.* :: in.*;
end; ")), 0, 9)]|3|9|K|This xfr will be used in multi reformat to reformat driver to lookup hash columns |{0|}}
{30001002|XXparameter|REDUCED_LKP_FILE_PATH_VEC|$[ 
begin 
 let int v_vec_len=NUM_OF_PRE_ICFF_LOOKUP;
 let string("")[v_vec_len] v_ids_dataset=string_split(REDUCED_ICFF_IDS_LIST,"\|");
 let string("")[v_vec_len] v_lookup_path_vec=allocate_with_defaults();
 let int i=0;
  for (i, i < v_vec_len )
      begin
        let string("")[int] subject_entity_vec = string_split(v_ids_dataset[i],".");
        let string("") subject_entity= if(length_of(subject_entity_vec) == 3) subject_entity_vec[1] + "." + subject_entity_vec[2] else subject_entity_vec[1];
        v_lookup_path_vec[i]=AI_SERIAL_LOOKUP + "/lookup." + SOURCE_SYSTEM + "/lookup." + SOURCE_LOWER + "." + subject_entity + ".dat" ;
       end
 result :: vector_slice(vector_concat(v_lookup_path_vec,make_constant_vector(10,"")), 0, 9);
end 

]|3|9|FK|Lookup file URL|{0|}}
{30001002|XXparameter|!validation_exclusions|1\|~\{52\|1\|\{53\|error_suppression\|2\|\{56\|write_event_log.Event_Log_Entry\|\}\{53\|status_info\|4\|\{56\|PARAM_failure\|\}\{56\|PARAM113\|\}\{51\|1\|DA_parameter\|\{56\|transform\|\}\}\{\}\}\}\}|3|9|P|@{0|}}
{30001002|XXparameter|REDUCED_LOOKUP_SELECT_EXPR|$[begin
result ::  if (string_index(FILTER_EXPR,"lookup")) "" else FILTER_EXPR ;
end ]|3|9|RFK|This will be filter applied in reduced lookup , if same select filter is used that is created in reduced lookup this expression will become blank|{0|}}
{30001002|XXparameter|ARCHIVE_ENABLE_FLAG_VEC|AB_PARAMETER_ENV|3|10|Kd|This Flag will decide which archive will run|{0|}}
{30001002|XXparameter|IDS_LKP_DATASET_DML_VEC:eme|$[
begin 
let int v_vec_len=NUM_OF_PRE_ICFF_LOOKUP;
let string("")[v_vec_len] v_ids_dataset=string_split(REDUCED_ICFF_IDS_LIST,"\|");
let string("")[v_vec_len] v_dml_path_vec=allocate_with_defaults();
let int i=0;


let pset_info_type load_pset = allocate_with_defaults();
let string("") is_ids_dml_with_nk_flag="False";

  for (i, i < v_vec_len )
        v_dml_path_vec[i]= if(!ends_with(v_ids_dataset[i], ".reduced"))
                                first_defined(PUB_DATAHUB_DML + "/nk/" + string_split(v_ids_dataset[i],".")[0] + "/" + v_ids_dataset[i] + ".dml", PUB_DATAHUB_DML + "/" + string_split(v_ids_dataset[i],".")[0] + "/" + v_ids_dataset[i] + ".dml")
                           else
                                PUB_DATAHUB_DML + "/" + string_split(v_ids_dataset[i],".")[0] + "/" + v_ids_dataset[i] + ".dml";

result :: vector_slice(vector_concat(v_dml_path_vec,make_constant_vector(10,"")), 0, 9);
end 
]|3|9||@{0|}}
{30001002|XXparameter|IDS_LKP_DATASET_DML_VEC:sandbox|$[
begin 
let int v_vec_len=NUM_OF_PRE_ICFF_LOOKUP;
let string("")[v_vec_len] v_ids_dataset=string_split(REDUCED_ICFF_IDS_LIST,"\|");
let string("")[v_vec_len] v_dml_path_vec=allocate_with_defaults();
let int i=0;


let pset_info_type load_pset = allocate_with_defaults();
let string("") is_ids_dml_with_nk_flag="False";
let decimal("") tnl_index=-1;
let string("") subject_area="";
let string("") pset_name="";

  for (i, i < v_vec_len )
  begin
        subject_area=string_split(v_ids_dataset[i],".")[0];
        pset_name=AI_PSET + "/load." + subject_area + "/load." + string_replace(v_ids_dataset[i], ".reduced", "") + ".pset";

        if (file_information(pset_name).found)
        begin
                load_pset = pset_info(read_file(pset_name));
                tnl_index = vector_search(load_pset.parameters, [record name "IS_IDS_DML_WITH_NK" value "" interpretation "" value_in_file 0 interpret_file_contents 0 overridable 1], \{name\});
                is_ids_dml_with_nk_flag=if(tnl_index != -1) load_pset.parameters[tnl_index].value else "False";

                v_dml_path_vec[i]=if(is_ids_dml_with_nk_flag == "True" && ! ends_with(v_ids_dataset[i], ".reduced"))
                                        PUB_DATAHUB_DML + "/nk/" + subject_area + "/" + v_ids_dataset[i] + ".dml"
                                   else
                                        PUB_DATAHUB_DML + "/" + subject_area + "/" + v_ids_dataset[i] + ".dml";
       end
        else
                v_dml_path_vec[i]=PUB_DATAHUB_DML + "/" + subject_area + "/" + v_ids_dataset[i] + ".dml";

  end
result :: vector_slice(vector_concat(v_dml_path_vec,make_constant_vector(10,"")), 0, 9);
end 
]|3|9||@{0|}}
{30001002|XXparameter|ARCHIVE_ENABLE_FLAG_VEC:eme|$[
begin
let string("")[int] v_reduced_icff_vec_list=string_split_no_empty(REDUCED_ICFF_IDS_LIST,"\|");
let decimal(1)[10] v_archive_flag_vec=make_constant_vector(10,0);
let int i=0;
let string("")[int] v_two_step_lkp_vec=string_split(string_filter_out(read_file(PUB_DXF_META + "/two_step_lookup_list.dat"),"\\r"),"\\n");
let int v_ids_vec_len=length_of(v_reduced_icff_vec_list);
for (i,i < v_ids_vec_len)
     begin 
        v_archive_flag_vec[i]= v_reduced_icff_vec_list[i] member v_two_step_lkp_vec ;
     end

result :: v_archive_flag_vec ;
end ]|3|9||@{0|}}
{30001002|XXparameter|ARCHIVE_ENABLE_FLAG_VEC:sandbox|$[
begin
let string("")[int] v_reduced_icff_vec_list=string_split_no_empty(REDUCED_ICFF_IDS_LIST,"\|");
let decimal(1)[10] v_archive_flag_vec=make_constant_vector(10,0);
let int i=0;
let string("")[int] v_two_step_lkp_vec=if(file_information(PUB_DXF_META + "/two_step_lookup_list.dat").found) string_split(string_filter_out(read_file(PUB_DXF_META + "/two_step_lookup_list.dat"),"\\r"),"\\n") else allocate_with_defaults();
let int v_ids_vec_len=length_of(v_reduced_icff_vec_list);
for (i,i < v_ids_vec_len)
     begin 
        v_archive_flag_vec[i]= v_reduced_icff_vec_list[i] member v_two_step_lkp_vec ;
     end

result :: v_archive_flag_vec ;
end ]|3|9||@{0|}}
{30001002|XXparameter|CLEAN_DML_FILE_OP|$[ read_file(string_concat(AI_DML,"/clean.",SOURCE_SYSTEM,"/clean.",TARGET_SYSTEM,".dml"))]|3|9|RFK|@{0|}}
{30001002|XXparameter|DRIVER_SOURCE_LOGICAL_NAME|$SOURCE_SYSTEM|3|9|RFK|Logical Schema Name for the Source DB. Defaults to Physical Schema Name i.e. SOURC_SYSTEM parameter|{0|}}
{30001002|XXparameter|_UseNewErrorLogDML|True|13|1|Hl||{0|}}
}}@0|@0|0|0|0|892000|480000|0|map_bkp_11_26|Kimbo Mundy|Created 5/27/2011 11:27:06 PM|1|10|0||9||34817|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1696000|488000|3|}}
{2010703001|XXGgraphinfo|2|0|3|0|{@{}@1|3.5.1|{2|1|1|}Job 'map_create_clean' Execution Status Report


Job "map_create_clean" Execution started at Monday, June 04, 2018 03:49:32
Job completed successfully at Monday, June 04, 2018 03:50:52

------------------------------
Job Statistics:

Job status at termination: Done
Run time (wall clock): 0:01:20
Run performed by user akuma322
Total data moved through all flows: 132438 records (80400158 bytes)
Total CPU time (all processes): 174 seconds
Average CPU utilization across all nodes: 0.00 percent
||# Make sure the serial directories exist.
mkdir -m 2775 -p \\
  "$AI_SERIAL_LOG/map.$SOURCE_SYSTEM" \\
  "$AI_SERIAL_REJECT/map.$SOURCE_SYSTEM"

# Make sure the multifile directories exist.
for d in "$PUB_DATAHUB_MFS/ilm/$SOURCE_SYSTEM" "$AI_MFS_REJECT/map.$SOURCE_SYSTEM"; do
  d="$(echo $d \| sed 's/mfile://')"
  p="$(dirname "$d ")"
  [[ -d "$p" ]] \|\| m_mkdir -mode 2775 "$p"
  [[ -d "$d" ]] \|\| m_mkdir -mode 2775 "$d"
done

export AB_REPORT="summary=$AI_SERIAL_LOG/map.$SOURCE_SYSTEM/map.$SOURCE_LOWER.$ILM_NAME.summary.log $AB_REPORT"

# This is a hack to make sure that all *_LOOKUP parameters are exported to the environment so that AB_CATALOG works as expected.
eval "$(set \| sed -n '/_LOOKUP=/s/\\(^[^=]*\\).*/export \\1="$\\1"/p')"
|if [[ ( x"$AB_APPCONF_EXECUTION" = x"true" \|\| x"$AB_APPCONF_EXECUTION" = x"True" ) && -f "$AI_RAW_TRACKING_FILE" ]]; then
  # These grep patterns need tweaking.
  AB_REPORT="monitor,flows totals" m_report_tracking -phase-end "$AI_RAW_TRACKING_FILE" \| egrep '_Filter * out\|Map_.** out0$\| dup\| [out0%]*reject\| second' 1>&2
fi


|@CLAIM_DW_SBOXSt|33206783|}}
{2010705002|XXGrunsettings|3|0|5|0|{@{}@DEV-apvrd55593||||1|60|0|1|1|0|0|0|0|0|1|0|0|1|2|1|1|0|0|0|@16|}}
{2010242002|XXGface|4|0|7|0|{@{}@Arial Narrow|32768|100|0|}}
{2010240003|XXGlegend|5|0|9|0|{@{}@Runs Once per Source/ILM Pair|509905|135440|305000|105000|315000|24000|14239|}}
{2010242002|XXGface|6|0|11|0|{@{}@Arial|32768|160|1|}}
{2010240003|XXGlegend|7|0|13|0|{@{}@Map a Cleansed Source to an ILM and multiple SPLIT files|15000|35155|65000|35000|763000|56000|14393|}}
{2010242002|XXGface|8|0|15|0|{@{}@Arial|32768|360|1|}}
{2010210004|XXGflow|9|0|17|0|{@{}@384|.5|.5|{0|}14542|2065|}}
{2010210004|XXGflow|10|0|19|0|{@{}@384|.5|.5|{0|}14553|2065|}}
{2010210004|XXGflow|11|0|21|0|{@{}@384|.5|.5|{0|}14551|529|}}
{2010210004|XXGflow|12|0|23|0|{@{}@384|.5|.5|{8|405000|209000|425000|209000|504000|209000|525000|209000|}14550|17|}}
{2010210004|XXGflow|13|0|25|0|{@{}@384|.5|.5|{0|}14548|2065|}}
{2010210004|XXGflow|14|0|27|0|{@{}@384|.5|.5|{0|}14546|17|}}
{2010503005|XXGfvertex|15|0|29|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Input_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|Layout|mfile:$CLEAN_FILE_NAME|3|2|$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("read", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$CLEAN_FILE_NAME", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|!validation_exclusions|1\|\@\{52\|1\|\{53\|error_suppression\|2\|\{56\|\|\}\{53\|status_info\|4\|\{56\|VE_validation_extension_error\|\}\{56\|CTL20300\|\}\{51\|1\|DA_custom_validation_id\|\{56\|AI#customValidations#check_component_naming_standards\|\}\}\{56\|Component name does not follow TU naming standards.
\|\}\}\}\}|3|9|P|@{0|}}
{30001002|XXparameter|read_metadata|$CLEAN_DML|3|9||@{0|}}
}}@0|@83231|375368|51000|185000|56000|50000|14543|Clean Source||@1|1000|-1||6||33025|-1|-1|}}
{2010203004|XXGoport|16|0|31|0|{@{}@106000|204000|11000|11000|read|0.0|@@@2160|0|}}
{2010503005|XXGfvertex|17|0|35|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|read_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010203004|XXGoport|18|0|37|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|read|0.0|@@@2164|0|}}
{2010503005|XXGfvertex|19|0|40|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|Layout|mfile:$CLEAN_FILE_NAME_OP|3|2|$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$CLEAN_FILE_NAME_OP", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|!validation_exclusions|1\|\@\{52\|1\|\{53\|error_suppression\|2\|\{56\|\|\}\{53\|status_info\|4\|\{56\|VE_validation_extension_error\|\}\{56\|CTL20300\|\}\{51\|1\|DA_custom_validation_id\|\{56\|AI#customValidations#check_component_naming_standards\|\}\}\{56\|Component name does not follow TU naming standards.
\|\}\}\}\}|3|9|P|@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$CLEAN_DML_FILE_OP|3|9||@{0|}}
}}@1|@1088231|380368|51000|185000|56000|50000|14549|Join Files Output||@1|1000|-1||6||33025|-1|-1|}}
{2010202004|XXGiport|20|0|42|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|21|0|45|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|22|0|47|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010600005|XXGgraph|23|0|50|0|{Subgraph created from graph "map"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!validation_exclusions|1\|\@\{52\|1\|\{53\|error_suppression\|2\|\{56\|\|\}\{53\|status_info\|4\|\{56\|VE_validation_extension_error\|\}\{56\|CTL20300\|\}\{51\|1\|DA_custom_validation_id\|\{56\|AI#customValidations#check_component_naming_standards\|\}\}\{56\|Component name does not follow TU naming standards.
\|\}\}\}\}|3|9|P|@{0|}}
}}@0|@1186000|118500|29000|316000|532000|306000|14420|Lookups for View Data|Sripavan Pulikonda|Created 2/7/2017 2:41:39 AM|1|10|0||9||32769|{0|}0|0|{0|}{0|}{0|}{0|}.2857142984867096|532000|305000|3|}}
{2010503005|XXGfvertex|24|0|52|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[0], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[0], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@165000|89000|187000|109000|56000|50000|1|Lookup 1||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|25|0|54|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|26|0|56|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[1], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[1], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@250000|89000|272000|109000|56000|50000|9|Lookup 2||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|27|0|58|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|28|0|60|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[2], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[2], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@335000|89000|357000|109000|56000|50000|3|Lookup 3||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|29|0|62|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|30|0|64|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[3], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[3], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@420000|89000|442000|109000|56000|50000|4|Lookup 4||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|31|0|66|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|32|0|68|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[4], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[4], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@160000|209000|182000|229000|56000|50000|5|Lookup 5||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|33|0|70|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|34|0|72|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[5], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[5], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@245000|209000|267000|229000|56000|50000|6|Lookup 6||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|35|0|74|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|36|0|76|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[6], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[6], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@415000|209000|437000|229000|56000|50000|7|Lookup 7||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|37|0|78|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|38|0|80|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[8], ",/~")[2] ]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{src_sys_id; cd_tbl_nm; cd\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|$[ string_split((for ( let line in re_split_no_empty(ACE_CATALOG_CONTENTS, "[\\r\\n]+") ) : line)[8], ",/~")[1] ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 0 datasets NULL]]|3|9||@{0|}}
}}@0|@330000|209000|352000|229000|56000|50000|8|Lookup 8||@1|100|-1||6||33089|-1|-1|}}
{2010503005|XXGfvertex|39|0|82|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|40|0|84|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_File.mdc|3|9|Pf|@{0|}}
{30001002|XXparameter|RecordFormat|record
  string(",") lookup_name, key, data_file;
  string("\\n") dml_file;
end|3|1|l|@{0|}}
{30001002|XXparameter|key|\{lookup_name\}|3|2|$|@{0|}}
{30001002|XXparameter|Layout|file:$AB_CATALOG|3|2|$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("lookup", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$AB_CATALOG", "pdl") create_update 1 is_db 0]]]]]|3|9||@{0|}}
}}@0|@49419|89017|71000|109000|56000|50000|10|Lookup Catalog||@1|1000|0||6||33089|-1|-1|}}
{2010503005|XXGfvertex|41|0|86|0|{Lookup files are components containing shared data. Use lookup files with the DML lookup functions to access records according to a key.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|9|RF||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010501005|XXGpvertex|42|0|88|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|transform0|$MAPPING_XFR|3|9||@{0|}}
{30001002|XXparameter|reject_threshold|Use limit/ramp|3|1|l|@{0|}}
{30001002|XXparameter|limit|$MAP_REJECT_LIMIT|3|2|$|@{0|}}
{30001002|XXparameter|ramp|$MAP_REJECT_RAMP|3|2|$|@{0|}}
{30001002|XXparameter|logging|True|3|1|l|@{0|}}
{30001002|XXparameter|log_reject|1000|3|1|l|@{0|}}
{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|!validation_exclusions|1\|\@\{52\|1\|\{53\|error_suppression\|2\|\{56\|\|\}\{53\|status_info\|4\|\{56\|VE_validation_extension_error\|\}\{56\|CTL20300\|\}\{51\|1\|DA_custom_validation_id\|\{56\|AI#customValidations#check_component_naming_standards\|\}\}\{56\|Component name does not follow TU naming standards.
\|\}\}\}\}|3|9|P|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|doc_transform||3|2|$|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@1|@501681|351431|536000|156000|134000|107000|14552|Map to ILM (via the BRE)|Ab Initio Software|Built-in|1|100|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|43|0|90|0|{@{}@669000|204000|11000|11000|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|44|0|93|0|{@{}@559000|262000|11000|11000|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|45|0|95|0|{@{}@599000|262000|11000|11000|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|46|0|97|0|{@{}@639000|262000|11000|11000|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|47|0|99|0|{@{}@526000|204000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|48|0|102|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record utf8 string(big endian integer(4)) component; big endian integer(4) port_index; utf8 string(big endian integer(4)) parameter; utf8 string(big endian integer(4)) message; record utf8 string(big endian integer(4)) code; big endian integer(4) parent_index; record utf8 string(big endian integer(4)) name; utf8 string(big endian integer(4)) value; end [big endian integer(4)] attributes; end [big endian integer(4)] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('') event_type; string('') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1311717854|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|49|0|104|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|50|0|108|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|51|0|111|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|52|0|114|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|53|0|117|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|54|0|120|0|{Adds Source IDs and Record Counts.  Also logs the totals.

We use a Normalize here so that other kinds of filtering or expansion could be done as well.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|transform|include "/~$PUB_DXF_XFR/dataset_id.xfr";
include "/~$PUB_DXF_XFR/sys_id.xfr";
include "/~$PUB_DXF_XFR/standardize.xfr";
include "/~$PUB_DXF_DML/dxf_job_event_text.dml";

let long dxf_src_sys_id = name_to_sys_id($"DRIVER_SOURCE_LOGICAL_NAME");
let long dxf_src_dataset_id = /* if ( this_partition() == 0 ) get_dataset_id("$DATASET_ID_LOOKUP_PATH") else */ 0;  /* The index into the Source Process table. */
let long stride = number_of_partitions();
let long dxf_src_rec_cnt = this_partition() - stride + 1; /* The number of records processed from this source.  Also used as a record number on each source record. */
let string(unsigned integer(1)) dxf_src_file_name = "";
let long v_record_count = 0;
let start_time = now();
//let date("YYYYMMDD") prev_month_start_dt = date_add_months((date("YYYYMMDD"))string_concat((string(""))(date("YYYYMM"))start_time, "01"), -1);
//let date("YYYYMMDD") prev_month_end_dt = datetime_add((date("YYYYMMDD"))string_concat((string(""))(date("YYYYMM"))start_time, "01"), -1);

/* Always output 1 record.  Also increments the record counter. */
out :: length(in) =
begin
  dxf_src_rec_cnt = dxf_src_rec_cnt + stride;
  out :: 1;
end;


/* Add Source ID and Record Number.  Remove trailing blanks from strings. */
out :: normalize(in, index) =
begin
  dxf_src_file_name = in.filename;
  v_record_count = v_record_count + 1;
  //out.(*, name == "month_start_dt") :1: prev_month_start_dt;
  //out.(*, name == "month_end_dt") :2: prev_month_end_dt;
  out.(*, name == "dxf_src_sys_id") :3: first_defined(in.src_env_sk, dxf_src_sys_id);
  out.(*, name == "dxf_src_dataset_id") :4: first_defined(in.dxf_src_dataset_id, dxf_src_dataset_id); //added "first_defined(in.dxf_src_dataset_id, dxf_src_dataset_id)" to pass dxf_src_dataset_id as it is,if it is comming from source. 
  out.(*, name == "dxf_src_rec_cnt") :5: dxf_src_rec_cnt;
  out.(*, name == "dxf_src_file_name") :6: dxf_src_file_name;
  out.(*, form == "string") :7: (string("\\x01"))string_trim_no_empty(in.*);
  out.* :: in.*;
end;

/* Write the Source ID and Record Count to the log. */
log_event :: final_log_output() =
begin
  let dxf_job_event_text_t job_info = [record
    dxf_src_dataset_id  dxf_src_dataset_id,  // Only set in partition 0.
    dxf_src_file_name   dxf_src_file_name,
    dxf_src_rec_cnt     v_record_count,
    dataset_start_dttm  start_time,
    dataset_end_dttm    now(),
  ];

  log_event.event_type :: "DXF Job Log: 0"; // We need to include a fake dataset ID for the rollup key that follows.
  log_event.event_text :: job_info.as_event_text();
end;|8|9|RFKj|Required and optional DML functions|{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS|3|2|$|@{0|}}
{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: in = out
metadata type: out = in|3|9||@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@1|@860000|340833|683000|208000|145000|126000|14547|Normalize: Add Job ID & Record Count|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|55|0|122|0|{@{}@827000|264000|11000|11000|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|56|0|125|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|57|0|127|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|58|0|129|0|{@{}@749000|333000|11000|11000|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|59|0|131|0|{@{}@673000|264000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|60|0|134|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RF$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1375403554|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|61|0|136|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|62|0|139|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|63|0|142|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|64|0|145|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|65|0|148|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|66|0|158|0|{Subgraph created from graph "map"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|FILTER_EXPR||20|8|FK=|Optional: Filter expression to reduce the number of source records that are processed.|{0|}}
{30001002|XXparameter|!validation_exclusions|1\|\@\{52\|1\|\{53\|error_suppression\|2\|\{56\|\|\}\{53\|status_info\|4\|\{56\|VE_validation_extension_error\|\}\{56\|CTL20300\|\}\{51\|1\|DA_custom_validation_id\|\{56\|AI#customValidations#check_component_naming_standards\|\}\}\{56\|Component name does not follow TU naming standards.
\|\}\}\}\}|3|9|P|@{0|}}
}}@0|@262000|356500|245000|176000|974000|446000|14442|Optional Filter|Sripavan Pulikonda|Created 7/8/2011 9:58:10 AM|1|10|0||9||32769|{0|}0|0|{0|}{0|}{0|}{0|}.15416237711906433|973000|532000|3|}}
{2010240003|XXGlegend|67|0|160|0|{@{}@This File is added to provide audit 
capability and verification on Test and Filtered record|383000|415000|0|0|0|0|6602|}}
{2010242002|XXGface|68|0|162|0|{@{}@Arial Rounded MT Bold|32768|120|0|}}
{2010210004|XXGflow|69|0|164|0|{@{}@384|.5|.5|{8|451000|209000|471000|209000|572000|209000|593000|209000|}6612|17|}}
{2010210004|XXGflow|70|0|166|0|{@{}@384|.4677419364452362|.5|{12|664000|214000|684000|214000|684000|274000|605000|274000|605000|344000|626000|344000|}4280|19|}}
{2010210004|XXGflow|71|0|168|0|{@{}@384|.5|.5|{8|664000|204000|694000|204000|814000|204000|835000|204000|}4284|17|}}
{2010210004|XXGflow|72|0|170|0|{@{}@384|.5|.5|{8|697000|344000|717000|344000|811000|344000|832000|344000|}4282|17|}}
{2010210004|XXGflow|73|0|172|0|{@{}@384|.5|.5|{8|181000|209000|201000|209000|299000|209000|320000|209000|}6617|17|}}
{2010210004|XXGflow|74|0|174|0|{@{}@384|.5|.5|{0|}6614|2065|}}
{2010501005|XXGpvertex|75|0|176|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|9|Pf|@{0|}}
{30001002|XXparameter|condition|$AB_APPCONF_EXECUTION|3|2|$|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@1|@836000|174000|846000|183000|50000|41000|4285|Copy Out|||1|10|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|76|0|178|0|{@{}@895000|199000|11000|11000|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|77|0|180|0|{@{}@836000|199000|11000|11000|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|78|0|183|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|79|0|185|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|80|0|188|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010503005|XXGfvertex|81|0|194|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ FILTER_EXPR != "" ]|3|9||@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$AI_MFS_REJECT/test.deselect.$SOURCE_LOWER.$ILM_NAME.$RUN_ID.dat.gz", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS_REJECT/test.deselect.$SOURCE_LOWER.$ILM_NAME.$RUN_ID.dat.gz|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata||3|8|s=|@{0|}}
}}@1|@513000|345000|0|0|0|0|6601|Deselect File|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010202004|XXGiport|82|0|196|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|83|0|199|0|{Represents one file, many files, or a multifile as an output from your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0062|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|84|0|201|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010501005|XXGpvertex|85|0|205|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|9|Pf|@{0|}}
{30001002|XXparameter|condition|$AB_APPCONF_EXECUTION|3|2|$|@{0|}}
{30001002|XXparameter|Layout|file:$AI_SERIAL|3|2|$|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
}}@1|@806000|293000|843000|306000|56000|72000|4283|For BRE|||1|10|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|86|0|207|0|{@{}@833000|339000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|87|0|210|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|88|0|212|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|89|0|216|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Interleave.mpc|3|9|Pf|@{0|}}
{30001002|XXparameter|condition|$AB_APPCONF_EXECUTION|3|2|$|@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@1|@627000|314000|637000|323000|50000|41000|4281|Interleave|||1|10|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|90|0|218|0|{@{}@686000|339000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|91|0|221|0|{@{}@627000|339000|11000|11000|in|0.0|@@@34579|0|}}
{2010501005|XXGpvertex|92|0|224|0|{Combines blocks of data records from multiple flow partitions in round-robin fashion.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|interleave|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|blocksize|1|1|2|RFO$|Number of records interleaved from each flow|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|Interleave|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|93|0|226|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|94|0|229|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@34579|0|}}
{2010501005|XXGpvertex|95|0|235|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|9|Pf|@{0|}}
{30001002|XXparameter|select_expr||3|8|=|@{0|}}
{30001002|XXparameter|condition|$[ FILTER_EXPR != "" ]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
{30001002|XXparameter|log_group|MAP_COUNT|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@1|@311000|146000|331000|166000|110000|89000|6613|Optional Filter|||1|10|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|96|0|237|0|{@{}@440000|204000|11000|11000|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|97|0|240|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|98|0|243|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|99|0|245|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|100|0|247|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|101|0|249|0|{@{}@321000|204000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|102|0|252|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|103|0|254|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|104|0|257|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|105|0|260|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|106|0|263|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|107|0|266|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|108|0|269|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|109|0|278|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|9|Pf|@{0|}}
{30001002|XXparameter|condition|$AB_APPCONF_EXECUTION|3|2|$|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@1|@594000|180000|604000|189000|50000|41000|4279|Replicate|||1|10|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|110|0|280|0|{@{}@653000|199000|11000|21000|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|111|0|284|0|{@{}@594000|204000|11000|11000|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|112|0|287|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|113|0|289|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|114|0|292|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|115|0|298|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|9|Pf|@{0|}}
{30001002|XXparameter|!validation_exclusions|1\|\@\{52\|1\|\{53\|error_suppression\|2\|\{56\|\|\}\{53\|status_info\|4\|\{56\|VE_validation_extension_error\|\}\{56\|CTL20300\|\}\{51\|1\|DA_custom_validation_id\|\{56\|AI#customValidations#check_component_naming_standards\|\}\}\{56\|Component name does not follow TU naming standards.
\|\}\}\}\}|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@1|@116000|172500|121000|187000|50000|41000|6618|Replicate for OP Console|||1|10|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|116|0|300|0|{@{}@170000|204000|11000|11000|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|117|0|303|0|{@{}@111000|204000|11000|11000|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|118|0|305|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|119|0|307|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|120|0|310|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|121|0|316|0|{@{}@394000|204000|11000|11000|out0|.5|@@@14352|0|}}
{2010202004|XXGiport|122|0|320|0|{@{}@235000|204000|11000|11000|in0|.5101123595505618|@@@14096|0|}}
{2010600005|XXGgraph|123|0|325|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 0 ]|3|9|F||{0|}}
}}@0|@264000|214500|0|0|0|0|14554|Reduced LookUp From IDS|Mukesh Singh|Created 11/3/2016 4:12:40 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1347000|1485000|3|}}
{2010240003|XXGlegend|124|0|327|0|{@{}@ |274000|430000|0|0|0|0|7531|}}
{2010242002|XXGface|125|0|329|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|126|0|331|0|{@{}@This Process creates reduced lookup
 by using IDS ICFF dataset|25905|48440|305000|105000|315000|24000|7595|}}
{2010242002|XXGface|127|0|333|0|{@{}@Arial Rounded MT Bold|32768|160|0|}}
{2010240003|XXGlegend|128|0|335|0|{@{}@This Process can be configured to create smaller lookups
from IDS and use those lookups in BRE or any other process after map|25905|118440|305000|105000|315000|24000|8486|}}
{2010242002|XXGface|129|0|337|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|130|0|339|0|{@{}@Filter Expression is  applied|320000|514000|0|0|0|0|8131|}}
{2010242002|XXGface|131|0|341|0|{@{}@Arial Narrow|32768|100|0|}}
{2010210004|XXGflow|132|0|343|0|{@{}@384|.5|.1589404046535492|{0|}8628|17|}}
{2010210004|XXGflow|133|0|345|0|{@{}@384|.5|.5|{0|}8622|529|}}
{2010210004|XXGflow|134|0|347|0|{@{}@384|.5|.5|{0|}8620|529|}}
{2010210004|XXGflow|135|0|349|0|{@{}@384|.5|.5|{0|}8621|529|}}
{2010210004|XXGflow|136|0|351|0|{@{}@384|.5|.5|{0|}8614|529|}}
{2010210004|XXGflow|137|0|353|0|{@{}@384|.5|.5|{0|}8616|529|}}
{2010210004|XXGflow|138|0|355|0|{@{}@384|.5|.5|{0|}8615|529|}}
{2010210004|XXGflow|139|0|357|0|{@{}@384|.5|.5|{0|}8617|529|}}
{2010210004|XXGflow|140|0|359|0|{@{}@384|.5|.5|{0|}8618|529|}}
{2010210004|XXGflow|141|0|361|0|{@{}@384|.5|.5|{0|}8619|529|}}
{2010210004|XXGflow|142|0|363|0|{@{}@384|.5|.5|{0|}8631|17|}}
{2010600005|XXGgraph|143|0|365|0|{Subgraph created from graph "Reduced LookUp From IDS"|{}@0|@926000|696500|0|0|0|0|8623|Disabled All Lookups|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|408000|1273000|3|}}
{2010210004|XXGflow|144|0|367|0|{@{}@384|.5|.5|{0|}8569|17|}}
{2010210004|XXGflow|145|0|369|0|{@{}@384|.5|.5|{0|}8567|17|}}
{2010210004|XXGflow|146|0|371|0|{@{}@384|.5|.5|{0|}8583|17|}}
{2010210004|XXGflow|147|0|373|0|{@{}@384|.5|.5|{0|}8561|17|}}
{2010210004|XXGflow|148|0|375|0|{@{}@384|.5|.5|{0|}8565|17|}}
{2010210004|XXGflow|149|0|377|0|{@{}@384|.5|.5|{0|}8563|17|}}
{2010210004|XXGflow|150|0|379|0|{@{}@384|.5|.5|{0|}8546|17|}}
{2010210004|XXGflow|151|0|381|0|{@{}@384|.5|.5|{0|}8549|17|}}
{2010210004|XXGflow|152|0|383|0|{@{}@384|.5|.5|{0|}8552|17|}}
{2010503005|XXGfvertex|153|0|385|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 9 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 9 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[9 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 9 ]|3|9||@{0|}}
}}@0|@291000|1145000|0|0|0|0|8562|Lkp File 10|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|154|0|387|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|155|0|390|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|156|0|392|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|157|0|395|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 1] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 1] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[1 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 1 ]|3|9||@{0|}}
}}@0|@276000|85000|0|0|0|0|8494|Lkp File 2|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|158|0|397|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|159|0|400|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|160|0|402|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|161|0|405|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 2 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 2 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[2 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 2 ]|3|9||@{0|}}
}}@0|@281000|220000|0|0|0|0|8547|Lkp File 3|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|162|0|407|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|163|0|410|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|164|0|412|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|165|0|415|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 3 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 3 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[3 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 3 ]|3|9||@{0|}}
}}@0|@281000|340000|0|0|0|0|8550|Lkp File 4|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|166|0|417|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|167|0|420|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|168|0|422|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|169|0|425|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 4 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 4 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[4 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 4 ]|3|9||@{0|}}
}}@0|@286000|470000|0|0|0|0|8568|Lkp File 5|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|170|0|427|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|171|0|430|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|172|0|432|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|173|0|435|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 5 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 5 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[5 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 5 ]|3|9||@{0|}}
}}@0|@286000|590000|0|0|0|0|8566|Lkp File 6|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|174|0|437|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|175|0|440|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|176|0|442|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|177|0|445|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 6 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 6 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[6 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 6 ]|3|9||@{0|}}
}}@0|@291000|735000|0|0|0|0|8589|Lkp File 7|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|178|0|447|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|179|0|450|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|180|0|452|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|181|0|455|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 7 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 7 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[7 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 7 ]|3|9||@{0|}}
}}@0|@286000|865000|0|0|0|0|8553|Lkp File 8|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|182|0|457|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|183|0|460|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|184|0|462|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|185|0|465|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 8 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 8 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[8 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 8 ]|3|9||@{0|}}
}}@0|@291000|1000000|0|0|0|0|8564|Lkp File 9|Ab Initio Software|@1|400|0||6||33025|-1|-1|}}
{2010202004|XXGiport|186|0|467|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|187|0|470|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|188|0|472|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010600005|XXGgraph|189|0|475|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|10|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 9 ]|3|9||@{0|}}
}}@0|@45000|1131000|0|0|0|0|8572|ids lookup-10|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|190|0|477|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|191|0|479|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|192|0|481|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|193|0|483|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|194|0|485|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|195|0|487|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|196|0|489|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|197|0|491|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|198|0|493|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|199|0|495|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|200|0|497|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|201|0|499|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|202|0|501|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|203|0|503|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|204|0|505|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|205|0|507|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|206|0|509|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|207|0|511|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|208|0|513|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|209|0|515|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|210|0|517|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|211|0|519|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|212|0|521|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|213|0|523|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|214|0|525|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|215|0|527|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|216|0|529|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|217|0|531|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|218|0|533|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|219|0|535|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|220|0|537|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|221|0|539|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|222|0|541|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|223|0|543|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|224|0|545|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|225|0|548|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|226|0|551|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|227|0|553|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|228|0|555|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|229|0|557|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|230|0|560|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|231|0|562|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|232|0|565|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|233|0|567|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|234|0|569|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|235|0|571|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|236|0|574|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|237|0|576|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|238|0|579|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|239|0|581|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|240|0|583|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|241|0|585|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|242|0|587|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|$[NK_DML_VEC[0]]|3|9||@{0|}}
{30001002|XXparameter|out1_metadata|$[NK_DML_VEC[1]]|3|9||@{0|}}
{30001002|XXparameter|out2_metadata|$[NK_DML_VEC[2]]|3|9||@{0|}}
{30001002|XXparameter|out3_metadata|$[NK_DML_VEC[3]]|3|9||@{0|}}
{30001002|XXparameter|out4_metadata|$[NK_DML_VEC[4]]|3|9||@{0|}}
{30001002|XXparameter|output_indexes|output_indices_out :: output_indexes(in)=
begin
  output_indices_out :: $[string_representation(for(let i=0, i < NUM_OF_PRE_ICFF_LOOKUP):i)];
end;|3|9||@{0|}}
{30001002|XXparameter|transform0|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[0]]|3|9||@{0|}}
{30001002|XXparameter|transform1|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[1]]|3|9||@{0|}}
{30001002|XXparameter|transform2|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[2]]|3|9||@{0|}}
{30001002|XXparameter|transform3|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[3]]|3|9||@{0|}}
{30001002|XXparameter|transform4|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[4]]|3|9||@{0|}}
{30001002|XXparameter|select|$REDUCED_LOOKUP_SELECT_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject1_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject2_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject3_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject4_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out5_metadata|$[NK_DML_VEC[5]]|3|9||@{0|}}
{30001002|XXparameter|out6_metadata|$[NK_DML_VEC[6]]|3|9||@{0|}}
{30001002|XXparameter|out7_metadata|$[NK_DML_VEC[7]]|3|9||@{0|}}
{30001002|XXparameter|out8_metadata|$[NK_DML_VEC[8]]|3|9||@{0|}}
{30001002|XXparameter|out9_metadata|$[NK_DML_VEC[9]]|3|9||@{0|}}
{30001002|XXparameter|reject5_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject6_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject7_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject8_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject9_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|transform5|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[5]]|3|9||@{0|}}
{30001002|XXparameter|transform6|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[6]]|3|9||@{0|}}
{30001002|XXparameter|transform7|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[7]]|3|9||@{0|}}
{30001002|XXparameter|transform8|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[8]]|3|9||@{0|}}
{30001002|XXparameter|transform9|$[DRIVER_TO_LOOKUP_COL_XFR_VEC[9]]|3|9||@{0|}}
{30001002|XXparameter|Layout|mfile:$CLEAN_FILE_NAME|3|2|$|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error1_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error2_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error3_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error4_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error5_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error6_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error7_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error8_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|error9_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|324000|553000|0|0|0|0|8613|Get Natural Key Value  for every record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|243|0|589|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|244|0|592|0|{@{}@0|0|0|0|out1|0.0|count|out|1|2448|0|}}
{2010203004|XXGoport|245|0|595|0|{@{}@0|0|0|0|out2|0.0|count|out|2|2448|0|}}
{2010203004|XXGoport|246|0|598|0|{@{}@0|0|0|0|out3|0.0|count|out|3|2448|0|}}
{2010203004|XXGoport|247|0|601|0|{@{}@0|0|0|0|out4|0.0|count|out|4|2448|0|}}
{2010203004|XXGoport|248|0|604|0|{@{}@0|0|0|0|out5|0.0|count|out|5|2448|0|}}
{2010203004|XXGoport|249|0|607|0|{@{}@0|0|0|0|out6|0.0|count|out|6|2448|0|}}
{2010203004|XXGoport|250|0|610|0|{@{}@0|0|0|0|out7|0.0|count|out|7|2448|0|}}
{2010203004|XXGoport|251|0|613|0|{@{}@0|0|0|0|out8|0.0|count|out|8|2448|0|}}
{2010203004|XXGoport|252|0|616|0|{@{}@0|0|0|0|out9|0.0|count|out|9|2448|0|}}
{2010203004|XXGoport|253|0|619|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|254|0|621|0|{@{}@0|0|0|0|reject1|0.0|count|reject|1|1168|0|}}
{2010203004|XXGoport|255|0|623|0|{@{}@0|0|0|0|reject2|0.0|count|reject|2|1168|0|}}
{2010203004|XXGoport|256|0|625|0|{@{}@0|0|0|0|reject3|0.0|count|reject|3|1168|0|}}
{2010203004|XXGoport|257|0|627|0|{@{}@0|0|0|0|reject4|0.0|count|reject|4|1168|0|}}
{2010203004|XXGoport|258|0|629|0|{@{}@0|0|0|0|reject5|0.0|count|reject|5|1168|0|}}
{2010203004|XXGoport|259|0|631|0|{@{}@0|0|0|0|reject6|0.0|count|reject|6|1168|0|}}
{2010203004|XXGoport|260|0|633|0|{@{}@0|0|0|0|reject7|0.0|count|reject|7|1168|0|}}
{2010203004|XXGoport|261|0|635|0|{@{}@0|0|0|0|reject8|0.0|count|reject|8|1168|0|}}
{2010203004|XXGoport|262|0|637|0|{@{}@0|0|0|0|reject9|0.0|count|reject|9|1168|0|}}
{2010203004|XXGoport|263|0|639|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|264|0|641|0|{@{}@0|0|0|0|error1|0.0|count|error|1|1176|0|}}
{2010203004|XXGoport|265|0|643|0|{@{}@0|0|0|0|error2|0.0|count|error|2|1176|0|}}
{2010203004|XXGoport|266|0|645|0|{@{}@0|0|0|0|error3|0.0|count|error|3|1176|0|}}
{2010203004|XXGoport|267|0|647|0|{@{}@0|0|0|0|error4|0.0|count|error|4|1176|0|}}
{2010203004|XXGoport|268|0|649|0|{@{}@0|0|0|0|error5|0.0|count|error|5|1176|0|}}
{2010203004|XXGoport|269|0|651|0|{@{}@0|0|0|0|error6|0.0|count|error|6|1176|0|}}
{2010203004|XXGoport|270|0|653|0|{@{}@0|0|0|0|error7|0.0|count|error|7|1176|0|}}
{2010203004|XXGoport|271|0|655|0|{@{}@0|0|0|0|error8|0.0|count|error|8|1176|0|}}
{2010203004|XXGoport|272|0|657|0|{@{}@0|0|0|0|error9|0.0|count|error|9|1176|0|}}
{2010203004|XXGoport|273|0|659|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|274|0|661|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|275|0|663|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|10|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform1||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform2||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform3||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform4||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform5||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform6||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform7||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform8||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform9||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out1_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out2_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out3_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out4_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out5_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out6_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out7_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out8_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out9_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject1_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject2_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject3_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject4_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject5_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject6_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject7_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject8_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|reject9_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error1_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error2_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error3_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error4_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error5_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error6_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error7_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error8_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error9_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
{30001002|XXparameter|transform1.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform1.index_value|1|3|9|P|@{0|}}
{30001002|XXparameter|transform1.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform2.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform2.index_value|2|3|9|P|@{0|}}
{30001002|XXparameter|transform2.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform3.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform3.index_value|3|3|9|P|@{0|}}
{30001002|XXparameter|transform3.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform4.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform4.index_value|4|3|9|P|@{0|}}
{30001002|XXparameter|transform4.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform5.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform5.index_value|5|3|9|P|@{0|}}
{30001002|XXparameter|transform5.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform6.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform6.index_value|6|3|9|P|@{0|}}
{30001002|XXparameter|transform6.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform7.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform7.index_value|7|3|9|P|@{0|}}
{30001002|XXparameter|transform7.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform8.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform8.index_value|8|3|9|P|@{0|}}
{30001002|XXparameter|transform8.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|transform9.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform9.index_value|9|3|9|P|@{0|}}
{30001002|XXparameter|transform9.index_name|transform|3|9|P|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|276|0|665|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|277|0|669|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform1||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform1.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform1.index_value|1|3|9|P|@{0|}}
{30001002|XXparameter|transform1.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out1|0.0|count|out|1|2448|0|}}
{2010203004|XXGoport|278|0|673|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform2||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform2.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform2.index_value|2|3|9|P|@{0|}}
{30001002|XXparameter|transform2.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out2|0.0|count|out|2|2448|0|}}
{2010203004|XXGoport|279|0|677|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform3||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform3.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform3.index_value|3|3|9|P|@{0|}}
{30001002|XXparameter|transform3.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out3|0.0|count|out|3|2448|0|}}
{2010203004|XXGoport|280|0|681|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform4||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform4.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform4.index_value|4|3|9|P|@{0|}}
{30001002|XXparameter|transform4.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out4|0.0|count|out|4|2448|0|}}
{2010203004|XXGoport|281|0|685|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform5||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform5.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform5.index_value|5|3|9|P|@{0|}}
{30001002|XXparameter|transform5.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out5|0.0|count|out|5|2448|0|}}
{2010203004|XXGoport|282|0|689|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform6||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform6.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform6.index_value|6|3|9|P|@{0|}}
{30001002|XXparameter|transform6.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out6|0.0|count|out|6|2448|0|}}
{2010203004|XXGoport|283|0|693|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform7||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform7.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform7.index_value|7|3|9|P|@{0|}}
{30001002|XXparameter|transform7.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out7|0.0|count|out|7|2448|0|}}
{2010203004|XXGoport|284|0|697|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform8||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform8.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform8.index_value|8|3|9|P|@{0|}}
{30001002|XXparameter|transform8.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out8|0.0|count|out|8|2448|0|}}
{2010203004|XXGoport|285|0|701|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform9||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform9.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform9.index_value|9|3|9|P|@{0|}}
{30001002|XXparameter|transform9.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out9|0.0|count|out|9|2448|0|}}
{2010203004|XXGoport|286|0|705|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|287|0|708|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject1|0.0|count|reject|1|1168|0|}}
{2010203004|XXGoport|288|0|711|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject2|0.0|count|reject|2|1168|0|}}
{2010203004|XXGoport|289|0|714|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject3|0.0|count|reject|3|1168|0|}}
{2010203004|XXGoport|290|0|717|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject4|0.0|count|reject|4|1168|0|}}
{2010203004|XXGoport|291|0|720|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject5|0.0|count|reject|5|1168|0|}}
{2010203004|XXGoport|292|0|723|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject6|0.0|count|reject|6|1168|0|}}
{2010203004|XXGoport|293|0|726|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject7|0.0|count|reject|7|1168|0|}}
{2010203004|XXGoport|294|0|729|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject8|0.0|count|reject|8|1168|0|}}
{2010203004|XXGoport|295|0|732|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject9|0.0|count|reject|9|1168|0|}}
{2010203004|XXGoport|296|0|735|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|297|0|738|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error1|0.0|count|error|1|1176|0|}}
{2010203004|XXGoport|298|0|741|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error2|0.0|count|error|2|1176|0|}}
{2010203004|XXGoport|299|0|744|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error3|0.0|count|error|3|1176|0|}}
{2010203004|XXGoport|300|0|747|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error4|0.0|count|error|4|1176|0|}}
{2010203004|XXGoport|301|0|750|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error5|0.0|count|error|5|1176|0|}}
{2010203004|XXGoport|302|0|753|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error6|0.0|count|error|6|1176|0|}}
{2010203004|XXGoport|303|0|756|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error7|0.0|count|error|7|1176|0|}}
{2010203004|XXGoport|304|0|759|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error8|0.0|count|error|8|1176|0|}}
{2010203004|XXGoport|305|0|762|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error9|0.0|count|error|9|1176|0|}}
{2010203004|XXGoport|306|0|765|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|307|0|768|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|308|0|785|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|309|0|787|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|310|0|790|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|311|0|793|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|312|0|795|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|313|0|797|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|314|0|799|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|315|0|811|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|316|0|813|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|317|0|816|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|318|0|824|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|319|0|826|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|320|0|829|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|321|0|831|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|322|0|833|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|323|0|835|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|324|0|840|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|325|0|842|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|326|0|844|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|327|0|850|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|328|0|852|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|329|0|856|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|330|0|862|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|331|0|864|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|332|0|866|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|333|0|868|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|334|0|870|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|335|0|872|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|336|0|874|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|337|0|876|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|338|0|878|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|339|0|880|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|340|0|888|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|341|0|890|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|342|0|892|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|343|0|894|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|344|0|897|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|345|0|901|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|346|0|903|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|347|0|905|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|348|0|910|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|349|0|914|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|350|0|918|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|351|0|920|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|352|0|923|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|353|0|929|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|354|0|933|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|355|0|937|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|356|0|941|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|357|0|943|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|358|0|946|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|359|0|952|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|360|0|954|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|361|0|959|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|362|0|961|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|363|0|966|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|364|0|968|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|365|0|973|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|366|0|977|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|367|0|981|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|368|0|983|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|369|0|985|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|370|0|987|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|371|0|989|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|372|0|991|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|373|0|993|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|374|0|995|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|375|0|997|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|376|0|999|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|377|0|1001|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|378|0|1003|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|379|0|1005|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|380|0|1007|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|381|0|1009|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|382|0|1011|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|383|0|1013|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|384|0|1015|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|385|0|1017|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|386|0|1019|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|387|0|1021|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|388|0|1024|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|389|0|1026|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|390|0|1028|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|391|0|1030|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|392|0|1034|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|393|0|1036|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|394|0|1039|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|395|0|1042|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|396|0|1044|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|397|0|1046|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|398|0|1048|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|399|0|1053|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|400|0|1055|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|401|0|1057|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|402|0|1059|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|403|0|1061|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|404|0|1063|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|405|0|1065|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|406|0|1067|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|407|0|1069|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|408|0|1072|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|409|0|1074|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|410|0|1077|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|411|0|1079|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|412|0|1081|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|413|0|1083|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|414|0|1087|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|415|0|1089|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|416|0|1092|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|417|0|1094|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|418|0|1096|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|419|0|1098|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|420|0|1112|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|421|0|1114|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|422|0|1116|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|423|0|1118|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|424|0|1120|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|425|0|1122|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|426|0|1124|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|427|0|1126|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|428|0|1128|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|429|0|1130|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|430|0|1132|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|431|0|1140|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|432|0|1142|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|433|0|1144|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|434|0|1146|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|435|0|1149|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|436|0|1153|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|437|0|1155|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|438|0|1157|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|439|0|1162|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|440|0|1166|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|441|0|1171|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|442|0|1173|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|443|0|1176|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|444|0|1182|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|445|0|1186|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|446|0|1190|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|447|0|1194|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|448|0|1196|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|449|0|1199|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|450|0|1205|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|451|0|1207|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|452|0|1212|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|453|0|1214|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|454|0|1219|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|455|0|1221|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|456|0|1226|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|457|0|1228|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|458|0|1230|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|459|0|1233|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|460|0|1236|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|461|0|1238|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|462|0|1240|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|463|0|1242|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|464|0|1244|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|465|0|1247|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|466|0|1250|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|467|0|1252|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|468|0|1254|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|469|0|1256|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|470|0|1261|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|471|0|1263|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|472|0|1266|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|473|0|1268|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|474|0|1270|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|475|0|1272|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|476|0|1276|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|477|0|1278|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|478|0|1281|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|479|0|1283|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|480|0|1285|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|481|0|1287|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|482|0|1297|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|483|0|1299|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|484|0|1301|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|485|0|1308|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|486|0|1310|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|487|0|1317|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|488|0|1321|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|489|0|1325|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|490|0|1329|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|491|0|1333|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|492|0|1335|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|493|0|1337|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|494|0|1343|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|495|0|1345|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|496|0|1349|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|497|0|1354|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|498|0|1356|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|499|0|1359|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|500|0|1366|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|501|0|1370|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|502|0|1373|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|503|0|1375|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|504|0|1377|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|505|0|1379|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|506|0|1381|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|507|0|1383|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|508|0|1385|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|509|0|1387|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|510|0|1389|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|511|0|1391|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|512|0|1393|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|513|0|1395|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|514|0|1397|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|515|0|1399|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|516|0|1401|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|517|0|1403|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|518|0|1405|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|519|0|1407|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|520|0|1409|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|521|0|1411|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|522|0|1413|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|523|0|1415|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|524|0|1417|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|525|0|1419|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|526|0|1421|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|527|0|1423|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|528|0|1425|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|529|0|1427|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|530|0|1429|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|531|0|1431|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|532|0|1433|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|533|0|1435|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|534|0|1437|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|535|0|1439|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|536|0|1441|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|537|0|1443|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|538|0|1446|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|539|0|1449|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|540|0|1451|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|541|0|1453|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|542|0|1455|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|543|0|1458|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|544|0|1460|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|545|0|1463|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|546|0|1466|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|547|0|1469|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|548|0|1472|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|549|0|1475|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|550|0|1478|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|551|0|1480|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|552|0|1483|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|553|0|1486|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|554|0|1488|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|555|0|1490|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|556|0|1492|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|557|0|1495|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|558|0|1497|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|559|0|1500|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|560|0|1503|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|561|0|1506|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|562|0|1509|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|563|0|1512|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|564|0|1515|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|565|0|1517|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|566|0|1520|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|567|0|1522|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|568|0|1524|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|569|0|1526|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|570|0|1528|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|571|0|1530|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|572|0|1534|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|573|0|1537|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|574|0|1540|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|575|0|1543|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|576|0|1546|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|577|0|1548|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|578|0|1551|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|579|0|1555|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|580|0|1557|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|581|0|1560|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|582|0|1563|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|583|0|1565|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|584|0|1568|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|585|0|1570|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|586|0|1572|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|587|0|1574|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|588|0|1577|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|589|0|1579|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|590|0|1582|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|591|0|1585|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|592|0|1588|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|593|0|1591|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|594|0|1594|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|595|0|1596|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|596|0|1599|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|597|0|1601|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|598|0|1603|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|599|0|1605|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|600|0|1608|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|601|0|1610|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|602|0|1613|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|603|0|1616|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|604|0|1619|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|605|0|1622|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|606|0|1625|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|607|0|1627|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|608|0|1629|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|609|0|1632|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|610|0|1634|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|611|0|1637|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|612|0|1640|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|613|0|1642|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|614|0|1646|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|615|0|1649|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|616|0|1651|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|617|0|1654|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|618|0|1657|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|619|0|1659|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|620|0|1661|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|621|0|1663|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|622|0|1665|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|623|0|1667|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|624|0|1669|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|625|0|1671|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|626|0|1673|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|627|0|1675|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|628|0|1678|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|629|0|1680|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|630|0|1683|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|631|0|1686|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|632|0|1689|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|633|0|1692|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|634|0|1695|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|635|0|1698|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|636|0|1700|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|637|0|1702|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|638|0|1704|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|639|0|1707|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|640|0|1709|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|641|0|1711|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|642|0|1713|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|643|0|1716|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|644|0|1720|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|645|0|1723|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|646|0|1725|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|647|0|1727|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|648|0|1729|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|649|0|1732|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|650|0|1734|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|651|0|1736|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|652|0|1739|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|653|0|1744|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|654|0|1746|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|655|0|1748|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|656|0|1751|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|657|0|1753|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|658|0|1756|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|659|0|1762|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|660|0|1765|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|661|0|1769|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|662|0|1771|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|663|0|1774|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|664|0|1777|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|665|0|1779|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|666|0|1782|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|667|0|1785|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|668|0|1789|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|669|0|1793|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|670|0|1797|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|671|0|1799|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|672|0|1802|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|673|0|1805|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|674|0|1807|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|675|0|1810|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|676|0|1813|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|677|0|1815|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|678|0|1818|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|679|0|1820|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|680|0|1823|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|681|0|1825|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|682|0|1828|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|683|0|1830|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|684|0|1833|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|685|0|1835|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|686|0|1838|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|687|0|1840|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|688|0|1843|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|689|0|1847|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|690|0|1851|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|691|0|1853|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|692|0|1855|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|693|0|1857|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|694|0|1859|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|695|0|1861|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|696|0|1863|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|697|0|1865|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|698|0|1867|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|699|0|1869|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|700|0|1871|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|701|0|1873|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|702|0|1875|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|703|0|1877|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|704|0|1879|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|705|0|1881|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|706|0|1883|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|707|0|1885|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|708|0|1887|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|709|0|1889|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|710|0|1891|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|711|0|1894|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|712|0|1896|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|713|0|1898|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|714|0|1900|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|715|0|1903|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|716|0|1905|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|717|0|1908|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|718|0|1911|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|719|0|1914|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|720|0|1917|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|721|0|1920|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|722|0|1923|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|723|0|1925|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|724|0|1928|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|725|0|1931|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|726|0|1933|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|727|0|1935|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|728|0|1937|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|729|0|1940|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|730|0|1942|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|731|0|1945|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|732|0|1948|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|733|0|1951|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|734|0|1954|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|735|0|1957|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|736|0|1960|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|737|0|1962|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|738|0|1965|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|739|0|1967|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|740|0|1969|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|741|0|1971|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|742|0|1973|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|743|0|1975|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|744|0|1979|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|745|0|1982|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|746|0|1985|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|747|0|1988|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|748|0|1991|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|749|0|1993|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|750|0|1996|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|751|0|1998|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|752|0|2000|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|753|0|2002|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|754|0|2005|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|755|0|2007|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|756|0|2011|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|757|0|2014|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|758|0|2017|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|759|0|2020|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|760|0|2023|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|761|0|2025|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|762|0|2027|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|763|0|2029|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|764|0|2031|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|765|0|2033|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|766|0|2035|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|767|0|2037|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|768|0|2039|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|769|0|2041|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|770|0|2043|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|771|0|2046|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|772|0|2048|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|773|0|2051|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|774|0|2054|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|775|0|2057|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|776|0|2060|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|777|0|2063|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|778|0|2066|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|779|0|2068|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|780|0|2070|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|781|0|2072|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|782|0|2075|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|783|0|2077|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|784|0|2079|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|785|0|2081|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|786|0|2084|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|787|0|2088|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|788|0|2091|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|789|0|2093|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|790|0|2095|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|791|0|2097|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|792|0|2100|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|793|0|2102|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|794|0|2104|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|795|0|2107|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|796|0|2112|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|797|0|2114|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|798|0|2116|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|799|0|2119|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|800|0|2121|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|801|0|2124|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|802|0|2130|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|803|0|2133|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|804|0|2136|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|805|0|2138|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|806|0|2141|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|807|0|2144|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|808|0|2146|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|809|0|2149|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|810|0|2152|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|811|0|2156|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|812|0|2160|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|813|0|2164|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|814|0|2166|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|815|0|2169|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|816|0|2172|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|817|0|2174|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|818|0|2177|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|819|0|2180|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|820|0|2182|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|821|0|2185|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|822|0|2187|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|823|0|2190|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|824|0|2192|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|825|0|2195|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|826|0|2197|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|827|0|2200|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|828|0|2202|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|829|0|2205|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|830|0|2207|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|831|0|2210|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|832|0|2212|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|833|0|2214|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|834|0|2216|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|835|0|2218|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|836|0|2220|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|837|0|2222|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|838|0|2224|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|839|0|2226|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|840|0|2228|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|841|0|2230|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|842|0|2233|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|843|0|2236|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|844|0|2238|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|845|0|2240|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|846|0|2242|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|847|0|2245|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|848|0|2247|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|849|0|2250|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|850|0|2253|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|851|0|2256|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|852|0|2259|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|853|0|2262|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|854|0|2265|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|855|0|2267|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|856|0|2270|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|857|0|2273|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|858|0|2275|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|859|0|2277|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|860|0|2279|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|861|0|2281|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|862|0|2283|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|863|0|2286|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|864|0|2289|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|865|0|2292|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|866|0|2295|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|867|0|2298|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|868|0|2301|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|869|0|2303|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|870|0|2305|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|871|0|2309|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|872|0|2311|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|873|0|2314|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|874|0|2317|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|875|0|2319|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|876|0|2322|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|877|0|2324|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|878|0|2327|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|879|0|2329|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|880|0|2332|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|881|0|2334|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|882|0|2336|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|883|0|2338|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|884|0|2341|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|885|0|2343|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|886|0|2347|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|887|0|2350|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|888|0|2353|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|889|0|2356|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|890|0|2359|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|891|0|2361|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|892|0|2364|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|893|0|2366|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|894|0|2368|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|895|0|2370|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|896|0|2373|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|897|0|2375|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|898|0|2379|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|899|0|2382|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|900|0|2385|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|901|0|2388|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|902|0|2391|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|903|0|2395|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|904|0|2399|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|905|0|2403|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|906|0|2407|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|907|0|2409|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|908|0|2411|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|909|0|2414|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|910|0|2416|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|911|0|2419|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|912|0|2422|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|913|0|2424|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|914|0|2428|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|915|0|2430|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|916|0|2432|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|917|0|2435|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|918|0|2438|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|919|0|2440|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|920|0|2443|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|921|0|2447|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|922|0|2449|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|923|0|2452|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|924|0|2455|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|925|0|2458|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|926|0|2461|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|2|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 1 ]|3|9||@{0|}}
}}@0|@40000|71000|0|0|0|0|8574|ids lookup-2|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|927|0|2463|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|928|0|2465|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|929|0|2467|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|930|0|2469|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|931|0|2471|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|932|0|2473|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|933|0|2475|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|934|0|2477|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|935|0|2479|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|936|0|2481|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|937|0|2483|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|938|0|2485|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|939|0|2487|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|940|0|2489|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|941|0|2491|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|942|0|2493|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|943|0|2495|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|944|0|2497|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|945|0|2499|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|946|0|2501|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|947|0|2503|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|948|0|2505|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|949|0|2507|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|950|0|2509|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|951|0|2511|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|952|0|2513|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|953|0|2515|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|954|0|2517|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|955|0|2519|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|956|0|2521|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|957|0|2523|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|958|0|2525|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|959|0|2527|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|960|0|2529|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|961|0|2531|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|962|0|2534|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|963|0|2537|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|964|0|2539|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|965|0|2541|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|966|0|2543|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|967|0|2546|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|968|0|2548|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|969|0|2551|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|970|0|2553|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|971|0|2555|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|972|0|2557|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|973|0|2560|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|974|0|2562|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|975|0|2565|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|976|0|2567|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|977|0|2569|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|978|0|2571|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|979|0|2577|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|980|0|2579|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|981|0|2582|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|982|0|2585|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|983|0|2587|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|984|0|2589|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|985|0|2591|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|986|0|2603|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|987|0|2605|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|988|0|2608|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|989|0|2616|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|990|0|2618|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|991|0|2621|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|992|0|2623|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|993|0|2625|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|994|0|2627|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|995|0|2632|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|996|0|2634|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|997|0|2636|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|998|0|2642|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|999|0|2644|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1000|0|2648|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|1001|0|2654|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|1002|0|2656|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|1003|0|2658|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|1004|0|2660|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1005|0|2662|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1006|0|2664|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1007|0|2666|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1008|0|2668|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1009|0|2670|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1010|0|2672|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|1011|0|2680|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|1012|0|2682|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1013|0|2684|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1014|0|2686|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1015|0|2689|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1016|0|2693|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1017|0|2695|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1018|0|2697|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1019|0|2702|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1020|0|2706|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|1021|0|2710|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1022|0|2712|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1023|0|2715|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|1024|0|2721|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|1025|0|2725|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|1026|0|2729|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|1027|0|2733|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1028|0|2735|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1029|0|2738|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1030|0|2744|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1031|0|2746|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1032|0|2751|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1033|0|2753|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1034|0|2758|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1035|0|2760|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1036|0|2765|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|1037|0|2769|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|1038|0|2773|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|1039|0|2775|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|1040|0|2777|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|1041|0|2779|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|1042|0|2781|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|1043|0|2783|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|1044|0|2785|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1045|0|2787|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|1046|0|2789|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|1047|0|2791|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|1048|0|2793|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|1049|0|2795|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|1050|0|2797|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|1051|0|2799|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|1052|0|2801|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|1053|0|2803|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|1054|0|2805|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|1055|0|2807|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|1056|0|2809|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1057|0|2811|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1058|0|2813|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1059|0|2816|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1060|0|2818|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1061|0|2820|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1062|0|2822|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1063|0|2826|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1064|0|2828|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1065|0|2831|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1066|0|2834|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1067|0|2836|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1068|0|2838|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1069|0|2840|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1070|0|2845|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1071|0|2847|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|1072|0|2849|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|1073|0|2851|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|1074|0|2853|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|1075|0|2855|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1076|0|2857|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1077|0|2859|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1078|0|2861|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1079|0|2864|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1080|0|2866|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1081|0|2869|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1082|0|2871|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1083|0|2873|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1084|0|2875|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1085|0|2879|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1086|0|2881|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1087|0|2884|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1088|0|2886|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1089|0|2888|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1090|0|2890|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|1091|0|2904|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|1092|0|2906|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|1093|0|2908|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|1094|0|2910|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|1095|0|2912|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1096|0|2914|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1097|0|2916|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1098|0|2918|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1099|0|2920|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1100|0|2922|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1101|0|2924|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|1102|0|2932|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|1103|0|2934|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1104|0|2936|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1105|0|2938|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1106|0|2941|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1107|0|2945|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1108|0|2947|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1109|0|2949|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1110|0|2954|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1111|0|2958|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|1112|0|2963|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1113|0|2965|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1114|0|2968|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|1115|0|2974|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|1116|0|2978|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|1117|0|2982|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|1118|0|2986|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1119|0|2988|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1120|0|2991|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1121|0|2997|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|1122|0|2999|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1123|0|3004|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1124|0|3006|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1125|0|3011|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1126|0|3013|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|1127|0|3018|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|1128|0|3020|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|1129|0|3022|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|1130|0|3025|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|1131|0|3028|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|1132|0|3030|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|1133|0|3032|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|1134|0|3034|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1135|0|3036|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1136|0|3039|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1137|0|3042|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1138|0|3044|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1139|0|3046|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1140|0|3048|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1141|0|3053|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1142|0|3055|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1143|0|3058|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1144|0|3060|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1145|0|3062|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1146|0|3064|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1147|0|3068|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1148|0|3070|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1149|0|3073|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1150|0|3075|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1151|0|3077|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1152|0|3079|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1153|0|3089|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1154|0|3091|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1155|0|3093|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1156|0|3100|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1157|0|3102|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1158|0|3109|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|1159|0|3113|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|1160|0|3117|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|1161|0|3121|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|1162|0|3125|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1163|0|3127|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1164|0|3129|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1165|0|3135|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1166|0|3137|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1167|0|3141|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1168|0|3146|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1169|0|3148|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1170|0|3151|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|1171|0|3158|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|1172|0|3162|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|1173|0|3165|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|1174|0|3167|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|1175|0|3169|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|1176|0|3171|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|1177|0|3173|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|1178|0|3175|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|1179|0|3177|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|1180|0|3179|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|1181|0|3181|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|1182|0|3183|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|1183|0|3185|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|1184|0|3187|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|1185|0|3189|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|1186|0|3191|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|1187|0|3193|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1188|0|3195|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|1189|0|3197|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1190|0|3199|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|1191|0|3201|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|1192|0|3203|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|1193|0|3205|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|1194|0|3207|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|1195|0|3209|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|1196|0|3211|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|1197|0|3213|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|1198|0|3215|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|1199|0|3217|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|1200|0|3219|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|1201|0|3221|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|1202|0|3223|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|1203|0|3225|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|1204|0|3227|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|1205|0|3229|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|1206|0|3231|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|1207|0|3233|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1208|0|3235|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1209|0|3238|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1210|0|3241|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1211|0|3243|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1212|0|3245|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1213|0|3247|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1214|0|3250|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1215|0|3252|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1216|0|3255|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1217|0|3258|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1218|0|3261|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1219|0|3264|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1220|0|3267|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1221|0|3270|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1222|0|3272|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1223|0|3275|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1224|0|3278|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1225|0|3280|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1226|0|3282|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1227|0|3284|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1228|0|3287|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1229|0|3289|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1230|0|3292|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1231|0|3295|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1232|0|3298|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1233|0|3301|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1234|0|3304|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1235|0|3307|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1236|0|3309|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1237|0|3312|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1238|0|3314|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1239|0|3316|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1240|0|3318|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1241|0|3320|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1242|0|3322|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1243|0|3326|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1244|0|3329|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1245|0|3332|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1246|0|3335|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1247|0|3338|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1248|0|3340|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1249|0|3343|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1250|0|3347|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1251|0|3349|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1252|0|3352|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1253|0|3355|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1254|0|3357|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1255|0|3360|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1256|0|3362|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1257|0|3364|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1258|0|3366|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1259|0|3369|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1260|0|3371|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1261|0|3374|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1262|0|3377|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1263|0|3380|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1264|0|3383|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1265|0|3386|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1266|0|3388|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1267|0|3391|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1268|0|3393|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1269|0|3395|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1270|0|3397|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1271|0|3400|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1272|0|3402|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1273|0|3405|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1274|0|3408|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1275|0|3411|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1276|0|3414|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1277|0|3417|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1278|0|3419|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1279|0|3421|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1280|0|3424|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1281|0|3426|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1282|0|3429|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1283|0|3432|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1284|0|3434|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1285|0|3438|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1286|0|3441|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1287|0|3443|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1288|0|3446|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|1289|0|3449|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|1290|0|3451|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|1291|0|3453|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|1292|0|3455|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1293|0|3457|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1294|0|3459|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1295|0|3461|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1296|0|3463|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1297|0|3465|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1298|0|3467|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1299|0|3470|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1300|0|3472|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1301|0|3475|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1302|0|3478|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1303|0|3481|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1304|0|3484|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1305|0|3487|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|1306|0|3490|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|1307|0|3492|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1308|0|3494|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1309|0|3496|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1310|0|3499|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1311|0|3501|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1312|0|3503|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1313|0|3505|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1314|0|3508|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1315|0|3512|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|1316|0|3515|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|1317|0|3517|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1318|0|3519|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1319|0|3521|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1320|0|3524|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1321|0|3526|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1322|0|3528|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1323|0|3531|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1324|0|3536|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1325|0|3538|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1326|0|3540|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1327|0|3543|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1328|0|3545|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1329|0|3548|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1330|0|3554|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1331|0|3557|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|1332|0|3561|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1333|0|3563|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1334|0|3566|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1335|0|3569|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1336|0|3571|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1337|0|3574|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|1338|0|3577|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|1339|0|3581|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|1340|0|3585|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|1341|0|3589|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1342|0|3591|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1343|0|3594|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1344|0|3597|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1345|0|3599|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1346|0|3602|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1347|0|3605|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|1348|0|3607|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1349|0|3610|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1350|0|3612|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1351|0|3615|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|1352|0|3617|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1353|0|3620|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1354|0|3622|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1355|0|3625|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|1356|0|3627|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1357|0|3630|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1358|0|3632|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1359|0|3635|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|1360|0|3639|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|1361|0|3643|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|1362|0|3645|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|1363|0|3647|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|1364|0|3649|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|1365|0|3651|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|1366|0|3653|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|1367|0|3655|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1368|0|3657|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|1369|0|3659|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|1370|0|3661|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|1371|0|3663|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|1372|0|3665|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|1373|0|3667|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|1374|0|3669|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|1375|0|3671|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|1376|0|3673|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|1377|0|3675|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|1378|0|3677|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|1379|0|3679|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1380|0|3681|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1381|0|3683|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1382|0|3686|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1383|0|3688|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1384|0|3690|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1385|0|3692|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1386|0|3695|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1387|0|3697|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1388|0|3700|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1389|0|3703|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1390|0|3706|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1391|0|3709|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1392|0|3712|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1393|0|3715|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1394|0|3717|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1395|0|3720|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1396|0|3723|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1397|0|3725|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1398|0|3727|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1399|0|3729|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1400|0|3732|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1401|0|3734|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1402|0|3737|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1403|0|3740|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1404|0|3743|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1405|0|3746|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1406|0|3749|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1407|0|3752|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1408|0|3754|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1409|0|3757|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1410|0|3759|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1411|0|3761|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1412|0|3763|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1413|0|3765|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1414|0|3767|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1415|0|3771|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1416|0|3774|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1417|0|3777|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1418|0|3780|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1419|0|3783|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1420|0|3785|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1421|0|3788|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1422|0|3790|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1423|0|3792|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1424|0|3794|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1425|0|3797|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1426|0|3799|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1427|0|3803|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1428|0|3806|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1429|0|3809|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1430|0|3812|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|1431|0|3815|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|1432|0|3817|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|1433|0|3819|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|1434|0|3821|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|1435|0|3823|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1436|0|3825|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1437|0|3827|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1438|0|3829|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1439|0|3831|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1440|0|3833|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1441|0|3835|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1442|0|3838|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1443|0|3840|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1444|0|3843|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1445|0|3846|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1446|0|3849|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1447|0|3852|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1448|0|3855|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|1449|0|3858|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|1450|0|3860|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1451|0|3862|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1452|0|3864|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1453|0|3867|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1454|0|3869|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1455|0|3871|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1456|0|3873|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1457|0|3876|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1458|0|3880|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|1459|0|3883|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|1460|0|3885|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1461|0|3887|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1462|0|3889|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1463|0|3892|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1464|0|3894|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1465|0|3896|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1466|0|3899|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1467|0|3904|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1468|0|3906|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1469|0|3908|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1470|0|3911|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1471|0|3913|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1472|0|3916|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1473|0|3922|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1474|0|3925|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|1475|0|3928|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1476|0|3930|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1477|0|3933|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1478|0|3936|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1479|0|3938|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1480|0|3941|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|1481|0|3944|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|1482|0|3948|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|1483|0|3952|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|1484|0|3956|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1485|0|3958|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1486|0|3961|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1487|0|3964|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1488|0|3966|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1489|0|3969|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1490|0|3972|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1491|0|3974|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1492|0|3977|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1493|0|3979|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1494|0|3982|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|1495|0|3984|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1496|0|3987|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1497|0|3989|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1498|0|3992|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|1499|0|3994|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1500|0|3997|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1501|0|3999|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|1502|0|4002|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|1503|0|4004|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|1504|0|4006|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|1505|0|4008|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|1506|0|4010|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|1507|0|4012|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|1508|0|4014|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|1509|0|4016|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|1510|0|4018|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|1511|0|4020|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1512|0|4022|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1513|0|4025|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1514|0|4028|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1515|0|4030|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1516|0|4032|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1517|0|4034|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1518|0|4037|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1519|0|4039|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1520|0|4042|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1521|0|4045|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1522|0|4048|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1523|0|4051|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1524|0|4054|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1525|0|4057|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1526|0|4059|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1527|0|4062|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1528|0|4065|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1529|0|4067|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1530|0|4069|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1531|0|4071|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1532|0|4073|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1533|0|4075|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1534|0|4078|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1535|0|4081|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1536|0|4084|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1537|0|4087|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1538|0|4090|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1539|0|4093|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1540|0|4095|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1541|0|4097|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1542|0|4101|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1543|0|4103|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1544|0|4106|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1545|0|4109|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|1546|0|4111|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1547|0|4114|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|1548|0|4116|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1549|0|4119|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1550|0|4121|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1551|0|4124|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1552|0|4126|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1553|0|4128|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1554|0|4130|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1555|0|4133|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1556|0|4135|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1557|0|4139|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1558|0|4142|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1559|0|4145|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1560|0|4148|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1561|0|4151|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1562|0|4153|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1563|0|4156|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1564|0|4158|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1565|0|4160|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1566|0|4162|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1567|0|4165|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1568|0|4167|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1569|0|4171|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1570|0|4174|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1571|0|4177|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1572|0|4180|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1573|0|4183|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|1574|0|4187|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|1575|0|4191|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|1576|0|4195|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|1577|0|4199|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1578|0|4201|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1579|0|4203|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1580|0|4206|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1581|0|4208|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1582|0|4211|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1583|0|4214|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1584|0|4216|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1585|0|4220|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1586|0|4222|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1587|0|4224|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1588|0|4227|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1589|0|4230|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1590|0|4232|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1591|0|4235|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1592|0|4239|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1593|0|4241|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1594|0|4244|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|1595|0|4247|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|1596|0|4250|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|1597|0|4253|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|3|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 2 ]|3|9||@{0|}}
}}@0|@40000|206000|0|0|0|0|8576|ids lookup-3|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|1598|0|4255|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|1599|0|4257|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|1600|0|4259|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|1601|0|4261|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|1602|0|4263|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|1603|0|4265|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|1604|0|4267|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|1605|0|4269|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|1606|0|4271|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|1607|0|4273|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|1608|0|4275|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|1609|0|4277|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|1610|0|4279|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|1611|0|4281|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1612|0|4283|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|1613|0|4285|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1614|0|4287|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|1615|0|4289|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|1616|0|4291|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|1617|0|4293|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|1618|0|4295|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|1619|0|4297|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|1620|0|4299|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|1621|0|4301|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|1622|0|4303|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|1623|0|4305|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|1624|0|4307|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|1625|0|4309|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|1626|0|4311|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|1627|0|4313|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|1628|0|4315|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|1629|0|4317|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|1630|0|4319|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|1631|0|4321|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1632|0|4323|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1633|0|4326|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1634|0|4329|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1635|0|4331|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1636|0|4333|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1637|0|4335|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1638|0|4338|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1639|0|4340|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1640|0|4343|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1641|0|4345|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1642|0|4347|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1643|0|4349|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1644|0|4352|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1645|0|4354|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1646|0|4357|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1647|0|4359|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1648|0|4361|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1649|0|4363|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1650|0|4369|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1651|0|4371|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1652|0|4374|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1653|0|4377|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1654|0|4379|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1655|0|4381|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1656|0|4383|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1657|0|4388|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1658|0|4390|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1659|0|4393|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1660|0|4395|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1661|0|4397|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1662|0|4399|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1663|0|4410|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1664|0|4412|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1665|0|4415|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1666|0|4424|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1667|0|4426|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1668|0|4428|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1669|0|4434|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1670|0|4436|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1671|0|4440|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|1672|0|4446|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|1673|0|4448|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|1674|0|4450|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|1675|0|4452|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1676|0|4454|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1677|0|4456|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1678|0|4458|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1679|0|4460|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1680|0|4462|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1681|0|4464|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|1682|0|4472|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|1683|0|4474|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1684|0|4476|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1685|0|4478|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1686|0|4481|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1687|0|4485|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1688|0|4487|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1689|0|4489|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1690|0|4494|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1691|0|4498|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|1692|0|4502|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1693|0|4504|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1694|0|4507|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|1695|0|4513|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|1696|0|4517|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|1697|0|4521|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|1698|0|4525|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1699|0|4527|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1700|0|4530|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1701|0|4536|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1702|0|4538|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1703|0|4543|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1704|0|4545|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1705|0|4550|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1706|0|4552|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1707|0|4557|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|1708|0|4561|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|1709|0|4565|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|1710|0|4567|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|1711|0|4569|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|1712|0|4571|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|1713|0|4573|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|1714|0|4575|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|1715|0|4577|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1716|0|4579|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|1717|0|4581|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|1718|0|4583|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|1719|0|4585|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|1720|0|4587|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|1721|0|4589|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|1722|0|4591|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|1723|0|4593|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|1724|0|4595|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|1725|0|4597|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|1726|0|4599|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|1727|0|4601|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1728|0|4603|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1729|0|4605|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1730|0|4608|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1731|0|4610|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1732|0|4612|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1733|0|4614|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1734|0|4618|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1735|0|4620|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1736|0|4623|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1737|0|4626|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1738|0|4628|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1739|0|4630|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1740|0|4632|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1741|0|4637|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1742|0|4639|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|1743|0|4641|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|1744|0|4643|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|1745|0|4645|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|1746|0|4647|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1747|0|4649|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1748|0|4651|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1749|0|4653|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1750|0|4656|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1751|0|4658|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1752|0|4661|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1753|0|4663|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1754|0|4665|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1755|0|4667|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1756|0|4671|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1757|0|4673|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1758|0|4676|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1759|0|4678|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1760|0|4680|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1761|0|4682|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|1762|0|4696|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|1763|0|4698|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|1764|0|4700|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|1765|0|4702|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|1766|0|4704|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1767|0|4706|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1768|0|4708|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1769|0|4710|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1770|0|4712|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1771|0|4714|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1772|0|4716|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|1773|0|4724|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|1774|0|4726|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1775|0|4728|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1776|0|4730|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1777|0|4733|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1778|0|4737|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1779|0|4739|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1780|0|4741|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1781|0|4746|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1782|0|4750|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|1783|0|4755|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1784|0|4757|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1785|0|4760|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|1786|0|4766|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|1787|0|4770|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|1788|0|4774|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|1789|0|4778|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1790|0|4780|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1791|0|4783|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1792|0|4789|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|1793|0|4791|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1794|0|4796|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1795|0|4798|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1796|0|4803|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1797|0|4805|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|1798|0|4810|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|1799|0|4812|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|1800|0|4814|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|1801|0|4817|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|1802|0|4820|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|1803|0|4822|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|1804|0|4824|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|1805|0|4826|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1806|0|4828|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1807|0|4831|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1808|0|4834|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1809|0|4836|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1810|0|4838|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1811|0|4840|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1812|0|4845|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1813|0|4847|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1814|0|4850|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1815|0|4852|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1816|0|4854|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1817|0|4856|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1818|0|4860|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1819|0|4862|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1820|0|4865|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1821|0|4867|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1822|0|4869|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1823|0|4871|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1824|0|4881|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1825|0|4883|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1826|0|4885|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1827|0|4892|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|1828|0|4894|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1829|0|4901|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|1830|0|4905|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|1831|0|4909|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|1832|0|4913|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|1833|0|4917|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1834|0|4919|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1835|0|4921|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1836|0|4927|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|1837|0|4929|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1838|0|4933|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1839|0|4938|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1840|0|4940|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1841|0|4943|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|1842|0|4950|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|1843|0|4954|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|1844|0|4957|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|1845|0|4959|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|1846|0|4961|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|1847|0|4963|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|1848|0|4965|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|1849|0|4967|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|1850|0|4969|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|1851|0|4971|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|1852|0|4973|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|1853|0|4975|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|1854|0|4977|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|1855|0|4979|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|1856|0|4981|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|1857|0|4983|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|1858|0|4985|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1859|0|4987|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|1860|0|4989|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|1861|0|4991|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|1862|0|4993|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|1863|0|4995|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|1864|0|4997|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|1865|0|4999|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|1866|0|5001|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|1867|0|5003|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|1868|0|5005|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|1869|0|5007|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|1870|0|5009|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|1871|0|5011|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|1872|0|5013|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|1873|0|5015|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|1874|0|5017|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|1875|0|5019|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|1876|0|5021|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|1877|0|5023|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|1878|0|5025|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1879|0|5027|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1880|0|5030|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1881|0|5033|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1882|0|5035|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1883|0|5037|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1884|0|5039|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1885|0|5042|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1886|0|5044|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1887|0|5047|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1888|0|5050|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1889|0|5053|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1890|0|5056|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1891|0|5059|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1892|0|5062|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1893|0|5064|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1894|0|5067|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1895|0|5070|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1896|0|5072|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1897|0|5074|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1898|0|5076|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1899|0|5079|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1900|0|5081|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1901|0|5084|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|1902|0|5087|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1903|0|5090|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1904|0|5093|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1905|0|5096|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1906|0|5099|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1907|0|5101|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1908|0|5104|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1909|0|5106|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1910|0|5108|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1911|0|5110|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1912|0|5112|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1913|0|5114|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|1914|0|5118|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|1915|0|5121|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|1916|0|5124|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1917|0|5127|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1918|0|5130|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1919|0|5132|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1920|0|5135|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1921|0|5139|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1922|0|5141|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1923|0|5144|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|1924|0|5147|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1925|0|5149|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1926|0|5152|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1927|0|5154|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1928|0|5156|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1929|0|5158|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1930|0|5161|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1931|0|5163|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1932|0|5166|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1933|0|5169|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1934|0|5172|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1935|0|5175|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1936|0|5178|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1937|0|5180|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1938|0|5183|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1939|0|5185|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1940|0|5187|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1941|0|5189|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1942|0|5192|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1943|0|5194|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|1944|0|5197|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1945|0|5200|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1946|0|5203|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1947|0|5206|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1948|0|5209|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1949|0|5211|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1950|0|5213|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1951|0|5216|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1952|0|5218|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1953|0|5221|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1954|0|5224|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1955|0|5226|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1956|0|5230|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|1957|0|5233|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1958|0|5235|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|1959|0|5238|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|1960|0|5241|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|1961|0|5243|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|1962|0|5245|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|1963|0|5247|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|1964|0|5249|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1965|0|5251|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1966|0|5253|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1967|0|5255|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1968|0|5257|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1969|0|5259|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|1970|0|5262|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1971|0|5264|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|1972|0|5267|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|1973|0|5270|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|1974|0|5273|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|1975|0|5276|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|1976|0|5279|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|1977|0|5282|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|1978|0|5284|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1979|0|5286|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1980|0|5288|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1981|0|5291|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1982|0|5293|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1983|0|5295|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1984|0|5297|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|1985|0|5300|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|1986|0|5304|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|1987|0|5307|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|1988|0|5309|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|1989|0|5311|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1990|0|5313|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1991|0|5316|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1992|0|5318|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1993|0|5320|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|1994|0|5323|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1995|0|5328|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|1996|0|5330|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|1997|0|5332|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|1998|0|5335|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|1999|0|5337|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2000|0|5340|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2001|0|5346|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2002|0|5349|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|2003|0|5353|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2004|0|5355|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2005|0|5358|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2006|0|5361|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2007|0|5363|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2008|0|5366|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|2009|0|5369|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|2010|0|5373|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|2011|0|5377|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|2012|0|5381|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2013|0|5383|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2014|0|5386|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2015|0|5389|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2016|0|5391|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2017|0|5394|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2018|0|5397|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2019|0|5399|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2020|0|5402|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2021|0|5404|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2022|0|5407|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2023|0|5409|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2024|0|5412|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2025|0|5414|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2026|0|5417|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2027|0|5419|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2028|0|5422|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2029|0|5424|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2030|0|5427|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|2031|0|5431|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|2032|0|5435|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|2033|0|5437|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|2034|0|5439|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|2035|0|5441|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|2036|0|5443|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|2037|0|5445|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|2038|0|5447|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2039|0|5449|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|2040|0|5451|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|2041|0|5453|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|2042|0|5455|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|2043|0|5457|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|2044|0|5459|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|2045|0|5461|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|2046|0|5463|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|2047|0|5465|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|2048|0|5467|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|2049|0|5469|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|2050|0|5471|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2051|0|5473|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2052|0|5475|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2053|0|5478|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2054|0|5480|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2055|0|5482|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2056|0|5484|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2057|0|5487|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2058|0|5489|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2059|0|5492|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2060|0|5495|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2061|0|5498|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2062|0|5501|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2063|0|5504|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2064|0|5507|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2065|0|5509|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2066|0|5512|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2067|0|5515|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2068|0|5517|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2069|0|5519|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2070|0|5521|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2071|0|5524|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2072|0|5526|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2073|0|5529|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2074|0|5532|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2075|0|5535|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2076|0|5538|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2077|0|5541|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2078|0|5544|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2079|0|5546|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2080|0|5549|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2081|0|5551|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2082|0|5553|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2083|0|5555|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2084|0|5557|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2085|0|5559|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2086|0|5563|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2087|0|5566|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2088|0|5569|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2089|0|5572|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2090|0|5575|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2091|0|5577|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2092|0|5580|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2093|0|5582|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2094|0|5584|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2095|0|5586|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2096|0|5589|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2097|0|5591|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2098|0|5595|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2099|0|5598|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2100|0|5601|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2101|0|5604|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|2102|0|5607|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|2103|0|5609|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|2104|0|5611|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|2105|0|5613|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|2106|0|5615|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2107|0|5617|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2108|0|5619|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2109|0|5621|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2110|0|5623|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2111|0|5625|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2112|0|5627|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2113|0|5630|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2114|0|5632|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2115|0|5635|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2116|0|5638|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2117|0|5641|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2118|0|5644|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2119|0|5647|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|2120|0|5650|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|2121|0|5652|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2122|0|5654|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2123|0|5656|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2124|0|5659|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2125|0|5661|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2126|0|5663|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2127|0|5665|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2128|0|5668|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2129|0|5672|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|2130|0|5675|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|2131|0|5677|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2132|0|5679|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2133|0|5681|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2134|0|5684|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2135|0|5686|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2136|0|5688|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2137|0|5691|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2138|0|5696|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2139|0|5698|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2140|0|5700|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2141|0|5703|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2142|0|5705|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2143|0|5708|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2144|0|5714|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2145|0|5717|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|2146|0|5720|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2147|0|5722|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2148|0|5725|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2149|0|5728|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2150|0|5730|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2151|0|5733|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|2152|0|5736|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|2153|0|5740|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|2154|0|5744|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|2155|0|5748|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2156|0|5750|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2157|0|5753|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2158|0|5756|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2159|0|5758|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2160|0|5761|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2161|0|5764|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2162|0|5766|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2163|0|5769|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2164|0|5771|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2165|0|5774|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2166|0|5776|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2167|0|5779|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2168|0|5781|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2169|0|5784|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2170|0|5786|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2171|0|5789|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2172|0|5791|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|2173|0|5794|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|2174|0|5796|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|2175|0|5798|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|2176|0|5800|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|2177|0|5802|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|2178|0|5804|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|2179|0|5806|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|2180|0|5808|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|2181|0|5810|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|2182|0|5812|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2183|0|5814|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2184|0|5817|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2185|0|5820|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2186|0|5822|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2187|0|5824|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2188|0|5826|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2189|0|5829|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2190|0|5831|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2191|0|5834|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2192|0|5837|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2193|0|5840|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2194|0|5843|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2195|0|5846|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2196|0|5849|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2197|0|5851|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2198|0|5854|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2199|0|5857|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2200|0|5859|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2201|0|5861|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2202|0|5863|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2203|0|5865|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2204|0|5867|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2205|0|5870|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2206|0|5873|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2207|0|5876|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2208|0|5879|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2209|0|5882|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2210|0|5885|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2211|0|5887|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2212|0|5889|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2213|0|5893|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2214|0|5895|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2215|0|5898|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2216|0|5901|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2217|0|5903|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2218|0|5906|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2219|0|5908|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2220|0|5911|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2221|0|5913|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2222|0|5916|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2223|0|5918|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2224|0|5920|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2225|0|5922|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2226|0|5925|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2227|0|5927|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2228|0|5931|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2229|0|5934|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2230|0|5937|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2231|0|5940|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2232|0|5943|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2233|0|5945|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2234|0|5948|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2235|0|5950|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2236|0|5952|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2237|0|5954|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2238|0|5957|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2239|0|5959|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2240|0|5963|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2241|0|5966|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2242|0|5969|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2243|0|5972|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2244|0|5975|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|2245|0|5979|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|2246|0|5983|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|2247|0|5987|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|2248|0|5991|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2249|0|5993|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2250|0|5995|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2251|0|5998|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2252|0|6000|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2253|0|6003|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2254|0|6006|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2255|0|6008|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2256|0|6012|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2257|0|6014|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2258|0|6016|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2259|0|6019|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2260|0|6022|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2261|0|6024|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2262|0|6027|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2263|0|6031|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2264|0|6033|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2265|0|6036|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|2266|0|6039|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|2267|0|6042|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|2268|0|6045|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|4|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 3 ]|3|9||@{0|}}
}}@0|@40000|326000|0|0|0|0|8578|ids lookup-4|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|2269|0|6047|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|2270|0|6049|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|2271|0|6051|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|2272|0|6053|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|2273|0|6055|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|2274|0|6057|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|2275|0|6059|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|2276|0|6061|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|2277|0|6063|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|2278|0|6065|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|2279|0|6067|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|2280|0|6069|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|2281|0|6071|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|2282|0|6073|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2283|0|6075|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|2284|0|6077|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2285|0|6079|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|2286|0|6081|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|2287|0|6083|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|2288|0|6085|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|2289|0|6087|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|2290|0|6089|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|2291|0|6091|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|2292|0|6093|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|2293|0|6095|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|2294|0|6097|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|2295|0|6099|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|2296|0|6101|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|2297|0|6103|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|2298|0|6105|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|2299|0|6107|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|2300|0|6109|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|2301|0|6111|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|2302|0|6113|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2303|0|6115|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2304|0|6118|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2305|0|6121|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2306|0|6123|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2307|0|6125|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2308|0|6127|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2309|0|6130|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2310|0|6132|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2311|0|6135|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2312|0|6137|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2313|0|6139|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2314|0|6141|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2315|0|6144|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2316|0|6146|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2317|0|6149|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2318|0|6151|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2319|0|6153|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2320|0|6155|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2321|0|6161|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2322|0|6163|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2323|0|6166|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2324|0|6169|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2325|0|6171|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2326|0|6173|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2327|0|6175|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2328|0|6187|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2329|0|6189|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2330|0|6192|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2331|0|6200|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2332|0|6202|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2333|0|6205|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2334|0|6207|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2335|0|6209|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2336|0|6211|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2337|0|6216|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2338|0|6218|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2339|0|6220|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2340|0|6226|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2341|0|6228|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2342|0|6232|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|2343|0|6238|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|2344|0|6240|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|2345|0|6242|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|2346|0|6244|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2347|0|6246|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2348|0|6248|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2349|0|6250|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2350|0|6252|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2351|0|6254|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2352|0|6256|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|2353|0|6264|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|2354|0|6266|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2355|0|6268|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2356|0|6270|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2357|0|6273|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2358|0|6277|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2359|0|6279|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2360|0|6281|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2361|0|6286|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2362|0|6290|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|2363|0|6294|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2364|0|6296|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2365|0|6299|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|2366|0|6305|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|2367|0|6309|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|2368|0|6313|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|2369|0|6317|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2370|0|6319|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2371|0|6322|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2372|0|6328|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|2373|0|6330|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2374|0|6335|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|2375|0|6337|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2376|0|6342|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|2377|0|6344|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2378|0|6349|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|2379|0|6353|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|2380|0|6357|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|2381|0|6359|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|2382|0|6361|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|2383|0|6363|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|2384|0|6365|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|2385|0|6367|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|2386|0|6369|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2387|0|6371|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|2388|0|6373|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|2389|0|6375|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|2390|0|6377|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|2391|0|6379|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|2392|0|6381|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|2393|0|6383|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|2394|0|6385|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|2395|0|6387|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|2396|0|6389|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|2397|0|6391|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|2398|0|6393|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2399|0|6395|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2400|0|6397|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2401|0|6400|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2402|0|6402|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2403|0|6404|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2404|0|6406|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2405|0|6410|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2406|0|6412|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2407|0|6415|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2408|0|6418|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2409|0|6420|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2410|0|6422|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2411|0|6424|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2412|0|6429|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2413|0|6431|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|2414|0|6433|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|2415|0|6435|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|2416|0|6437|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|2417|0|6439|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2418|0|6441|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2419|0|6443|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2420|0|6445|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2421|0|6448|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2422|0|6450|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2423|0|6453|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2424|0|6455|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2425|0|6457|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2426|0|6459|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2427|0|6463|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2428|0|6465|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2429|0|6468|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2430|0|6470|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2431|0|6472|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2432|0|6474|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|2433|0|6488|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|2434|0|6490|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|2435|0|6492|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|2436|0|6494|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|2437|0|6496|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2438|0|6498|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2439|0|6500|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2440|0|6502|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2441|0|6504|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2442|0|6506|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2443|0|6508|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|2444|0|6516|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|2445|0|6518|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2446|0|6520|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2447|0|6522|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2448|0|6525|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2449|0|6529|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2450|0|6531|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2451|0|6533|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2452|0|6538|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2453|0|6542|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|2454|0|6547|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2455|0|6549|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2456|0|6552|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|2457|0|6558|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|2458|0|6562|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|2459|0|6566|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|2460|0|6570|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2461|0|6572|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2462|0|6575|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2463|0|6581|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|2464|0|6583|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2465|0|6588|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|2466|0|6590|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2467|0|6595|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|2468|0|6597|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|2469|0|6602|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|2470|0|6604|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|2471|0|6606|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|2472|0|6609|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|2473|0|6612|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|2474|0|6614|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|2475|0|6616|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|2476|0|6618|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2477|0|6620|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2478|0|6623|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2479|0|6626|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2480|0|6628|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2481|0|6630|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2482|0|6632|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2483|0|6637|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2484|0|6639|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2485|0|6642|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2486|0|6644|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2487|0|6646|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2488|0|6648|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2489|0|6652|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2490|0|6654|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2491|0|6657|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2492|0|6659|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2493|0|6661|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2494|0|6663|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2495|0|6673|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2496|0|6675|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2497|0|6677|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2498|0|6684|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|2499|0|6686|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2500|0|6693|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|2501|0|6697|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|2502|0|6701|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|2503|0|6705|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|2504|0|6709|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2505|0|6711|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2506|0|6713|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2507|0|6719|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2508|0|6721|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2509|0|6725|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2510|0|6730|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2511|0|6732|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2512|0|6735|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|2513|0|6742|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|2514|0|6746|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|2515|0|6749|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|2516|0|6751|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|2517|0|6753|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|2518|0|6755|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|2519|0|6757|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|2520|0|6759|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|2521|0|6761|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|2522|0|6763|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|2523|0|6765|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|2524|0|6767|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|2525|0|6769|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|2526|0|6771|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|2527|0|6773|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|2528|0|6775|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|2529|0|6777|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2530|0|6779|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|2531|0|6781|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2532|0|6783|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|2533|0|6785|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|2534|0|6787|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|2535|0|6789|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|2536|0|6791|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|2537|0|6793|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|2538|0|6795|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|2539|0|6797|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|2540|0|6799|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|2541|0|6801|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|2542|0|6803|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|2543|0|6805|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|2544|0|6807|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|2545|0|6809|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|2546|0|6811|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|2547|0|6813|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|2548|0|6815|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|2549|0|6817|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2550|0|6819|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2551|0|6822|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2552|0|6825|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2553|0|6827|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2554|0|6829|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2555|0|6831|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2556|0|6834|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2557|0|6836|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2558|0|6839|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2559|0|6842|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2560|0|6845|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2561|0|6848|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2562|0|6851|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2563|0|6854|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2564|0|6856|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2565|0|6859|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2566|0|6862|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2567|0|6864|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2568|0|6866|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2569|0|6868|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2570|0|6871|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2571|0|6873|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2572|0|6876|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2573|0|6879|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2574|0|6882|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2575|0|6885|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2576|0|6888|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2577|0|6891|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2578|0|6893|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2579|0|6896|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2580|0|6898|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2581|0|6900|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2582|0|6902|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2583|0|6904|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2584|0|6906|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2585|0|6910|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2586|0|6913|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2587|0|6916|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2588|0|6919|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2589|0|6922|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2590|0|6924|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2591|0|6927|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2592|0|6931|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2593|0|6933|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2594|0|6936|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2595|0|6939|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2596|0|6941|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2597|0|6944|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2598|0|6946|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2599|0|6948|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2600|0|6950|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2601|0|6953|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2602|0|6955|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2603|0|6958|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2604|0|6961|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2605|0|6964|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2606|0|6967|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2607|0|6970|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2608|0|6972|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2609|0|6975|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2610|0|6977|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2611|0|6979|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2612|0|6981|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2613|0|6984|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2614|0|6986|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2615|0|6989|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2616|0|6992|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2617|0|6995|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2618|0|6998|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2619|0|7001|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2620|0|7003|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2621|0|7005|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2622|0|7008|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2623|0|7010|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2624|0|7013|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2625|0|7016|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2626|0|7018|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2627|0|7022|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2628|0|7025|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2629|0|7027|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2630|0|7030|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|2631|0|7033|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|2632|0|7035|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|2633|0|7037|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|2634|0|7039|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2635|0|7041|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2636|0|7043|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2637|0|7045|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2638|0|7047|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2639|0|7049|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2640|0|7051|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2641|0|7054|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2642|0|7056|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2643|0|7059|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2644|0|7062|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2645|0|7065|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2646|0|7068|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2647|0|7071|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|2648|0|7074|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|2649|0|7076|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2650|0|7078|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2651|0|7080|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2652|0|7083|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2653|0|7085|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2654|0|7087|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2655|0|7089|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2656|0|7092|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2657|0|7096|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|2658|0|7099|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|2659|0|7101|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2660|0|7103|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2661|0|7105|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2662|0|7108|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2663|0|7110|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2664|0|7112|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2665|0|7115|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2666|0|7120|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2667|0|7122|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2668|0|7124|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2669|0|7127|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2670|0|7129|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2671|0|7132|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2672|0|7138|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2673|0|7141|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|2674|0|7145|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2675|0|7147|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2676|0|7150|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2677|0|7153|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2678|0|7155|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2679|0|7158|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|2680|0|7161|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|2681|0|7165|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|2682|0|7169|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|2683|0|7173|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2684|0|7175|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2685|0|7178|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2686|0|7181|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2687|0|7183|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2688|0|7186|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2689|0|7189|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2690|0|7191|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2691|0|7194|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2692|0|7196|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2693|0|7199|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2694|0|7201|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2695|0|7204|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2696|0|7206|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2697|0|7209|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2698|0|7211|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2699|0|7214|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2700|0|7216|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2701|0|7219|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|2702|0|7223|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|2703|0|7227|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|2704|0|7229|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|2705|0|7231|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|2706|0|7233|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|2707|0|7235|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|2708|0|7237|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|2709|0|7239|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2710|0|7241|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|2711|0|7243|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|2712|0|7245|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|2713|0|7247|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|2714|0|7249|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|2715|0|7251|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|2716|0|7253|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|2717|0|7255|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|2718|0|7257|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|2719|0|7259|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|2720|0|7261|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|2721|0|7263|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2722|0|7265|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2723|0|7267|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2724|0|7270|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2725|0|7272|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2726|0|7274|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2727|0|7276|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2728|0|7279|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2729|0|7281|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2730|0|7284|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2731|0|7287|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2732|0|7290|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2733|0|7293|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2734|0|7296|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2735|0|7299|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2736|0|7301|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2737|0|7304|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2738|0|7307|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2739|0|7309|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2740|0|7311|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2741|0|7313|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2742|0|7316|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2743|0|7318|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2744|0|7321|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2745|0|7324|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2746|0|7327|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2747|0|7330|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2748|0|7333|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2749|0|7336|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2750|0|7338|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2751|0|7341|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2752|0|7343|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2753|0|7345|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2754|0|7347|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2755|0|7349|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2756|0|7351|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2757|0|7355|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2758|0|7358|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2759|0|7361|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2760|0|7364|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2761|0|7367|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2762|0|7369|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2763|0|7372|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2764|0|7374|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2765|0|7376|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2766|0|7378|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2767|0|7381|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2768|0|7383|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2769|0|7387|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2770|0|7390|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2771|0|7393|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2772|0|7396|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|2773|0|7399|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|2774|0|7401|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|2775|0|7403|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|2776|0|7405|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|2777|0|7407|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2778|0|7409|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2779|0|7411|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2780|0|7413|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2781|0|7415|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2782|0|7417|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2783|0|7419|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2784|0|7422|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2785|0|7424|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2786|0|7427|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2787|0|7430|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2788|0|7433|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2789|0|7436|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2790|0|7439|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|2791|0|7442|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|2792|0|7444|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2793|0|7446|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2794|0|7448|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2795|0|7451|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2796|0|7453|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2797|0|7455|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2798|0|7457|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2799|0|7460|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2800|0|7464|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|2801|0|7467|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|2802|0|7469|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|2803|0|7471|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2804|0|7473|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2805|0|7476|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2806|0|7478|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2807|0|7480|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|2808|0|7483|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2809|0|7488|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2810|0|7490|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2811|0|7492|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2812|0|7495|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2813|0|7497|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2814|0|7500|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2815|0|7506|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|2816|0|7509|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|2817|0|7512|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2818|0|7514|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2819|0|7517|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2820|0|7520|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2821|0|7522|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2822|0|7525|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|2823|0|7528|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|2824|0|7532|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|2825|0|7536|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|2826|0|7540|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2827|0|7542|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2828|0|7545|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2829|0|7548|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2830|0|7550|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2831|0|7553|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2832|0|7556|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2833|0|7558|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2834|0|7561|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2835|0|7563|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2836|0|7566|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2837|0|7568|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2838|0|7571|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2839|0|7573|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2840|0|7576|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2841|0|7578|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2842|0|7581|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2843|0|7583|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|2844|0|7586|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|2845|0|7588|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|2846|0|7590|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|2847|0|7592|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|2848|0|7594|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|2849|0|7596|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|2850|0|7598|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|2851|0|7600|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|2852|0|7602|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|2853|0|7604|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2854|0|7606|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2855|0|7609|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2856|0|7612|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2857|0|7614|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2858|0|7616|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2859|0|7618|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2860|0|7621|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2861|0|7623|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2862|0|7626|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2863|0|7629|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2864|0|7632|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2865|0|7635|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2866|0|7638|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2867|0|7641|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2868|0|7643|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2869|0|7646|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2870|0|7649|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2871|0|7651|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2872|0|7653|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2873|0|7655|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2874|0|7657|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2875|0|7659|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2876|0|7662|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2877|0|7665|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2878|0|7668|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2879|0|7671|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2880|0|7674|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2881|0|7677|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2882|0|7679|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2883|0|7681|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2884|0|7685|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2885|0|7687|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2886|0|7690|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2887|0|7693|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|2888|0|7695|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2889|0|7698|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|2890|0|7700|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2891|0|7703|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2892|0|7705|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2893|0|7708|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2894|0|7710|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2895|0|7712|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2896|0|7714|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2897|0|7717|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2898|0|7719|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2899|0|7723|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2900|0|7726|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2901|0|7729|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2902|0|7732|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2903|0|7735|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2904|0|7737|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2905|0|7740|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2906|0|7742|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2907|0|7744|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2908|0|7746|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2909|0|7749|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2910|0|7751|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2911|0|7755|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2912|0|7758|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2913|0|7761|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2914|0|7764|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|2915|0|7767|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|2916|0|7771|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|2917|0|7775|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|2918|0|7779|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|2919|0|7783|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2920|0|7785|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2921|0|7787|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2922|0|7790|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2923|0|7792|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|2924|0|7795|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|2925|0|7798|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2926|0|7800|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2927|0|7804|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2928|0|7806|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2929|0|7808|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2930|0|7811|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2931|0|7814|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|2932|0|7816|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2933|0|7819|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|2934|0|7823|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|2935|0|7825|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|2936|0|7828|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|2937|0|7831|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|2938|0|7834|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|2939|0|7837|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|5|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 4 ]|3|9||@{0|}}
}}@0|@40000|456000|0|0|0|0|8580|ids lookup-5|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|2940|0|7839|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|2941|0|7841|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|2942|0|7843|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|2943|0|7845|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|2944|0|7847|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|2945|0|7849|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|2946|0|7851|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|2947|0|7853|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|2948|0|7855|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|2949|0|7857|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|2950|0|7859|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|2951|0|7861|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|2952|0|7863|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|2953|0|7865|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2954|0|7867|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|2955|0|7869|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|2956|0|7871|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|2957|0|7873|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|2958|0|7875|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|2959|0|7877|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|2960|0|7879|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|2961|0|7881|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|2962|0|7883|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|2963|0|7885|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|2964|0|7887|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|2965|0|7889|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|2966|0|7891|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|2967|0|7893|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|2968|0|7895|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|2969|0|7897|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|2970|0|7899|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|2971|0|7901|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|2972|0|7903|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|2973|0|7905|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|2974|0|7907|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|2975|0|7910|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|2976|0|7913|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2977|0|7915|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2978|0|7917|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2979|0|7919|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|2980|0|7922|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2981|0|7924|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2982|0|7927|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2983|0|7929|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2984|0|7931|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2985|0|7933|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2986|0|7936|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2987|0|7938|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|2988|0|7941|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|2989|0|7943|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|2990|0|7945|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2991|0|7947|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2992|0|7953|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|2993|0|7955|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|2994|0|7958|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|2995|0|7961|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|2996|0|7963|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|2997|0|7965|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|2998|0|7967|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|2999|0|7979|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3000|0|7981|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3001|0|7984|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3002|0|7992|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3003|0|7994|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3004|0|7997|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3005|0|7999|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3006|0|8001|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3007|0|8003|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3008|0|8008|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3009|0|8010|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3010|0|8012|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3011|0|8018|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3012|0|8020|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3013|0|8024|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|3014|0|8030|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|3015|0|8032|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|3016|0|8034|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|3017|0|8036|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3018|0|8038|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3019|0|8040|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3020|0|8042|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3021|0|8044|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3022|0|8046|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3023|0|8048|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|3024|0|8056|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|3025|0|8058|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3026|0|8060|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3027|0|8062|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3028|0|8065|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3029|0|8069|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3030|0|8071|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3031|0|8073|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3032|0|8078|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3033|0|8082|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|3034|0|8086|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3035|0|8088|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3036|0|8091|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|3037|0|8097|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|3038|0|8101|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|3039|0|8105|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|3040|0|8109|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3041|0|8111|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3042|0|8114|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3043|0|8120|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3044|0|8122|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3045|0|8127|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3046|0|8129|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3047|0|8134|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3048|0|8136|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3049|0|8141|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|3050|0|8145|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|3051|0|8149|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|3052|0|8151|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|3053|0|8153|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|3054|0|8155|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|3055|0|8157|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|3056|0|8159|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|3057|0|8161|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3058|0|8163|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|3059|0|8165|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|3060|0|8167|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|3061|0|8169|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|3062|0|8171|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|3063|0|8173|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|3064|0|8175|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|3065|0|8177|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|3066|0|8179|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|3067|0|8181|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|3068|0|8183|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|3069|0|8185|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3070|0|8187|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3071|0|8189|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3072|0|8192|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3073|0|8194|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3074|0|8196|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3075|0|8198|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3076|0|8202|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3077|0|8204|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3078|0|8207|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3079|0|8210|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3080|0|8212|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3081|0|8214|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3082|0|8216|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3083|0|8221|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3084|0|8223|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|3085|0|8225|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|3086|0|8227|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|3087|0|8229|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|3088|0|8231|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3089|0|8233|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3090|0|8235|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3091|0|8237|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3092|0|8240|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3093|0|8242|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3094|0|8245|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3095|0|8247|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3096|0|8249|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3097|0|8251|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3098|0|8255|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3099|0|8257|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3100|0|8260|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3101|0|8262|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3102|0|8264|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3103|0|8266|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|3104|0|8280|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|3105|0|8282|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|3106|0|8284|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|3107|0|8286|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|3108|0|8288|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3109|0|8290|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3110|0|8292|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3111|0|8294|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3112|0|8296|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3113|0|8298|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3114|0|8300|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|3115|0|8308|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|3116|0|8310|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3117|0|8312|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3118|0|8314|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3119|0|8317|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3120|0|8321|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3121|0|8323|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3122|0|8325|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3123|0|8330|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3124|0|8334|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|3125|0|8339|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3126|0|8341|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3127|0|8344|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|3128|0|8350|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|3129|0|8354|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|3130|0|8358|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|3131|0|8362|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3132|0|8364|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3133|0|8367|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3134|0|8373|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|3135|0|8375|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3136|0|8380|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3137|0|8382|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3138|0|8387|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3139|0|8389|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|3140|0|8394|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|3141|0|8396|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|3142|0|8398|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|3143|0|8401|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|3144|0|8404|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|3145|0|8406|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|3146|0|8408|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|3147|0|8410|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3148|0|8412|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3149|0|8415|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3150|0|8418|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3151|0|8420|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3152|0|8422|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3153|0|8424|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3154|0|8429|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3155|0|8431|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3156|0|8434|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3157|0|8436|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3158|0|8438|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3159|0|8440|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3160|0|8444|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3161|0|8446|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3162|0|8449|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3163|0|8451|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3164|0|8453|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3165|0|8455|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3166|0|8465|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3167|0|8467|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3168|0|8469|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3169|0|8476|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3170|0|8478|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3171|0|8485|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|3172|0|8489|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|3173|0|8493|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|3174|0|8497|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|3175|0|8501|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3176|0|8503|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3177|0|8505|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3178|0|8511|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3179|0|8513|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3180|0|8517|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3181|0|8522|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3182|0|8524|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3183|0|8527|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|3184|0|8534|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|3185|0|8538|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|3186|0|8541|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|3187|0|8543|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|3188|0|8545|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|3189|0|8547|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|3190|0|8549|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|3191|0|8551|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|3192|0|8553|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|3193|0|8555|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|3194|0|8557|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|3195|0|8559|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|3196|0|8561|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|3197|0|8563|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|3198|0|8565|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|3199|0|8567|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|3200|0|8569|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3201|0|8571|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|3202|0|8573|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3203|0|8575|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|3204|0|8577|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|3205|0|8579|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|3206|0|8581|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|3207|0|8583|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|3208|0|8585|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|3209|0|8587|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|3210|0|8589|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|3211|0|8591|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|3212|0|8593|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|3213|0|8595|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|3214|0|8597|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|3215|0|8599|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|3216|0|8601|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|3217|0|8603|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|3218|0|8605|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|3219|0|8607|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|3220|0|8609|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3221|0|8611|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3222|0|8614|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3223|0|8617|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3224|0|8619|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3225|0|8621|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3226|0|8623|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3227|0|8626|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3228|0|8628|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3229|0|8631|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3230|0|8634|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3231|0|8637|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3232|0|8640|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3233|0|8643|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3234|0|8646|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3235|0|8648|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3236|0|8651|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3237|0|8654|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3238|0|8656|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3239|0|8658|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3240|0|8660|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3241|0|8663|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3242|0|8665|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3243|0|8668|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3244|0|8671|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3245|0|8674|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3246|0|8677|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3247|0|8680|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3248|0|8683|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3249|0|8685|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3250|0|8688|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3251|0|8690|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3252|0|8692|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3253|0|8694|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3254|0|8696|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3255|0|8698|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3256|0|8702|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3257|0|8705|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3258|0|8708|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3259|0|8711|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3260|0|8714|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3261|0|8716|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3262|0|8719|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3263|0|8723|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3264|0|8725|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3265|0|8728|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3266|0|8731|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3267|0|8733|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3268|0|8736|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3269|0|8738|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3270|0|8740|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3271|0|8742|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3272|0|8745|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3273|0|8747|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3274|0|8750|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3275|0|8753|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3276|0|8756|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3277|0|8759|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3278|0|8762|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3279|0|8764|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3280|0|8767|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3281|0|8769|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3282|0|8771|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3283|0|8773|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3284|0|8776|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3285|0|8778|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3286|0|8781|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3287|0|8784|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3288|0|8787|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3289|0|8790|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3290|0|8793|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3291|0|8795|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3292|0|8797|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3293|0|8800|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3294|0|8802|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3295|0|8805|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3296|0|8808|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3297|0|8810|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3298|0|8814|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3299|0|8817|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3300|0|8819|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3301|0|8822|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|3302|0|8825|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|3303|0|8827|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|3304|0|8829|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|3305|0|8831|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3306|0|8833|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3307|0|8835|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3308|0|8837|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3309|0|8839|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3310|0|8841|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3311|0|8843|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3312|0|8846|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3313|0|8848|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3314|0|8851|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3315|0|8854|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3316|0|8857|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3317|0|8860|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3318|0|8863|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|3319|0|8866|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|3320|0|8868|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3321|0|8870|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3322|0|8872|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3323|0|8875|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3324|0|8877|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3325|0|8879|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3326|0|8881|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3327|0|8884|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3328|0|8888|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|3329|0|8891|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|3330|0|8893|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3331|0|8895|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3332|0|8897|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3333|0|8900|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3334|0|8902|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3335|0|8904|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3336|0|8907|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3337|0|8912|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3338|0|8914|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3339|0|8916|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3340|0|8919|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3341|0|8921|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3342|0|8924|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3343|0|8930|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3344|0|8933|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|3345|0|8937|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3346|0|8939|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3347|0|8942|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3348|0|8945|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3349|0|8947|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3350|0|8950|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|3351|0|8953|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|3352|0|8957|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|3353|0|8961|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|3354|0|8965|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3355|0|8967|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3356|0|8970|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3357|0|8973|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3358|0|8975|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3359|0|8978|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3360|0|8981|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|3361|0|8983|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3362|0|8986|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3363|0|8988|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3364|0|8991|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|3365|0|8993|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3366|0|8996|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3367|0|8998|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3368|0|9001|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|3369|0|9003|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3370|0|9006|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3371|0|9008|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3372|0|9011|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|3373|0|9015|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|3374|0|9019|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|3375|0|9021|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|3376|0|9023|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|3377|0|9025|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|3378|0|9027|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|3379|0|9029|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|3380|0|9031|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3381|0|9033|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|3382|0|9035|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|3383|0|9037|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|3384|0|9039|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|3385|0|9041|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|3386|0|9043|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|3387|0|9045|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|3388|0|9047|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|3389|0|9049|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|3390|0|9051|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|3391|0|9053|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|3392|0|9055|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3393|0|9057|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3394|0|9059|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3395|0|9062|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3396|0|9064|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3397|0|9066|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3398|0|9068|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3399|0|9071|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3400|0|9073|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3401|0|9076|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3402|0|9079|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3403|0|9082|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3404|0|9085|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3405|0|9088|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3406|0|9091|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3407|0|9093|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3408|0|9096|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3409|0|9099|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3410|0|9101|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3411|0|9103|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3412|0|9105|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3413|0|9108|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3414|0|9110|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3415|0|9113|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3416|0|9116|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3417|0|9119|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3418|0|9122|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3419|0|9125|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3420|0|9128|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3421|0|9130|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3422|0|9133|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3423|0|9135|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3424|0|9137|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3425|0|9139|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3426|0|9141|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3427|0|9143|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3428|0|9147|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3429|0|9150|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3430|0|9153|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3431|0|9156|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3432|0|9159|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3433|0|9161|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3434|0|9164|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3435|0|9166|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3436|0|9168|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3437|0|9170|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3438|0|9173|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3439|0|9175|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3440|0|9179|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3441|0|9182|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3442|0|9185|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3443|0|9188|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|3444|0|9191|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|3445|0|9193|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|3446|0|9195|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|3447|0|9197|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|3448|0|9199|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3449|0|9201|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3450|0|9203|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3451|0|9205|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3452|0|9207|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3453|0|9209|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3454|0|9211|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3455|0|9214|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3456|0|9216|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3457|0|9219|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3458|0|9222|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3459|0|9225|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3460|0|9228|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3461|0|9231|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|3462|0|9234|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|3463|0|9236|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3464|0|9238|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3465|0|9240|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3466|0|9243|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3467|0|9245|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3468|0|9247|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3469|0|9249|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3470|0|9252|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3471|0|9256|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|3472|0|9259|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|3473|0|9261|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3474|0|9263|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3475|0|9265|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3476|0|9268|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3477|0|9270|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3478|0|9272|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3479|0|9275|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3480|0|9280|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3481|0|9282|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3482|0|9284|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3483|0|9287|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3484|0|9289|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3485|0|9292|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3486|0|9298|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3487|0|9301|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|3488|0|9304|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3489|0|9306|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3490|0|9309|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3491|0|9312|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3492|0|9314|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3493|0|9317|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|3494|0|9320|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|3495|0|9324|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|3496|0|9328|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|3497|0|9332|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3498|0|9334|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3499|0|9337|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3500|0|9340|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3501|0|9342|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3502|0|9345|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3503|0|9348|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3504|0|9350|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3505|0|9353|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3506|0|9355|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3507|0|9358|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|3508|0|9360|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3509|0|9363|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3510|0|9365|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3511|0|9368|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|3512|0|9370|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3513|0|9373|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3514|0|9375|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|3515|0|9378|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|3516|0|9380|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|3517|0|9382|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|3518|0|9384|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|3519|0|9386|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|3520|0|9388|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|3521|0|9390|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|3522|0|9392|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|3523|0|9394|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|3524|0|9396|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3525|0|9398|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3526|0|9401|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3527|0|9404|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3528|0|9406|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3529|0|9408|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3530|0|9410|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3531|0|9413|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3532|0|9415|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3533|0|9418|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3534|0|9421|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3535|0|9424|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3536|0|9427|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3537|0|9430|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3538|0|9433|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3539|0|9435|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3540|0|9438|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3541|0|9441|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3542|0|9443|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3543|0|9445|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3544|0|9447|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3545|0|9449|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3546|0|9451|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3547|0|9454|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3548|0|9457|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3549|0|9460|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3550|0|9463|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3551|0|9466|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3552|0|9469|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3553|0|9471|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3554|0|9473|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3555|0|9477|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3556|0|9479|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3557|0|9482|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3558|0|9485|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|3559|0|9487|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3560|0|9490|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|3561|0|9492|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3562|0|9495|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3563|0|9497|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3564|0|9500|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3565|0|9502|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3566|0|9504|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3567|0|9506|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3568|0|9509|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3569|0|9511|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3570|0|9515|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3571|0|9518|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3572|0|9521|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3573|0|9524|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3574|0|9527|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3575|0|9529|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3576|0|9532|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3577|0|9534|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3578|0|9536|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3579|0|9538|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3580|0|9541|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3581|0|9543|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3582|0|9547|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3583|0|9550|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3584|0|9553|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3585|0|9556|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3586|0|9559|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|3587|0|9563|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|3588|0|9567|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|3589|0|9571|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|3590|0|9575|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3591|0|9577|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3592|0|9579|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3593|0|9582|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3594|0|9584|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3595|0|9587|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3596|0|9590|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3597|0|9592|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3598|0|9596|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3599|0|9598|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3600|0|9600|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3601|0|9603|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3602|0|9606|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3603|0|9608|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3604|0|9611|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3605|0|9615|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3606|0|9617|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3607|0|9620|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|3608|0|9623|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|3609|0|9626|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|3610|0|9629|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|6|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 5 ]|3|9||@{0|}}
}}@0|@40000|576000|0|0|0|0|8587|ids lookup-6|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|3611|0|9631|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|3612|0|9633|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|3613|0|9635|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|3614|0|9637|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|3615|0|9639|0|{@{}@384|.5|.5|{0|}7803|17|}}
{2010210004|XXGflow|3616|0|9641|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|3617|0|9643|0|{@{}@384|.5|.5|{0|}7804|17|}}
{2010210004|XXGflow|3618|0|9645|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|3619|0|9647|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|3620|0|9649|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7805|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|3621|0|9651|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|3622|0|9653|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|3623|0|9655|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|3624|0|9657|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3625|0|9659|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|3626|0|9661|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3627|0|9663|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|3628|0|9665|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|3629|0|9667|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|3630|0|9669|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|3631|0|9671|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|3632|0|9673|0|{@{}@384|.5|.5|{0|}14920|17|}}
{2010210004|XXGflow|3633|0|9675|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|3634|0|9677|0|{@{}@384|.5|.5|{0|}14921|1041|}}
{2010210004|XXGflow|3635|0|9679|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|3636|0|9681|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|3637|0|9683|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|3638|0|9685|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|3639|0|9687|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|3640|0|9689|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|3641|0|9691|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|3642|0|9693|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|3643|0|9695|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|3644|0|9697|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3645|0|9699|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3646|0|9702|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3647|0|9705|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3648|0|9707|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3649|0|9709|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3650|0|9711|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3651|0|9714|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14922|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3652|0|9716|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3653|0|9719|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3654|0|9721|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3655|0|9723|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3656|0|9725|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3657|0|9728|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3658|0|9730|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3659|0|9733|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3660|0|9735|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3661|0|9737|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3662|0|9739|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3663|0|9745|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3664|0|9747|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3665|0|9750|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3666|0|9753|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3667|0|9755|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3668|0|9757|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3669|0|9759|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3670|0|9764|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3671|0|9766|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3672|0|9769|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3673|0|9771|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3674|0|9773|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3675|0|9775|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3676|0|9786|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3677|0|9788|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3678|0|9791|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3679|0|9800|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3680|0|9802|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3681|0|9804|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3682|0|9810|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3683|0|9812|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3684|0|9816|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|3685|0|9822|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|3686|0|9824|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|3687|0|9826|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|3688|0|9828|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3689|0|9830|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3690|0|9832|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3691|0|9834|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3692|0|9836|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3693|0|9838|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3694|0|9840|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|3695|0|9848|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|3696|0|9850|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3697|0|9852|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3698|0|9854|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3699|0|9857|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3700|0|9861|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3701|0|9863|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3702|0|9865|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3703|0|9870|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3704|0|9874|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|3705|0|9878|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3706|0|9880|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3707|0|9883|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|3708|0|9889|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|3709|0|9893|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|3710|0|9897|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|3711|0|9901|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3712|0|9903|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3713|0|9906|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3714|0|9912|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3715|0|9914|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3716|0|9919|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3717|0|9921|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3718|0|9926|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3719|0|9928|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3720|0|9933|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|3721|0|9937|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|3722|0|9941|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|3723|0|9943|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|3724|0|9945|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|3725|0|9947|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|3726|0|9949|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|3727|0|9951|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|3728|0|9953|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3729|0|9955|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|3730|0|9957|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|3731|0|9959|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|3732|0|9961|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|3733|0|9963|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|3734|0|9965|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|3735|0|9967|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|3736|0|9969|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|3737|0|9971|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|3738|0|9973|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|3739|0|9975|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|3740|0|9977|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3741|0|9979|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3742|0|9981|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3743|0|9984|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3744|0|9986|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3745|0|9988|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3746|0|9990|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3747|0|9994|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3748|0|9996|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3749|0|9999|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3750|0|10002|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3751|0|10004|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3752|0|10006|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3753|0|10008|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3754|0|10013|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3755|0|10015|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|3756|0|10017|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|3757|0|10019|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|3758|0|10021|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|3759|0|10023|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3760|0|10025|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3761|0|10027|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3762|0|10029|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3763|0|10032|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3764|0|10034|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3765|0|10037|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3766|0|10039|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3767|0|10041|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3768|0|10043|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3769|0|10047|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3770|0|10049|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3771|0|10052|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3772|0|10054|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3773|0|10056|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3774|0|10058|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|3775|0|10072|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|3776|0|10074|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|3777|0|10076|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|3778|0|10078|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|3779|0|10080|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3780|0|10082|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3781|0|10084|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3782|0|10086|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3783|0|10088|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3784|0|10090|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3785|0|10092|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|3786|0|10100|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|3787|0|10102|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3788|0|10104|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3789|0|10106|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3790|0|10109|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3791|0|10113|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3792|0|10115|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3793|0|10117|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3794|0|10122|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3795|0|10126|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|3796|0|10131|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3797|0|10133|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3798|0|10136|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|3799|0|10142|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|3800|0|10146|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|3801|0|10150|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|3802|0|10154|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3803|0|10156|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3804|0|10159|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3805|0|10165|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|3806|0|10167|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3807|0|10172|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3808|0|10174|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3809|0|10179|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3810|0|10181|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|3811|0|10186|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|3812|0|10188|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|3813|0|10190|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|3814|0|10193|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|3815|0|10196|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|3816|0|10198|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|3817|0|10200|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|3818|0|10202|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3819|0|10204|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3820|0|10207|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3821|0|10210|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3822|0|10212|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3823|0|10214|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3824|0|10216|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3825|0|10221|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3826|0|10223|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3827|0|10226|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3828|0|10228|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3829|0|10230|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3830|0|10232|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3831|0|10236|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3832|0|10238|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3833|0|10241|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3834|0|10243|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3835|0|10245|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3836|0|10247|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3837|0|10257|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3838|0|10259|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3839|0|10261|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3840|0|10268|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|3841|0|10270|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3842|0|10277|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|3843|0|10281|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|3844|0|10285|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|3845|0|10289|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|3846|0|10293|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3847|0|10295|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3848|0|10297|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3849|0|10303|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|3850|0|10305|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3851|0|10309|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3852|0|10314|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3853|0|10316|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3854|0|10319|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|3855|0|10326|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|3856|0|10330|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|3857|0|10333|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|3858|0|10335|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|3859|0|10337|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|3860|0|10339|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|3861|0|10341|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|3862|0|10343|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|3863|0|10345|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|3864|0|10347|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|3865|0|10349|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|3866|0|10351|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|3867|0|10353|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|3868|0|10355|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|3869|0|10357|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|3870|0|10359|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|3871|0|10361|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3872|0|10363|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|3873|0|10365|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|3874|0|10367|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|3875|0|10369|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|3876|0|10371|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|3877|0|10373|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|3878|0|10375|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|3879|0|10377|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|3880|0|10379|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|3881|0|10381|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|3882|0|10383|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|3883|0|10385|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|3884|0|10387|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|3885|0|10389|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|3886|0|10391|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|3887|0|10393|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|3888|0|10395|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|3889|0|10397|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|3890|0|10399|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|3891|0|10401|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3892|0|10403|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3893|0|10406|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3894|0|10409|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3895|0|10411|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3896|0|10413|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3897|0|10415|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3898|0|10418|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3899|0|10420|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3900|0|10423|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3901|0|10426|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3902|0|10429|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3903|0|10432|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3904|0|10435|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3905|0|10438|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3906|0|10440|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3907|0|10443|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3908|0|10446|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3909|0|10448|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3910|0|10450|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3911|0|10452|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3912|0|10455|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3913|0|10457|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3914|0|10460|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|3915|0|10463|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3916|0|10466|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3917|0|10469|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3918|0|10472|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3919|0|10475|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3920|0|10477|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3921|0|10480|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3922|0|10482|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3923|0|10484|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3924|0|10486|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3925|0|10488|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3926|0|10490|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|3927|0|10494|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|3928|0|10497|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|3929|0|10500|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3930|0|10503|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3931|0|10506|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3932|0|10508|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3933|0|10511|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3934|0|10515|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3935|0|10517|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3936|0|10520|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|3937|0|10523|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3938|0|10525|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3939|0|10528|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3940|0|10530|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3941|0|10532|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3942|0|10534|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3943|0|10537|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3944|0|10539|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3945|0|10542|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3946|0|10545|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3947|0|10548|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3948|0|10551|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3949|0|10554|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3950|0|10556|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3951|0|10559|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3952|0|10561|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3953|0|10563|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3954|0|10565|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3955|0|10568|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3956|0|10570|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|3957|0|10573|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3958|0|10576|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3959|0|10579|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3960|0|10582|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3961|0|10585|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3962|0|10587|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3963|0|10589|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3964|0|10592|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3965|0|10594|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3966|0|10597|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3967|0|10600|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3968|0|10602|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3969|0|10606|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|3970|0|10609|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3971|0|10611|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|3972|0|10614|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|3973|0|10617|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|3974|0|10619|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|3975|0|10621|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|3976|0|10623|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|3977|0|10625|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3978|0|10627|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3979|0|10629|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3980|0|10631|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3981|0|10633|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3982|0|10635|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|3983|0|10638|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|3984|0|10640|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|3985|0|10643|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|3986|0|10646|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|3987|0|10649|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|3988|0|10652|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|3989|0|10655|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|3990|0|10658|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|3991|0|10660|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|3992|0|10662|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3993|0|10664|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|3994|0|10667|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|3995|0|10669|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|3996|0|10671|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|3997|0|10673|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|3998|0|10676|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|3999|0|10680|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|4000|0|10683|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|4001|0|10685|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4002|0|10687|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4003|0|10689|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4004|0|10692|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4005|0|10694|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4006|0|10696|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4007|0|10699|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4008|0|10704|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4009|0|10706|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4010|0|10708|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4011|0|10711|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4012|0|10713|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4013|0|10716|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4014|0|10722|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4015|0|10725|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|4016|0|10729|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4017|0|10731|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4018|0|10734|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4019|0|10737|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4020|0|10739|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4021|0|10742|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|4022|0|10745|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|4023|0|10749|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|4024|0|10753|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|4025|0|10757|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4026|0|10759|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4027|0|10762|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4028|0|10765|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4029|0|10767|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4030|0|10770|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4031|0|10773|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4032|0|10775|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4033|0|10778|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4034|0|10780|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4035|0|10783|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4036|0|10785|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4037|0|10788|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4038|0|10790|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4039|0|10793|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4040|0|10795|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4041|0|10798|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4042|0|10800|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4043|0|10803|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|4044|0|10807|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|4045|0|10811|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|4046|0|10813|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|4047|0|10815|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|4048|0|10817|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|4049|0|10819|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|4050|0|10821|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|4051|0|10823|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4052|0|10825|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|4053|0|10827|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|4054|0|10829|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|4055|0|10831|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|4056|0|10833|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|4057|0|10835|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|4058|0|10837|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|4059|0|10839|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|4060|0|10841|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|4061|0|10843|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|4062|0|10845|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|4063|0|10847|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4064|0|10849|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4065|0|10851|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4066|0|10854|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4067|0|10856|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4068|0|10858|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4069|0|10860|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4070|0|10863|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4071|0|10865|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4072|0|10868|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4073|0|10871|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4074|0|10874|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4075|0|10877|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4076|0|10880|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4077|0|10883|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4078|0|10885|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4079|0|10888|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4080|0|10891|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4081|0|10893|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4082|0|10895|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4083|0|10897|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4084|0|10900|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4085|0|10902|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4086|0|10905|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4087|0|10908|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4088|0|10911|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4089|0|10914|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4090|0|10917|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4091|0|10920|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4092|0|10922|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4093|0|10925|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4094|0|10927|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4095|0|10929|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4096|0|10931|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4097|0|10933|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4098|0|10935|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4099|0|10939|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4100|0|10942|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4101|0|10945|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4102|0|10948|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4103|0|10951|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4104|0|10953|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4105|0|10956|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4106|0|10958|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4107|0|10960|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4108|0|10962|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4109|0|10965|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4110|0|10967|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4111|0|10971|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4112|0|10974|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4113|0|10977|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4114|0|10980|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|4115|0|10983|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|4116|0|10985|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|4117|0|10987|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|4118|0|10989|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|4119|0|10991|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4120|0|10993|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4121|0|10995|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4122|0|10997|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4123|0|10999|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4124|0|11001|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4125|0|11003|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4126|0|11006|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4127|0|11008|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4128|0|11011|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4129|0|11014|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4130|0|11017|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4131|0|11020|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4132|0|11023|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|4133|0|11026|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|4134|0|11028|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4135|0|11030|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4136|0|11032|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4137|0|11035|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4138|0|11037|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4139|0|11039|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4140|0|11041|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4141|0|11044|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4142|0|11048|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|4143|0|11051|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|4144|0|11053|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4145|0|11055|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4146|0|11057|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4147|0|11060|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4148|0|11062|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4149|0|11064|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4150|0|11067|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4151|0|11072|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4152|0|11074|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4153|0|11076|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4154|0|11079|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4155|0|11081|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4156|0|11084|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4157|0|11090|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4158|0|11093|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|4159|0|11096|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4160|0|11098|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4161|0|11101|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4162|0|11104|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4163|0|11106|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4164|0|11109|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|4165|0|11112|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|4166|0|11116|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|4167|0|11120|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|4168|0|11124|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4169|0|11126|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4170|0|11129|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4171|0|11132|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4172|0|11134|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4173|0|11137|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4174|0|11140|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4175|0|11142|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4176|0|11145|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4177|0|11147|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4178|0|11150|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4179|0|11152|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4180|0|11155|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4181|0|11157|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4182|0|11160|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4183|0|11162|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4184|0|11165|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4185|0|11167|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|4186|0|11170|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|4187|0|11172|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|4188|0|11174|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|4189|0|11176|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|4190|0|11178|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|4191|0|11180|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|4192|0|11182|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|4193|0|11184|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|4194|0|11186|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|4195|0|11188|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4196|0|11190|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4197|0|11193|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4198|0|11196|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4199|0|11198|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4200|0|11200|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4201|0|11202|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4202|0|11205|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4203|0|11207|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4204|0|11210|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4205|0|11213|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4206|0|11216|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4207|0|11219|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4208|0|11222|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4209|0|11225|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4210|0|11227|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4211|0|11230|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4212|0|11233|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4213|0|11235|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4214|0|11237|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4215|0|11239|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4216|0|11241|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4217|0|11243|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4218|0|11246|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4219|0|11249|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4220|0|11252|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4221|0|11255|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4222|0|11258|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4223|0|11261|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4224|0|11263|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4225|0|11265|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4226|0|11269|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4227|0|11271|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4228|0|11274|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4229|0|11277|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4230|0|11279|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4231|0|11282|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4232|0|11284|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4233|0|11287|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4234|0|11289|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4235|0|11292|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4236|0|11294|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4237|0|11296|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4238|0|11298|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4239|0|11301|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4240|0|11303|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4241|0|11307|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4242|0|11310|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4243|0|11313|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4244|0|11316|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4245|0|11319|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4246|0|11321|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4247|0|11324|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4248|0|11326|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4249|0|11328|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4250|0|11330|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4251|0|11333|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4252|0|11335|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4253|0|11339|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4254|0|11342|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4255|0|11345|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4256|0|11348|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4257|0|11351|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|4258|0|11355|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|4259|0|11359|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|4260|0|11363|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|4261|0|11367|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4262|0|11369|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4263|0|11371|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4264|0|11374|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4265|0|11376|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4266|0|11379|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4267|0|11382|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4268|0|11384|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4269|0|11388|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4270|0|11390|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4271|0|11392|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4272|0|11395|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4273|0|11398|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4274|0|11400|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4275|0|11403|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4276|0|11407|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4277|0|11409|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4278|0|11412|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|4279|0|11415|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|4280|0|11418|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|4281|0|11421|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|7|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 6 ]|3|9||@{0|}}
}}@0|@45000|721000|0|0|0|0|8582|ids lookup-7|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|4282|0|11423|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|4283|0|11425|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|4284|0|11427|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|4285|0|11429|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|4286|0|11431|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|4287|0|11433|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|4288|0|11435|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|4289|0|11437|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|4290|0|11439|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|4291|0|11441|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|4292|0|11443|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|4293|0|11445|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|4294|0|11447|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|4295|0|11449|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4296|0|11451|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|4297|0|11453|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4298|0|11455|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|4299|0|11457|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|4300|0|11459|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|4301|0|11461|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|4302|0|11463|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|4303|0|11465|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|4304|0|11467|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|4305|0|11469|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|4306|0|11471|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|4307|0|11473|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|4308|0|11475|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|4309|0|11477|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|4310|0|11479|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|4311|0|11481|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|4312|0|11483|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|4313|0|11485|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|4314|0|11487|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|4315|0|11489|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4316|0|11491|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4317|0|11494|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4318|0|11497|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4319|0|11499|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4320|0|11501|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4321|0|11503|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4322|0|11506|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4323|0|11508|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4324|0|11511|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4325|0|11513|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4326|0|11515|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4327|0|11517|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4328|0|11520|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4329|0|11522|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4330|0|11525|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4331|0|11527|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4332|0|11529|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4333|0|11531|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4334|0|11537|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4335|0|11539|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4336|0|11542|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4337|0|11545|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4338|0|11547|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4339|0|11549|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4340|0|11551|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4341|0|11563|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4342|0|11565|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4343|0|11568|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4344|0|11576|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4345|0|11578|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4346|0|11581|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4347|0|11583|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4348|0|11585|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4349|0|11587|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4350|0|11592|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4351|0|11594|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4352|0|11596|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4353|0|11602|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4354|0|11604|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4355|0|11608|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|4356|0|11614|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|4357|0|11616|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|4358|0|11618|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|4359|0|11620|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4360|0|11622|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4361|0|11624|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4362|0|11626|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4363|0|11628|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4364|0|11630|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4365|0|11632|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|4366|0|11640|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|4367|0|11642|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4368|0|11644|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4369|0|11646|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4370|0|11649|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4371|0|11653|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4372|0|11655|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4373|0|11657|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4374|0|11662|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4375|0|11666|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|4376|0|11670|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4377|0|11672|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4378|0|11675|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|4379|0|11681|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|4380|0|11685|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|4381|0|11689|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|4382|0|11693|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4383|0|11695|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4384|0|11698|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4385|0|11704|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|4386|0|11706|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4387|0|11711|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|4388|0|11713|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4389|0|11718|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|4390|0|11720|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4391|0|11725|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|4392|0|11729|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|4393|0|11733|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|4394|0|11735|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|4395|0|11737|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|4396|0|11739|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|4397|0|11741|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|4398|0|11743|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|4399|0|11745|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4400|0|11747|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|4401|0|11749|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|4402|0|11751|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|4403|0|11753|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|4404|0|11755|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|4405|0|11757|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|4406|0|11759|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|4407|0|11761|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|4408|0|11763|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|4409|0|11765|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|4410|0|11767|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|4411|0|11769|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4412|0|11771|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4413|0|11773|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4414|0|11776|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4415|0|11778|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4416|0|11780|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4417|0|11782|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4418|0|11786|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4419|0|11788|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4420|0|11791|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4421|0|11794|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4422|0|11796|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4423|0|11798|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4424|0|11800|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4425|0|11805|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4426|0|11807|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|4427|0|11809|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|4428|0|11811|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|4429|0|11813|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|4430|0|11815|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4431|0|11817|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4432|0|11819|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4433|0|11821|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4434|0|11824|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4435|0|11826|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4436|0|11829|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4437|0|11831|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4438|0|11833|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4439|0|11835|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4440|0|11839|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4441|0|11841|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4442|0|11844|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4443|0|11846|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4444|0|11848|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4445|0|11850|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|4446|0|11864|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|4447|0|11866|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|4448|0|11868|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|4449|0|11870|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|4450|0|11872|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4451|0|11874|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4452|0|11876|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4453|0|11878|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4454|0|11880|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4455|0|11882|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4456|0|11884|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|4457|0|11892|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|4458|0|11894|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4459|0|11896|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4460|0|11898|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4461|0|11901|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4462|0|11905|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4463|0|11907|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4464|0|11909|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4465|0|11914|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4466|0|11918|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|4467|0|11923|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4468|0|11925|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4469|0|11928|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|4470|0|11934|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|4471|0|11938|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|4472|0|11942|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|4473|0|11946|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4474|0|11948|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4475|0|11951|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4476|0|11957|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|4477|0|11959|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4478|0|11964|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|4479|0|11966|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4480|0|11971|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|4481|0|11973|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|4482|0|11978|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|4483|0|11980|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|4484|0|11982|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|4485|0|11985|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|4486|0|11988|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|4487|0|11990|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|4488|0|11992|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|4489|0|11994|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4490|0|11996|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4491|0|11999|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4492|0|12002|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4493|0|12004|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4494|0|12006|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4495|0|12008|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4496|0|12013|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4497|0|12015|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4498|0|12018|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4499|0|12020|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4500|0|12022|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4501|0|12024|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4502|0|12028|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4503|0|12030|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4504|0|12033|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4505|0|12035|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4506|0|12037|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4507|0|12039|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4508|0|12049|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4509|0|12051|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4510|0|12053|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4511|0|12060|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|4512|0|12062|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4513|0|12069|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|4514|0|12073|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|4515|0|12077|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|4516|0|12081|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|4517|0|12085|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4518|0|12087|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4519|0|12089|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4520|0|12095|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4521|0|12097|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4522|0|12101|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4523|0|12106|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4524|0|12108|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4525|0|12111|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|4526|0|12118|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|4527|0|12122|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|4528|0|12125|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|4529|0|12127|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|4530|0|12129|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|4531|0|12131|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|4532|0|12133|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|4533|0|12135|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|4534|0|12137|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|4535|0|12139|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|4536|0|12141|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|4537|0|12143|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|4538|0|12145|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|4539|0|12147|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|4540|0|12149|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|4541|0|12151|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|4542|0|12153|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4543|0|12155|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|4544|0|12157|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4545|0|12159|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|4546|0|12161|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|4547|0|12163|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|4548|0|12165|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|4549|0|12167|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|4550|0|12169|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|4551|0|12171|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|4552|0|12173|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|4553|0|12175|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|4554|0|12177|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|4555|0|12179|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|4556|0|12181|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|4557|0|12183|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|4558|0|12185|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|4559|0|12187|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|4560|0|12189|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|4561|0|12191|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|4562|0|12193|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4563|0|12195|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4564|0|12198|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4565|0|12201|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4566|0|12203|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4567|0|12205|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4568|0|12207|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4569|0|12210|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4570|0|12212|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4571|0|12215|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4572|0|12218|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4573|0|12221|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4574|0|12224|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4575|0|12227|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4576|0|12230|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4577|0|12232|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4578|0|12235|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4579|0|12238|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4580|0|12240|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4581|0|12242|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4582|0|12244|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4583|0|12247|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4584|0|12249|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4585|0|12252|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4586|0|12255|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4587|0|12258|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4588|0|12261|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4589|0|12264|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4590|0|12267|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4591|0|12269|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4592|0|12272|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4593|0|12274|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4594|0|12276|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4595|0|12278|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4596|0|12280|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4597|0|12282|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4598|0|12286|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4599|0|12289|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4600|0|12292|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4601|0|12295|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4602|0|12298|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4603|0|12300|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4604|0|12303|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4605|0|12307|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4606|0|12309|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4607|0|12312|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4608|0|12315|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4609|0|12317|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4610|0|12320|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4611|0|12322|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4612|0|12324|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4613|0|12326|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4614|0|12329|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4615|0|12331|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4616|0|12334|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4617|0|12337|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4618|0|12340|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4619|0|12343|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4620|0|12346|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4621|0|12348|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4622|0|12351|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4623|0|12353|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4624|0|12355|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4625|0|12357|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4626|0|12360|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4627|0|12362|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4628|0|12365|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4629|0|12368|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4630|0|12371|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4631|0|12374|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4632|0|12377|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4633|0|12379|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4634|0|12381|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4635|0|12384|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4636|0|12386|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4637|0|12389|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4638|0|12392|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4639|0|12394|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4640|0|12398|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4641|0|12401|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4642|0|12403|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4643|0|12406|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|4644|0|12409|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|4645|0|12411|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|4646|0|12413|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|4647|0|12415|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4648|0|12417|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4649|0|12419|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4650|0|12421|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4651|0|12423|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4652|0|12425|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4653|0|12427|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4654|0|12430|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4655|0|12432|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4656|0|12435|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4657|0|12438|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4658|0|12441|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4659|0|12444|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4660|0|12447|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|4661|0|12450|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|4662|0|12452|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4663|0|12454|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4664|0|12456|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4665|0|12459|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4666|0|12461|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4667|0|12463|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4668|0|12465|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4669|0|12468|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4670|0|12472|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|4671|0|12475|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|4672|0|12477|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4673|0|12479|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4674|0|12481|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4675|0|12484|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4676|0|12486|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4677|0|12488|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4678|0|12491|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4679|0|12496|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4680|0|12498|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4681|0|12500|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4682|0|12503|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4683|0|12505|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4684|0|12508|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4685|0|12514|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4686|0|12517|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|4687|0|12521|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4688|0|12523|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4689|0|12526|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4690|0|12529|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4691|0|12531|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4692|0|12534|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|4693|0|12537|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|4694|0|12541|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|4695|0|12545|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|4696|0|12549|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4697|0|12551|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4698|0|12554|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4699|0|12557|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4700|0|12559|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4701|0|12562|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4702|0|12565|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4703|0|12567|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4704|0|12570|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4705|0|12572|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4706|0|12575|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4707|0|12577|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4708|0|12580|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4709|0|12582|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4710|0|12585|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4711|0|12587|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4712|0|12590|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4713|0|12592|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4714|0|12595|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|4715|0|12599|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|4716|0|12603|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|4717|0|12605|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|4718|0|12607|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|4719|0|12609|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|4720|0|12611|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|4721|0|12613|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|4722|0|12615|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4723|0|12617|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|4724|0|12619|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|4725|0|12621|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|4726|0|12623|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|4727|0|12625|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|4728|0|12627|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|4729|0|12629|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|4730|0|12631|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|4731|0|12633|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|4732|0|12635|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|4733|0|12637|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|4734|0|12639|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4735|0|12641|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4736|0|12643|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4737|0|12646|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4738|0|12648|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4739|0|12650|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4740|0|12652|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4741|0|12655|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4742|0|12657|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4743|0|12660|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4744|0|12663|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4745|0|12666|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4746|0|12669|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4747|0|12672|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4748|0|12675|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4749|0|12677|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4750|0|12680|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4751|0|12683|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4752|0|12685|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4753|0|12687|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4754|0|12689|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4755|0|12692|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4756|0|12694|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4757|0|12697|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4758|0|12700|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4759|0|12703|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4760|0|12706|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4761|0|12709|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4762|0|12712|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4763|0|12714|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4764|0|12717|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4765|0|12719|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4766|0|12721|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4767|0|12723|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4768|0|12725|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4769|0|12727|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4770|0|12731|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4771|0|12734|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4772|0|12737|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4773|0|12740|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4774|0|12743|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4775|0|12745|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4776|0|12748|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4777|0|12750|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4778|0|12752|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4779|0|12754|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4780|0|12757|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4781|0|12759|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4782|0|12763|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4783|0|12766|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4784|0|12769|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4785|0|12772|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|4786|0|12775|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|4787|0|12777|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|4788|0|12779|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|4789|0|12781|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|4790|0|12783|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4791|0|12785|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4792|0|12787|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4793|0|12789|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4794|0|12791|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4795|0|12793|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4796|0|12795|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4797|0|12798|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4798|0|12800|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4799|0|12803|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4800|0|12806|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4801|0|12809|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4802|0|12812|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4803|0|12815|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|4804|0|12818|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|4805|0|12820|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4806|0|12822|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4807|0|12824|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4808|0|12827|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4809|0|12829|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4810|0|12831|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4811|0|12833|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4812|0|12836|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4813|0|12840|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|4814|0|12843|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|4815|0|12845|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|4816|0|12847|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4817|0|12849|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4818|0|12852|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4819|0|12854|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4820|0|12856|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|4821|0|12859|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4822|0|12864|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4823|0|12866|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4824|0|12868|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4825|0|12871|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4826|0|12873|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4827|0|12876|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4828|0|12882|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|4829|0|12885|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|4830|0|12888|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4831|0|12890|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4832|0|12893|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4833|0|12896|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4834|0|12898|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4835|0|12901|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|4836|0|12904|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|4837|0|12908|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|4838|0|12912|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|4839|0|12916|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4840|0|12918|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4841|0|12921|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4842|0|12924|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4843|0|12926|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4844|0|12929|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4845|0|12932|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4846|0|12934|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4847|0|12937|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4848|0|12939|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4849|0|12942|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4850|0|12944|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4851|0|12947|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4852|0|12949|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4853|0|12952|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4854|0|12954|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4855|0|12957|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4856|0|12959|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|4857|0|12962|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|4858|0|12964|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|4859|0|12966|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|4860|0|12968|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|4861|0|12970|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|4862|0|12972|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|4863|0|12974|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|4864|0|12976|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|4865|0|12978|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|4866|0|12980|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4867|0|12982|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4868|0|12985|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4869|0|12988|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4870|0|12990|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4871|0|12992|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4872|0|12994|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4873|0|12997|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4874|0|12999|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4875|0|13002|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4876|0|13005|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4877|0|13008|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4878|0|13011|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4879|0|13014|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4880|0|13017|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4881|0|13019|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4882|0|13022|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4883|0|13025|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4884|0|13027|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4885|0|13029|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4886|0|13031|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4887|0|13033|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4888|0|13035|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4889|0|13038|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|4890|0|13041|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4891|0|13044|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4892|0|13047|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4893|0|13050|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4894|0|13053|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4895|0|13055|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4896|0|13057|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4897|0|13061|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4898|0|13063|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4899|0|13066|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4900|0|13069|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|4901|0|13071|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4902|0|13074|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|4903|0|13076|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4904|0|13079|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4905|0|13081|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4906|0|13084|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4907|0|13086|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4908|0|13088|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4909|0|13090|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4910|0|13093|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4911|0|13095|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4912|0|13099|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4913|0|13102|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4914|0|13105|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4915|0|13108|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4916|0|13111|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4917|0|13113|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4918|0|13116|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4919|0|13118|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4920|0|13120|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4921|0|13122|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4922|0|13125|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4923|0|13127|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|4924|0|13131|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|4925|0|13134|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|4926|0|13137|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4927|0|13140|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|4928|0|13143|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|4929|0|13147|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|4930|0|13151|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|4931|0|13155|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|4932|0|13159|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4933|0|13161|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4934|0|13163|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4935|0|13166|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4936|0|13168|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|4937|0|13171|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|4938|0|13174|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4939|0|13176|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4940|0|13180|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4941|0|13182|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4942|0|13184|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4943|0|13187|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4944|0|13190|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|4945|0|13192|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4946|0|13195|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|4947|0|13199|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|4948|0|13201|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|4949|0|13204|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|4950|0|13207|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|4951|0|13210|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|4952|0|13213|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|8|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 7 ]|3|9||@{0|}}
}}@0|@45000|851000|0|0|0|0|8585|ids lookup-8|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|4953|0|13215|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|4954|0|13217|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|4955|0|13219|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|4956|0|13221|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|4957|0|13223|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|4958|0|13225|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|4959|0|13227|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|4960|0|13229|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|4961|0|13231|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|4962|0|13233|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|4963|0|13235|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|4964|0|13237|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|4965|0|13239|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|4966|0|13241|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4967|0|13243|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|4968|0|13245|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|4969|0|13247|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|4970|0|13249|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|4971|0|13251|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|4972|0|13253|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|4973|0|13255|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|4974|0|13257|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|4975|0|13259|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|4976|0|13261|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|4977|0|13263|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|4978|0|13265|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|4979|0|13267|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|4980|0|13269|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|4981|0|13271|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|4982|0|13273|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|4983|0|13275|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|4984|0|13277|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|4985|0|13279|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|4986|0|13281|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|4987|0|13283|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|4988|0|13286|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|4989|0|13289|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4990|0|13291|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4991|0|13293|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4992|0|13295|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|4993|0|13298|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|4994|0|13300|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|4995|0|13303|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|4996|0|13305|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|4997|0|13307|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|4998|0|13309|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|4999|0|13312|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5000|0|13314|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5001|0|13317|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5002|0|13319|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5003|0|13321|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5004|0|13323|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5005|0|13329|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5006|0|13331|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5007|0|13334|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5008|0|13337|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5009|0|13339|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5010|0|13341|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5011|0|13343|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5012|0|13348|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5013|0|13350|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5014|0|13353|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5015|0|13355|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5016|0|13357|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5017|0|13359|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5018|0|13370|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5019|0|13372|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5020|0|13375|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5021|0|13384|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5022|0|13386|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5023|0|13388|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5024|0|13394|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5025|0|13396|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5026|0|13400|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|5027|0|13406|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|5028|0|13408|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|5029|0|13410|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|5030|0|13412|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5031|0|13414|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5032|0|13416|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5033|0|13418|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5034|0|13420|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5035|0|13422|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5036|0|13424|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|5037|0|13432|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|5038|0|13434|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5039|0|13436|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5040|0|13438|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5041|0|13441|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5042|0|13445|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5043|0|13447|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5044|0|13449|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5045|0|13454|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5046|0|13458|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|5047|0|13462|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5048|0|13464|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5049|0|13467|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|5050|0|13473|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|5051|0|13477|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|5052|0|13481|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|5053|0|13485|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5054|0|13487|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5055|0|13490|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5056|0|13496|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5057|0|13498|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5058|0|13503|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5059|0|13505|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5060|0|13510|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5061|0|13512|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5062|0|13517|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|5063|0|13521|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|5064|0|13525|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|5065|0|13527|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|5066|0|13529|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|5067|0|13531|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|5068|0|13533|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|5069|0|13535|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|5070|0|13537|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5071|0|13539|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|5072|0|13541|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|5073|0|13543|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|5074|0|13545|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|5075|0|13547|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|5076|0|13549|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|5077|0|13551|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|5078|0|13553|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|5079|0|13555|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|5080|0|13557|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|5081|0|13559|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|5082|0|13561|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5083|0|13563|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5084|0|13565|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5085|0|13568|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5086|0|13570|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5087|0|13572|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5088|0|13574|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5089|0|13578|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5090|0|13580|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5091|0|13583|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5092|0|13586|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5093|0|13588|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5094|0|13590|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5095|0|13592|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5096|0|13597|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5097|0|13599|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|5098|0|13601|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|5099|0|13603|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|5100|0|13605|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|5101|0|13607|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5102|0|13609|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5103|0|13611|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5104|0|13613|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5105|0|13616|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5106|0|13618|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5107|0|13621|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5108|0|13623|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5109|0|13625|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5110|0|13627|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5111|0|13631|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5112|0|13633|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5113|0|13636|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5114|0|13638|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5115|0|13640|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5116|0|13642|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|5117|0|13656|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|5118|0|13658|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|5119|0|13660|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|5120|0|13662|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|5121|0|13664|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5122|0|13666|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5123|0|13668|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5124|0|13670|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5125|0|13672|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5126|0|13674|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5127|0|13676|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|5128|0|13684|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|5129|0|13686|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5130|0|13688|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5131|0|13690|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5132|0|13693|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5133|0|13697|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5134|0|13699|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5135|0|13701|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5136|0|13706|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5137|0|13710|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|5138|0|13715|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5139|0|13717|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5140|0|13720|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|5141|0|13726|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|5142|0|13730|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|5143|0|13734|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|5144|0|13738|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5145|0|13740|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5146|0|13743|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5147|0|13749|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|5148|0|13751|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5149|0|13756|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5150|0|13758|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5151|0|13763|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5152|0|13765|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|5153|0|13770|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|5154|0|13772|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|5155|0|13774|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|5156|0|13777|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|5157|0|13780|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|5158|0|13782|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|5159|0|13784|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|5160|0|13786|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5161|0|13788|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5162|0|13791|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5163|0|13794|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5164|0|13796|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5165|0|13798|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5166|0|13800|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5167|0|13805|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5168|0|13807|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5169|0|13810|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5170|0|13812|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5171|0|13814|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5172|0|13816|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5173|0|13820|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5174|0|13822|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5175|0|13825|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5176|0|13827|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5177|0|13829|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5178|0|13831|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5179|0|13841|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5180|0|13843|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5181|0|13845|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5182|0|13852|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5183|0|13854|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5184|0|13861|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|5185|0|13865|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|5186|0|13869|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|5187|0|13873|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|5188|0|13877|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5189|0|13879|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5190|0|13881|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5191|0|13887|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5192|0|13889|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5193|0|13893|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5194|0|13898|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5195|0|13900|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5196|0|13903|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|5197|0|13910|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|5198|0|13914|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|5199|0|13917|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|5200|0|13919|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|5201|0|13921|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|5202|0|13923|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|5203|0|13925|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|5204|0|13927|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|5205|0|13929|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|5206|0|13931|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|5207|0|13933|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|5208|0|13935|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|5209|0|13937|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|5210|0|13939|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|5211|0|13941|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|5212|0|13943|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|5213|0|13945|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5214|0|13947|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|5215|0|13949|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5216|0|13951|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|5217|0|13953|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|5218|0|13955|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|5219|0|13957|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|5220|0|13959|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|5221|0|13961|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|5222|0|13963|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|5223|0|13965|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|5224|0|13967|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|5225|0|13969|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|5226|0|13971|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|5227|0|13973|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|5228|0|13975|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|5229|0|13977|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|5230|0|13979|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|5231|0|13981|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|5232|0|13983|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|5233|0|13985|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5234|0|13987|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5235|0|13990|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5236|0|13993|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5237|0|13995|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5238|0|13997|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5239|0|13999|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5240|0|14002|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5241|0|14004|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5242|0|14007|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5243|0|14010|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5244|0|14013|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5245|0|14016|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5246|0|14019|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5247|0|14022|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5248|0|14024|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5249|0|14027|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5250|0|14030|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5251|0|14032|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5252|0|14034|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5253|0|14036|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5254|0|14039|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5255|0|14041|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5256|0|14044|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5257|0|14047|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5258|0|14050|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5259|0|14053|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5260|0|14056|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5261|0|14059|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5262|0|14061|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5263|0|14064|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5264|0|14066|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5265|0|14068|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5266|0|14070|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5267|0|14072|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5268|0|14074|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5269|0|14078|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5270|0|14081|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5271|0|14084|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5272|0|14087|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5273|0|14090|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5274|0|14092|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5275|0|14095|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5276|0|14099|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5277|0|14101|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5278|0|14104|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5279|0|14107|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5280|0|14109|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5281|0|14112|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5282|0|14114|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5283|0|14116|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5284|0|14118|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5285|0|14121|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5286|0|14123|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5287|0|14126|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5288|0|14129|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5289|0|14132|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5290|0|14135|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5291|0|14138|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5292|0|14140|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5293|0|14143|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5294|0|14145|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5295|0|14147|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5296|0|14149|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5297|0|14152|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5298|0|14154|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5299|0|14157|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5300|0|14160|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5301|0|14163|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5302|0|14166|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5303|0|14169|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5304|0|14171|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5305|0|14173|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5306|0|14176|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5307|0|14178|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5308|0|14181|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5309|0|14184|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5310|0|14186|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5311|0|14190|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5312|0|14193|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5313|0|14195|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5314|0|14198|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|5315|0|14201|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|5316|0|14203|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|5317|0|14205|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|5318|0|14207|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5319|0|14209|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5320|0|14211|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5321|0|14213|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5322|0|14215|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5323|0|14217|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5324|0|14219|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5325|0|14222|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5326|0|14224|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5327|0|14227|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5328|0|14230|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5329|0|14233|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5330|0|14236|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5331|0|14239|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|5332|0|14242|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|5333|0|14244|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5334|0|14246|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5335|0|14248|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5336|0|14251|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5337|0|14253|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5338|0|14255|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5339|0|14257|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5340|0|14260|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5341|0|14264|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|5342|0|14267|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|5343|0|14269|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5344|0|14271|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5345|0|14273|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5346|0|14276|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5347|0|14278|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5348|0|14280|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5349|0|14283|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5350|0|14288|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5351|0|14290|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5352|0|14292|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5353|0|14295|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5354|0|14297|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5355|0|14300|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5356|0|14306|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5357|0|14309|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|5358|0|14313|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5359|0|14315|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5360|0|14318|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5361|0|14321|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5362|0|14323|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5363|0|14326|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|5364|0|14329|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|5365|0|14333|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|5366|0|14337|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|5367|0|14341|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5368|0|14343|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5369|0|14346|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5370|0|14349|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5371|0|14351|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5372|0|14354|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5373|0|14357|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|5374|0|14359|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5375|0|14362|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5376|0|14364|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5377|0|14367|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|5378|0|14369|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5379|0|14372|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5380|0|14374|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5381|0|14377|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|5382|0|14379|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5383|0|14382|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5384|0|14384|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5385|0|14387|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|5386|0|14391|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|5387|0|14395|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|5388|0|14397|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|5389|0|14399|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|5390|0|14401|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|5391|0|14403|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|5392|0|14405|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|5393|0|14407|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5394|0|14409|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|5395|0|14411|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|5396|0|14413|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|5397|0|14415|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|5398|0|14417|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|5399|0|14419|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|5400|0|14421|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|5401|0|14423|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|5402|0|14425|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|5403|0|14427|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|5404|0|14429|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|5405|0|14431|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5406|0|14433|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5407|0|14435|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5408|0|14438|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5409|0|14440|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5410|0|14442|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5411|0|14444|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5412|0|14447|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5413|0|14449|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5414|0|14452|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5415|0|14455|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5416|0|14458|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5417|0|14461|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5418|0|14464|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5419|0|14467|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5420|0|14469|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5421|0|14472|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5422|0|14475|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5423|0|14477|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5424|0|14479|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5425|0|14481|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5426|0|14484|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5427|0|14486|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5428|0|14489|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5429|0|14492|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5430|0|14495|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5431|0|14498|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5432|0|14501|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5433|0|14504|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5434|0|14506|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5435|0|14509|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5436|0|14511|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5437|0|14513|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5438|0|14515|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5439|0|14517|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5440|0|14519|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5441|0|14523|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5442|0|14526|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5443|0|14529|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5444|0|14532|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5445|0|14535|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5446|0|14537|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5447|0|14540|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5448|0|14542|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5449|0|14544|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5450|0|14546|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5451|0|14549|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5452|0|14551|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5453|0|14555|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5454|0|14558|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5455|0|14561|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5456|0|14564|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|5457|0|14567|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|5458|0|14569|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|5459|0|14571|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|5460|0|14573|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|5461|0|14575|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5462|0|14577|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5463|0|14579|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5464|0|14581|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5465|0|14583|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5466|0|14585|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5467|0|14587|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5468|0|14590|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5469|0|14592|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5470|0|14595|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5471|0|14598|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5472|0|14601|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5473|0|14604|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5474|0|14607|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|5475|0|14610|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|5476|0|14612|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5477|0|14614|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5478|0|14616|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5479|0|14619|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5480|0|14621|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5481|0|14623|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5482|0|14625|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5483|0|14628|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5484|0|14632|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|5485|0|14635|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|5486|0|14637|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5487|0|14639|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5488|0|14641|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5489|0|14644|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5490|0|14646|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5491|0|14648|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5492|0|14651|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5493|0|14656|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5494|0|14658|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5495|0|14660|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5496|0|14663|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5497|0|14665|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5498|0|14668|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5499|0|14674|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5500|0|14677|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|5501|0|14680|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5502|0|14682|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5503|0|14685|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5504|0|14688|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5505|0|14690|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5506|0|14693|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|5507|0|14696|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|5508|0|14700|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|5509|0|14704|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|5510|0|14708|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5511|0|14710|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5512|0|14713|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5513|0|14716|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5514|0|14718|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5515|0|14721|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5516|0|14724|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5517|0|14726|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5518|0|14729|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5519|0|14731|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5520|0|14734|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|5521|0|14736|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5522|0|14739|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5523|0|14741|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5524|0|14744|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|5525|0|14746|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5526|0|14749|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5527|0|14751|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|5528|0|14754|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|5529|0|14756|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|5530|0|14758|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|5531|0|14760|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|5532|0|14762|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|5533|0|14764|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|5534|0|14766|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|5535|0|14768|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|5536|0|14770|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|5537|0|14772|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5538|0|14774|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5539|0|14777|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5540|0|14780|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5541|0|14782|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5542|0|14784|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5543|0|14786|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5544|0|14789|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5545|0|14791|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5546|0|14794|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5547|0|14797|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5548|0|14800|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5549|0|14803|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5550|0|14806|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5551|0|14809|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5552|0|14811|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5553|0|14814|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5554|0|14817|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5555|0|14819|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5556|0|14821|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5557|0|14823|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5558|0|14825|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5559|0|14827|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5560|0|14830|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5561|0|14833|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5562|0|14836|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5563|0|14839|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5564|0|14842|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5565|0|14845|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5566|0|14847|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5567|0|14849|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5568|0|14853|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5569|0|14855|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5570|0|14858|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5571|0|14861|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|5572|0|14863|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5573|0|14866|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|5574|0|14868|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5575|0|14871|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5576|0|14873|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5577|0|14876|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5578|0|14878|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5579|0|14880|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5580|0|14882|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5581|0|14885|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5582|0|14887|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5583|0|14891|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5584|0|14894|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5585|0|14897|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5586|0|14900|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5587|0|14903|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5588|0|14905|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5589|0|14908|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5590|0|14910|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5591|0|14912|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5592|0|14914|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5593|0|14917|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5594|0|14919|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5595|0|14923|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5596|0|14926|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5597|0|14929|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5598|0|14932|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5599|0|14935|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|5600|0|14939|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|5601|0|14943|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|5602|0|14947|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|5603|0|14951|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5604|0|14953|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5605|0|14955|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5606|0|14958|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5607|0|14960|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5608|0|14963|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5609|0|14966|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5610|0|14968|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5611|0|14972|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5612|0|14974|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5613|0|14976|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5614|0|14979|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5615|0|14982|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5616|0|14984|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5617|0|14987|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5618|0|14991|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5619|0|14993|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5620|0|14996|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|5621|0|14999|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|5622|0|15002|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|5623|0|15005|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|LKP_INSTANCE|9|3|9||@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 8 ]|3|9||@{0|}}
}}@0|@45000|986000|0|0|0|0|8570|ids lookup-9|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|5624|0|15007|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|5625|0|15009|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|5626|0|15011|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|5627|0|15013|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|5628|0|15015|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|5629|0|15017|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|5630|0|15019|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|5631|0|15021|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|5632|0|15023|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|5633|0|15025|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|5634|0|15027|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|5635|0|15029|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|5636|0|15031|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|5637|0|15033|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5638|0|15035|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|5639|0|15037|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5640|0|15039|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|5641|0|15041|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|5642|0|15043|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|5643|0|15045|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|5644|0|15047|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|5645|0|15049|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|5646|0|15051|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|5647|0|15053|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|5648|0|15055|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|5649|0|15057|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|5650|0|15059|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|5651|0|15061|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|5652|0|15063|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|5653|0|15065|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|5654|0|15067|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|5655|0|15069|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|5656|0|15071|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|5657|0|15073|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5658|0|15075|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5659|0|15078|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5660|0|15081|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5661|0|15083|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5662|0|15085|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5663|0|15087|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5664|0|15090|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5665|0|15092|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5666|0|15095|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5667|0|15097|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5668|0|15099|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5669|0|15101|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5670|0|15104|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5671|0|15106|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5672|0|15109|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5673|0|15111|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5674|0|15113|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5675|0|15115|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5676|0|15121|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5677|0|15123|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5678|0|15126|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5679|0|15129|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5680|0|15131|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5681|0|15133|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5682|0|15135|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5683|0|15140|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5684|0|15142|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5685|0|15145|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5686|0|15147|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5687|0|15149|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5688|0|15151|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5689|0|15162|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5690|0|15164|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5691|0|15167|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5692|0|15176|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5693|0|15178|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5694|0|15180|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5695|0|15186|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5696|0|15188|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5697|0|15192|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|5698|0|15198|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|5699|0|15200|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|5700|0|15202|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|5701|0|15204|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5702|0|15206|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5703|0|15208|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5704|0|15210|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5705|0|15212|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5706|0|15214|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5707|0|15216|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|5708|0|15224|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|5709|0|15226|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5710|0|15228|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5711|0|15230|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5712|0|15233|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5713|0|15237|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5714|0|15239|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5715|0|15241|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5716|0|15246|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5717|0|15250|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|5718|0|15254|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5719|0|15256|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5720|0|15259|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|5721|0|15265|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|5722|0|15269|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|5723|0|15273|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|5724|0|15277|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5725|0|15279|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5726|0|15282|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5727|0|15288|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5728|0|15290|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5729|0|15295|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5730|0|15297|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5731|0|15302|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5732|0|15304|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5733|0|15309|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|5734|0|15313|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|5735|0|15317|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|5736|0|15319|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|5737|0|15321|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|5738|0|15323|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|5739|0|15325|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|5740|0|15327|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|5741|0|15329|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5742|0|15331|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|5743|0|15333|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|5744|0|15335|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|5745|0|15337|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|5746|0|15339|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|5747|0|15341|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|5748|0|15343|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|5749|0|15345|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|5750|0|15347|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|5751|0|15349|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|5752|0|15351|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|5753|0|15353|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5754|0|15355|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5755|0|15357|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5756|0|15360|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5757|0|15362|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5758|0|15364|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5759|0|15366|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5760|0|15370|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5761|0|15372|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5762|0|15375|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5763|0|15378|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5764|0|15380|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5765|0|15382|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5766|0|15384|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5767|0|15389|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5768|0|15391|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|5769|0|15393|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010203004|XXGoport|5770|0|15395|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|5771|0|15397|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010203004|XXGoport|5772|0|15399|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5773|0|15401|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5774|0|15403|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5775|0|15405|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5776|0|15408|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5777|0|15410|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5778|0|15413|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5779|0|15415|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5780|0|15417|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5781|0|15419|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5782|0|15423|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5783|0|15425|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5784|0|15428|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5785|0|15430|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5786|0|15432|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5787|0|15434|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|5788|0|15448|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|5789|0|15450|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|5790|0|15452|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|5791|0|15454|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|5792|0|15456|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5793|0|15458|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5794|0|15460|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5795|0|15462|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5796|0|15464|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5797|0|15466|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5798|0|15468|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|5799|0|15476|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|5800|0|15478|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|5801|0|15480|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5802|0|15482|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|5803|0|15485|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5804|0|15489|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5805|0|15491|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5806|0|15493|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5807|0|15498|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|5808|0|15502|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|5809|0|15507|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5810|0|15509|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5811|0|15512|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|5812|0|15518|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|5813|0|15522|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|5814|0|15526|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|5815|0|15530|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5816|0|15532|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5817|0|15535|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5818|0|15541|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|5819|0|15543|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5820|0|15548|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5821|0|15550|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5822|0|15555|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5823|0|15557|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|5824|0|15562|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|5825|0|15564|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|5826|0|15566|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|5827|0|15569|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|5828|0|15572|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|5829|0|15574|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|5830|0|15576|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|5831|0|15578|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5832|0|15580|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5833|0|15583|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5834|0|15586|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5835|0|15588|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5836|0|15590|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5837|0|15592|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5838|0|15597|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5839|0|15599|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5840|0|15602|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5841|0|15604|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5842|0|15606|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5843|0|15608|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5844|0|15612|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5845|0|15614|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5846|0|15617|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5847|0|15619|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5848|0|15621|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5849|0|15623|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5850|0|15633|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5851|0|15635|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5852|0|15637|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5853|0|15644|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|5854|0|15646|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|5855|0|15653|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|5856|0|15657|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|5857|0|15661|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|5858|0|15665|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|5859|0|15669|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5860|0|15671|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5861|0|15673|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5862|0|15679|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|5863|0|15681|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5864|0|15685|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5865|0|15690|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|5866|0|15692|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5867|0|15695|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|5868|0|15702|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|5869|0|15706|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|5870|0|15709|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|5871|0|15711|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|5872|0|15713|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|5873|0|15715|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|5874|0|15717|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|5875|0|15719|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|5876|0|15721|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|5877|0|15723|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|5878|0|15725|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|5879|0|15727|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|5880|0|15729|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|5881|0|15731|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|5882|0|15733|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|5883|0|15735|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|5884|0|15737|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5885|0|15739|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|5886|0|15741|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|5887|0|15743|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|5888|0|15745|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|5889|0|15747|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|5890|0|15749|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|5891|0|15751|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|5892|0|15753|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|5893|0|15755|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|5894|0|15757|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|5895|0|15759|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|5896|0|15761|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|5897|0|15763|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|5898|0|15765|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|5899|0|15767|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|5900|0|15769|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|5901|0|15771|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|5902|0|15773|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|5903|0|15775|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|5904|0|15777|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5905|0|15779|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5906|0|15782|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5907|0|15785|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5908|0|15787|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5909|0|15789|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5910|0|15791|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5911|0|15794|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5912|0|15796|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5913|0|15799|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5914|0|15802|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5915|0|15805|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5916|0|15808|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5917|0|15811|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5918|0|15814|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5919|0|15816|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5920|0|15819|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5921|0|15822|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5922|0|15824|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5923|0|15826|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5924|0|15828|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5925|0|15831|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5926|0|15833|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5927|0|15836|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|5928|0|15839|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5929|0|15842|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5930|0|15845|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5931|0|15848|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5932|0|15851|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5933|0|15853|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5934|0|15856|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5935|0|15858|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5936|0|15860|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5937|0|15862|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5938|0|15864|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5939|0|15866|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|5940|0|15870|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|5941|0|15873|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|5942|0|15876|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5943|0|15879|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5944|0|15882|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5945|0|15884|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5946|0|15887|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5947|0|15891|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5948|0|15893|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|5949|0|15896|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|5950|0|15899|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5951|0|15901|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5952|0|15904|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5953|0|15906|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5954|0|15908|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5955|0|15910|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5956|0|15913|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5957|0|15915|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5958|0|15918|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5959|0|15921|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5960|0|15924|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5961|0|15927|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5962|0|15930|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5963|0|15932|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5964|0|15935|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5965|0|15937|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5966|0|15939|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5967|0|15941|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5968|0|15944|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5969|0|15946|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|5970|0|15949|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5971|0|15952|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5972|0|15955|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5973|0|15958|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|5974|0|15961|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5975|0|15963|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5976|0|15965|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5977|0|15968|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5978|0|15970|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5979|0|15973|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5980|0|15976|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5981|0|15978|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5982|0|15982|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|5983|0|15985|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5984|0|15987|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|5985|0|15990|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|5986|0|15993|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|5987|0|15995|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|5988|0|15997|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|5989|0|15999|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|5990|0|16001|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5991|0|16003|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5992|0|16005|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|5993|0|16007|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|5994|0|16009|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|5995|0|16011|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|5996|0|16014|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|5997|0|16016|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|5998|0|16019|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|5999|0|16022|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6000|0|16025|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6001|0|16028|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6002|0|16031|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|6003|0|16034|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|6004|0|16036|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6005|0|16038|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6006|0|16040|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6007|0|16043|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6008|0|16045|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6009|0|16047|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6010|0|16049|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6011|0|16052|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6012|0|16056|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|6013|0|16059|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|6014|0|16061|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6015|0|16063|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6016|0|16065|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6017|0|16068|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6018|0|16070|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6019|0|16072|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6020|0|16075|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6021|0|16080|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6022|0|16082|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6023|0|16084|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6024|0|16087|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6025|0|16089|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6026|0|16092|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6027|0|16098|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6028|0|16101|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|6029|0|16105|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6030|0|16107|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6031|0|16110|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6032|0|16113|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6033|0|16115|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6034|0|16118|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|6035|0|16121|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|6036|0|16125|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|6037|0|16129|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|6038|0|16133|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6039|0|16135|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6040|0|16138|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6041|0|16141|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6042|0|16143|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6043|0|16146|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6044|0|16149|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6045|0|16151|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6046|0|16154|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6047|0|16156|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6048|0|16159|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6049|0|16161|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6050|0|16164|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6051|0|16166|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6052|0|16169|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6053|0|16171|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6054|0|16174|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6055|0|16176|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6056|0|16179|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|6057|0|16183|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|6058|0|16187|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|6059|0|16189|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|6060|0|16191|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|6061|0|16193|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|6062|0|16195|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|6063|0|16197|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|6064|0|16199|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|6065|0|16201|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|6066|0|16203|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|6067|0|16205|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|6068|0|16207|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|6069|0|16209|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|6070|0|16211|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|6071|0|16213|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|6072|0|16215|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|6073|0|16217|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|6074|0|16219|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|6075|0|16221|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|6076|0|16223|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6077|0|16225|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6078|0|16227|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6079|0|16230|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6080|0|16232|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6081|0|16234|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6082|0|16236|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6083|0|16239|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6084|0|16241|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6085|0|16244|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6086|0|16247|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6087|0|16250|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6088|0|16253|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6089|0|16256|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6090|0|16259|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6091|0|16261|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6092|0|16264|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6093|0|16267|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6094|0|16269|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6095|0|16271|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6096|0|16273|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6097|0|16276|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6098|0|16278|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6099|0|16281|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6100|0|16284|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6101|0|16287|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6102|0|16290|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6103|0|16293|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6104|0|16296|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6105|0|16298|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6106|0|16301|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6107|0|16303|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6108|0|16305|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6109|0|16307|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6110|0|16309|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6111|0|16311|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6112|0|16315|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6113|0|16318|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6114|0|16321|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6115|0|16324|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6116|0|16327|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6117|0|16329|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6118|0|16332|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6119|0|16334|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6120|0|16336|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6121|0|16338|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6122|0|16341|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6123|0|16343|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6124|0|16347|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6125|0|16350|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6126|0|16353|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6127|0|16356|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|6128|0|16359|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|6129|0|16361|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|6130|0|16363|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|6131|0|16365|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|6132|0|16367|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6133|0|16369|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6134|0|16371|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6135|0|16373|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6136|0|16375|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6137|0|16377|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6138|0|16379|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6139|0|16382|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6140|0|16384|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6141|0|16387|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6142|0|16390|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6143|0|16393|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6144|0|16396|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6145|0|16399|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|6146|0|16402|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|6147|0|16404|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6148|0|16406|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6149|0|16408|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6150|0|16411|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6151|0|16413|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6152|0|16415|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6153|0|16417|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6154|0|16420|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6155|0|16424|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|6156|0|16427|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|6157|0|16429|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6158|0|16431|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6159|0|16433|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6160|0|16436|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6161|0|16438|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6162|0|16440|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6163|0|16443|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6164|0|16448|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6165|0|16450|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6166|0|16452|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6167|0|16455|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6168|0|16457|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6169|0|16460|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6170|0|16466|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6171|0|16469|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|6172|0|16472|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6173|0|16474|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6174|0|16477|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6175|0|16480|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6176|0|16482|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6177|0|16485|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|6178|0|16488|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|6179|0|16492|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|6180|0|16496|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|6181|0|16500|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6182|0|16502|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6183|0|16505|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6184|0|16508|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6185|0|16510|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6186|0|16513|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6187|0|16516|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6188|0|16518|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6189|0|16521|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6190|0|16523|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6191|0|16526|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6192|0|16528|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6193|0|16531|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6194|0|16533|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6195|0|16536|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6196|0|16538|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6197|0|16541|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6198|0|16543|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|6199|0|16546|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|6200|0|16548|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|6201|0|16550|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|6202|0|16552|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|6203|0|16554|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|6204|0|16556|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|6205|0|16558|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|6206|0|16560|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|6207|0|16562|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|6208|0|16564|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6209|0|16566|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6210|0|16569|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6211|0|16572|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6212|0|16574|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6213|0|16576|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6214|0|16578|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6215|0|16581|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6216|0|16583|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6217|0|16586|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6218|0|16589|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6219|0|16592|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6220|0|16595|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6221|0|16598|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6222|0|16601|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6223|0|16603|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6224|0|16606|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6225|0|16609|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6226|0|16611|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6227|0|16613|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6228|0|16615|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6229|0|16617|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6230|0|16619|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6231|0|16622|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6232|0|16625|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6233|0|16628|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6234|0|16631|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6235|0|16634|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6236|0|16637|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6237|0|16639|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6238|0|16641|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6239|0|16645|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6240|0|16647|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6241|0|16650|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6242|0|16653|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6243|0|16655|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6244|0|16658|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6245|0|16660|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6246|0|16663|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6247|0|16665|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6248|0|16668|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6249|0|16670|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6250|0|16672|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6251|0|16674|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6252|0|16677|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6253|0|16679|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6254|0|16683|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6255|0|16686|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6256|0|16689|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6257|0|16692|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6258|0|16695|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6259|0|16697|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6260|0|16700|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6261|0|16702|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6262|0|16704|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6263|0|16706|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6264|0|16709|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6265|0|16711|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6266|0|16715|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6267|0|16718|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6268|0|16721|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6269|0|16724|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6270|0|16727|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|6271|0|16731|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|6272|0|16735|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|6273|0|16739|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|6274|0|16743|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6275|0|16745|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6276|0|16747|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6277|0|16750|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6278|0|16752|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6279|0|16755|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6280|0|16758|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6281|0|16760|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6282|0|16764|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6283|0|16766|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6284|0|16768|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6285|0|16771|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6286|0|16774|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6287|0|16776|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6288|0|16779|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6289|0|16783|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6290|0|16785|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6291|0|16788|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|6292|0|16791|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|6293|0|16794|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010202004|XXGiport|6294|0|16797|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010202004|XXGiport|6295|0|16801|0|{@{}@0|0|0|0|in1|0.0|@@@9744|0|}}
{2010202004|XXGiport|6296|0|16805|0|{@{}@0|0|0|0|in2|0.0|@@@9744|0|}}
{2010202004|XXGiport|6297|0|16809|0|{@{}@0|0|0|0|in3|0.0|@@@9744|0|}}
{2010202004|XXGiport|6298|0|16813|0|{@{}@0|0|0|0|in4|0.0|@@@9744|0|}}
{2010202004|XXGiport|6299|0|16817|0|{@{}@0|0|0|0|in5|0.0|@@@9744|0|}}
{2010202004|XXGiport|6300|0|16821|0|{@{}@0|0|0|0|in6|0.0|@@@9744|0|}}
{2010202004|XXGiport|6301|0|16825|0|{@{}@0|0|0|0|in7|0.0|@@@9744|0|}}
{2010202004|XXGiport|6302|0|16829|0|{@{}@0|0|0|0|in8|0.0|@@@9744|0|}}
{2010600005|XXGgraph|6303|0|16834|0|{|{}@0|@42000|203500|0|0|0|0|8488|ICFF_LKPS||@1|100|-1|@9|@34817|{0|}0|0|{0|}{0|}{0|}{0|}1.0|841000|549000|7|}}
{2010503005|XXGfvertex|6304|0|16836|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 0 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[0]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@59000|80500|0|0|0|0|6726|IDS_Lkp1|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6305|0|16838|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6306|0|16840|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 9 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[9]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@669000|190500|0|0|0|0|6724|IDS_Lkp10|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6307|0|16842|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6308|0|16844|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 1 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[1]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@189000|80500|0|0|0|0|6725|IDS_Lkp2|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6309|0|16846|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6310|0|16848|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 2 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[2]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
}}@0|@329000|80500|0|0|0|0|6708|IDS_Lkp3|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6311|0|16850|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6312|0|16852|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 3 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[3]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@464000|80500|0|0|0|0|6709|IDS_Lkp4|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6313|0|16854|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6314|0|16856|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 4 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[4]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@594000|80500|0|0|0|0|6716|IDS_Lkp5|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6315|0|16858|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6316|0|16860|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 5 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[5]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@134000|190500|0|0|0|0|6717|IDS_Lkp6|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6317|0|16862|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6318|0|16864|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 6 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[6]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@264000|190500|0|0|0|0|6721|IDS_Lkp7|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6319|0|16866|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6320|0|16868|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 7 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[7]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
}}@0|@404000|190500|0|0|0|0|6722|IDS_Lkp8|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6321|0|16870|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6322|0|16872|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 8 ]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[8]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@539000|190500|0|0|0|0|6723|IDS_Lkp9|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6323|0|16874|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010600005|XXGgraph|6324|0|16876|0|{|{}@0|@192000|203500|0|0|0|0|8487|ICFF_LKPS_ARCHIVE|Mukesh Singh|Created 11/1/2017 1:47:35 PM|1|100|-1|@9|@34817|{0|}0|0|{0|}{0|}{0|}{0|}1.0|841000|549000|3|}}
{2010503005|XXGfvertex|6325|0|16878|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[9]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[9]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
{30001002|XXparameter|!validation_exclusions|1\|\@\{52\|1\|\{53\|error_suppression\|2\|\{56\|\|\}\{53\|status_info\|4\|\{56\|PARAM_with_location\|\}\{56\|PARAM106\|\}\{51\|1\|DA_parameter\|\{56\|condition\|\}\}\{\}\}\}\}|3|9|P|@{0|}}
}}@0|@679000|255500|0|0|0|0|6770|IDS_Lkp10_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6326|0|16880|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6327|0|16882|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[0]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[0]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@59000|80500|0|0|0|0|6767|IDS_Lkp1_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6328|0|16884|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6329|0|16886|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[1]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[1]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@189000|80500|0|0|0|0|6766|IDS_Lkp2_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6330|0|16888|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6331|0|16890|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[2]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[2]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
}}@0|@364000|80500|0|0|0|0|6758|IDS_Lkp3_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6332|0|16892|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6333|0|16894|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[3]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[3]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@514000|105500|0|0|0|0|6759|IDS_Lkp4_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6334|0|16896|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6335|0|16898|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[4]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[4]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@689000|110500|0|0|0|0|6760|IDS_Lkp5_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6336|0|16900|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6337|0|16902|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[5]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[5]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@29000|225500|0|0|0|0|6761|IDS_Lkp6_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6338|0|16904|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6339|0|16906|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[6]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[6]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@189000|245500|0|0|0|0|6762|IDS_Lkp7_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6340|0|16908|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6341|0|16910|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[7]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[7]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
}}@0|@339000|240500|0|0|0|0|6769|IDS_Lkp8_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6342|0|16912|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6343|0|16914|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Lookup_Template.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[ARCHIVE_ENABLE_FLAG_VEC[8]== 1]|3|9||@{0|}}
{30001002|XXparameter|RecordFormat|$[IDS_LKP_DATASET_DML_VEC[8]]|3|9|f|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|keep_on_disk|True|3|1|l|@{0|}}
{30001002|XXparameter|block_compressed|True|3|1|l|@{0|}}
{30001002|XXparameter|cache|True|3|1|l|@{0|}}
}}@0|@504000|255500|0|0|0|0|6768|IDS_Lkp9_Archive|Ab Initio Software|@1|100|0||6||32769|-1|-1|}}
{2010503005|XXGfvertex|6344|0|16916|0|{Lookup templates are components containing only a record format and a key. Use lookup templates with the DML lookup_load and lookup_create functions.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x1200|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|Layout|file:/~null|28|9|RF||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|RecordFormat||7|2|RF$|Record Format|{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk cache load_once direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block-Compressed|{0|}}
{30001002|XXparameter|block_compressed.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|either_or|value keep_on_disk True True sameas block_compressed default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|cache|False|13|1|Fl|Use lookup cache|{0|}}
{30001002|XXparameter|cache.condition|mode lookup version 2.15.3.r28:|3|15|P?|@{0|}}
{30001002|XXparameter|load_once|True|13|1|Fl|Load a lookup if not already loaded|{0|}}
{30001002|XXparameter|load_once.condition|mode lookup version 2.15.4.r30:|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010503005|XXGfvertex|6345|0|16918|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Datasets/Output_File.mdc|3|2|Pf$|@{0|}}
{30001002|XXparameter|eme_dataset_mapping|$[[record map_component 1 datasets [vector [record variable _interp_("write", "pdl") map_dataset 1 mapping [record dataset_path _interp_("$[REDUCED_LKP_FILE_PATH_VEC [ 0 ] ]", "pdl") create_update 1 is_db 0 dml_info NULL]]]]]|3|9||@{0|}}
{30001002|XXparameter|Layout|file:$[REDUCED_LKP_FILE_PATH_VEC [ 0 ] ]|3|9||@{0|}}
{30001002|XXparameter|mode|0x0062|3|2|$|@{0|}}
{30001002|XXparameter|write_metadata|$[IDS_LKP_DATASET_DML_VEC[0 ]]|3|9|f|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 0 ]|3|9||@{0|}}
}}@0|@1260000|66000|0|0|0|0|8632|Lkp File 1|Ab Initio Software|@1|10000|0||6||33025|-1|-1|}}
{2010202004|XXGiport|6346|0|16920|0|{@{}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010503005|XXGfvertex|6347|0|16923|0|{Represents one file, many files, or a multifile as an input to your graph.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|protection|0666|12|2|RF$||{0|}}
{30001002|XXparameter|mode|0x0001|1|2|FH$|modes of access|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|key||19|2|RF$|Key specifier For Lookup File|{0|}}
{30001002|XXparameter|key.condition|param direct_addressed False mode lookup|3|15|P?|@{0|}}
{30001002|XXparameter|m_catalog_add_option_names|block_compressed keep_on_disk direct_addressed only_last_key_instance orc_file|3|2|H$||{0|}}
{30001002|XXparameter|eme_index_location||3|2|F$|Place in the EME to create a dataset corresponding to this index.|{0|}}
{30001002|XXparameter|eme_index_location.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|index_url||28|2|F$|The URL of the index for this lookup file (optional)|{0|}}
{30001002|XXparameter|index_url.condition|param direct_addressed False mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|keep_on_disk|False|13|1|Fl|Keep on Disk|{0|}}
{30001002|XXparameter|keep_on_disk.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|block_compressed|False|13|1|Fl|Block Compressed|{0|}}
{30001002|XXparameter|block_compressed.condition|mode lookup version 2.15.2.r23:|3|15|P?|@{0|}}
{30001002|XXparameter|either_or|value block_compressed True True sameas keep_on_disk default constant True|13|13|v|Either B-C or K-o-D|{0|}}
{30001002|XXparameter|direct_addressed|False|13|1|Fl|Set to true if the block compressed lookup is direct addressed|{0|}}
{30001002|XXparameter|direct_addressed.condition|mode lookup version 2.15.5.r34: param_exact either_or True|3|15|P?|@{0|}}
{30001002|XXparameter|only_last_key_instance|False|13|1|Fl|Match only the last instance of each key|{0|}}
{30001002|XXparameter|only_last_key_instance.condition|mode lookup version 3.0.2.r12.0:|3|15|P?|@{0|}}
{30001002|XXparameter|orc_file|False|13|1|Fl|Set to true if it is Hive ORC file|{0|}}
{30001002|XXparameter|orc_file.condition|mode lookup version 3.2.2.r15.0: param_exact direct_addressed True param_exact block_compressed False|3|15|P?|@{0|}}
{30001002|XXparameter|Layout||28|2|RF$||{0|}}
{30001002|XXparameter|eme_dataset_mapping||40|9|F|Place in the EME to create the dataset(s) corresponding to this component.|{0|}}
{30001002|XXparameter|mpcmodtime|1461375652|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|write_metadata||7|1|RFsl||{0|}}
}}@0|@0|0|0|0|0|0|0|@|@1|100|-1|@6|@1|-1|-1|}}
{2010202004|XXGiport|6348|0|16925|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|write|0.0|@@@1780|0|}}
{2010600005|XXGgraph|6349|0|16928|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$PUB_DXF_COMPONENTS/ids_lookup.mp|3|9|Pf|@{0|}}
{30001002|XXparameter|condition|$[NUM_OF_PRE_ICFF_LOOKUP > 0 ]|3|9||@{0|}}
}}@0|@804000|52000|0|0|0|0|8630|ids lookup-1|||1|100|0|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|1|}}
{2010240003|XXGlegend|6350|0|16930|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|6351|0|16932|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|6352|0|16934|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|6353|0|16936|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|6354|0|16938|0|{@{}@384|.5|.5|{0|}7813|17|}}
{2010210004|XXGflow|6355|0|16940|0|{@{}@384|.5|.5|{0|}7816|17|}}
{2010210004|XXGflow|6356|0|16942|0|{@{}@384|.5|.5|{0|}7814|17|}}
{2010210004|XXGflow|6357|0|16944|0|{@{}@384|.5|.5|{0|}7817|17|}}
{2010210004|XXGflow|6358|0|16946|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|6359|0|16948|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@272500|144000|0|0|0|0|7815|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|6360|0|16950|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|6361|0|16952|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|6362|0|16954|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|6363|0|16956|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|6364|0|16958|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|6365|0|16960|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|6366|0|16962|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|6367|0|16964|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|6368|0|16966|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|6369|0|16968|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|6370|0|16970|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|6371|0|16972|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|6372|0|16974|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|6373|0|16976|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|6374|0|16978|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|6375|0|16980|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|6376|0|16982|0|{@{}@384|.5|.5|{0|}14921|1553|}}
{2010210004|XXGflow|6377|0|16984|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|6378|0|16986|0|{@{}@384|.5|.5|{0|}14920|17|}}
{2010210004|XXGflow|6379|0|16988|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|6380|0|16990|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|6381|0|16992|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|6382|0|16994|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|6383|0|16996|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6384|0|16998|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6385|0|17001|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6386|0|17004|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6387|0|17006|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6388|0|17008|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6389|0|17010|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6390|0|17013|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6391|0|17015|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6392|0|17018|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6393|0|17020|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6394|0|17022|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6395|0|17024|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6396|0|17027|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6397|0|17029|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6398|0|17032|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6399|0|17034|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6400|0|17036|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6401|0|17038|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6402|0|17044|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6403|0|17046|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6404|0|17049|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6405|0|17052|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6406|0|17054|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6407|0|17056|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6408|0|17058|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6409|0|17070|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6410|0|17072|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6411|0|17075|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6412|0|17083|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
}}@0|@642000|57000|0|0|0|0|14922|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6413|0|17085|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6414|0|17088|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6415|0|17090|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6416|0|17092|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6417|0|17094|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6418|0|17099|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6419|0|17101|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6420|0|17103|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6421|0|17109|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6422|0|17111|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6423|0|17115|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|6424|0|17121|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|6425|0|17123|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|6426|0|17125|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|6427|0|17127|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6428|0|17129|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6429|0|17131|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6430|0|17133|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6431|0|17135|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6432|0|17137|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6433|0|17139|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|6434|0|17147|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|6435|0|17149|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6436|0|17151|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6437|0|17153|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6438|0|17156|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6439|0|17160|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6440|0|17162|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6441|0|17164|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6442|0|17169|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6443|0|17173|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|6444|0|17177|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6445|0|17179|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6446|0|17182|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|6447|0|17188|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|6448|0|17192|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|6449|0|17196|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|6450|0|17200|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6451|0|17202|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6452|0|17205|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6453|0|17211|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|6454|0|17213|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6455|0|17218|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|6456|0|17220|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6457|0|17225|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|6458|0|17227|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6459|0|17232|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|6460|0|17236|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|6461|0|17240|0|{Subgraph created from graph "D M_EligLkp"|{}@0|@275000|290250|0|0|0|0|7818|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|6462|0|17242|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|6463|0|17244|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|6464|0|17246|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|6465|0|17248|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|6466|0|17250|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|6467|0|17252|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|6468|0|17254|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|6469|0|17256|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|6470|0|17258|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|6471|0|17260|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|6472|0|17262|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|6473|0|17264|0|{@{}@384|.5|.5|{0|}15521|17|}}
{2010210004|XXGflow|6474|0|17266|0|{@{}@384|.5|.5|{0|}15522|17|}}
{2010210004|XXGflow|6475|0|17268|0|{@{}@384|.5|.5|{0|}15508|529|}}
{2010210004|XXGflow|6476|0|17270|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|6477|0|17272|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|6478|0|17274|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|6479|0|17276|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6480|0|17278|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6481|0|17280|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6482|0|17283|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6483|0|17285|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6484|0|17287|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6485|0|17289|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6486|0|17293|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6487|0|17295|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6488|0|17298|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6489|0|17301|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6490|0|17303|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6491|0|17305|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6492|0|17307|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6493|0|17312|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15510|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6494|0|17314|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010210004|XXGflow|6495|0|17316|0|{@{}@384|.5|.5|{0|}15508|1041|}}
{2010203004|XXGoport|6496|0|17318|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010210004|XXGflow|6497|0|17320|0|{@{}@384|.5|.5|{0|}15509|17|}}
{2010203004|XXGoport|6498|0|17322|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6499|0|17324|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6500|0|17326|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6501|0|17328|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6502|0|17331|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15509|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6503|0|17333|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6504|0|17336|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6505|0|17338|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6506|0|17340|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6507|0|17342|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6508|0|17346|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6509|0|17348|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6510|0|17351|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6511|0|17353|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6512|0|17355|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6513|0|17357|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|6514|0|17371|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|6515|0|17373|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|6516|0|17375|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|6517|0|17377|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|6518|0|17379|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|dup_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6519|0|17381|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6520|0|17383|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6521|0|17385|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6522|0|17387|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6523|0|17389|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6524|0|17391|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|6525|0|17399|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|InputLayout||3|8|s=|@{0|}}
{30001002|XXparameter|OutputLayout||3|8|s=|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|6526|0|17401|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6527|0|17403|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6528|0|17405|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6529|0|17408|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6530|0|17412|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
}}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6531|0|17414|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6532|0|17416|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6533|0|17421|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6534|0|17425|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|6535|0|17430|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6536|0|17432|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6537|0|17435|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|6538|0|17441|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|6539|0|17445|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|6540|0|17449|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|6541|0|17453|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6542|0|17455|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6543|0|17458|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6544|0|17464|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010202004|XXGiport|6545|0|17466|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6546|0|17471|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|6547|0|17473|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6548|0|17478|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|6549|0|17480|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|6550|0|17485|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@602500|20000|0|0|0|0|15523|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|6551|0|17487|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|6552|0|17489|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|6553|0|17492|0|{@{}@384|.5|.5|{0|}15503|17|}}
{2010210004|XXGflow|6554|0|17495|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010210004|XXGflow|6555|0|17497|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|6556|0|17499|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|6557|0|17501|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|deselect_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6558|0|17503|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6559|0|17506|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6560|0|17509|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6561|0|17511|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6562|0|17513|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6563|0|17515|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6564|0|17520|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15505|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6565|0|17522|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6566|0|17525|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6567|0|17527|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6568|0|17529|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6569|0|17531|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6570|0|17535|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|reject0_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15502|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6571|0|17537|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6572|0|17540|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6573|0|17542|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6574|0|17544|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6575|0|17546|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6576|0|17556|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6577|0|17558|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6578|0|17560|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6579|0|17567|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010202004|XXGiport|6580|0|17569|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6581|0|17576|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|6582|0|17580|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|6583|0|17584|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|6584|0|17588|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|6585|0|17592|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6586|0|17594|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6587|0|17596|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6588|0|17602|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||1|1|{1|0|}}}
{2010203004|XXGoport|6589|0|17604|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6590|0|17608|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6591|0|17613|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6592|0|17615|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6593|0|17618|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|6594|0|17625|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|6595|0|17629|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010600005|XXGgraph|6596|0|17633|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|LKP_INSTANCE|1|1|9|FK|@{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM|$[ "IDS_Lkp" +(string(""))  LKP_INSTANCE ]|3|9|FK|Name of Template based on Instance number|{0|}}
{30001002|XXparameter|IDS_DATASET_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(REDUCED_ICFF_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK||{0|}}
{30001002|XXparameter|IDS_NATURAL_KEY|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(IDS_LKP_ICFF_NK_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "" ]|3|9|FK|Natural key expression for Hash|{0|}}
{30001002|XXparameter|ICFF_FILE|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_FILE_VEC[LKP_INSTANCE -1 ] else "" ]|3|9|FK|ICFF file that will be used in lookup|{0|}}
{30001002|XXparameter|IDS_LOOKUP_DATASET_DML|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) read_type(IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ]) else ""]|3|9|FK|DML file , DML file must be present in pub_datahub_dml respective subject area|{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML|AB_PARAMETER_ENV|3|10|FKd|@{0|}}
{30001002|XXparameter|INTER_LKP_TYPE|$[join_types(IDS_LOOKUP_DATASET_DML,'record  decimal(1) is_match ;   end; ') ]|3|9|FK||{0|}}
{30001002|XXparameter|GET_ALL_RECORD|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) (decimal("")) string_split(GET_ALL_RECORD_FROM_IDS_LIST,"\|")[LKP_INSTANCE -1 ] else 0 ]|1|9|RFK||{0|}}
{30001002|XXparameter|FINAL_FILTER_EXPR|is_match == 1|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_MINOR_KEY|\{dxf_hk_part2\}|3|9|FK|An additional key can be specified here for de-dup. This parameter is only used in get last record subgraph|{0|}}
{30001002|XXparameter|ADJUSTED_SORT_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_SORT_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK||{0|}}
{30001002|XXparameter|ADJUSTED_DEDUP_KEY_EXPR|$[begin
let v_key_expr=if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) string_split(ADJUSTED_DEDUP_KEY_EXPR_LIST,"\|")[LKP_INSTANCE -1 ] else "";
let v_major_key = \{dxf_hk_part1\};
result :: if(is_blank(v_key_expr)) add_key(v_major_key, key_info (ADJUSTED_MINOR_KEY)[0]) else v_key_expr;
end ]|3|9|FK|This will be only used in de-dup component of get all records |{0|}}
{30001002|XXparameter|LOOKUP_FILE_NM|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) REDUCED_LKP_FILE_PATH_VEC [ LKP_INSTANCE -1 ] else ""]|3|9|FK||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
{30001002|XXparameter|analysis_level|none|3|1|Kl|@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:eme|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] ""]|3|9||@{0|}}
{30001002|XXparameter|IDS_LOOKUP_FILE_DML:sandbox|$[if(length_of(string_split(REDUCED_ICFF_IDS_LIST,"\|")) >= LKP_INSTANCE  ) IDS_LKP_DATASET_DML_VEC[LKP_INSTANCE - 1 ] else ""]|3|9||@{0|}}
{30001002|XXparameter|DO_TWO_STEP_LOOKUP|$[ARCHIVE_ENABLE_FLAG_VEC[LKP_INSTANCE -1 ]]|3|9|RFK|If a table is present in pub dxf two step list file , This will return 1|{0|}}
{30001002|XXparameter|ICFF_TEMPLATE_NM_ARCHIVE|$[ICFF_TEMPLATE_NM + "_Archive"]|3|9|RFK|@{0|}}
{30001002|XXparameter|mpcmodtime|1521143205|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|@15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|_ab_semantic_schema|6|1|1|Hnl|@{0|}}
}}@0|@481750|74625|0|0|0|0|7677|ICFF LookUp|||1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|918000|452000|3|}}
{2010240003|XXGlegend|6597|0|17635|0|{@{}@This Subgraph provides a functionality to do ICFF lookup from IDS files in two ways :

|16000|28000|0|0|0|0|7668|}}
{2010242002|XXGface|6598|0|17637|0|{@{}@Arial|32768|110|1|}}
{2010240003|XXGlegend|6599|0|17639|0|{@{}@1. Get all matching records via normalize ( Number of looked up IDS record may be more than 
input record count) .
2. Find only last and latest matching record from IDS [ Output record count should be equal or less than input records] .|17000|57000|0|0|0|0|7688|}}
{2010242002|XXGface|6600|0|17641|0|{@{}@Arial|32768|90|0|}}
{2010210004|XXGflow|6601|0|17643|0|{@{}@384|.5|.5|{0|}7798|17|}}
{2010210004|XXGflow|6602|0|17645|0|{@{}@384|.5|.5|{0|}7793|17|}}
{2010210004|XXGflow|6603|0|17647|0|{@{}@384|.5|.5|{0|}7799|17|}}
{2010210004|XXGflow|6604|0|17649|0|{@{}@384|.5|.5|{0|}7794|17|}}
{2010210004|XXGflow|6605|0|17651|0|{@{}@384|.5|.5|{0|}7746|1043|}}
{2010600005|XXGgraph|6606|0|17653|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@272500|144000|0|0|0|0|7800|Get All LookUp Record|Mukesh Singh|Created 11/23/2016 3:35:07 PM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|2068000|524000|3|}}
{2010240003|XXGlegend|6607|0|17655|0|{@{}@ |-146000|-115000|0|0|0|0|7559|}}
{2010242002|XXGface|6608|0|17657|0|{@{}@Arial|0|100|0|}}
{2010240003|XXGlegend|6609|0|17659|0|{@{}@Replicate to maintain flow if 
de-dup is disabled|1760000|233000|0|0|0|0|14891|}}
{2010242002|XXGface|6610|0|17661|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|6611|0|17663|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|210000|323000|0|0|0|0|14874|}}
{2010242002|XXGface|6612|0|17665|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|6613|0|17667|0|{@{}@This Flow will be enabled only when
 two step lookup is required|607000|374000|0|0|0|0|14872|}}
{2010242002|XXGface|6614|0|17669|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010240003|XXGlegend|6615|0|17671|0|{@{}@Only Picks matching records and 
unmatching records are dropped|612000|184000|0|0|0|0|14873|}}
{2010242002|XXGface|6616|0|17673|0|{@{}@Arial Narrow|8388608|120|1|}}
{2010210004|XXGflow|6617|0|17675|0|{@{}@384|.5|.5|{0|}14889|17|}}
{2010210004|XXGflow|6618|0|17677|0|{@{}@384|.5|.5|{0|}14915|17|}}
{2010210004|XXGflow|6619|0|17679|0|{@{}@384|.5|.5|{0|}14895|17|}}
{2010210004|XXGflow|6620|0|17681|0|{@{}@384|.5|.5|{0|}14916|1041|}}
{2010210004|XXGflow|6621|0|17683|0|{@{}@384|.5|.5|{0|}14845|529|}}
{2010210004|XXGflow|6622|0|17685|0|{@{}@384|.5|.5|{0|}14837|17|}}
{2010210004|XXGflow|6623|0|17687|0|{@{}@384|.5|.5|{0|}14913|1553|}}
{2010210004|XXGflow|6624|0|17689|0|{@{}@384|.5|.5|{0|}14846|529|}}
{2010210004|XXGflow|6625|0|17691|0|{@{}@384|.5|.5|{0|}14912|17|}}
{2010210004|XXGflow|6626|0|17693|0|{@{}@384|.5|.5|{0|}14892|17|}}
{2010210004|XXGflow|6627|0|17695|0|{@{}@384|.5|.5|{0|}14896|17|}}
{2010210004|XXGflow|6628|0|17697|0|{@{}@384|.5|.5|{0|}14894|17|}}
{2010210004|XXGflow|6629|0|17699|0|{@{}@384|.5|.5|{0|}14847|529|}}
{2010501005|XXGpvertex|6630|0|17701|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$\{ADJUSTED_DEDUP_KEY_EXPR\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1595000|130000|0|0|0|0|14839|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6631|0|17703|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6632|0|17706|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6633|0|17709|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6634|0|17711|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6635|0|17713|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6636|0|17715|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6637|0|17718|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6638|0|17720|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6639|0|17723|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6640|0|17726|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6641|0|17729|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6642|0|17732|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6643|0|17735|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6644|0|17738|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|condition|$[ not is_blank(FINAL_FILTER_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|1087000|140000|0|0|0|0|14897|FBE: Filter match records|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6645|0|17740|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6646|0|17743|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6647|0|17746|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6648|0|17748|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6649|0|17750|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6650|0|17752|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6651|0|17755|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6652|0|17757|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6653|0|17760|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6654|0|17763|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6655|0|17766|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6656|0|17769|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6657|0|17772|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6658|0|17775|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|64000|180000|0|0|0|0|14844|Get Hash on SRC NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6659|0|17777|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6660|0|17780|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6661|0|17782|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6662|0|17784|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6663|0|17786|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6664|0|17788|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6665|0|17790|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6666|0|17794|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6667|0|17797|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6668|0|17800|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6669|0|17803|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6670|0|17806|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Merge|932000|187500|0|0|0|0|14865|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6671|0|17808|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6672|0|17811|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6673|0|17815|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6674|0|17817|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6675|0|17820|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6676|0|17823|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz",".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
    
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@641000|242000|0|0|0|0|14917|Normalize :Get all records from Archive Lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6677|0|17825|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6678|0|17828|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6679|0|17830|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6680|0|17832|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6681|0|17834|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6682|0|17837|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6683|0|17839|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6684|0|17842|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6685|0|17845|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6686|0|17848|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6687|0|17851|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6688|0|17854|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Normalize.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform|let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type=allocate_with_defaults();
let $\{IDS_LOOKUP_DATASET_DML\} lookup_record_type_archive=allocate_with_defaults();

out::finished(in, index) =
begin
  let $\{IDS_LOOKUP_DATASET_DML\} next_rec;
  let long is_finished;
  if (current_lookup == lookup_not_loaded()) 
    current_lookup = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis.
  
  next_rec = if(index == 0) lookup(current_lookup,"$\{ICFF_TEMPLATE_NM\}",in.dxf_hk_part1)
             else lookup_next(current_lookup,"$\{ICFF_TEMPLATE_NM\}");
  if(is_null(next_rec))
    is_finished = 1;
  else
  begin
    is_finished = 0;
    lookup_record_type = next_rec;
  end
  
  out :: is_finished;
end;


out :: normalize( in, index) =
begin
//finished() function sets the next record, i.e. global variable lookup_record_type

//Output the record
out.is_match:: if(in.dxf_hk_part2 == lookup_record_type.dxf_hk_part2) 1 else 0 ; 
out.* :1: lookup_record_type.*;
end;


out::output_select(out)=
begin
  out :: out.is_match == 1;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|Layout|mfile:$AI_MFS/rt270p.dat.gz|3|9||@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|@642000|57000|0|0|0|0|14914|Normalize :Get all records from lkp|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6689|0|17856|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6690|0|17859|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6691|0|17861|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6692|0|17863|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6693|0|17865|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6694|0|17868|0|{Generates multiple output data records from each input data record.  Normalize can separate a data record with a vector field into several individual records, each containing one element of the vector.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|normalize|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/transform|3|2|H$||{0|}}
{30001002|XXparameter|transform||8|1|RFOl|Required and optional DML functions|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_intermediate||15|1|Fl|Frequency of intermediate records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_intermediate.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_variables|1|1|2|H$|Number of intermediate types in transform package|{0|}}
{30001002|XXparameter|variable1|optional temporary_type temp|3|2|H$|Temporary variable|{0|}}
{30001002|XXparameter|num_operations|11|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|optional integer(8) out::input_select(in)|3|2|H$|Select input record|{0|}}
{30001002|XXparameter|operation2|optional temp ? temp::initialize(in) : NULL|3|2|H$|Initialize temporary|{0|}}
{30001002|XXparameter|operation3|optional integer(8) out::length(in)|3|2|H$|Number of records to output.  Either this function or finished() must be defined.|{0|}}
{30001002|XXparameter|operation4|temp ? temp::normalize(temp, in, integer(8) index) : out::normalize(in, integer(8) index)|3|2|H$|Do computation|{0|}}
{30001002|XXparameter|operation5|optional temp ? integer(8) finished_out::finished(temp, in, integer(8) index) : integer(8) finished_out::finished(in, integer(8) index)|3|2|H$|Are we done with this input record?  Either this function or length() must be defined.|{0|}}
{30001002|XXparameter|operation6|optional temp ? out::finalize(temp, in) : NULL|3|2|H$|Create output record|{0|}}
{30001002|XXparameter|operation7|optional integer(8) out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|operation1_analysis|integer(8) input_select_out::input_select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation3_analysis|integer(8) length_out::length(in)|3|2|H$|Number of records to output|{0|}}
{30001002|XXparameter|operation7_analysis|integer(8) output_select_out::output_select(out)|3|2|H$|Select output record|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter_xfr(transform.input_select); out=filter_xfr(transform.output_select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation8|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation9|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation10|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation11|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|9|RFs||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158955|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6695|0|17870|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6696|0|17873|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6697|0|17876|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6698|0|17879|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6699|0|17882|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6700|0|17885|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
}}@0|Replicate|1793000|140000|0|0|0|0|14813|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6701|0|17887|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6702|0|17889|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6703|0|17892|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6704|0|17894|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6705|0|17897|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6706|0|17900|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9||@{0|}}
}}@0|Replicate|499000|190000|0|0|0|0|14843|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6707|0|17902|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6708|0|17906|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|6709|0|17909|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6710|0|17911|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|6711|0|17914|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|6712|0|17917|0|{Subgraph created from graph "Get All LookUp Record"|{}@0|@252125|165750|0|0|0|0|14848|Sort & Remove Dup On Hash|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|627000|166000|3|}}
{2010210004|XXGflow|6713|0|17919|0|{@{}@384|.5|.5|{0|}14657|17|}}
{2010210004|XXGflow|6714|0|17921|0|{@{}@384|.5|.5|{0|}14669|17|}}
{2010501005|XXGpvertex|6715|0|17923|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|464250|35000|0|0|0|0|14670|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6716|0|17925|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6717|0|17927|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6718|0|17929|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6719|0|17931|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6720|0|17933|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6721|0|17935|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6722|0|17938|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6723|0|17940|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6724|0|17943|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6725|0|17946|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6726|0|17949|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6727|0|17952|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6728|0|17955|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|6729|0|17958|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|InputLayout||3|8|=|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|30250|0|0|481000|303000|14662|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|6730|0|17960|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6731|0|17962|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6732|0|17964|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6733|0|17967|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6734|0|17969|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6735|0|17971|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6736|0|17973|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6737|0|17976|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6738|0|17980|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|6739|0|17983|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|6740|0|17985|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6741|0|17987|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6742|0|17989|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6743|0|17992|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6744|0|17994|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6745|0|17996|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6746|0|17999|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6747|0|18004|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6748|0|18006|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6749|0|18008|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6750|0|18011|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6751|0|18013|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6752|0|18016|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6753|0|18022|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6754|0|18025|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|6755|0|18029|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|289250|30000|0|0|0|0|14656|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6756|0|18031|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6757|0|18034|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6758|0|18037|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6759|0|18039|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6760|0|18042|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|6761|0|18045|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|6762|0|18049|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|6763|0|18053|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|6764|0|18057|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort|1382000|109500|0|0|0|0|14890|Sort on Adjusted  Natural Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6765|0|18059|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6766|0|18062|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6767|0|18065|0|{Orders your data according to a key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core|100663296|1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.update_clauses|retain_old_default|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6768|0|18067|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6769|0|18070|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6770|0|18073|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1292000|374000|0|0|0|0|14887|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6771|0|18075|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6772|0|18078|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6773|0|18080|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6774|0|18083|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1742000|339000|0|0|0|0|14893|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6775|0|18085|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6776|0|18088|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6777|0|18090|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6778|0|18093|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|449000|354000|0|0|0|0|14840|Trash-3|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6779|0|18095|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6780|0|18098|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6781|0|18100|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6782|0|18103|0|{@{}@0|0|0|0|out0|.5244565217391305|@@@14352|0|}}
{2010202004|XXGiport|6783|0|18107|0|{@{}@0|0|0|0|in0|.46195652173913043|@@@13840|0|}}
{2010600005|XXGgraph|6784|0|18111|0|{Subgraph created from graph "D M_EligLkp"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[not GET_ALL_RECORD]|3|9|F||{0|}}
}}@0|@275000|290250|0|0|0|0|7795|Get Last Lookup Record|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1504000|457000|3|}}
{2010240003|XXGlegend|6785|0|18113|0|{@{}@An additional filter expression can also be 
specified along with match expression|774000|193000|0|0|0|0|15472|}}
{2010242002|XXGface|6786|0|18115|0|{@{}@Arial|8421504|90|0|}}
{2010240003|XXGlegend|6787|0|18117|0|{@{}@1.This reformat uses natural key to create hash.
2.Natural key column should match to ids lookup name .
3.If name and data type are not same , use a reformat in muti -reformat to
get all nk in ids icff lookup column name and data type.|23000|201000|0|0|0|0|15471|}}
{2010242002|XXGface|6788|0|18119|0|{@{}@Arial Narrow|32768|90|1|}}
{2010240003|XXGlegend|6789|0|18121|0|{@{}@Duplicate on SRC NK Hash before ICFF Lookup|215000|328000|0|0|0|0|15470|}}
{2010242002|XXGface|6790|0|18123|0|{@{}@Arial|32768|90|0|}}
{2010240003|XXGlegend|6791|0|18125|0|{@{}@Second pass lookup where no 
match is found in pass 1|772000|290000|0|0|0|0|15503|}}
{2010242002|XXGface|6792|0|18127|0|{@{}@Calibri|8388608|180|1|}}
{2010210004|XXGflow|6793|0|18129|0|{@{}@384|.5|.5|{0|}15489|529|}}
{2010210004|XXGflow|6794|0|18131|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010210004|XXGflow|6795|0|18133|0|{@{}@384|.5|.5|{0|}15456|17|}}
{2010210004|XXGflow|6796|0|18135|0|{@{}@384|.5|.5|{0|}15511|17|}}
{2010210004|XXGflow|6797|0|18137|0|{@{}@384|.5|.5|{0|}15512|17|}}
{2010210004|XXGflow|6798|0|18139|0|{@{}@384|.5|.5|{0|}15495|529|}}
{2010210004|XXGflow|6799|0|18141|0|{@{}@384|.5|.5|{0|}15491|529|}}
{2010210004|XXGflow|6800|0|18143|0|{@{}@384|.5|.5|{0|}15457|17|}}
{2010210004|XXGflow|6801|0|18145|0|{@{}@384|.5|.5|{0|}15504|17|}}
{2010501005|XXGpvertex|6802|0|18147|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_SORT_KEY_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|1278000|20500|0|0|0|0|15458|Dedup Sorted|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6803|0|18149|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6804|0|18151|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6805|0|18154|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6806|0|18156|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6807|0|18158|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6808|0|18160|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6809|0|18163|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6810|0|18165|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6811|0|18168|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6812|0|18171|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6813|0|18174|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6814|0|18177|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6815|0|18180|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6816|0|18183|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|out_metadata|$\{IDS_LOOKUP_DATASET_DML\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|835000|37000|0|0|0|0|15499|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6817|0|18185|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6818|0|18188|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6819|0|18191|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6820|0|18193|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6821|0|18195|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6822|0|18197|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6823|0|18200|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6824|0|18202|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6825|0|18205|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6826|0|18208|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6827|0|18211|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6828|0|18214|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6829|0|18217|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6830|0|18220|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "~$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "~$PUB_DXF_XFR/common_functions.xfr";
include "~$PUB_DXF_DML/generic_data_types.dml";
 let decimal("") v_dxf_src_env_rank_input_record=0;
out :: reformat(in) =
begin
  let hash_key_combine_type dxf_hk = reinterpret(get_hash(in,"$\{IDS_NATURAL_KEY\}"));
  out.dxf_hk_part1 :: dxf_hk.dxf_hk_part1;
  out.dxf_hk_part2 :: dxf_hk.dxf_hk_part2;
end;|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|49000|40000|0|0|0|0|15465|RFMT:Get Hash-On NK|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6831|0|18222|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6832|0|18225|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6833|0|18227|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6834|0|18229|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6835|0|18231|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6836|0|18233|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6837|0|18235|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6838|0|18239|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6839|0|18242|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6840|0|18245|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6841|0|18248|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6842|0|18251|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path("$\{ICFF_FILE\}");
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        out.dxf_hk_part1 :: in.dxf_hk_part1;
        out.dxf_hk_part2 :: in.dxf_hk_part2 ;
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|425000|22000|0|0|0|0|15496|RFMT: Lookup with IDS|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6843|0|18253|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6844|0|18256|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6845|0|18258|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6846|0|18260|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6847|0|18262|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6848|0|18265|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6849|0|18267|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6850|0|18271|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6851|0|18274|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6852|0|18277|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6853|0|18280|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|6854|0|18283|0|{Subgraph created from graph "Get Last Lookup Record"|{}@0|@215125|45000|0|0|0|0|15492|Sort & De-dup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|581000|166000|3|}}
{2010210004|XXGflow|6855|0|18285|0|{@{}@384|.5|.5|{0|}7789|17|}}
{2010210004|XXGflow|6856|0|18287|0|{@{}@384|.5|.5|{0|}7783|17|}}
{2010243001|XXGwatcher|6857|0|18289|0|{@{}@1|100|-1||0|}}
{2010501005|XXGpvertex|6858|0|18291|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Dedup_Sorted.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
{30001002|XXparameter|condition|$[not is_blank(ADJUSTED_DEDUP_KEY_EXPR)]|3|9||@{0|}}
{30001002|XXparameter|error_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Dedup Sorted|418250|40000|0|0|0|0|7790|Dedup Sorted-1|Ab Initio Software|Built-in 2.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6859|0|18293|0|{@{}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6860|0|18295|0|{@{}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6861|0|18297|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6862|0|18299|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6863|0|18301|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6864|0|18303|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6865|0|18306|0|{Separates one specified data record in each group of data records from the rest of the records in the group.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|dedup|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Key on which to remove duplicates|{0|}}
{30001002|XXparameter|select||20|2|FK$|Optional select expression|{0|}}
{30001002|XXparameter|keep|first|15|1|FKl|Output record for a group of duplicates|{3|first|last|unique-only|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 2.11.1:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|NoHidePorts|out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; dup=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select); dup=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation1|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation2|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation3|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_operations|4|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|dup_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,dup,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: dup = in
metadata type: in = out
metadata type: in = dup|3|1|FHKl|@{0|}}
}}@0|Dedup Sorted|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6866|0|18308|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2196|0|}}
{2010203004|XXGoport|6867|0|18311|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|dup|0.0|@@@2192|0|}}
{2010203004|XXGoport|6868|0|18314|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6869|0|18317|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6870|0|18320|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6871|0|18323|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010600005|XXGgraph|6872|0|18326|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Partition_by_Key_and_Sort.mp|3|2|Pf$|@{0|}}
{30001002|XXparameter|Key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|Max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|@40000|34000|0|0|481000|303000|7782|PBKS:\{dxf_hk_part1\}|Ab Initio|Created 04/22/98 12:54:47|1|10|0||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|0|}}
{2010210004|XXGflow|6873|0|18328|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6874|0|18330|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{}@0|@241000|306000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6875|0|18332|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6876|0|18335|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6877|0|18337|0|{Orders your data according to a collating expression.|{}@0|@327000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6878|0|18339|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6879|0|18341|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6880|0|18344|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6881|0|18348|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010600005|XXGgraph|6882|0|18351|0|{Repartitions data records by key values and then sorts the records within each partition.
COPYRIGHT 2004 AB INITIO
ALL RIGHTS RESERVED
USE AND DISCLOSURE IS RESTRICTED BY CONFIDENTIALITY & LICENSE CONDITIONS|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Key||19|2|RFs$|Field to partition on|{0|}}
{30001002|XXparameter|InputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|Max_core|100663296|1|2|F$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|OutputLayout|@9|2|RFs$||{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|HelpID|comp_partition_by_key_and_sort|3|2|R$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|_ab_has_render_fixups|2|1|1|Hl||{0|}}
}}@0|@438000|340000|0|0|481000|303000|0|Partition by Key and Sort|||1|10|-1||6||32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|481000|303000|2|}}
{2010210004|XXGflow|6883|0|18353|0|{@{}@384|.5|.5|{8|227000|171000|247000|171000|296000|171000|316000|171000|}4|20|}}
{2010501005|XXGpvertex|6884|0|18355|0|{Groups data according to a collator.  

A Hash Partition component is generally followed by a Local Sort component.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Partition\\Hash.mpc|3|2|Pw$|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|9||@{0|}}
}}@0|@61000|118000|81000|138000|136000|68000|5|Partition by Key|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6885|0|18357|0|{@{}@216000|166000|11000|11000|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6886|0|18360|0|{@{}@71000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6887|0|18362|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|hash-partition|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to partition on|{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6888|0|18364|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2322|0|}}
{2010202004|XXGiport|6889|0|18367|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6890|0|18372|0|{Orders your data according to a collating expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|Layout||3|8|=|@{0|}}
{30001002|XXparameter|key||3|8|=|@{0|}}
{30001002|XXparameter|max_core||3|8|=|@{0|}}
{30001002|XXparameter|!prototype_path|C:\\gui\\src\\mpc\\Sort-Merge\\Sort.mpc|3|2|Pw$|@{0|}}
}}@0|@307000|118504|327000|139000|114000|65000|3|Sort|Ab Initio Software|Built-in|1|10|-1||6||32769|1|{1|0|}}}
{2010203004|XXGoport|6891|0|18374|0|{@{}@440000|166000|11000|11000|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6892|0|18376|0|{@{}@317000|166000|11000|11000|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6893|0|18379|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-sort|3|2|H$|The name used on the mp command line for this component|{0|}}
{30001002|XXparameter|image__|unitool|3|2|H$|The image used if this component was a custom component|{0|}}
{30001002|XXparameter|Layout|@9|9|RF||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to sort on|{0|}}
{30001002|XXparameter|max_core||1|2|FK$|maximum memory usage (before spilling to disk) in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|1|RHl|The custom transformation|{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|@0|0|0|0|0|0|0|@@@1|10|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6894|0|18381|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6895|0|18384|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6896|0|18390|0|{@{}@0|0|0|0|out0|.5|@@@14736|0|}}
{2010202004|XXGiport|6897|0|18393|0|{@{}@0|0|0|0|in0|.5|@@@14096|0|}}
{2010501005|XXGpvertex|6898|0|18396|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|dxf_hk_part1|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|dxf_hk_part2|3|2|$|@{0|}}
}}@0|Sort within Groups|263250|30000|0|0|0|0|7785|Sort within Groups-1|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6899|0|18398|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6900|0|18401|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6901|0|18404|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6902|0|18406|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6903|0|18409|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010203004|XXGoport|6904|0|18412|0|{@{}@0|0|0|0|out0|0.0|@@@10256|0|}}
{2010203004|XXGoport|6905|0|18416|0|{@{}@0|0|0|0|out1|0.0|@@@10256|0|}}
{2010202004|XXGiport|6906|0|18420|0|{@{}@0|0|0|0|in0|0.0|@@@9744|0|}}
{2010501005|XXGpvertex|6907|0|18424|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Sort/Sort_within_Groups.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|major_key|\{dxf_hk_part1\}|3|2|$|@{0|}}
{30001002|XXparameter|minor_key|$ADJUSTED_MINOR_KEY|3|2|$|@{0|}}
{30001002|XXparameter|max_core|$AI_SORT_MAX_CORE|3|2|$|@{0|}}
}}@0|Sort within Groups|1087000|10000|0|0|0|0|15455|Sort within Groups|Ab Initio Software|Built-in 2.1.7:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6908|0|18426|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6909|0|18429|0|{@{}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6910|0|18432|0|{Refines the sorting of data records already sorted according to one key specifier: it sorts the records within the groups formed by the first sort according to a second key specifier.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|sort-groups|3|1|Hl||{0|}}
{30001002|XXparameter|image__|/~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|major_key||19|2|RFK$|Input is assumed to be sorted on this key|{0|}}
{30001002|XXparameter|major_key.display_name|major-key|3|9|P|@{0|}}
{30001002|XXparameter|major_key.keyword|major-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key||19|2|RFK$|Input will be sorted within groups on this key|{0|}}
{30001002|XXparameter|minor_key.display_name|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|minor_key.keyword|minor-key|3|9|P|@{0|}}
{30001002|XXparameter|max_core|10485760|1|2|FK$|maximum memory usage in bytes|{0|}}
{30001002|XXparameter|max_core.display_name|max-core|3|9|P|@{0|}}
{30001002|XXparameter|max_core.keyword|max-core|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted|false|13|1|FKl|Allows input not sorted by major key|{0|}}
{30001002|XXparameter|allow_unsorted.display_name|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|allow_unsorted.keyword|allow-unsorted|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Sort within Groups|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6911|0|18434|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6912|0|18437|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1936|0|}}
{2010501005|XXGpvertex|6913|0|18440|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|350000|167500|0|0|0|0|15435|Trash|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6914|0|18442|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6915|0|18445|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6916|0|18447|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6917|0|18450|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1340000|212500|0|0|0|0|7761|Trash-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6918|0|18452|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6919|0|18455|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6920|0|18457|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6921|0|18460|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1105000|212500|0|0|0|0|15505|Trash-2|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6922|0|18462|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6923|0|18465|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6924|0|18467|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010600005|XXGgraph|6925|0|18470|0|{Subgraph created from graph "Get Last Lookup Record"|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition|$[DO_TWO_STEP_LOOKUP == 1 ]|3|9|F||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|conditionInputPort|in0|3|1|Fl||{0|}}
{30001002|XXparameter|conditionOutputPort|out0|3|1|Fl||{0|}}
}}@0|@602500|20000|0|0|0|0|15513|Two Step Lookup|Mukesh Singh|@1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|1203000|455000|3|}}
{2010240003|XXGlegend|6926|0|18472|0|{@{}@Record that were not matched in first lookup .
1. Will again tried in archive lookup
2.Matched record will flow as is|356000|356000|0|0|0|0|15479|}}
{2010242002|XXGface|6927|0|18474|0|{@{}@Arial Narrow|8388608|90|1|}}
{2010210004|XXGflow|6928|0|18476|0|{@{}@384|.5|.5|{0|}15480|17|}}
{2010210004|XXGflow|6929|0|18478|0|{@{}@384|.5|.5|{0|}15488|17|}}
{2010210004|XXGflow|6930|0|18480|0|{@{}@384|.5|.5|{0|}15483|1041|}}
{2010210004|XXGflow|6931|0|18482|0|{@{}@384|.5|.5|{0|}15494|17|}}
{2010210004|XXGflow|6932|0|18484|0|{@{}@384|.5|.5|{0|}15495|1041|}}
{2010210004|XXGflow|6933|0|18486|0|{@{}@384|.5|.5|{0|}15497|17|}}
{2010501005|XXGpvertex|6934|0|18488|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|780000|172000|0|0|0|0|15496|FBE: Pass Only Matching Rec|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6935|0|18490|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6936|0|18493|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6937|0|18496|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6938|0|18498|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6939|0|18500|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6940|0|18502|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6941|0|18505|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6942|0|18507|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6943|0|18510|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6944|0|18513|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6945|0|18516|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6946|0|18519|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6947|0|18522|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6948|0|18525|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Filter_by_Expression.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|select_expr|$FINAL_FILTER_EXPR|3|2|$|@{0|}}
{30001002|XXparameter|deselect_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|out_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|l|@{0|}}
{30001002|XXparameter|error_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Filter by Expression|110000|67000|0|0|0|0|15478|FBE: filter matching lkp record|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6949|0|18527|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6950|0|18530|0|{@{}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6951|0|18533|0|{@{}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6952|0|18535|0|{@{}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6953|0|18537|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6954|0|18539|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6955|0|18541|0|{Filters data records according to the specified DML expression.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|select-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|select_expr||20|2|RFO$|Filter expression|{0|}}
{30001002|XXparameter|select_expr.condition|param use_package False|3|15|P?|@{0|}}
{30001002|XXparameter|no_select_expr|-use_package|3|2|RO$|Replaces select_expr as the positional argument when use_package is true|{0|}}
{30001002|XXparameter|no_select_expr.condition|param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|use_package|False|13|1|Fl|If true, use the select() function defined in the package|{0|}}
{30001002|XXparameter|use_package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|package||8|1|FKl|Package containing transforms and data types|{0|}}
{30001002|XXparameter|package.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|5|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|integer(8) select_out::select(in)|3|2|H$|Use this instead of the select_expr parameter when use_package is true.|{0|}}
{30001002|XXparameter|operation1.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|operation1_analysis|skip_missing integer(8) select_out::select(in)|3|2|H$||{0|}}
{30001002|XXparameter|operation1_analysis.condition|version 2.16: param use_package True|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject=in; out=in; deselect=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select_expr); deselect=filter(select_expr); out=filter_xfr(package.select_out); deselect=filter_xfr(package.select_out);|3|2|H$||{0|}}
{30001002|XXparameter|num_types|2|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|num_callbacks|4|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|deselect_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out,deselect,reject,error,log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: deselect = out
metadata type: out = deselect
metadata type: reject = in
metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out
metadata type: deselect = in
metadata type: in = deselect|3|1|FHKl|@{0|}}
}}@0|Filter by Expression|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6956|0|18543|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010203004|XXGoport|6957|0|18546|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|deselect|0.0|@@@2192|0|}}
{2010203004|XXGoport|6958|0|18549|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject|0.0|@@@1168|0|}}
{2010203004|XXGoport|6959|0|18552|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error|0.0|@@@1176|0|}}
{2010203004|XXGoport|6960|0|18555|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6961|0|18558|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6962|0|18561|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|\{dxf_hk_part1;dxf_hk_part2\}|3|2|$|@{0|}}
}}@0|Merge|1004000|130500|0|0|0|0|15485|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6963|0|18563|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6964|0|18565|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6965|0|18569|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6966|0|18571|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|6967|0|18574|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|6968|0|18577|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Trash.mpc|3|2|Pf$|@{0|}}
}}@0|Trash|1005000|302500|0|0|0|0|15498|No- Match Record In Second Pass|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010202004|XXGiport|6969|0|18579|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6970|0|18582|0|{Ends a flow by discarding all input data records.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort||3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort||3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Remove completely|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher, fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
}}@0|Trash|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010202004|XXGiport|6971|0|18584|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6972|0|18587|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|transform0|include "$\{PUB_DXF_DML\}/generic_data_types.dml" ;

let lookup_identifier_type current_lookup = lookup_not_loaded(); 
let string("") datafile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.dat.gz"));
let string("") indexfile=this_partition_path(string_replace("$\{ICFF_FILE\}",".dat.gz", ".archive.idx"));
type lookup_record_type=  $\{IDS_LOOKUP_DATASET_DML\} ; 


let  unsigned integer(8) v_hash_key_half=0;
let lookup_identifier_type current_lookup1 = lookup_not_loaded();
let lookup_record_type lookup_record_value = allocate_with_nulls();
let lookup_record_type exact_record_value=allocate_with_defaults();
let lookup_record_type exact_next_record_value=allocate_with_nulls();
let  hash_key_type v_record_hash_from_in=allocate_with_defaults();
let hash_key_type  v_record_hash_from_lkp=allocate_with_defaults(); 



out::reformat(in) =
begin
 let integer(2) match_count=0;
 exact_record_value=allocate_with_defaults();
 if (current_lookup1 == lookup_not_loaded()) 
     current_lookup1 = lookup_load(datafile /*\@ eme_dataset_location: "$\{ICFF_FILE\}" \@*/,indexfile, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}"); //Structured comment for eme dataset for dependency analysis error .
 lookup_record_value = first_defined(lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1),allocate_with_defaults() );
 exact_record_value=allocate_with_defaults();
 exact_record_value = if (lookup_record_value.dxf_hk_part1 ==0 ) lookup_record_value               // No Match found on half hash key , So this is insert record.
                      else if  ( in.dxf_hk_part2 == lookup_record_value.dxf_hk_part2 ) lookup_record_value  //A match is found on dxf part1 as well as dxf part2 keys , this is an exact match in first inetration itself 
                      else                                                                        //A Match is found on half hash key but not on full hash key, find exact match inside iteration  .
                      begin
                        match_count=lookup_count(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1);
                          begin block exact_record_match
                             for (let int k, k < match_count)
                               begin 
                                exact_next_record_value = if( k == 0 ) lookup_last(current_lookup1, "$\{ICFF_TEMPLATE_NM_ARCHIVE\}", in.dxf_hk_part1) else lookup_previous(current_lookup1,"$\{ICFF_TEMPLATE_NM_ARCHIVE\}");
                                 if ( in.dxf_hk_part2 == exact_next_record_value.dxf_hk_part2 ) 
                                  begin
                                        exact_record_value = exact_next_record_value;
                                        exit  exact_record_match;
                                  end
                                                                                                 
                             end
                          end block exact_record_match
                       result :: exact_record_value ;
                       end ; 
                                                                      
 //##################Code for Lookup is over ########################################################################                                                                   
                                                                         
/* Match Cases 

1. Hash_key_half found a match in IDS ICFF  :
        a.It also found a found a match with full hash key 
             1. Go ahead and compare column hash for CDC to find update .
             
        b.Hash key half has a match but there is no mtach for hash_key (full)
            1. It become insert .
2.dxf_hk_part1 has no match in IDS ICFF 
      a.This become an insert record .
*/                                                         
        
        out.is_match :: if( exact_record_value.dxf_hk_part1 == 0 and   exact_record_value.dxf_hk_part1==0 ) 0 else 1 ;  // Supress updates if file is placeholder
        
        
        out.* :: exact_record_value.*;

end|3|3|c|@{0|}}
{30001002|XXparameter|out0_metadata|$\{INTER_LKP_TYPE\}|3|3|c|@{0|}}
{30001002|XXparameter|error0_metadata|$AB_HOME/include/error-info.dml|3|2|f$|@{0|}}
{30001002|XXparameter|log_metadata|$AB_HOME/include/log-info.dml|3|2|f$|@{0|}}
}}@0|Reformat|565000|172000|0|0|0|0|15490|RFMT: Lookup with IDS( Archive)|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6973|0|18589|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6974|0|18592|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6975|0|18594|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6976|0|18596|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6977|0|18598|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6978|0|18601|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|True|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|True|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = remote("$AB_HOME/include/error-info.dml")
metadata type: reject = in
metadata type: log = remote("$AB_HOME/include/log-info.dml")|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6979|0|18603|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6980|0|18607|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6981|0|18610|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6982|0|18613|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6983|0|18616|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6984|0|18619|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Transform/Reformat.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|out0_metadata|record
  unsigned integer(8)  dxf_hk_part1 =  0 /*Added by Integration Framework. First 8 bytes of the natural key hash.*/;
  unsigned integer(8)  dxf_hk_part2 =  0 /*Added by Integration Framework. Second 8 bytes of the natural key hash.*/;
 end;|3|1|l|@{0|}}
{30001002|XXparameter|error0_metadata|string('\\n')|3|1|l|@{0|}}
{30001002|XXparameter|log_metadata|record string("\|") node, timestamp, component, subcomponent, event_type; string("\|\\n") event_text; end|3|1|l|@{0|}}
}}@0|Reformat|363000|182500|0|0|0|0|15482|RFMT- Pass only Hash Keys|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|6985|0|18621|0|{@{}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6986|0|18624|0|{@{}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6987|0|18626|0|{@{}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6988|0|18628|0|{@{}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6989|0|18630|0|{@{}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010501005|XXGpvertex|6990|0|18633|0|{Changes the record format of your data by dropping fields or by using DML expressions to add fields, combine fields, or modify the data.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|reformat-transform|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|count|1|1|1|Fl|Number of reformat transforms|{0|}}
{30001002|XXparameter|count.is_index|true|3|9|P|@{0|}}
{30001002|XXparameter|transform0||8|1|FOl|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
{30001002|XXparameter|select||20|2|FK$|Filter expression before reformatting|{0|}}
{30001002|XXparameter|error_group||3|2|F$|Optional group name identifying a Handle Errors component to which errors can be directed.|{0|}}
{30001002|XXparameter|error_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|log_group||3|2|F$|Optional group name of a Handle Logs component to which log output can be directed.|{0|}}
{30001002|XXparameter|log_group.condition|version 2.16:|3|15|P?|@{0|}}
{30001002|XXparameter|reject_threshold|Abort on first reject|15|1|Fl|When to abort if input records are rejected|{3|Abort on first reject|Never abort|Use limit/ramp|}}
{30001002|XXparameter|reject_threshold.display_name|reject-threshold|3|9|P|@{0|}}
{30001002|XXparameter|limit|0|1|2|F$|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|limit.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|ramp|0.0|2|2|F$|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp.condition|param reject-threshold Use*|3|15|P?|@{0|}}
{30001002|XXparameter|limit_keyword|value reject-threshold Never* 0 value reject-threshold Abort* 0 sameas limit default dollar_substitution 0|1|13|Kv|Maximum rejected records before failure|{0|}}
{30001002|XXparameter|ramp_keyword|value reject-threshold Never* 99.0 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword.condition|version :2.12.999.m999|3|15|P?|@{0|}}
{30001002|XXparameter|ramp_keyword2|value reject-threshold Never* -1 value reject-threshold Abort* 0.0 sameas ramp default dollar_substitution 0.0|2|13|Kv|Rate of rejected records|{0|}}
{30001002|XXparameter|ramp_keyword2.condition|version 2.13:|3|15|P?|@{0|}}
{30001002|XXparameter|keyword_map|limit_keyword limit ramp_keyword ramp ramp_keyword2 ramp|3|2|$||{0|}}
{30001002|XXparameter|keyword_map.display_name|keyword-map|3|9|P|@{0|}}
{30001002|XXparameter|output_index||8|1|FKl|Output index computation|{0|}}
{30001002|XXparameter|output_index.display_name|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index.keyword|output-index|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_index_port.display_name|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_port.keyword|output-index_port|3|9|P|@{0|}}
{30001002|XXparameter|output_index_signature|int output_index_out::output_index(in)|3|2|H$|Function returning index of output port|{0|}}
{30001002|XXparameter|output_index_signature.display_name|output-index_signature|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes||8|1|FKl|Output index vector computation|{0|}}
{30001002|XXparameter|output_indexes.display_name|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes.keyword|output-indexes|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port|discriminator|3|2|FHK$|Output index port for debugger|{0|}}
{30001002|XXparameter|output_indexes_port.display_name|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_port.keyword|output-indexes_port|3|9|P|@{0|}}
{30001002|XXparameter|output_indexes_signature|int[int] output_indices_out::output_indexes(in)|3|2|H$|Function returning vector of indexes of output ports|{0|}}
{30001002|XXparameter|output_indexes_signature.display_name|output-indexes_signature|3|9|P|@{0|}}
{30001002|XXparameter|logging|False|13|1|Fl|Log internal events|{0|}}
{30001002|XXparameter|log|log_concat|3|13|Kv|Special log parameter|{0|}}
{30001002|XXparameter|log.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_input||15|1|Fl|Frequency of input records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_input.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_output||15|1|Fl|Frequency of output records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_output.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|log_reject||15|1|Fl|Frequency of reject records to log|{7| |1|10|100|1000|10000|100000|}}
{30001002|XXparameter|log_reject.condition|param logging True|3|15|P?|@{0|}}
{30001002|XXparameter|num_operations|6|1|2|H$|Number of operations in package|{0|}}
{30001002|XXparameter|operation1|out::reformat(in)|3|2|H$|Reformat operation|{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out*|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|reject*=in;out*=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis||3|2|H$||{0|}}
{30001002|XXparameter|filter_aggregate_analysis|out=filter(select)|3|2|H$||{0|}}
{30001002|XXparameter|num_types|3|1|2|H$|Number of private data types in package|{0|}}
{30001002|XXparameter|type1|error_info_t error_info "record string('', charset='x-ab-internal') component; int port_index; string('', charset='x-ab-internal') parameter; string('', charset='x-ab-internal') message; record string('', charset='x-ab-internal') code; int parent_index; record string('', charset='x-ab-internal') name; string('', charset='x-ab-internal') value; end[int] attributes; end[int] details; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type2|log_event_t log_event "record string('', charset='x-ab-internal') event_type; string('', charset='x-ab-internal') event_text; end"|3|2|H$|Type of error_info|{0|}}
{30001002|XXparameter|type3|event_info_t event_info "record int event_type; end"|3|2|H$|Information about the kind of event that happened|{0|}}
{30001002|XXparameter|operation2|optional out::output_for_error(error_info, in)|3|2|H$|Function to create output in case of error.|{0|}}
{30001002|XXparameter|operation3|optional error::make_error(error_info, in)|3|2|H$|Function to create error record in case of error.|{0|}}
{30001002|XXparameter|operation4|optional log_event::log_error(error_info, in)|3|2|H$|Function to create log record in case of error.|{0|}}
{30001002|XXparameter|operation5|optional log_event::final_log_output()|3|2|H$|Function to create final log record.|{0|}}
{30001002|XXparameter|operation6|optional out::output_at_event(event_info)|3|2|H$|Function to allow the output of an additional record at event|{0|}}
{30001002|XXparameter|num_callbacks|5|1|2|H$|Number of callbacks in package|{0|}}
{30001002|XXparameter|_use_rich_error_format|False|13|1|Hl|False means use legacy string newline format|{0|}}
{30001002|XXparameter|_use_rich_log_format|False|13|1|Hl|False means use legacy native charset format|{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|main_mp_port|count out|3|1|l||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out0_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|reject0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|error0_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|log_metadata||7|1|Fsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out[*],reject[*],error[*],log::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagation|metadata type: error = "string('\\\\n')"
metadata type: reject = in
metadata type: log = "record string(\\"\|\\") node, timestamp, component, subcomponent, event_type; string(\\"\|\\\\n\\") event_text; end"|3|1|HKl|@{0|}}
{30001002|XXparameter|_propagate_through||3|1|FHKl|@{0|}}
}}@0|Reformat|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|6991|0|18635|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
{30001002|XXparameter|transform0||8|8|FO=|Reformat transform|{0|}}
{30001002|XXparameter|transform0.index|count|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_value|0|3|9|P|@{0|}}
{30001002|XXparameter|transform0.index_name|transform|3|9|P|@{0|}}
}}@0|0|0|0|out0|0.0|count|out|0|2448|0|}}
{2010203004|XXGoport|6992|0|18639|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|reject0|0.0|count|reject|0|1168|0|}}
{2010203004|XXGoport|6993|0|18642|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|error0|0.0|count|error|0|1176|0|}}
{2010203004|XXGoport|6994|0|18645|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|F=||{0|}}
}}@0|0|0|0|log|0.0|@@@1176|0|}}
{2010202004|XXGiport|6995|0|18648|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1808|0|}}
{2010203004|XXGoport|6996|0|18651|0|{@{}@0|0|0|0|out0|.3362637362637363|@@@14352|0|}}
{2010202004|XXGiport|6997|0|18655|0|{@{}@0|0|0|0|in0|.5348101265822784|@@@13840|0|}}
{2010203004|XXGoport|6998|0|18659|0|{@{}@0|0|0|0|out0|.47619047619047616|@@@14352|0|}}
{2010202004|XXGiport|6999|0|18663|0|{@{}@0|0|0|0|in1|.5576923076923077|@@@13840|0|}}
{2010501005|XXGpvertex|7000|0|18667|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Partitioning/Merge.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|key|$ADJUSTED_DEDUP_KEY_EXPR|3|2|$|@{0|}}
}}@0|Merge|680000|265000|0|0|0|0|7747|Merge|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|7001|0|18669|0|{@{}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|7002|0|18671|0|{@{}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|7003|0|18674|0|{Combines data records from multiple flow partitions that have been sorted according to the key specifier, and maintains the sort order.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|local-merge|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|key||19|2|RFO$|Field to merge on|{0|}}
{30001002|XXparameter|check_sort|True|13|1|FKl|Abort on first record that is out of sorted order|{0|}}
{30001002|XXparameter|check_sort.display_name|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.keyword|check-sort|3|9|P|@{0|}}
{30001002|XXparameter|check_sort.condition|version 3.1.2.r10:|3|15|P?|@{0|}}
{30001002|XXparameter|check_sort.update_clauses|update_value False|3|9|P|@{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|deadlock_prone|True|13|1|l|Necessary record on one input stops read on all inputs|{0|}}
{30001002|XXparameter|deadlock_prone.display_name|deadlock-prone|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=in|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|fan_in_ok|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Merge|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|7004|0|18676|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2448|0|}}
{2010202004|XXGiport|7005|0|18679|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@50962|0|}}
{2010501005|XXGpvertex|7006|0|18682|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|100000|262500|0|0|0|0|7657|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|7007|0|18684|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|7008|0|18688|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|7009|0|18690|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|7010|0|18692|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|7011|0|18695|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|7012|0|18698|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|condition|0|3|2|$|@{0|}}
}}@0|Replicate|533000|257500|0|0|0|0|7745|Replicate-1|Ab Initio Software|Built-in 1.0:|1|100|0|@6|@32769|1|{1|0|}}}
{2010203004|XXGoport|7013|0|18700|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|7014|0|18703|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|7015|0|18707|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1461375654|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|7016|0|18709|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|7017|0|18712|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010203004|XXGoport|7018|0|18715|0|{@{}@0|0|0|0|out0|.49336283185840707|@@@14352|0|}}
{2010202004|XXGiport|7019|0|18718|0|{@{}@0|0|0|0|in0|.5631578947368421|@@@13840|0|}}
{2010202004|XXGiport|7020|0|18721|0|{@{}@0|0|0|0|in0|.5763612217795485|@@@13840|0|}}
{2010501005|XXGpvertex|7021|0|18725|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|!prototype_path|$AB_COMPONENTS/Miscellaneous/Replicate.mpc|3|2|Pf$|@{0|}}
{30001002|XXparameter|in_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|out_metadata||3|8|s=|@{0|}}
{30001002|XXparameter|Layout||3|8|s=|@{0|}}
}}@1|Replicate|737000|389500|0|0|0|0|14513|Replicate|Ab Initio Software|Built-in 1.0:|1|100|0||6||32769|1|{1|0|}}}
{2010203004|XXGoport|7022|0|18727|0|{@{}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|7023|0|18730|0|{@{}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010501005|XXGpvertex|7024|0|18733|0|{Arbitrarily combines all the data records it receives into a single flow and writes a copy of that flow to each of its output flows.|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|mpname|broadcast|3|1|Hl||{0|}}
{30001002|XXparameter|image__|~ab_home/bin/unitool|3|2|H$||{0|}}
{30001002|XXparameter|NoHidePorts|in out|3|2|H$||{0|}}
{30001002|XXparameter|condition||3|2|F$||{0|}}
{30001002|XXparameter|conditionInputPort|in|3|2|F$||{0|}}
{30001002|XXparameter|conditionOutputPort|out|3|2|F$||{0|}}
{30001002|XXparameter|condition_interpretation|Replace with flow|15|1|Fl||{2|Replace with flow|Remove completely|}}
{30001002|XXparameter|condition_interpretation.display_name|condition-interpretation|3|9|P|@{0|}}
{30001002|XXparameter|port_analysis|out=exact(in)|3|2|H$||{0|}}
{30001002|XXparameter|continuous_analysis|broadcast, publisher|3|2|H$||{0|}}
{30001002|XXparameter|Layout|@9|2|RFs$||{0|}}
{30001002|XXparameter|in_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|out_metadata||7|1|RFsl||{0|}}
{30001002|XXparameter|doc_transform||8|2|FHs$|Document your transformation for dependency analysis|{0|}}
{30001002|XXparameter|doc_operation1|out::document(in)|3|2|RH$||{0|}}
{30001002|XXparameter|mpcmodtime|1432158954|1|1|Hl|The last modification time of this component's template|{0|}}
{30001002|XXparameter|_propagate_through|metadata type: out = in
metadata type: in = out|3|1|FHKl|@{0|}}
}}@0|Replicate|0|0|0|0|0|0|0|@||1|100|-1|@6|@1|1|{1|0|}}}
{2010203004|XXGoport|7025|0|18735|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|out|0.0|@@@2068|0|}}
{2010202004|XXGiport|7026|0|18738|0|{@{30100001|XXparameter_set|@@@@{{30001002|XXparameter|metadata||7|8|RF=||{0|}}
}}@0|0|0|0|in|0.0|@@@1812|0|}}
{2010600005|XXGgraph|7027|0|18744|0|{|{30100001|XXparameter_set|@@@@{{30001002|XXparameter|condition||3|2|F$||{0|}}
}}@0|@1040000|120000|0|0|0|0|14271|Version Log|Sripavan Pulikonda|Created 8/21/2015 9:19:55 AM|1|100|-1|@9|@32769|{0|}0|0|{0|}{0|}{0|}{0|}1.0|848000|429000|3|}}
{2010240003|XXGlegend|7028|0|18746|0|{@{}@Date|92000|251000|0|0|0|0|1474|}}
{2010242002|XXGface|7029|0|18748|0|{@{}@Candara|32768|100|0|}}
{2010240003|XXGlegend|7030|0|18750|0|{@{}@Author|217000|251000|0|0|0|0|1473|}}
{2010242002|XXGface|7031|0|18752|0|{@{}@Candara|32768|100|0|}}
{2010240003|XXGlegend|7032|0|18754|0|{@{}@Description|417000|251000|0|0|0|0|1472|}}
{2010242002|XXGface|7033|0|18756|0|{@{}@Candara|32768|100|0|}}
{2010240003|XXGlegend|7034|0|18758|0|{@{}@Version|17000|251000|0|0|0|0|1470|}}
{2010242002|XXGface|7035|0|18760|0|{@{}@Candara|32768|100|0|}}
{2010240003|XXGlegend|7036|0|18762|0|{@{}@Initial version|412000|268000|0|0|0|0|1482|}}
{2010242002|XXGface|7037|0|18764|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7038|0|18766|0|{@{}@May 19 2016|82000|268000|0|0|0|0|1486|}}
{2010242002|XXGface|7039|0|18768|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7040|0|18770|0|{@{}@1.0|17000|268000|0|0|0|0|1455|}}
{2010242002|XXGface|7041|0|18772|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7042|0|18774|0|{@{}@Sripavan Pulikonda (Exusia)|187000|268000|0|0|0|0|1483|}}
{2010242002|XXGface|7043|0|18776|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7044|0|18778|0|{@{}@Summary:

This graph maps the clean file to multiple split files and also optionally maps it to an ILM file.
All FSK lookups are taken care of in this graph.|15000|42500|0|0|0|0|1481|}}
{2010242002|XXGface|7045|0|18780|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7046|0|18782|0|{@{}@2.0|17000|288000|0|0|0|0|1485|}}
{2010242002|XXGface|7047|0|18784|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7048|0|18786|0|{@{}@May 30 2016|82000|288000|0|0|0|0|1487|}}
{2010242002|XXGface|7049|0|18788|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7050|0|18790|0|{@{}@Gunit Kaur (Exusia)|187000|288000|0|0|0|0|1476|}}
{2010242002|XXGface|7051|0|18792|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7052|0|18794|0|{@{}@Added FSK/create placeholder component and removed dead code|412000|288000|0|0|0|0|1484|}}
{2010242002|XXGface|7053|0|18796|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7054|0|18798|0|{@{}@High Level Design conceived by:
Anwar Parvez, Alex Zhao

ETL Design conceived by:
Manav Jindal|18000|140000|0|0|0|0|1480|}}
{2010242002|XXGface|7055|0|18800|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7056|0|18802|0|{@{}@3.0|17000|308000|0|0|0|0|1491|}}
{2010242002|XXGface|7057|0|18804|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7058|0|18806|0|{@{}@Sep 22 2016|82000|308000|0|0|0|0|1492|}}
{2010242002|XXGface|7059|0|18808|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7060|0|18810|0|{@{}@Gunit Kaur (Exusia)|187000|308000|0|0|0|0|1493|}}
{2010242002|XXGface|7061|0|18812|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7062|0|18814|0|{@{}@ILM publish feature added|412000|308000|0|0|0|0|1494|}}
{2010242002|XXGface|7063|0|18816|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7064|0|18818|0|{@{}@4.0|17000|328000|0|0|0|0|1499|}}
{2010242002|XXGface|7065|0|18820|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7066|0|18822|0|{@{}@Sep 30 2016|82000|328000|0|0|0|0|1497|}}
{2010242002|XXGface|7067|0|18824|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7068|0|18826|0|{@{}@Gunit Kaur (Exusia)|187000|328000|0|0|0|0|1496|}}
{2010242002|XXGface|7069|0|18828|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7070|0|18830|0|{@{}@drop record feature added|412000|328000|0|0|0|0|1498|}}
{2010242002|XXGface|7071|0|18832|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7072|0|18834|0|{@{}@5.0|17000|348000|0|0|0|0|1505|}}
{2010242002|XXGface|7073|0|18836|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7074|0|18838|0|{@{}@Nov 03 2016|82000|348000|0|0|0|0|1502|}}
{2010242002|XXGface|7075|0|18840|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7076|0|18842|0|{@{}@Mukesh Singh (Exusia)|187000|348000|0|0|0|0|1503|}}
{2010242002|XXGface|7077|0|18844|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7078|0|18846|0|{@{}@Custom/Reduced lookup, DA|412000|348000|0|0|0|0|1504|}}
{2010242002|XXGface|7079|0|18848|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7080|0|18850|0|{@{}@6.0|17000|368000|0|0|0|0|1509|}}
{2010242002|XXGface|7081|0|18852|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7082|0|18854|0|{@{}@Dec 19 2016|82000|368000|0|0|0|0|1510|}}
{2010242002|XXGface|7083|0|18856|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7084|0|18858|0|{@{}@Mukesh Singh (Exusia)|187000|368000|0|0|0|0|1507|}}
{2010242002|XXGface|7085|0|18860|0|{@{}@Candara|0|100|0|}}
{2010240003|XXGlegend|7086|0|18862|0|{@{}@Write ILM events|412000|368000|0|0|0|0|1511|}}
{2010242002|XXGface|7087|0|18864|0|{@{}@Candara|0|100|0|}}
{2010110002|XXGconstant|7088|0|18866|0|{@{}@{1|80444|}}}
{2010002001|XXGdirectory_object_object|0|1|2|0|{XXGgraph|}0|1|}
{2010704001|XXGgraph_graphinfo_graphinfo|1|0|2|0|{}1|2|}
{2010706001|XXGgraphinfo_runsettings_runsettings|2|0|4|0|{}2|3|}
{2010109001|XXGobject_property_value|3|0|6|0|{0|legend_face|92|}2|4|}
{2010605001|XXGgraph_legend_legend|4|0|8|0|{0|}1|5|}
{2010241001|XXGlegend_face_face|5|0|10|0|{}5|6|}
{2010605001|XXGgraph_legend_legend|6|0|12|0|{1|}1|7|}
{2010241001|XXGlegend_face_face|7|0|14|0|{}7|8|}
{2010604001|XXGgraph_flow_flow|8|0|16|0|{Flow_1|}1|9|}
{2010604001|XXGgraph_flow_flow|9|0|18|0|{Flow_10|}1|10|}
{2010604001|XXGgraph_flow_flow|10|0|20|0|{Flow_2|}1|11|}
{2010604001|XXGgraph_flow_flow|11|0|22|0|{Flow_4|}1|12|}
{2010604001|XXGgraph_flow_flow|12|0|24|0|{Flow_5|}1|13|}
{2010604001|XXGgraph_flow_flow|13|0|26|0|{Flow_6|}1|14|}
{2010601001|XXGgraph_vertex_vertex|14|0|28|0|{Clean_Source|}1|15|}
{2010212001|XXGvertex_oport_oport|15|0|30|0|{0|read|}15|16|}
{2010213001|XXGoport_dst_flow|16|0|32|0|{0|}16|10|}
{2010213001|XXGoport_dst_flow|17|0|33|0|{1|}16|9|}
{2010007001|XXGobject_proto_object|18|0|34|0|{}15|17|}
{2010212001|XXGvertex_oport_oport|19|0|36|0|{0|read|}17|18|}
{2010006001|XXGobject_psameas_object|20|0|38|0|{metadata|read_metadata|1|0|}18|17|}
{2010601001|XXGgraph_vertex_vertex|21|0|39|0|{Join_Files_Output|}1|19|}
{2010211001|XXGvertex_iport_iport|22|0|41|0|{0|write|}19|20|}
{2010214001|XXGiport_src_flow|23|0|43|0|{0|}20|13|}
{2010007001|XXGobject_proto_object|24|0|44|0|{}19|21|}
{2010211001|XXGvertex_iport_iport|25|0|46|0|{0|write|}21|22|}
{2010006001|XXGobject_psameas_object|26|0|48|0|{metadata|write_metadata|1|0|}22|21|}
{2010601001|XXGgraph_vertex_vertex|27|0|49|0|{Lookups_for_View_Data|}1|23|}
{2010601001|XXGgraph_vertex_vertex|28|0|51|0|{Lookup_1|}23|24|}
{2010007001|XXGobject_proto_object|29|0|53|0|{}24|25|}
{2010601001|XXGgraph_vertex_vertex|30|0|55|0|{Lookup_2|}23|26|}
{2010007001|XXGobject_proto_object|31|0|57|0|{}26|27|}
{2010601001|XXGgraph_vertex_vertex|32|0|59|0|{Lookup_3|}23|28|}
{2010007001|XXGobject_proto_object|33|0|61|0|{}28|29|}
{2010601001|XXGgraph_vertex_vertex|34|0|63|0|{Lookup_4|}23|30|}
{2010007001|XXGobject_proto_object|35|0|65|0|{}30|31|}
{2010601001|XXGgraph_vertex_vertex|36|0|67|0|{Lookup_5|}23|32|}
{2010007001|XXGobject_proto_object|37|0|69|0|{}32|33|}
{2010601001|XXGgraph_vertex_vertex|38|0|71|0|{Lookup_6|}23|34|}
{2010007001|XXGobject_proto_object|39|0|73|0|{}34|35|}
{2010601001|XXGgraph_vertex_vertex|40|0|75|0|{Lookup_7|}23|36|}
{2010007001|XXGobject_proto_object|41|0|77|0|{}36|37|}
{2010601001|XXGgraph_vertex_vertex|42|0|79|0|{Lookup_8|}23|38|}
{2010007001|XXGobject_proto_object|43|0|81|0|{}38|39|}
{2010601001|XXGgraph_vertex_vertex|44|0|83|0|{Lookup_Catalog|}23|40|}
{2010007001|XXGobject_proto_object|45|0|85|0|{}40|41|}
{2010601001|XXGgraph_vertex_vertex|46|0|87|0|{Map_to_ILM_via_the_BRE_|}1|42|}
{2010212001|XXGvertex_oport_oport|47|0|89|0|{0|out0|}42|43|}
{2010213001|XXGoport_dst_flow|48|0|91|0|{0|}43|11|}
{2010212001|XXGvertex_oport_oport|49|0|92|0|{1|reject0|}42|44|}
{2010212001|XXGvertex_oport_oport|50|0|94|0|{2|error0|}42|45|}
{2010212001|XXGvertex_oport_oport|51|0|96|0|{3|log|}42|46|}
{2010211001|XXGvertex_iport_iport|52|0|98|0|{0|in|}42|47|}
{2010214001|XXGiport_src_flow|53|0|100|0|{0|}47|12|}
{2010007001|XXGobject_proto_object|54|0|101|0|{}42|48|}
{2010212001|XXGvertex_oport_oport|55|0|103|0|{0|out0|}48|49|}
{2010006001|XXGobject_psameas_object|56|0|105|0|{metadata|out0_metadata|1|0|}49|48|}
{2010006001|XXGobject_psameas_object|57|0|106|0|{transform0|transform0|1|0|}49|48|}
{2010212001|XXGvertex_oport_oport|58|0|107|0|{1|reject0|}48|50|}
{2010006001|XXGobject_psameas_object|59|0|109|0|{metadata|reject0_metadata|1|0|}50|48|}
{2010212001|XXGvertex_oport_oport|60|0|110|0|{2|error0|}48|51|}
{2010006001|XXGobject_psameas_object|61|0|112|0|{metadata|error0_metadata|1|0|}51|48|}
{2010212001|XXGvertex_oport_oport|62|0|113|0|{3|log|}48|52|}
{2010006001|XXGobject_psameas_object|63|0|115|0|{metadata|log_metadata|1|0|}52|48|}
{2010211001|XXGvertex_iport_iport|64|0|116|0|{0|in|}48|53|}
{2010006001|XXGobject_psameas_object|65|0|118|0|{metadata|in_metadata|1|0|}53|48|}
{2010006001|XXGobject_psameas_object|66|0|119|0|{Layout|Layout|0|0|}42|54|}
{2010212001|XXGvertex_oport_oport|67|0|121|0|{0|out|}54|55|}
{2010213001|XXGoport_dst_flow|68|0|123|0|{0|}55|13|}
{2010212001|XXGvertex_oport_oport|69|0|124|0|{1|reject|}54|56|}
{2010212001|XXGvertex_oport_oport|70|0|126|0|{2|error|}54|57|}
{2010212001|XXGvertex_oport_oport|71|0|128|0|{3|log|}54|58|}
{2010211001|XXGvertex_iport_iport|72|0|130|0|{0|in|}54|59|}
{2010214001|XXGiport_src_flow|73|0|132|0|{0|}59|14|}
{2010007001|XXGobject_proto_object|74|0|133|0|{}54|60|}
{2010212001|XXGvertex_oport_oport|75|0|135|0|{0|out|}60|61|}
{2010006001|XXGobject_psameas_object|76|0|137|0|{metadata|out_metadata|1|0|}61|60|}
{2010212001|XXGvertex_oport_oport|77|0|138|0|{1|reject|}60|62|}
{2010006001|XXGobject_psameas_object|78|0|140|0|{metadata|reject_metadata|1|0|}62|60|}
{2010212001|XXGvertex_oport_oport|79|0|141|0|{2|error|}60|63|}
{2010006001|XXGobject_psameas_object|80|0|143|0|{metadata|error_metadata|1|0|}63|60|}
{2010212001|XXGvertex_oport_oport|81|0|144|0|{3|log|}60|64|}
{2010006001|XXGobject_psameas_object|82|0|146|0|{metadata|log_metadata|1|0|}64|60|}
{2010211001|XXGvertex_iport_iport|83|0|147|0|{0|in|}60|65|}
{2010006001|XXGobject_psameas_object|84|0|149|0|{metadata|in_metadata|1|0|}65|60|}
{2010006001|XXGobject_psameas_object|85|0|150|0|{in_metadata|write_metadata|0|0|}54|19|}
{2010006001|XXGobject_psameas_object|86|0|151|0|{out_metadata|write_metadata|0|0|}54|19|}
{2010006001|XXGobject_psameas_object|87|0|152|0|{reject_metadata|write_metadata|0|0|}54|19|}
{2010006001|XXGobject_psameas_object|88|0|153|0|{in_metadata|read_metadata|0|0|}42|15|}
{2010006001|XXGobject_psameas_object|89|0|154|0|{out0_metadata|write_metadata|0|0|}42|19|}
{2010006001|XXGobject_psameas_object|90|0|155|0|{reject0_metadata|read_metadata|0|0|}42|15|}
{2010601001|XXGgraph_vertex_vertex|91|0|156|0|{Normalize_Add_Job_ID_Record_Count|}1|54|}
{2010601001|XXGgraph_vertex_vertex|92|0|157|0|{Optional_Filter|}1|66|}
{2010605001|XXGgraph_legend_legend|93|0|159|0|{0|}66|67|}
{2010241001|XXGlegend_face_face|94|0|161|0|{}67|68|}
{2010604001|XXGgraph_flow_flow|95|0|163|0|{Flow_1|}66|69|}
{2010604001|XXGgraph_flow_flow|96|0|165|0|{Flow_2|}66|70|}
{2010604001|XXGgraph_flow_flow|97|0|167|0|{Flow_3|}66|71|}
{2010604001|XXGgraph_flow_flow|98|0|169|0|{Flow_4|}66|72|}
{2010604001|XXGgraph_flow_flow|99|0|171|0|{Flow_5|}66|73|}
{2010604001|XXGgraph_flow_flow|100|0|173|0|{Flow_6|}66|74|}
{2010601001|XXGgraph_vertex_vertex|101|0|175|0|{Copy_Out|}66|75|}
{2010212001|XXGvertex_oport_oport|102|0|177|0|{0|out|}75|76|}
{2010211001|XXGvertex_iport_iport|103|0|179|0|{0|in|}75|77|}
{2010214001|XXGiport_src_flow|104|0|181|0|{0|}77|71|}
{2010007001|XXGobject_proto_object|105|0|182|0|{}75|78|}
{2010212001|XXGvertex_oport_oport|106|0|184|0|{0|out|}78|79|}
{2010006001|XXGobject_psameas_object|107|0|186|0|{metadata|out_metadata|1|0|}79|78|}
{2010211001|XXGvertex_iport_iport|108|0|187|0|{0|in|}78|80|}
{2010006001|XXGobject_psameas_object|109|0|189|0|{metadata|in_metadata|1|0|}80|78|}
{2010006001|XXGobject_psameas_object|110|0|190|0|{Layout|Layout|0|0|}75|54|}
{2010006001|XXGobject_psameas_object|111|0|191|0|{in_metadata|read_metadata|0|0|}75|15|}
{2010006001|XXGobject_psameas_object|112|0|192|0|{out_metadata|read_metadata|0|0|}75|15|}
{2010601001|XXGgraph_vertex_vertex|113|0|193|0|{Deselect_File|}66|81|}
{2010211001|XXGvertex_iport_iport|114|0|195|0|{0|write|}81|82|}
{2010214001|XXGiport_src_flow|115|0|197|0|{0|}82|74|}
{2010007001|XXGobject_proto_object|116|0|198|0|{}81|83|}
{2010211001|XXGvertex_iport_iport|117|0|200|0|{0|write|}83|84|}
{2010006001|XXGobject_psameas_object|118|0|202|0|{metadata|write_metadata|1|0|}84|83|}
{2010006001|XXGobject_psameas_object|119|0|203|0|{write_metadata|read_metadata|0|0|}81|15|}
{2010601001|XXGgraph_vertex_vertex|120|0|204|0|{For_BRE|}66|85|}
{2010211001|XXGvertex_iport_iport|121|0|206|0|{0|in|}85|86|}
{2010214001|XXGiport_src_flow|122|0|208|0|{0|}86|72|}
{2010007001|XXGobject_proto_object|123|0|209|0|{}85|87|}
{2010211001|XXGvertex_iport_iport|124|0|211|0|{0|in|}87|88|}
{2010006001|XXGobject_psameas_object|125|0|213|0|{metadata|in_metadata|1|0|}88|87|}
{2010006001|XXGobject_psameas_object|126|0|214|0|{in_metadata|read_metadata|0|0|}85|15|}
{2010601001|XXGgraph_vertex_vertex|127|0|215|0|{Interleave|}66|89|}
{2010212001|XXGvertex_oport_oport|128|0|217|0|{0|out|}89|90|}
{2010213001|XXGoport_dst_flow|129|0|219|0|{0|}90|72|}
{2010211001|XXGvertex_iport_iport|130|0|220|0|{0|in|}89|91|}
{2010214001|XXGiport_src_flow|131|0|222|0|{0|}91|70|}
{2010007001|XXGobject_proto_object|132|0|223|0|{}89|92|}
{2010212001|XXGvertex_oport_oport|133|0|225|0|{0|out|}92|93|}
{2010006001|XXGobject_psameas_object|134|0|227|0|{metadata|out_metadata|1|0|}93|92|}
{2010211001|XXGvertex_iport_iport|135|0|228|0|{0|in|}92|94|}
{2010006001|XXGobject_psameas_object|136|0|230|0|{metadata|in_metadata|1|0|}94|92|}
{2010006001|XXGobject_psameas_object|137|0|231|0|{Layout|Layout|0|0|}89|85|}
{2010006001|XXGobject_psameas_object|138|0|232|0|{in_metadata|read_metadata|0|0|}89|15|}
{2010006001|XXGobject_psameas_object|139|0|233|0|{out_metadata|read_metadata|0|0|}89|15|}
{2010601001|XXGgraph_vertex_vertex|140|0|234|0|{Optional_Filter|}66|95|}
{2010212001|XXGvertex_oport_oport|141|0|236|0|{0|out|}95|96|}
{2010213001|XXGoport_dst_flow|142|0|238|0|{0|}96|69|}
{2010212001|XXGvertex_oport_oport|143|0|239|0|{1|deselect|}95|97|}
{2010213001|XXGoport_dst_flow|144|0|241|0|{0|}97|74|}
{2010212001|XXGvertex_oport_oport|145|0|242|0|{2|reject|}95|98|}
{2010212001|XXGvertex_oport_oport|146|0|244|0|{3|error|}95|99|}
{2010212001|XXGvertex_oport_oport|147|0|246|0|{4|log|}95|100|}
{2010211001|XXGvertex_iport_iport|148|0|248|0|{0|in|}95|101|}
{2010214001|XXGiport_src_flow|149|0|250|0|{0|}101|73|}
{2010007001|XXGobject_proto_object|150|0|251|0|{}95|102|}
{2010212001|XXGvertex_oport_oport|151|0|253|0|{0|out|}102|103|}
{2010006001|XXGobject_psameas_object|152|0|255|0|{metadata|out_metadata|1|0|}103|102|}
{2010212001|XXGvertex_oport_oport|153|0|256|0|{1|deselect|}102|104|}
{2010006001|XXGobject_psameas_object|154|0|258|0|{metadata|deselect_metadata|1|0|}104|102|}
{2010212001|XXGvertex_oport_oport|155|0|259|0|{2|reject|}102|105|}
{2010006001|XXGobject_psameas_object|156|0|261|0|{metadata|reject_metadata|1|0|}105|102|}
{2010212001|XXGvertex_oport_oport|157|0|262|0|{3|error|}102|106|}
{2010006001|XXGobject_psameas_object|158|0|264|0|{metadata|error_metadata|1|0|}106|102|}
{2010212001|XXGvertex_oport_oport|159|0|265|0|{4|log|}102|107|}
{2010006001|XXGobject_psameas_object|160|0|267|0|{metadata|log_metadata|1|0|}107|102|}
{2010211001|XXGvertex_iport_iport|161|0|268|0|{0|in|}102|108|}
{2010006001|XXGobject_psameas_object|162|0|270|0|{metadata|in_metadata|1|0|}108|102|}
{2010006001|XXGobject_psameas_object|163|0|271|0|{Layout|Layout|0|0|}95|81|}
{2010006001|XXGobject_psameas_object|164|0|272|0|{deselect_metadata|read_metadata|0|0|}95|15|}
{2010006001|XXGobject_psameas_object|165|0|273|0|{in_metadata|read_metadata|0|0|}95|15|}
{2010006001|XXGobject_psameas_object|166|0|274|0|{out_metadata|read_metadata|0|0|}95|15|}
{2010006001|XXGobject_psameas_object|167|0|275|0|{reject_metadata|read_metadata|0|0|}95|15|}
{2010006001|XXGobject_psameas_object|168|0|276|0|{select_expr|FILTER_EXPR|1|0|}95|66|}
{2010601001|XXGgraph_vertex_vertex|169|0|277|0|{Replicate|}66|109|}
{2010212001|XXGvertex_oport_oport|170|0|279|0|{0|out|}109|110|}
{2010213001|XXGoport_dst_flow|171|0|281|0|{0|}110|71|}
{2010213001|XXGoport_dst_flow|172|0|282|0|{1|}110|70|}
{2010211001|XXGvertex_iport_iport|173|0|283|0|{0|in|}109|111|}
{2010214001|XXGiport_src_flow|174|0|285|0|{0|}111|69|}
{2010007001|XXGobject_proto_object|175|0|286|0|{}109|112|}
{2010212001|XXGvertex_oport_oport|176|0|288|0|{0|out|}112|113|}
{2010006001|XXGobject_psameas_object|177|0|290|0|{metadata|out_metadata|1|0|}113|112|}
{2010211001|XXGvertex_iport_iport|178|0|291|0|{0|in|}112|114|}
{2010006001|XXGobject_psameas_object|179|0|293|0|{metadata|in_metadata|1|0|}114|112|}
{2010006001|XXGobject_psameas_object|180|0|294|0|{Layout|Layout|0|0|}109|54|}
{2010006001|XXGobject_psameas_object|181|0|295|0|{in_metadata|read_metadata|0|0|}109|15|}
{2010006001|XXGobject_psameas_object|182|0|296|0|{out_metadata|read_metadata|0|0|}109|15|}
{2010601001|XXGgraph_vertex_vertex|183|0|297|0|{Replicate_for_OP_Console|}66|115|}
{2010212001|XXGvertex_oport_oport|184|0|299|0|{0|out|}115|116|}
{2010213001|XXGoport_dst_flow|185|0|301|0|{0|}116|73|}
{2010211001|XXGvertex_iport_iport|186|0|302|0|{0|in|}115|117|}
{2010007001|XXGobject_proto_object|187|0|304|0|{}115|118|}
{2010212001|XXGvertex_oport_oport|188|0|306|0|{0|out|}118|119|}
{2010006001|XXGobject_psameas_object|189|0|308|0|{metadata|out_metadata|1|0|}119|118|}
{2010211001|XXGvertex_iport_iport|190|0|309|0|{0|in|}118|120|}
{2010006001|XXGobject_psameas_object|191|0|311|0|{metadata|in_metadata|1|0|}120|118|}
{2010006001|XXGobject_psameas_object|192|0|312|0|{Layout|Layout|0|0|}115|81|}
{2010006001|XXGobject_psameas_object|193|0|313|0|{in_metadata|read_metadata|0|0|}115|15|}
{2010006001|XXGobject_psameas_object|194|0|314|0|{out_metadata|read_metadata|0|0|}115|15|}
{2010212001|XXGvertex_oport_oport|195|0|315|0|{0|out0|}66|121|}
{2010216002|XXGoport_binding_oport|196|0|317|0|{.5|.5|{12|905000|204000|925000|204000|948000|204000|948000|244000|971000|244000|991000|244000|}6620|}121|76|}
{2010213001|XXGoport_dst_flow|197|0|318|0|{0|}121|12|}
{2010211001|XXGvertex_iport_iport|198|0|319|0|{0|in0|}66|122|}
{2010215002|XXGiport_binding_iport|199|0|321|0|{.5|.5|{12|111000|209000|91000|209000|65000|209000|65000|249000|38000|249000|18000|249000|}6619|}122|117|}
{2010214001|XXGiport_src_flow|200|0|322|0|{0|}122|9|}
{2010006001|XXGobject_psameas_object|201|0|323|0|{FILTER_EXPR|FILTER_EXPR|1|0|}66|1|}
{2010601001|XXGgraph_vertex_vertex|202|0|324|0|{Reduced_LookUp_From_IDS|}1|123|}
{2010605001|XXGgraph_legend_legend|203|0|326|0|{0|}123|124|}
{2010241001|XXGlegend_face_face|204|0|328|0|{}124|125|}
{2010605001|XXGgraph_legend_legend|205|0|330|0|{1|}123|126|}
{2010241001|XXGlegend_face_face|206|0|332|0|{}126|127|}
{2010605001|XXGgraph_legend_legend|207|0|334|0|{2|}123|128|}
{2010241001|XXGlegend_face_face|208|0|336|0|{}128|129|}
{2010605001|XXGgraph_legend_legend|209|0|338|0|{3|}123|130|}
{2010241001|XXGlegend_face_face|210|0|340|0|{}130|131|}
{2010604001|XXGgraph_flow_flow|211|0|342|0|{Flow_1|}123|132|}
{2010604001|XXGgraph_flow_flow|212|0|344|0|{Flow_12|}123|133|}
{2010604001|XXGgraph_flow_flow|213|0|346|0|{Flow_14|}123|134|}
{2010604001|XXGgraph_flow_flow|214|0|348|0|{Flow_16|}123|135|}
{2010604001|XXGgraph_flow_flow|215|0|350|0|{Flow_18|}123|136|}
{2010604001|XXGgraph_flow_flow|216|0|352|0|{Flow_2|}123|137|}
{2010604001|XXGgraph_flow_flow|217|0|354|0|{Flow_20|}123|138|}
{2010604001|XXGgraph_flow_flow|218|0|356|0|{Flow_3|}123|139|}
{2010604001|XXGgraph_flow_flow|219|0|358|0|{Flow_4|}123|140|}
{2010604001|XXGgraph_flow_flow|220|0|360|0|{Flow_5|}123|141|}
{2010604001|XXGgraph_flow_flow|221|0|362|0|{Flow_6|}123|142|}
{2010601001|XXGgraph_vertex_vertex|222|0|364|0|{Disabled_All_Lookups|}123|143|}
{2010604001|XXGgraph_flow_flow|223|0|366|0|{Flow_10|}143|144|}
{2010604001|XXGgraph_flow_flow|224|0|368|0|{Flow_11|}143|145|}
{2010604001|XXGgraph_flow_flow|225|0|370|0|{Flow_13|}143|146|}
{2010604001|XXGgraph_flow_flow|226|0|372|0|{Flow_15|}143|147|}
{2010604001|XXGgraph_flow_flow|227|0|374|0|{Flow_17|}143|148|}
{2010604001|XXGgraph_flow_flow|228|0|376|0|{Flow_19|}143|149|}
{2010604001|XXGgraph_flow_flow|229|0|378|0|{Flow_7|}143|150|}
{2010604001|XXGgraph_flow_flow|230|0|380|0|{Flow_8|}143|151|}
{2010604001|XXGgraph_flow_flow|231|0|382|0|{Flow_9|}143|152|}
{2010601001|XXGgraph_vertex_vertex|232|0|384|0|{Lkp_File_10|}143|153|}
{2010211001|XXGvertex_iport_iport|233|0|386|0|{0|write|}153|154|}
{2010214001|XXGiport_src_flow|234|0|388|0|{0|}154|149|}
{2010007001|XXGobject_proto_object|235|0|389|0|{}153|155|}
{2010211001|XXGvertex_iport_iport|236|0|391|0|{0|write|}155|156|}
{2010006001|XXGobject_psameas_object|237|0|393|0|{metadata|write_metadata|1|0|}156|155|}
{2010601001|XXGgraph_vertex_vertex|238|0|394|0|{Lkp_File_2|}143|157|}
{2010211001|XXGvertex_iport_iport|239|0|396|0|{0|write|}157|158|}
{2010214001|XXGiport_src_flow|240|0|398|0|{0|}158|150|}
{2010007001|XXGobject_proto_object|241|0|399|0|{}157|159|}
{2010211001|XXGvertex_iport_iport|242|0|401|0|{0|write|}159|160|}
{2010006001|XXGobject_psameas_object|243|0|403|0|{metadata|write_metadata|1|0|}160|159|}
{2010601001|XXGgraph_vertex_vertex|244|0|404|0|{Lkp_File_3|}143|161|}
{2010211001|XXGvertex_iport_iport|245|0|406|0|{0|write|}161|162|}
{2010214001|XXGiport_src_flow|246|0|408|0|{0|}162|151|}
{2010007001|XXGobject_proto_object|247|0|409|0|{}161|163|}
{2010211001|XXGvertex_iport_iport|248|0|411|0|{0|write|}163|164|}
{2010006001|XXGobject_psameas_object|249|0|413|0|{metadata|write_metadata|1|0|}164|163|}
{2010601001|XXGgraph_vertex_vertex|250|0|414|0|{Lkp_File_4|}143|165|}
{2010211001|XXGvertex_iport_iport|251|0|416|0|{0|write|}165|166|}
{2010214001|XXGiport_src_flow|252|0|418|0|{0|}166|152|}
{2010007001|XXGobject_proto_object|253|0|419|0|{}165|167|}
{2010211001|XXGvertex_iport_iport|254|0|421|0|{0|write|}167|168|}
{2010006001|XXGobject_psameas_object|255|0|423|0|{metadata|write_metadata|1|0|}168|167|}
{2010601001|XXGgraph_vertex_vertex|256|0|424|0|{Lkp_File_5|}143|169|}
{2010211001|XXGvertex_iport_iport|257|0|426|0|{0|write|}169|170|}
{2010214001|XXGiport_src_flow|258|0|428|0|{0|}170|144|}
{2010007001|XXGobject_proto_object|259|0|429|0|{}169|171|}
{2010211001|XXGvertex_iport_iport|260|0|431|0|{0|write|}171|172|}
{2010006001|XXGobject_psameas_object|261|0|433|0|{metadata|write_metadata|1|0|}172|171|}
{2010601001|XXGgraph_vertex_vertex|262|0|434|0|{Lkp_File_6|}143|173|}
{2010211001|XXGvertex_iport_iport|263|0|436|0|{0|write|}173|174|}
{2010214001|XXGiport_src_flow|264|0|438|0|{0|}174|145|}
{2010007001|XXGobject_proto_object|265|0|439|0|{}173|175|}
{2010211001|XXGvertex_iport_iport|266|0|441|0|{0|write|}175|176|}
{2010006001|XXGobject_psameas_object|267|0|443|0|{metadata|write_metadata|1|0|}176|175|}
{2010601001|XXGgraph_vertex_vertex|268|0|444|0|{Lkp_File_7|}143|177|}
{2010211001|XXGvertex_iport_iport|269|0|446|0|{0|write|}177|178|}
{2010214001|XXGiport_src_flow|270|0|448|0|{0|}178|146|}
{2010007001|XXGobject_proto_object|271|0|449|0|{}177|179|}
{2010211001|XXGvertex_iport_iport|272|0|451|0|{0|write|}179|180|}
{2010006001|XXGobject_psameas_object|273|0|453|0|{metadata|write_metadata|1|0|}180|179|}
{2010601001|XXGgraph_vertex_vertex|274|0|454|0|{Lkp_File_8|}143|181|}
{2010211001|XXGvertex_iport_iport|275|0|456|0|{0|write|}181|182|}
{2010214001|XXGiport_src_flow|276|0|458|0|{0|}182|147|}
{2010007001|XXGobject_proto_object|277|0|459|0|{}181|183|}
{2010211001|XXGvertex_iport_iport|278|0|461|0|{0|write|}183|184|}
{2010006001|XXGobject_psameas_object|279|0|463|0|{metadata|write_metadata|1|0|}184|183|}
{2010601001|XXGgraph_vertex_vertex|280|0|464|0|{Lkp_File_9|}143|185|}
{2010211001|XXGvertex_iport_iport|281|0|466|0|{0|write|}185|186|}
{2010214001|XXGiport_src_flow|282|0|468|0|{0|}186|148|}
{2010007001|XXGobject_proto_object|283|0|469|0|{}185|187|}
{2010211001|XXGvertex_iport_iport|284|0|471|0|{0|write|}187|188|}
{2010006001|XXGobject_psameas_object|285|0|473|0|{metadata|write_metadata|1|0|}188|187|}
{2010601001|XXGgraph_vertex_vertex|286|0|474|0|{ids_lookup_10|}143|189|}
{2010605001|XXGgraph_legend_legend|287|0|476|0|{0|}189|190|}
{2010241001|XXGlegend_face_face|288|0|478|0|{}190|191|}
{2010605001|XXGgraph_legend_legend|289|0|480|0|{1|}189|192|}
{2010241001|XXGlegend_face_face|290|0|482|0|{}192|193|}
{2010604001|XXGgraph_flow_flow|291|0|484|0|{Flow_1|}189|194|}
{2010604001|XXGgraph_flow_flow|292|0|486|0|{Flow_2|}189|195|}
{2010604001|XXGgraph_flow_flow|293|0|488|0|{Flow_3|}189|196|}
{2010604001|XXGgraph_flow_flow|294|0|490|0|{Flow_4|}189|197|}
{2010604001|XXGgraph_flow_flow|295|0|492|0|{Flow_5|}189|198|}
{2010601001|XXGgraph_vertex_vertex|296|0|494|0|{Get_All_LookUp_Record|}189|199|}
{2010605001|XXGgraph_legend_legend|297|0|496|0|{0|}199|200|}
{2010241001|XXGlegend_face_face|298|0|498|0|{}200|201|}
{2010605001|XXGgraph_legend_legend|299|0|500|0|{1|}199|202|}
{2010241001|XXGlegend_face_face|300|0|502|0|{}202|203|}
{2010605001|XXGgraph_legend_legend|301|0|504|0|{2|}199|204|}
{2010241001|XXGlegend_face_face|302|0|506|0|{}204|205|}
{2010605001|XXGgraph_legend_legend|303|0|508|0|{3|}199|206|}
{2010241001|XXGlegend_face_face|304|0|510|0|{}206|207|}
{2010605001|XXGgraph_legend_legend|305|0|512|0|{4|}199|208|}
{2010241001|XXGlegend_face_face|306|0|514|0|{}208|209|}
{2010604001|XXGgraph_flow_flow|307|0|516|0|{Flow_1|}199|210|}
{2010604001|XXGgraph_flow_flow|308|0|518|0|{Flow_10|}199|211|}
{2010604001|XXGgraph_flow_flow|309|0|520|0|{Flow_11|}199|212|}
{2010604001|XXGgraph_flow_flow|310|0|522|0|{Flow_12|}199|213|}
{2010604001|XXGgraph_flow_flow|311|0|524|0|{Flow_18|}199|214|}
{2010604001|XXGgraph_flow_flow|312|0|526|0|{Flow_2|}199|215|}
{2010604001|XXGgraph_flow_flow|313|0|528|0|{Flow_3|}199|216|}
{2010604001|XXGgraph_flow_flow|314|0|530|0|{Flow_4|}199|217|}
{2010604001|XXGgraph_flow_flow|315|0|532|0|{Flow_5|}199|218|}
{2010604001|XXGgraph_flow_flow|316|0|534|0|{Flow_6|}199|219|}
{2010604001|XXGgraph_flow_flow|317|0|536|0|{Flow_7|}199|220|}
{2010604001|XXGgraph_flow_flow|318|0|538|0|{Flow_8|}199|221|}
{2010604001|XXGgraph_flow_flow|319|0|540|0|{Flow_9|}199|222|}
{2010601001|XXGgraph_vertex_vertex|320|0|542|0|{Dedup_Sorted|}199|223|}
{2010212001|XXGvertex_oport_oport|321|0|544|0|{0|out|}223|224|}
{2010213001|XXGoport_dst_flow|322|0|546|0|{0|}224|215|}
{2010212001|XXGvertex_oport_oport|323|0|547|0|{1|dup|}223|225|}
{2010213001|XXGoport_dst_flow|324|0|549|0|{0|}225|219|}
{2010212001|XXGvertex_oport_oport|325|0|550|0|{2|reject|}223|226|}
{2010212001|XXGvertex_oport_oport|326|0|552|0|{3|error|}223|227|}
{2010212001|XXGvertex_oport_oport|327|0|554|0|{4|log|}223|228|}
{2010211001|XXGvertex_iport_iport|328|0|556|0|{0|in|}223|229|}
{2010214001|XXGiport_src_flow|329|0|558|0|{0|}229|210|}
{2010006001|XXGobject_psameas_object|330|0|559|0|{Layout|Layout|0|0|}223|230|}
{2010212001|XXGvertex_oport_oport|331|0|561|0|{0|out|}230|231|}
{2010213001|XXGoport_dst_flow|332|0|563|0|{0|}231|213|}
{2010212001|XXGvertex_oport_oport|333|0|564|0|{1|reject|}230|232|}
{2010212001|XXGvertex_oport_oport|334|0|566|0|{2|error|}230|233|}
{2010212001|XXGvertex_oport_oport|335|0|568|0|{3|log|}230|234|}
{2010211001|XXGvertex_iport_iport|336|0|570|0|{0|in|}230|235|}
{2010214001|XXGiport_src_flow|337|0|572|0|{0|}235|211|}
{2010006001|XXGobject_psameas_object|338|0|573|0|{in_metadata|out0_metadata|0|0|}230|236|}
{2010212001|XXGvertex_oport_oport|339|0|575|0|{0|out0|}236|237|}
{2010213001|XXGoport_dst_flow|340|0|577|0|{0|}237|214|}
{2010212001|XXGvertex_oport_oport|341|0|578|0|{1|reject0|}236|238|}
{2010212001|XXGvertex_oport_oport|342|0|580|0|{2|error0|}236|239|}
{2010212001|XXGvertex_oport_oport|343|0|582|0|{3|log|}236|240|}
{2010211001|XXGvertex_iport_iport|344|0|584|0|{0|in|}236|241|}
{2010006001|XXGobject_psameas_object|345|0|586|0|{Layout|Layout|0|0|}236|242|}
{2010212001|XXGvertex_oport_oport|346|0|588|0|{0|out0|}242|243|}
{2010213001|XXGoport_dst_flow|347|0|590|0|{0|}243|132|}
{2010212001|XXGvertex_oport_oport|348|0|591|0|{1|out1|}242|244|}
{2010213001|XXGoport_dst_flow|349|0|593|0|{0|}244|137|}
{2010212001|XXGvertex_oport_oport|350|0|594|0|{2|out2|}242|245|}
{2010213001|XXGoport_dst_flow|351|0|596|0|{0|}245|139|}
{2010212001|XXGvertex_oport_oport|352|0|597|0|{3|out3|}242|246|}
{2010213001|XXGoport_dst_flow|353|0|599|0|{0|}246|140|}
{2010212001|XXGvertex_oport_oport|354|0|600|0|{4|out4|}242|247|}
{2010213001|XXGoport_dst_flow|355|0|602|0|{0|}247|141|}
{2010212001|XXGvertex_oport_oport|356|0|603|0|{5|out5|}242|248|}
{2010213001|XXGoport_dst_flow|357|0|605|0|{0|}248|133|}
{2010212001|XXGvertex_oport_oport|358|0|606|0|{6|out6|}242|249|}
{2010213001|XXGoport_dst_flow|359|0|608|0|{0|}249|134|}
{2010212001|XXGvertex_oport_oport|360|0|609|0|{7|out7|}242|250|}
{2010213001|XXGoport_dst_flow|361|0|611|0|{0|}250|135|}
{2010212001|XXGvertex_oport_oport|362|0|612|0|{8|out8|}242|251|}
{2010213001|XXGoport_dst_flow|363|0|614|0|{0|}251|136|}
{2010212001|XXGvertex_oport_oport|364|0|615|0|{9|out9|}242|252|}
{2010213001|XXGoport_dst_flow|365|0|617|0|{0|}252|138|}
{2010212001|XXGvertex_oport_oport|366|0|618|0|{10|reject0|}242|253|}
{2010212001|XXGvertex_oport_oport|367|0|620|0|{11|reject1|}242|254|}
{2010212001|XXGvertex_oport_oport|368|0|622|0|{12|reject2|}242|255|}
{2010212001|XXGvertex_oport_oport|369|0|624|0|{13|reject3|}242|256|}
{2010212001|XXGvertex_oport_oport|370|0|626|0|{14|reject4|}242|257|}
{2010212001|XXGvertex_oport_oport|371|0|628|0|{15|reject5|}242|258|}
{2010212001|XXGvertex_oport_oport|372|0|630|0|{16|reject6|}242|259|}
{2010212001|XXGvertex_oport_oport|373|0|632|0|{17|reject7|}242|260|}
{2010212001|XXGvertex_oport_oport|374|0|634|0|{18|reject8|}242|261|}
{2010212001|XXGvertex_oport_oport|375|0|636|0|{19|reject9|}242|262|}
{2010212001|XXGvertex_oport_oport|376|0|638|0|{20|error0|}242|263|}
{2010212001|XXGvertex_oport_oport|377|0|640|0|{21|error1|}242|264|}
{2010212001|XXGvertex_oport_oport|378|0|642|0|{22|error2|}242|265|}
{2010212001|XXGvertex_oport_oport|379|0|644|0|{23|error3|}242|266|}
{2010212001|XXGvertex_oport_oport|380|0|646|0|{24|error4|}242|267|}
{2010212001|XXGvertex_oport_oport|381|0|648|0|{25|error5|}242|268|}
{2010212001|XXGvertex_oport_oport|382|0|650|0|{26|error6|}242|269|}
{2010212001|XXGvertex_oport_oport|383|0|652|0|{27|error7|}242|270|}
{2010212001|XXGvertex_oport_oport|384|0|654|0|{28|error8|}242|271|}
{2010212001|XXGvertex_oport_oport|385|0|656|0|{29|error9|}242|272|}
{2010212001|XXGvertex_oport_oport|386|0|658|0|{30|log|}242|273|}
{2010211001|XXGvertex_iport_iport|387|0|660|0|{0|in|}242|274|}
{2010007001|XXGobject_proto_object|388|0|662|0|{}242|275|}
{2010212001|XXGvertex_oport_oport|389|0|664|0|{0|out0|}275|276|}
{2010006001|XXGobject_psameas_object|390|0|666|0|{metadata|out0_metadata|1|0|}276|275|}
{2010006001|XXGobject_psameas_object|391|0|667|0|{transform0|transform0|1|0|}276|275|}
{2010212001|XXGvertex_oport_oport|392|0|668|0|{1|out1|}275|277|}
{2010006001|XXGobject_psameas_object|393|0|670|0|{metadata|out1_metadata|1|0|}277|275|}
{2010006001|XXGobject_psameas_object|394|0|671|0|{transform1|transform1|1|0|}277|275|}
{2010212001|XXGvertex_oport_oport|395|0|672|0|{2|out2|}275|278|}
{2010006001|XXGobject_psameas_object|396|0|674|0|{metadata|out2_metadata|1|0|}278|275|}
{2010006001|XXGobject_psameas_object|397|0|675|0|{transform2|transform2|1|0|}278|275|}
{2010212001|XXGvertex_oport_oport|398|0|676|0|{3|out3|}275|279|}
{2010006001|XXGobject_psameas_object|399|0|678|0|{metadata|out3_metadata|1|0|}279|275|}
{2010006001|XXGobject_psameas_object|400|0|679|0|{transform3|transform3|1|0|}279|275|}
{2010212001|XXGvertex_oport_oport|401|0|680|0|{4|out4|}275|280|}
{2010006001|XXGobject_psameas_object|402|0|682|0|{metadata|out4_metadata|1|0|}280|275|}
{2010006001|XXGobject_psameas_object|403|0|683|0|{transform4|transform4|1|0|}280|275|}
{2010212001|XXGvertex_oport_oport|404|0|684|0|{5|out5|}275|281|}
{2010006001|XXGobject_psameas_object|405|0|686|0|{metadata|out5_metadata|1|0|}281|275|}
{2010006001|XXGobject_psameas_object|406|0|687|0|{transform5|transform5|1|0|}281|275|}
{2010212001|XXGvertex_oport_oport|407|0|688|0|{6|out6|}275|282|}
{2010006001|XXGobject_psameas_object|408|0|690|0|{metadata|out6_metadata|1|0|}282|275|}
{2010006001|XXGobject_psameas_object|409|0|691|0|{transform6|transform6|1|0|}282|275|}
{2010212001|XXGvertex_oport_oport|410|0|692|0|{7|out7|}275|283|}
{2010006001|XXGobject_psameas_object|411|0|694|0|{metadata|out7_metadata|1|0|}283|275|}
{2010006001|XXGobject_psameas_object|412|0|695|0|{transform7|transform7|1|0|}283|275|}
{2010212001|XXGvertex_oport_oport|413|0|696|0|{8|out8|}275|284|}
{2010006001|XXGobject_psameas_object|414|0|698|0|{metadata|out8_metadata|1|0|}284|275|}
{2010006001|XXGobject_psameas_object|415|0|699|0|{transform8|transform8|1|0|}284|275|}
{2010212001|XXGvertex_oport_oport|416|0|700|0|{9|out9|}275|285|}
{2010006001|XXGobject_psameas_object|417|0|702|0|{metadata|out9_metadata|1|0|}285|275|}
{2010006001|XXGobject_psameas_object|418|0|703|0|{transform9|transform9|1|0|}285|275|}
{2010212001|XXGvertex_oport_oport|419|0|704|0|{10|reject0|}275|286|}
{2010006001|XXGobject_psameas_object|420|0|706|0|{metadata|reject0_metadata|1|0|}286|275|}
{2010212001|XXGvertex_oport_oport|421|0|707|0|{11|reject1|}275|287|}
{2010006001|XXGobject_psameas_object|422|0|709|0|{metadata|reject1_metadata|1|0|}287|275|}
{2010212001|XXGvertex_oport_oport|423|0|710|0|{12|reject2|}275|288|}
{2010006001|XXGobject_psameas_object|424|0|712|0|{metadata|reject2_metadata|1|0|}288|275|}
{2010212001|XXGvertex_oport_oport|425|0|713|0|{13|reject3|}275|289|}
{2010006001|XXGobject_psameas_object|426|0|715|0|{metadata|reject3_metadata|1|0|}289|275|}
{2010212001|XXGvertex_oport_oport|427|0|716|0|{14|reject4|}275|290|}
{2010006001|XXGobject_psameas_object|428|0|718|0|{metadata|reject4_metadata|1|0|}290|275|}
{2010212001|XXGvertex_oport_oport|429|0|719|0|{15|reject5|}275|291|}
{2010006001|XXGobject_psameas_object|430|0|721|0|{metadata|reject5_metadata|1|0|}291|275|}
{2010212001|XXGvertex_oport_oport|431|0|722|0|{16|reject6|}275|292|}
{2010006001|XXGobject_psameas_object|432|0|724|0|{metadata|reject6_metadata|1|0|}292|275|}
{2010212001|XXGvertex_oport_oport|433|0|725|0|{17|reject7|}275|293|}
{2010006001|XXGobject_psameas_object|434|0|727|0|{metadata|reject7_metadata|1|0|}293|275|}
{2010212001|XXGvertex_oport_oport|435|0|728|0|{18|reject8|}275|294|}
{2010006001|XXGobject_psameas_object|436|0|730|0|{metadata|reject8_metadata|1|0|}294|275|}
{2010212001|XXGvertex_oport_oport|437|0|731|0|{19|reject9|}275|295|}
{2010006001|XXGobject_psameas_object|438|0|733|0|{metadata|reject9_metadata|1|0|}295|275|}
{2010212001|XXGvertex_oport_oport|439|0|734|0|{20|error0|}275|296|}
{2010006001|XXGobject_psameas_object|440|0|736|0|{metadata|error0_metadata|1|0|}296|275|}
{2010212001|XXGvertex_oport_oport|441|0|737|0|{21|error1|}275|297|}
{2010006001|XXGobject_psameas_object|442|0|739|0|{metadata|error1_metadata|1|0|}297|275|}
{2010212001|XXGvertex_oport_oport|443|0|740|0|{22|error2|}275|298|}
{2010006001|XXGobject_psameas_object|444|0|742|0|{metadata|error2_metadata|1|0|}298|275|}
{2010212001|XXGvertex_oport_oport|445|0|743|0|{23|error3|}275|299|}
{2010006001|XXGobject_psameas_object|446|0|745|0|{metadata|error3_metadata|1|0|}299|275|}
{2010212001|XXGvertex_oport_oport|447|0|746|0|{24|error4|}275|300|}
{2010006001|XXGobject_psameas_object|448|0|748|0|{metadata|error4_metadata|1|0|}300|275|}
{2010212001|XXGvertex_oport_oport|449|0|749|0|{25|error5|}275|301|}
{2010006001|XXGobject_psameas_object|450|0|751|0|{metadata|error5_metadata|1|0|}301|275|}
{2010212001|XXGvertex_oport_oport|451|0|752|0|{26|error6|}275|302|}
{2010006001|XXGobject_psameas_object|452|0|754|0|{metadata|error6_metadata|1|0|}302|275|}
{2010212001|XXGvertex_oport_oport|453|0|755|0|{27|error7|}275|303|}
{2010006001|XXGobject_psameas_object|454|0|757|0|{metadata|error7_metadata|1|0|}303|275|}
{2010212001|XXGvertex_oport_oport|455|0|758|0|{28|error8|}275|304|}
{2010006001|XXGobject_psameas_object|456|0|760|0|{metadata|error8_metadata|1|0|}304|275|}
{2010212001|XXGvertex_oport_oport|457|0|761|0|{29|error9|}275|305|}
{2010006001|XXGobject_psameas_object|458|0|763|0|{metadata|error9_metadata|1|0|}305|275|}
{2010212001|XXGvertex_oport_oport|459|0|764|0|{30|log|}275|306|}
{2010006001|XXGobject_psameas_object|460|0|766|0|{metadata|log_metadata|1|0|}306|275|}
{2010211001|XXGvertex_iport_iport|461|0|767|0|{0|in|}275|307|}
{2010006001|XXGobject_psameas_object|462|0|769|0|{metadata|in_metadata|1|0|}307|275|}
{2010006001|XXGobject_psameas_object|463|0|770|0|{in_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|464|0|771|0|{reject0_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|465|0|772|0|{reject1_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|466|0|773|0|{reject2_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|467|0|774|0|{reject3_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|468|0|775|0|{reject4_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|469|0|776|0|{reject5_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|470|0|777|0|{reject6_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|471|0|778|0|{reject7_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|472|0|779|0|{reject8_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|473|0|780|0|{reject9_metadata|read_metadata|0|0|}242|15|}
{2010006001|XXGobject_psameas_object|474|0|781|0|{in_metadata|out9_metadata|0|0|}236|242|}
{2010006001|XXGobject_psameas_object|475|0|782|0|{reject0_metadata|out9_metadata|0|0|}236|242|}
{2010006001|XXGobject_psameas_object|476|0|783|0|{reject_metadata|out0_metadata|0|0|}230|236|}
{2010006001|XXGobject_psameas_object|477|0|784|0|{dup_metadata|out_metadata|0|0|}223|308|}
{2010212001|XXGvertex_oport_oport|478|0|786|0|{0|out|}308|309|}
{2010213001|XXGoport_dst_flow|479|0|788|0|{0|}309|212|}
{2010212001|XXGvertex_oport_oport|480|0|789|0|{1|deselect|}308|310|}
{2010213001|XXGoport_dst_flow|481|0|791|0|{0|}310|220|}
{2010212001|XXGvertex_oport_oport|482|0|792|0|{2|reject|}308|311|}
{2010212001|XXGvertex_oport_oport|483|0|794|0|{3|error|}308|312|}
{2010212001|XXGvertex_oport_oport|484|0|796|0|{4|log|}308|313|}
{2010211001|XXGvertex_iport_iport|485|0|798|0|{0|in|}308|314|}
{2010214001|XXGiport_src_flow|486|0|800|0|{0|}314|221|}
{2010006001|XXGobject_psameas_object|487|0|801|0|{Layout|Layout|0|0|}308|230|}
{2010006001|XXGobject_psameas_object|488|0|802|0|{deselect_metadata|out_metadata|0|0|}308|308|}
{2010006001|XXGobject_psameas_object|489|0|803|0|{in_metadata|out_metadata|0|0|}308|230|}
{2010006001|XXGobject_psameas_object|490|0|804|0|{reject_metadata|out_metadata|0|0|}308|230|}
{2010006001|XXGobject_psameas_object|491|0|805|0|{in_metadata|out_metadata|0|0|}223|308|}
{2010006001|XXGobject_psameas_object|492|0|806|0|{out_metadata|out_metadata|0|0|}223|308|}
{2010006001|XXGobject_psameas_object|493|0|807|0|{reject_metadata|out_metadata|0|0|}223|308|}
{2010601001|XXGgraph_vertex_vertex|494|0|808|0|{FBE_Filter_match_records|}199|308|}
{2010601001|XXGgraph_vertex_vertex|495|0|809|0|{Get_Hash_on_SRC_NK|}199|236|}
{2010601001|XXGgraph_vertex_vertex|496|0|810|0|{Merge|}199|315|}
{2010212001|XXGvertex_oport_oport|497|0|812|0|{0|out|}315|316|}
{2010213001|XXGoport_dst_flow|498|0|814|0|{0|}316|221|}
{2010211001|XXGvertex_iport_iport|499|0|815|0|{0|in|}315|317|}
{2010214001|XXGiport_src_flow|500|0|817|0|{0|}317|216|}
{2010214001|XXGiport_src_flow|501|0|818|0|{1|}317|213|}
{2010006001|XXGobject_psameas_object|502|0|819|0|{Layout|Layout|0|0|}315|230|}
{2010006001|XXGobject_psameas_object|503|0|820|0|{in_metadata|out_metadata|0|0|}315|230|}
{2010006001|XXGobject_psameas_object|504|0|821|0|{out_metadata|out_metadata|0|0|}315|230|}
{2010601001|XXGgraph_vertex_vertex|505|0|822|0|{Normalize_Get_all_records_from_Archive_Lkp|}199|230|}
{2010601001|XXGgraph_vertex_vertex|506|0|823|0|{Normalize_Get_all_records_from_lkp|}199|318|}
{2010212001|XXGvertex_oport_oport|507|0|825|0|{0|out|}318|319|}
{2010213001|XXGoport_dst_flow|508|0|827|0|{0|}319|216|}
{2010212001|XXGvertex_oport_oport|509|0|828|0|{1|reject|}318|320|}
{2010212001|XXGvertex_oport_oport|510|0|830|0|{2|error|}318|321|}
{2010212001|XXGvertex_oport_oport|511|0|832|0|{3|log|}318|322|}
{2010211001|XXGvertex_iport_iport|512|0|834|0|{0|in|}318|323|}
{2010214001|XXGiport_src_flow|513|0|836|0|{0|}323|218|}
{2010006001|XXGobject_psameas_object|514|0|837|0|{in_metadata|out0_metadata|0|0|}318|236|}
{2010006001|XXGobject_psameas_object|515|0|838|0|{reject_metadata|out0_metadata|0|0|}318|236|}
{2010601001|XXGgraph_vertex_vertex|516|0|839|0|{Replicate|}199|324|}
{2010212001|XXGvertex_oport_oport|517|0|841|0|{0|out|}324|325|}
{2010211001|XXGvertex_iport_iport|518|0|843|0|{0|in|}324|326|}
{2010214001|XXGiport_src_flow|519|0|845|0|{0|}326|215|}
{2010006001|XXGobject_psameas_object|520|0|846|0|{Layout|Layout|0|0|}324|230|}
{2010006001|XXGobject_psameas_object|521|0|847|0|{in_metadata|out_metadata|0|0|}324|308|}
{2010006001|XXGobject_psameas_object|522|0|848|0|{out_metadata|out_metadata|0|0|}324|308|}
{2010601001|XXGgraph_vertex_vertex|523|0|849|0|{Replicate_1|}199|327|}
{2010212001|XXGvertex_oport_oport|524|0|851|0|{0|out|}327|328|}
{2010213001|XXGoport_dst_flow|525|0|853|0|{0|}328|218|}
{2010213001|XXGoport_dst_flow|526|0|854|0|{1|}328|211|}
{2010211001|XXGvertex_iport_iport|527|0|855|0|{0|in|}327|329|}
{2010214001|XXGiport_src_flow|528|0|857|0|{0|}329|217|}
{2010006001|XXGobject_psameas_object|529|0|858|0|{Layout|Layout|0|0|}327|230|}
{2010006001|XXGobject_psameas_object|530|0|859|0|{in_metadata|out0_metadata|0|0|}327|236|}
{2010006001|XXGobject_psameas_object|531|0|860|0|{out_metadata|out0_metadata|0|0|}327|236|}
{2010601001|XXGgraph_vertex_vertex|532|0|861|0|{Sort_Remove_Dup_On_Hash|}199|330|}
{2010604001|XXGgraph_flow_flow|533|0|863|0|{Flow_3|}330|331|}
{2010604001|XXGgraph_flow_flow|534|0|865|0|{Flow_5|}330|332|}
{2010601001|XXGgraph_vertex_vertex|535|0|867|0|{Dedup_Sorted_1|}330|333|}
{2010212001|XXGvertex_oport_oport|536|0|869|0|{0|out|}333|334|}
{2010212001|XXGvertex_oport_oport|537|0|871|0|{1|dup|}333|335|}
{2010212001|XXGvertex_oport_oport|538|0|873|0|{2|reject|}333|336|}
{2010212001|XXGvertex_oport_oport|539|0|875|0|{3|error|}333|337|}
{2010212001|XXGvertex_oport_oport|540|0|877|0|{4|log|}333|338|}
{2010211001|XXGvertex_iport_iport|541|0|879|0|{0|in|}333|339|}
{2010214001|XXGiport_src_flow|542|0|881|0|{0|}339|332|}
{2010006001|XXGobject_psameas_object|543|0|882|0|{Layout|Layout|0|0|}333|230|}
{2010006001|XXGobject_psameas_object|544|0|883|0|{dup_metadata|out0_metadata|0|0|}333|236|}
{2010006001|XXGobject_psameas_object|545|0|884|0|{in_metadata|out0_metadata|0|0|}333|236|}
{2010006001|XXGobject_psameas_object|546|0|885|0|{out_metadata|out0_metadata|0|0|}333|236|}
{2010006001|XXGobject_psameas_object|547|0|886|0|{reject_metadata|out0_metadata|0|0|}333|236|}
{2010601001|XXGgraph_vertex_vertex|548|0|887|0|{PBKS_dxf_hk_part1_|}330|340|}
{2010604001|XXGgraph_flow_flow|549|0|889|0|{Flow_1|}340|341|}
{2010601001|XXGgraph_vertex_vertex|550|0|891|0|{Partition_by_Key|}340|342|}
{2010212001|XXGvertex_oport_oport|551|0|893|0|{0|out|}342|343|}
{2010213001|XXGoport_dst_flow|552|0|895|0|{0|}343|341|}
{2010211001|XXGvertex_iport_iport|553|0|896|0|{0|in|}342|344|}
{2010006001|XXGobject_psameas_object|554|0|898|0|{in_metadata|out0_metadata|0|0|}342|236|}
{2010006001|XXGobject_psameas_object|555|0|899|0|{out_metadata|out0_metadata|0|0|}342|236|}
{2010601001|XXGgraph_vertex_vertex|556|0|900|0|{Sort|}340|345|}
{2010212001|XXGvertex_oport_oport|557|0|902|0|{0|out|}345|346|}
{2010211001|XXGvertex_iport_iport|558|0|904|0|{0|in|}345|347|}
{2010214001|XXGiport_src_flow|559|0|906|0|{0|}347|341|}
{2010006001|XXGobject_psameas_object|560|0|907|0|{in_metadata|out0_metadata|0|0|}345|236|}
{2010006001|XXGobject_psameas_object|561|0|908|0|{out_metadata|out0_metadata|0|0|}345|236|}
{2010212001|XXGvertex_oport_oport|562|0|909|0|{0|out0|}340|348|}
{2010216002|XXGoport_binding_oport|563|0|911|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}348|346|}
{2010213001|XXGoport_dst_flow|564|0|912|0|{0|}348|331|}
{2010211001|XXGvertex_iport_iport|565|0|913|0|{0|in0|}340|349|}
{2010215002|XXGiport_binding_iport|566|0|915|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}349|344|}
{2010006001|XXGobject_psameas_object|567|0|916|0|{OutputLayout|Layout|0|0|}340|230|}
{2010601001|XXGgraph_vertex_vertex|568|0|917|0|{Sort_within_Groups|}330|350|}
{2010212001|XXGvertex_oport_oport|569|0|919|0|{0|out|}350|351|}
{2010213001|XXGoport_dst_flow|570|0|921|0|{0|}351|332|}
{2010211001|XXGvertex_iport_iport|571|0|922|0|{0|in|}350|352|}
{2010214001|XXGiport_src_flow|572|0|924|0|{0|}352|331|}
{2010006001|XXGobject_psameas_object|573|0|925|0|{Layout|Layout|0|0|}350|230|}
{2010006001|XXGobject_psameas_object|574|0|926|0|{in_metadata|out0_metadata|0|0|}350|236|}
{2010006001|XXGobject_psameas_object|575|0|927|0|{out_metadata|out0_metadata|0|0|}350|236|}
{2010212001|XXGvertex_oport_oport|576|0|928|0|{0|out0|}330|353|}
{2010216002|XXGoport_binding_oport|577|0|930|0|{.5|.5|{0|}14672|}353|334|}
{2010213001|XXGoport_dst_flow|578|0|931|0|{0|}353|217|}
{2010212001|XXGvertex_oport_oport|579|0|932|0|{1|out1|}330|354|}
{2010216002|XXGoport_binding_oport|580|0|934|0|{.5|.5|{0|}14673|}354|335|}
{2010213001|XXGoport_dst_flow|581|0|935|0|{0|}354|222|}
{2010211001|XXGvertex_iport_iport|582|0|936|0|{0|in0|}330|355|}
{2010215002|XXGiport_binding_iport|583|0|938|0|{.5|.5|{0|}14671|}355|349|}
{2010214001|XXGiport_src_flow|584|0|939|0|{0|}355|214|}
{2010601001|XXGgraph_vertex_vertex|585|0|940|0|{Sort_on_Adjusted_Natural_Keys|}199|356|}
{2010212001|XXGvertex_oport_oport|586|0|942|0|{0|out|}356|357|}
{2010213001|XXGoport_dst_flow|587|0|944|0|{0|}357|210|}
{2010211001|XXGvertex_iport_iport|588|0|945|0|{0|in|}356|358|}
{2010214001|XXGiport_src_flow|589|0|947|0|{0|}358|212|}
{2010006001|XXGobject_psameas_object|590|0|948|0|{Layout|Layout|0|0|}356|230|}
{2010006001|XXGobject_psameas_object|591|0|949|0|{in_metadata|out_metadata|0|0|}356|308|}
{2010006001|XXGobject_psameas_object|592|0|950|0|{out_metadata|out_metadata|0|0|}356|308|}
{2010601001|XXGgraph_vertex_vertex|593|0|951|0|{Trash_1|}199|359|}
{2010211001|XXGvertex_iport_iport|594|0|953|0|{0|in|}359|360|}
{2010214001|XXGiport_src_flow|595|0|955|0|{0|}360|220|}
{2010006001|XXGobject_psameas_object|596|0|956|0|{Layout|Layout|0|0|}359|230|}
{2010006001|XXGobject_psameas_object|597|0|957|0|{in_metadata|out_metadata|0|0|}359|308|}
{2010601001|XXGgraph_vertex_vertex|598|0|958|0|{Trash_2|}199|361|}
{2010211001|XXGvertex_iport_iport|599|0|960|0|{0|in|}361|362|}
{2010214001|XXGiport_src_flow|600|0|962|0|{0|}362|219|}
{2010006001|XXGobject_psameas_object|601|0|963|0|{Layout|Layout|0|0|}361|230|}
{2010006001|XXGobject_psameas_object|602|0|964|0|{in_metadata|out_metadata|0|0|}361|308|}
{2010601001|XXGgraph_vertex_vertex|603|0|965|0|{Trash_3|}199|363|}
{2010211001|XXGvertex_iport_iport|604|0|967|0|{0|in|}363|364|}
{2010214001|XXGiport_src_flow|605|0|969|0|{0|}364|222|}
{2010006001|XXGobject_psameas_object|606|0|970|0|{Layout|Layout|0|0|}363|230|}
{2010006001|XXGobject_psameas_object|607|0|971|0|{in_metadata|out0_metadata|0|0|}363|236|}
{2010212001|XXGvertex_oport_oport|608|0|972|0|{0|out0|}199|365|}
{2010216002|XXGoport_binding_oport|609|0|974|0|{.5|.5|{0|}14919|}365|325|}
{2010213001|XXGoport_dst_flow|610|0|975|0|{0|}365|196|}
{2010211001|XXGvertex_iport_iport|611|0|976|0|{0|in0|}199|366|}
{2010215002|XXGiport_binding_iport|612|0|978|0|{.5|.5|{0|}14918|}366|241|}
{2010214001|XXGiport_src_flow|613|0|979|0|{0|}366|194|}
{2010601001|XXGgraph_vertex_vertex|614|0|980|0|{Get_Last_Lookup_Record|}189|367|}
{2010605001|XXGgraph_legend_legend|615|0|982|0|{0|}367|368|}
{2010241001|XXGlegend_face_face|616|0|984|0|{}368|369|}
{2010605001|XXGgraph_legend_legend|617|0|986|0|{1|}367|370|}
{2010241001|XXGlegend_face_face|618|0|988|0|{}370|371|}
{2010605001|XXGgraph_legend_legend|619|0|990|0|{2|}367|372|}
{2010241001|XXGlegend_face_face|620|0|992|0|{}372|373|}
{2010605001|XXGgraph_legend_legend|621|0|994|0|{3|}367|374|}
{2010241001|XXGlegend_face_face|622|0|996|0|{}374|375|}
{2010604001|XXGgraph_flow_flow|623|0|998|0|{Flow_1|}367|376|}
{2010604001|XXGgraph_flow_flow|624|0|1000|0|{Flow_2|}367|377|}
{2010604001|XXGgraph_flow_flow|625|0|1002|0|{Flow_3|}367|378|}
{2010604001|XXGgraph_flow_flow|626|0|1004|0|{Flow_4|}367|379|}
{2010604001|XXGgraph_flow_flow|627|0|1006|0|{Flow_5|}367|380|}
{2010604001|XXGgraph_flow_flow|628|0|1008|0|{Flow_6|}367|381|}
{2010604001|XXGgraph_flow_flow|629|0|1010|0|{Flow_7|}367|382|}
{2010604001|XXGgraph_flow_flow|630|0|1012|0|{Flow_8|}367|383|}
{2010604001|XXGgraph_flow_flow|631|0|1014|0|{Flow_9|}367|384|}
{2010601001|XXGgraph_vertex_vertex|632|0|1016|0|{Dedup_Sorted|}367|385|}
{2010212001|XXGvertex_oport_oport|633|0|1018|0|{0|out|}385|386|}
{2010212001|XXGvertex_oport_oport|634|0|1020|0|{1|dup|}385|387|}
{2010213001|XXGoport_dst_flow|635|0|1022|0|{0|}387|383|}
{2010212001|XXGvertex_oport_oport|636|0|1023|0|{2|reject|}385|388|}
{2010212001|XXGvertex_oport_oport|637|0|1025|0|{3|error|}385|389|}
{2010212001|XXGvertex_oport_oport|638|0|1027|0|{4|log|}385|390|}
{2010211001|XXGvertex_iport_iport|639|0|1029|0|{0|in|}385|391|}
{2010214001|XXGiport_src_flow|640|0|1031|0|{0|}391|378|}
{2010006001|XXGobject_psameas_object|641|0|1032|0|{Layout|Layout|0|0|}385|230|}
{2010006001|XXGobject_psameas_object|642|0|1033|0|{dup_metadata|out_metadata|0|0|}385|392|}
{2010212001|XXGvertex_oport_oport|643|0|1035|0|{0|out|}392|393|}
{2010213001|XXGoport_dst_flow|644|0|1037|0|{0|}393|377|}
{2010212001|XXGvertex_oport_oport|645|0|1038|0|{1|deselect|}392|394|}
{2010213001|XXGoport_dst_flow|646|0|1040|0|{0|}394|384|}
{2010212001|XXGvertex_oport_oport|647|0|1041|0|{2|reject|}392|395|}
{2010212001|XXGvertex_oport_oport|648|0|1043|0|{3|error|}392|396|}
{2010212001|XXGvertex_oport_oport|649|0|1045|0|{4|log|}392|397|}
{2010211001|XXGvertex_iport_iport|650|0|1047|0|{0|in|}392|398|}
{2010214001|XXGiport_src_flow|651|0|1049|0|{0|}398|380|}
{2010006001|XXGobject_psameas_object|652|0|1050|0|{Layout|Layout|0|0|}392|230|}
{2010006001|XXGobject_psameas_object|653|0|1051|0|{deselect_metadata|out_metadata|0|0|}392|392|}
{2010006001|XXGobject_psameas_object|654|0|1052|0|{in_metadata|out_metadata|0|0|}392|399|}
{2010212001|XXGvertex_oport_oport|655|0|1054|0|{0|out|}399|400|}
{2010213001|XXGoport_dst_flow|656|0|1056|0|{0|}400|401|}
{2010212001|XXGvertex_oport_oport|657|0|1058|0|{1|deselect|}399|402|}
{2010213001|XXGoport_dst_flow|658|0|1060|0|{0|}402|403|}
{2010212001|XXGvertex_oport_oport|659|0|1062|0|{2|reject|}399|404|}
{2010212001|XXGvertex_oport_oport|660|0|1064|0|{3|error|}399|405|}
{2010212001|XXGvertex_oport_oport|661|0|1066|0|{4|log|}399|406|}
{2010211001|XXGvertex_iport_iport|662|0|1068|0|{0|in|}399|407|}
{2010006001|XXGobject_psameas_object|663|0|1070|0|{Layout|Layout|0|0|}399|230|}
{2010006001|XXGobject_psameas_object|664|0|1071|0|{in_metadata|out0_metadata|0|0|}399|408|}
{2010212001|XXGvertex_oport_oport|665|0|1073|0|{0|out0|}408|409|}
{2010213001|XXGoport_dst_flow|666|0|1075|0|{0|}409|379|}
{2010212001|XXGvertex_oport_oport|667|0|1076|0|{1|reject0|}408|410|}
{2010212001|XXGvertex_oport_oport|668|0|1078|0|{2|error0|}408|411|}
{2010212001|XXGvertex_oport_oport|669|0|1080|0|{3|log|}408|412|}
{2010211001|XXGvertex_iport_iport|670|0|1082|0|{0|in|}408|413|}
{2010214001|XXGiport_src_flow|671|0|1084|0|{0|}413|381|}
{2010006001|XXGobject_psameas_object|672|0|1085|0|{Layout|Layout|0|0|}408|230|}
{2010006001|XXGobject_psameas_object|673|0|1086|0|{in_metadata|out0_metadata|0|0|}408|414|}
{2010212001|XXGvertex_oport_oport|674|0|1088|0|{0|out0|}414|415|}
{2010213001|XXGoport_dst_flow|675|0|1090|0|{0|}415|376|}
{2010212001|XXGvertex_oport_oport|676|0|1091|0|{1|reject0|}414|416|}
{2010212001|XXGvertex_oport_oport|677|0|1093|0|{2|error0|}414|417|}
{2010212001|XXGvertex_oport_oport|678|0|1095|0|{3|log|}414|418|}
{2010211001|XXGvertex_iport_iport|679|0|1097|0|{0|in|}414|419|}
{2010006001|XXGobject_psameas_object|680|0|1099|0|{Layout|Layout|0|0|}414|242|}
{2010006001|XXGobject_psameas_object|681|0|1100|0|{in_metadata|out9_metadata|0|0|}414|242|}
{2010006001|XXGobject_psameas_object|682|0|1101|0|{reject0_metadata|out9_metadata|0|0|}414|242|}
{2010006001|XXGobject_psameas_object|683|0|1102|0|{reject0_metadata|out0_metadata|0|0|}408|414|}
{2010006001|XXGobject_psameas_object|684|0|1103|0|{reject_metadata|out0_metadata|0|0|}399|408|}
{2010006001|XXGobject_psameas_object|685|0|1104|0|{reject_metadata|out_metadata|0|0|}392|399|}
{2010006001|XXGobject_psameas_object|686|0|1105|0|{in_metadata|out_metadata|0|0|}385|392|}
{2010006001|XXGobject_psameas_object|687|0|1106|0|{out_metadata|out_metadata|0|0|}385|392|}
{2010006001|XXGobject_psameas_object|688|0|1107|0|{reject_metadata|out_metadata|0|0|}385|392|}
{2010601001|XXGgraph_vertex_vertex|689|0|1108|0|{FBE_filter_matching_lkp_record|}367|392|}
{2010601001|XXGgraph_vertex_vertex|690|0|1109|0|{RFMT_Get_Hash_On_NK|}367|414|}
{2010601001|XXGgraph_vertex_vertex|691|0|1110|0|{RFMT_Lookup_with_IDS|}367|408|}
{2010601001|XXGgraph_vertex_vertex|692|0|1111|0|{Sort_De_dup|}367|420|}
{2010604001|XXGgraph_flow_flow|693|0|1113|0|{Flow_10|}420|421|}
{2010604001|XXGgraph_flow_flow|694|0|1115|0|{Flow_4|}420|422|}
{2010244001|XXGflow_watcher_watcher|695|0|1117|0|{}422|423|}
{2010601001|XXGgraph_vertex_vertex|696|0|1119|0|{Dedup_Sorted_1|}420|424|}
{2010212001|XXGvertex_oport_oport|697|0|1121|0|{0|out|}424|425|}
{2010212001|XXGvertex_oport_oport|698|0|1123|0|{1|dup|}424|426|}
{2010212001|XXGvertex_oport_oport|699|0|1125|0|{2|reject|}424|427|}
{2010212001|XXGvertex_oport_oport|700|0|1127|0|{3|error|}424|428|}
{2010212001|XXGvertex_oport_oport|701|0|1129|0|{4|log|}424|429|}
{2010211001|XXGvertex_iport_iport|702|0|1131|0|{0|in|}424|430|}
{2010214001|XXGiport_src_flow|703|0|1133|0|{0|}430|421|}
{2010006001|XXGobject_psameas_object|704|0|1134|0|{Layout|Layout|0|0|}424|230|}
{2010006001|XXGobject_psameas_object|705|0|1135|0|{dup_metadata|out0_metadata|0|0|}424|414|}
{2010006001|XXGobject_psameas_object|706|0|1136|0|{in_metadata|out0_metadata|0|0|}424|414|}
{2010006001|XXGobject_psameas_object|707|0|1137|0|{out_metadata|out0_metadata|0|0|}424|414|}
{2010006001|XXGobject_psameas_object|708|0|1138|0|{reject_metadata|out0_metadata|0|0|}424|414|}
{2010601001|XXGgraph_vertex_vertex|709|0|1139|0|{PBKS_dxf_hk_part1_|}420|431|}
{2010604001|XXGgraph_flow_flow|710|0|1141|0|{Flow_1|}431|432|}
{2010601001|XXGgraph_vertex_vertex|711|0|1143|0|{Partition_by_Key|}431|433|}
{2010212001|XXGvertex_oport_oport|712|0|1145|0|{0|out|}433|434|}
{2010213001|XXGoport_dst_flow|713|0|1147|0|{0|}434|432|}
{2010211001|XXGvertex_iport_iport|714|0|1148|0|{0|in|}433|435|}
{2010006001|XXGobject_psameas_object|715|0|1150|0|{in_metadata|out0_metadata|0|0|}433|414|}
{2010006001|XXGobject_psameas_object|716|0|1151|0|{out_metadata|out0_metadata|0|0|}433|414|}
{2010601001|XXGgraph_vertex_vertex|717|0|1152|0|{Sort|}431|436|}
{2010212001|XXGvertex_oport_oport|718|0|1154|0|{0|out|}436|437|}
{2010211001|XXGvertex_iport_iport|719|0|1156|0|{0|in|}436|438|}
{2010214001|XXGiport_src_flow|720|0|1158|0|{0|}438|432|}
{2010006001|XXGobject_psameas_object|721|0|1159|0|{in_metadata|out0_metadata|0|0|}436|414|}
{2010006001|XXGobject_psameas_object|722|0|1160|0|{out_metadata|out0_metadata|0|0|}436|414|}
{2010212001|XXGvertex_oport_oport|723|0|1161|0|{0|out0|}431|439|}
{2010216002|XXGoport_binding_oport|724|0|1163|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}439|437|}
{2010213001|XXGoport_dst_flow|725|0|1164|0|{0|}439|422|}
{2010211001|XXGvertex_iport_iport|726|0|1165|0|{0|in0|}431|440|}
{2010215002|XXGiport_binding_iport|727|0|1167|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}440|435|}
{2010006001|XXGobject_psameas_object|728|0|1168|0|{InputLayout|Layout|0|0|}431|242|}
{2010006001|XXGobject_psameas_object|729|0|1169|0|{OutputLayout|Layout|0|0|}431|230|}
{2010601001|XXGgraph_vertex_vertex|730|0|1170|0|{Sort_within_Groups_1|}420|441|}
{2010212001|XXGvertex_oport_oport|731|0|1172|0|{0|out|}441|442|}
{2010213001|XXGoport_dst_flow|732|0|1174|0|{0|}442|421|}
{2010211001|XXGvertex_iport_iport|733|0|1175|0|{0|in|}441|443|}
{2010214001|XXGiport_src_flow|734|0|1177|0|{0|}443|422|}
{2010006001|XXGobject_psameas_object|735|0|1178|0|{Layout|Layout|0|0|}441|230|}
{2010006001|XXGobject_psameas_object|736|0|1179|0|{in_metadata|out0_metadata|0|0|}441|414|}
{2010006001|XXGobject_psameas_object|737|0|1180|0|{out_metadata|out0_metadata|0|0|}441|414|}
{2010212001|XXGvertex_oport_oport|738|0|1181|0|{0|out0|}420|444|}
{2010216002|XXGoport_binding_oport|739|0|1183|0|{.5|.5|{0|}7792|}444|425|}
{2010213001|XXGoport_dst_flow|740|0|1184|0|{0|}444|381|}
{2010212001|XXGvertex_oport_oport|741|0|1185|0|{1|out1|}420|445|}
{2010216002|XXGoport_binding_oport|742|0|1187|0|{.5|.5|{0|}7793|}445|426|}
{2010213001|XXGoport_dst_flow|743|0|1188|0|{0|}445|382|}
{2010211001|XXGvertex_iport_iport|744|0|1189|0|{0|in0|}420|446|}
{2010215002|XXGiport_binding_iport|745|0|1191|0|{.5|.5|{0|}7791|}446|440|}
{2010214001|XXGiport_src_flow|746|0|1192|0|{0|}446|376|}
{2010601001|XXGgraph_vertex_vertex|747|0|1193|0|{Sort_within_Groups|}367|447|}
{2010212001|XXGvertex_oport_oport|748|0|1195|0|{0|out|}447|448|}
{2010213001|XXGoport_dst_flow|749|0|1197|0|{0|}448|378|}
{2010211001|XXGvertex_iport_iport|750|0|1198|0|{0|in|}447|449|}
{2010214001|XXGiport_src_flow|751|0|1200|0|{0|}449|377|}
{2010006001|XXGobject_psameas_object|752|0|1201|0|{Layout|Layout|0|0|}447|230|}
{2010006001|XXGobject_psameas_object|753|0|1202|0|{in_metadata|out_metadata|0|0|}447|392|}
{2010006001|XXGobject_psameas_object|754|0|1203|0|{out_metadata|out_metadata|0|0|}447|392|}
{2010601001|XXGgraph_vertex_vertex|755|0|1204|0|{Trash|}367|450|}
{2010211001|XXGvertex_iport_iport|756|0|1206|0|{0|in|}450|451|}
{2010214001|XXGiport_src_flow|757|0|1208|0|{0|}451|382|}
{2010006001|XXGobject_psameas_object|758|0|1209|0|{Layout|Layout|0|0|}450|230|}
{2010006001|XXGobject_psameas_object|759|0|1210|0|{in_metadata|out0_metadata|0|0|}450|414|}
{2010601001|XXGgraph_vertex_vertex|760|0|1211|0|{Trash_1|}367|452|}
{2010211001|XXGvertex_iport_iport|761|0|1213|0|{0|in|}452|453|}
{2010214001|XXGiport_src_flow|762|0|1215|0|{0|}453|383|}
{2010006001|XXGobject_psameas_object|763|0|1216|0|{Layout|Layout|0|0|}452|230|}
{2010006001|XXGobject_psameas_object|764|0|1217|0|{in_metadata|out_metadata|0|0|}452|392|}
{2010601001|XXGgraph_vertex_vertex|765|0|1218|0|{Trash_2|}367|454|}
{2010211001|XXGvertex_iport_iport|766|0|1220|0|{0|in|}454|455|}
{2010214001|XXGiport_src_flow|767|0|1222|0|{0|}455|384|}
{2010006001|XXGobject_psameas_object|768|0|1223|0|{Layout|Layout|0|0|}454|230|}
{2010006001|XXGobject_psameas_object|769|0|1224|0|{in_metadata|out_metadata|0|0|}454|392|}
{2010601001|XXGgraph_vertex_vertex|770|0|1225|0|{Two_Step_Lookup|}367|456|}
{2010605001|XXGgraph_legend_legend|771|0|1227|0|{0|}456|457|}
{2010241001|XXGlegend_face_face|772|0|1229|0|{}457|458|}
{2010604001|XXGgraph_flow_flow|773|0|1231|0|{Flow_1|}456|403|}
{2010604001|XXGgraph_flow_flow|774|0|1232|0|{Flow_2|}456|459|}
{2010604001|XXGgraph_flow_flow|775|0|1234|0|{Flow_3|}456|401|}
{2010604001|XXGgraph_flow_flow|776|0|1235|0|{Flow_4|}456|460|}
{2010604001|XXGgraph_flow_flow|777|0|1237|0|{Flow_5|}456|461|}
{2010604001|XXGgraph_flow_flow|778|0|1239|0|{Flow_6|}456|462|}
{2010601001|XXGgraph_vertex_vertex|779|0|1241|0|{FBE_Pass_Only_Matching_Rec|}456|463|}
{2010212001|XXGvertex_oport_oport|780|0|1243|0|{0|out|}463|464|}
{2010213001|XXGoport_dst_flow|781|0|1245|0|{0|}464|461|}
{2010212001|XXGvertex_oport_oport|782|0|1246|0|{1|deselect|}463|465|}
{2010213001|XXGoport_dst_flow|783|0|1248|0|{0|}465|462|}
{2010212001|XXGvertex_oport_oport|784|0|1249|0|{2|reject|}463|466|}
{2010212001|XXGvertex_oport_oport|785|0|1251|0|{3|error|}463|467|}
{2010212001|XXGvertex_oport_oport|786|0|1253|0|{4|log|}463|468|}
{2010211001|XXGvertex_iport_iport|787|0|1255|0|{0|in|}463|469|}
{2010214001|XXGiport_src_flow|788|0|1257|0|{0|}469|460|}
{2010006001|XXGobject_psameas_object|789|0|1258|0|{Layout|Layout|0|0|}463|230|}
{2010006001|XXGobject_psameas_object|790|0|1259|0|{deselect_metadata|out_metadata|0|0|}463|399|}
{2010006001|XXGobject_psameas_object|791|0|1260|0|{in_metadata|out0_metadata|0|0|}463|470|}
{2010212001|XXGvertex_oport_oport|792|0|1262|0|{0|out0|}470|471|}
{2010213001|XXGoport_dst_flow|793|0|1264|0|{0|}471|460|}
{2010212001|XXGvertex_oport_oport|794|0|1265|0|{1|reject0|}470|472|}
{2010212001|XXGvertex_oport_oport|795|0|1267|0|{2|error0|}470|473|}
{2010212001|XXGvertex_oport_oport|796|0|1269|0|{3|log|}470|474|}
{2010211001|XXGvertex_iport_iport|797|0|1271|0|{0|in|}470|475|}
{2010214001|XXGiport_src_flow|798|0|1273|0|{0|}475|459|}
{2010006001|XXGobject_psameas_object|799|0|1274|0|{Layout|Layout|0|0|}470|230|}
{2010006001|XXGobject_psameas_object|800|0|1275|0|{in_metadata|out0_metadata|0|0|}470|476|}
{2010212001|XXGvertex_oport_oport|801|0|1277|0|{0|out0|}476|477|}
{2010213001|XXGoport_dst_flow|802|0|1279|0|{0|}477|459|}
{2010212001|XXGvertex_oport_oport|803|0|1280|0|{1|reject0|}476|478|}
{2010212001|XXGvertex_oport_oport|804|0|1282|0|{2|error0|}476|479|}
{2010212001|XXGvertex_oport_oport|805|0|1284|0|{3|log|}476|480|}
{2010211001|XXGvertex_iport_iport|806|0|1286|0|{0|in|}476|481|}
{2010214001|XXGiport_src_flow|807|0|1288|0|{0|}481|403|}
{2010006001|XXGobject_psameas_object|808|0|1289|0|{Layout|Layout|0|0|}476|230|}
{2010006001|XXGobject_psameas_object|809|0|1290|0|{in_metadata|deselect_metadata|0|0|}476|399|}
{2010006001|XXGobject_psameas_object|810|0|1291|0|{reject0_metadata|deselect_metadata|0|0|}476|399|}
{2010006001|XXGobject_psameas_object|811|0|1292|0|{reject0_metadata|out0_metadata|0|0|}470|476|}
{2010006001|XXGobject_psameas_object|812|0|1293|0|{out_metadata|out_metadata|0|0|}463|399|}
{2010006001|XXGobject_psameas_object|813|0|1294|0|{reject_metadata|out0_metadata|0|0|}463|470|}
{2010601001|XXGgraph_vertex_vertex|814|0|1295|0|{FBE_filter_matching_lkp_record|}456|399|}
{2010601001|XXGgraph_vertex_vertex|815|0|1296|0|{Merge|}456|482|}
{2010212001|XXGvertex_oport_oport|816|0|1298|0|{0|out|}482|483|}
{2010211001|XXGvertex_iport_iport|817|0|1300|0|{0|in|}482|484|}
{2010214001|XXGiport_src_flow|818|0|1302|0|{0|}484|401|}
{2010214001|XXGiport_src_flow|819|0|1303|0|{1|}484|461|}
{2010006001|XXGobject_psameas_object|820|0|1304|0|{Layout|Layout|0|0|}482|230|}
{2010006001|XXGobject_psameas_object|821|0|1305|0|{in_metadata|out_metadata|0|0|}482|399|}
{2010006001|XXGobject_psameas_object|822|0|1306|0|{out_metadata|out_metadata|0|0|}482|399|}
{2010601001|XXGgraph_vertex_vertex|823|0|1307|0|{No_Match_Record_In_Second_Pass|}456|485|}
{2010211001|XXGvertex_iport_iport|824|0|1309|0|{0|in|}485|486|}
{2010214001|XXGiport_src_flow|825|0|1311|0|{0|}486|462|}
{2010006001|XXGobject_psameas_object|826|0|1312|0|{Layout|Layout|0|0|}485|230|}
{2010006001|XXGobject_psameas_object|827|0|1313|0|{in_metadata|out_metadata|0|0|}485|399|}
{2010601001|XXGgraph_vertex_vertex|828|0|1314|0|{RFMT_Lookup_with_IDS_Archive_|}456|470|}
{2010601001|XXGgraph_vertex_vertex|829|0|1315|0|{RFMT_Pass_only_Hash_Keys|}456|476|}
{2010212001|XXGvertex_oport_oport|830|0|1316|0|{0|out0|}456|487|}
{2010216002|XXGoport_binding_oport|831|0|1318|0|{.5|.5|{0|}15500|}487|483|}
{2010213001|XXGoport_dst_flow|832|0|1319|0|{0|}487|380|}
{2010211001|XXGvertex_iport_iport|833|0|1320|0|{0|in0|}456|488|}
{2010215002|XXGiport_binding_iport|834|0|1322|0|{.5|.5|{0|}15499|}488|407|}
{2010214001|XXGiport_src_flow|835|0|1323|0|{0|}488|379|}
{2010212001|XXGvertex_oport_oport|836|0|1324|0|{0|out0|}367|489|}
{2010216002|XXGoport_binding_oport|837|0|1326|0|{.5|.5|{0|}15515|}489|386|}
{2010213001|XXGoport_dst_flow|838|0|1327|0|{0|}489|197|}
{2010211001|XXGvertex_iport_iport|839|0|1328|0|{0|in1|}367|490|}
{2010215002|XXGiport_binding_iport|840|0|1330|0|{.5|.5|{0|}15514|}490|419|}
{2010214001|XXGiport_src_flow|841|0|1331|0|{0|}490|195|}
{2010601001|XXGgraph_vertex_vertex|842|0|1332|0|{Merge|}189|491|}
{2010212001|XXGvertex_oport_oport|843|0|1334|0|{0|out|}491|492|}
{2010211001|XXGvertex_iport_iport|844|0|1336|0|{0|in|}491|493|}
{2010214001|XXGiport_src_flow|845|0|1338|0|{0|}493|198|}
{2010006001|XXGobject_psameas_object|846|0|1339|0|{Layout|Layout|0|0|}491|153|}
{2010006001|XXGobject_psameas_object|847|0|1340|0|{in_metadata|write_metadata|0|0|}491|153|}
{2010006001|XXGobject_psameas_object|848|0|1341|0|{out_metadata|write_metadata|0|0|}491|153|}
{2010601001|XXGgraph_vertex_vertex|849|0|1342|0|{Replicate|}189|494|}
{2010212001|XXGvertex_oport_oport|850|0|1344|0|{0|out|}494|495|}
{2010213001|XXGoport_dst_flow|851|0|1346|0|{0|}495|194|}
{2010213001|XXGoport_dst_flow|852|0|1347|0|{1|}495|195|}
{2010211001|XXGvertex_iport_iport|853|0|1348|0|{0|in|}494|496|}
{2010006001|XXGobject_psameas_object|854|0|1350|0|{Layout|Layout|0|0|}494|242|}
{2010006001|XXGobject_psameas_object|855|0|1351|0|{in_metadata|out9_metadata|0|0|}494|242|}
{2010006001|XXGobject_psameas_object|856|0|1352|0|{out_metadata|out9_metadata|0|0|}494|242|}
{2010601001|XXGgraph_vertex_vertex|857|0|1353|0|{Replicate_1|}189|497|}
{2010212001|XXGvertex_oport_oport|858|0|1355|0|{0|out|}497|498|}
{2010213001|XXGoport_dst_flow|859|0|1357|0|{0|}498|198|}
{2010211001|XXGvertex_iport_iport|860|0|1358|0|{0|in|}497|499|}
{2010214001|XXGiport_src_flow|861|0|1360|0|{0|}499|196|}
{2010214001|XXGiport_src_flow|862|0|1361|0|{1|}499|197|}
{2010006001|XXGobject_psameas_object|863|0|1362|0|{Layout|Layout|0|0|}497|230|}
{2010006001|XXGobject_psameas_object|864|0|1363|0|{in_metadata|out_metadata|0|0|}497|392|}
{2010006001|XXGobject_psameas_object|865|0|1364|0|{out_metadata|out_metadata|0|0|}497|392|}
{2010212001|XXGvertex_oport_oport|866|0|1365|0|{0|out0|}189|500|}
{2010216002|XXGoport_binding_oport|867|0|1367|0|{.5|.5|{0|}7802|}500|492|}
{2010213001|XXGoport_dst_flow|868|0|1368|0|{0|}500|149|}
{2010211001|XXGvertex_iport_iport|869|0|1369|0|{0|in0|}189|501|}
{2010215002|XXGiport_binding_iport|870|0|1371|0|{.5|.5|{0|}7801|}501|496|}
{2010007001|XXGobject_proto_object|871|0|1372|0|{}189|502|}
{2010605001|XXGgraph_legend_legend|872|0|1374|0|{0|}502|503|}
{2010241001|XXGlegend_face_face|873|0|1376|0|{}503|504|}
{2010605001|XXGgraph_legend_legend|874|0|1378|0|{1|}502|505|}
{2010241001|XXGlegend_face_face|875|0|1380|0|{}505|506|}
{2010604001|XXGgraph_flow_flow|876|0|1382|0|{Flow_1|}502|507|}
{2010604001|XXGgraph_flow_flow|877|0|1384|0|{Flow_2|}502|508|}
{2010604001|XXGgraph_flow_flow|878|0|1386|0|{Flow_3|}502|509|}
{2010604001|XXGgraph_flow_flow|879|0|1388|0|{Flow_4|}502|510|}
{2010604001|XXGgraph_flow_flow|880|0|1390|0|{Flow_5|}502|511|}
{2010601001|XXGgraph_vertex_vertex|881|0|1392|0|{Get_All_LookUp_Record|}502|512|}
{2010605001|XXGgraph_legend_legend|882|0|1394|0|{0|}512|513|}
{2010241001|XXGlegend_face_face|883|0|1396|0|{}513|514|}
{2010605001|XXGgraph_legend_legend|884|0|1398|0|{1|}512|515|}
{2010241001|XXGlegend_face_face|885|0|1400|0|{}515|516|}
{2010605001|XXGgraph_legend_legend|886|0|1402|0|{2|}512|517|}
{2010241001|XXGlegend_face_face|887|0|1404|0|{}517|518|}
{2010605001|XXGgraph_legend_legend|888|0|1406|0|{3|}512|519|}
{2010241001|XXGlegend_face_face|889|0|1408|0|{}519|520|}
{2010605001|XXGgraph_legend_legend|890|0|1410|0|{4|}512|521|}
{2010241001|XXGlegend_face_face|891|0|1412|0|{}521|522|}
{2010604001|XXGgraph_flow_flow|892|0|1414|0|{Flow_1|}512|523|}
{2010604001|XXGgraph_flow_flow|893|0|1416|0|{Flow_10|}512|524|}
{2010604001|XXGgraph_flow_flow|894|0|1418|0|{Flow_11|}512|525|}
{2010604001|XXGgraph_flow_flow|895|0|1420|0|{Flow_12|}512|526|}
{2010604001|XXGgraph_flow_flow|896|0|1422|0|{Flow_18|}512|527|}
{2010604001|XXGgraph_flow_flow|897|0|1424|0|{Flow_2|}512|528|}
{2010604001|XXGgraph_flow_flow|898|0|1426|0|{Flow_3|}512|529|}
{2010604001|XXGgraph_flow_flow|899|0|1428|0|{Flow_4|}512|530|}
{2010604001|XXGgraph_flow_flow|900|0|1430|0|{Flow_5|}512|531|}
{2010604001|XXGgraph_flow_flow|901|0|1432|0|{Flow_6|}512|532|}
{2010604001|XXGgraph_flow_flow|902|0|1434|0|{Flow_7|}512|533|}
{2010604001|XXGgraph_flow_flow|903|0|1436|0|{Flow_8|}512|534|}
{2010604001|XXGgraph_flow_flow|904|0|1438|0|{Flow_9|}512|535|}
{2010601001|XXGgraph_vertex_vertex|905|0|1440|0|{Dedup_Sorted|}512|536|}
{2010212001|XXGvertex_oport_oport|906|0|1442|0|{0|out|}536|537|}
{2010213001|XXGoport_dst_flow|907|0|1444|0|{0|}537|528|}
{2010212001|XXGvertex_oport_oport|908|0|1445|0|{1|dup|}536|538|}
{2010213001|XXGoport_dst_flow|909|0|1447|0|{0|}538|532|}
{2010212001|XXGvertex_oport_oport|910|0|1448|0|{2|reject|}536|539|}
{2010212001|XXGvertex_oport_oport|911|0|1450|0|{3|error|}536|540|}
{2010212001|XXGvertex_oport_oport|912|0|1452|0|{4|log|}536|541|}
{2010211001|XXGvertex_iport_iport|913|0|1454|0|{0|in|}536|542|}
{2010214001|XXGiport_src_flow|914|0|1456|0|{0|}542|523|}
{2010007001|XXGobject_proto_object|915|0|1457|0|{}536|543|}
{2010212001|XXGvertex_oport_oport|916|0|1459|0|{0|out|}543|544|}
{2010006001|XXGobject_psameas_object|917|0|1461|0|{metadata|out_metadata|1|0|}544|543|}
{2010212001|XXGvertex_oport_oport|918|0|1462|0|{1|dup|}543|545|}
{2010006001|XXGobject_psameas_object|919|0|1464|0|{metadata|dup_metadata|1|0|}545|543|}
{2010212001|XXGvertex_oport_oport|920|0|1465|0|{2|reject|}543|546|}
{2010006001|XXGobject_psameas_object|921|0|1467|0|{metadata|reject_metadata|1|0|}546|543|}
{2010212001|XXGvertex_oport_oport|922|0|1468|0|{3|error|}543|547|}
{2010006001|XXGobject_psameas_object|923|0|1470|0|{metadata|error_metadata|1|0|}547|543|}
{2010212001|XXGvertex_oport_oport|924|0|1471|0|{4|log|}543|548|}
{2010006001|XXGobject_psameas_object|925|0|1473|0|{metadata|log_metadata|1|0|}548|543|}
{2010211001|XXGvertex_iport_iport|926|0|1474|0|{0|in|}543|549|}
{2010006001|XXGobject_psameas_object|927|0|1476|0|{metadata|in_metadata|1|0|}549|543|}
{2010601001|XXGgraph_vertex_vertex|928|0|1477|0|{FBE_Filter_match_records|}512|550|}
{2010212001|XXGvertex_oport_oport|929|0|1479|0|{0|out|}550|551|}
{2010213001|XXGoport_dst_flow|930|0|1481|0|{0|}551|525|}
{2010212001|XXGvertex_oport_oport|931|0|1482|0|{1|deselect|}550|552|}
{2010213001|XXGoport_dst_flow|932|0|1484|0|{0|}552|533|}
{2010212001|XXGvertex_oport_oport|933|0|1485|0|{2|reject|}550|553|}
{2010212001|XXGvertex_oport_oport|934|0|1487|0|{3|error|}550|554|}
{2010212001|XXGvertex_oport_oport|935|0|1489|0|{4|log|}550|555|}
{2010211001|XXGvertex_iport_iport|936|0|1491|0|{0|in|}550|556|}
{2010214001|XXGiport_src_flow|937|0|1493|0|{0|}556|534|}
{2010007001|XXGobject_proto_object|938|0|1494|0|{}550|557|}
{2010212001|XXGvertex_oport_oport|939|0|1496|0|{0|out|}557|558|}
{2010006001|XXGobject_psameas_object|940|0|1498|0|{metadata|out_metadata|1|0|}558|557|}
{2010212001|XXGvertex_oport_oport|941|0|1499|0|{1|deselect|}557|559|}
{2010006001|XXGobject_psameas_object|942|0|1501|0|{metadata|deselect_metadata|1|0|}559|557|}
{2010212001|XXGvertex_oport_oport|943|0|1502|0|{2|reject|}557|560|}
{2010006001|XXGobject_psameas_object|944|0|1504|0|{metadata|reject_metadata|1|0|}560|557|}
{2010212001|XXGvertex_oport_oport|945|0|1505|0|{3|error|}557|561|}
{2010006001|XXGobject_psameas_object|946|0|1507|0|{metadata|error_metadata|1|0|}561|557|}
{2010212001|XXGvertex_oport_oport|947|0|1508|0|{4|log|}557|562|}
{2010006001|XXGobject_psameas_object|948|0|1510|0|{metadata|log_metadata|1|0|}562|557|}
{2010211001|XXGvertex_iport_iport|949|0|1511|0|{0|in|}557|563|}
{2010006001|XXGobject_psameas_object|950|0|1513|0|{metadata|in_metadata|1|0|}563|557|}
{2010601001|XXGgraph_vertex_vertex|951|0|1514|0|{Get_Hash_on_SRC_NK|}512|564|}
{2010212001|XXGvertex_oport_oport|952|0|1516|0|{0|out0|}564|565|}
{2010213001|XXGoport_dst_flow|953|0|1518|0|{0|}565|527|}
{2010212001|XXGvertex_oport_oport|954|0|1519|0|{1|reject0|}564|566|}
{2010212001|XXGvertex_oport_oport|955|0|1521|0|{2|error0|}564|567|}
{2010212001|XXGvertex_oport_oport|956|0|1523|0|{3|log|}564|568|}
{2010211001|XXGvertex_iport_iport|957|0|1525|0|{0|in|}564|569|}
{2010007001|XXGobject_proto_object|958|0|1527|0|{}564|570|}
{2010212001|XXGvertex_oport_oport|959|0|1529|0|{0|out0|}570|571|}
{2010006001|XXGobject_psameas_object|960|0|1531|0|{metadata|out0_metadata|1|0|}571|570|}
{2010006001|XXGobject_psameas_object|961|0|1532|0|{transform0|transform0|1|0|}571|570|}
{2010212001|XXGvertex_oport_oport|962|0|1533|0|{1|reject0|}570|572|}
{2010006001|XXGobject_psameas_object|963|0|1535|0|{metadata|reject0_metadata|1|0|}572|570|}
{2010212001|XXGvertex_oport_oport|964|0|1536|0|{2|error0|}570|573|}
{2010006001|XXGobject_psameas_object|965|0|1538|0|{metadata|error0_metadata|1|0|}573|570|}
{2010212001|XXGvertex_oport_oport|966|0|1539|0|{3|log|}570|574|}
{2010006001|XXGobject_psameas_object|967|0|1541|0|{metadata|log_metadata|1|0|}574|570|}
{2010211001|XXGvertex_iport_iport|968|0|1542|0|{0|in|}570|575|}
{2010006001|XXGobject_psameas_object|969|0|1544|0|{metadata|in_metadata|1|0|}575|570|}
{2010601001|XXGgraph_vertex_vertex|970|0|1545|0|{Merge|}512|576|}
{2010212001|XXGvertex_oport_oport|971|0|1547|0|{0|out|}576|577|}
{2010213001|XXGoport_dst_flow|972|0|1549|0|{0|}577|534|}
{2010211001|XXGvertex_iport_iport|973|0|1550|0|{0|in|}576|578|}
{2010214001|XXGiport_src_flow|974|0|1552|0|{0|}578|529|}
{2010214001|XXGiport_src_flow|975|0|1553|0|{1|}578|526|}
{2010007001|XXGobject_proto_object|976|0|1554|0|{}576|579|}
{2010212001|XXGvertex_oport_oport|977|0|1556|0|{0|out|}579|580|}
{2010006001|XXGobject_psameas_object|978|0|1558|0|{metadata|out_metadata|1|0|}580|579|}
{2010211001|XXGvertex_iport_iport|979|0|1559|0|{0|in|}579|581|}
{2010006001|XXGobject_psameas_object|980|0|1561|0|{metadata|in_metadata|1|0|}581|579|}
{2010601001|XXGgraph_vertex_vertex|981|0|1562|0|{Normalize_Get_all_records_from_Archive_Lkp|}512|582|}
{2010212001|XXGvertex_oport_oport|982|0|1564|0|{0|out|}582|583|}
{2010213001|XXGoport_dst_flow|983|0|1566|0|{0|}583|526|}
{2010212001|XXGvertex_oport_oport|984|0|1567|0|{1|reject|}582|584|}
{2010212001|XXGvertex_oport_oport|985|0|1569|0|{2|error|}582|585|}
{2010212001|XXGvertex_oport_oport|986|0|1571|0|{3|log|}582|586|}
{2010211001|XXGvertex_iport_iport|987|0|1573|0|{0|in|}582|587|}
{2010214001|XXGiport_src_flow|988|0|1575|0|{0|}587|524|}
{2010007001|XXGobject_proto_object|989|0|1576|0|{}582|588|}
{2010212001|XXGvertex_oport_oport|990|0|1578|0|{0|out|}588|589|}
{2010006001|XXGobject_psameas_object|991|0|1580|0|{metadata|out_metadata|1|0|}589|588|}
{2010212001|XXGvertex_oport_oport|992|0|1581|0|{1|reject|}588|590|}
{2010006001|XXGobject_psameas_object|993|0|1583|0|{metadata|reject_metadata|1|0|}590|588|}
{2010212001|XXGvertex_oport_oport|994|0|1584|0|{2|error|}588|591|}
{2010006001|XXGobject_psameas_object|995|0|1586|0|{metadata|error_metadata|1|0|}591|588|}
{2010212001|XXGvertex_oport_oport|996|0|1587|0|{3|log|}588|592|}
{2010006001|XXGobject_psameas_object|997|0|1589|0|{metadata|log_metadata|1|0|}592|588|}
{2010211001|XXGvertex_iport_iport|998|0|1590|0|{0|in|}588|593|}
{2010006001|XXGobject_psameas_object|999|0|1592|0|{metadata|in_metadata|1|0|}593|588|}
{2010601001|XXGgraph_vertex_vertex|1000|0|1593|0|{Normalize_Get_all_records_from_lkp|}512|594|}
{2010212001|XXGvertex_oport_oport|1001|0|1595|0|{0|out|}594|595|}
{2010213001|XXGoport_dst_flow|1002|0|1597|0|{0|}595|529|}
{2010212001|XXGvertex_oport_oport|1003|0|1598|0|{1|reject|}594|596|}
{2010212001|XXGvertex_oport_oport|1004|0|1600|0|{2|error|}594|597|}
{2010212001|XXGvertex_oport_oport|1005|0|1602|0|{3|log|}594|598|}
{2010211001|XXGvertex_iport_iport|1006|0|1604|0|{0|in|}594|599|}
{2010214001|XXGiport_src_flow|1007|0|1606|0|{0|}599|531|}
{2010007001|XXGobject_proto_object|1008|0|1607|0|{}594|600|}
{2010212001|XXGvertex_oport_oport|1009|0|1609|0|{0|out|}600|601|}
{2010006001|XXGobject_psameas_object|1010|0|1611|0|{metadata|out_metadata|1|0|}601|600|}
{2010212001|XXGvertex_oport_oport|1011|0|1612|0|{1|reject|}600|602|}
{2010006001|XXGobject_psameas_object|1012|0|1614|0|{metadata|reject_metadata|1|0|}602|600|}
{2010212001|XXGvertex_oport_oport|1013|0|1615|0|{2|error|}600|603|}
{2010006001|XXGobject_psameas_object|1014|0|1617|0|{metadata|error_metadata|1|0|}603|600|}
{2010212001|XXGvertex_oport_oport|1015|0|1618|0|{3|log|}600|604|}
{2010006001|XXGobject_psameas_object|1016|0|1620|0|{metadata|log_metadata|1|0|}604|600|}
{2010211001|XXGvertex_iport_iport|1017|0|1621|0|{0|in|}600|605|}
{2010006001|XXGobject_psameas_object|1018|0|1623|0|{metadata|in_metadata|1|0|}605|600|}
{2010601001|XXGgraph_vertex_vertex|1019|0|1624|0|{Replicate|}512|606|}
{2010212001|XXGvertex_oport_oport|1020|0|1626|0|{0|out|}606|607|}
{2010211001|XXGvertex_iport_iport|1021|0|1628|0|{0|in|}606|608|}
{2010214001|XXGiport_src_flow|1022|0|1630|0|{0|}608|528|}
{2010007001|XXGobject_proto_object|1023|0|1631|0|{}606|609|}
{2010212001|XXGvertex_oport_oport|1024|0|1633|0|{0|out|}609|610|}
{2010006001|XXGobject_psameas_object|1025|0|1635|0|{metadata|out_metadata|1|0|}610|609|}
{2010211001|XXGvertex_iport_iport|1026|0|1636|0|{0|in|}609|611|}
{2010006001|XXGobject_psameas_object|1027|0|1638|0|{metadata|in_metadata|1|0|}611|609|}
{2010601001|XXGgraph_vertex_vertex|1028|0|1639|0|{Replicate_1|}512|612|}
{2010212001|XXGvertex_oport_oport|1029|0|1641|0|{0|out|}612|613|}
{2010213001|XXGoport_dst_flow|1030|0|1643|0|{0|}613|531|}
{2010213001|XXGoport_dst_flow|1031|0|1644|0|{1|}613|524|}
{2010211001|XXGvertex_iport_iport|1032|0|1645|0|{0|in|}612|614|}
{2010214001|XXGiport_src_flow|1033|0|1647|0|{0|}614|530|}
{2010007001|XXGobject_proto_object|1034|0|1648|0|{}612|615|}
{2010212001|XXGvertex_oport_oport|1035|0|1650|0|{0|out|}615|616|}
{2010006001|XXGobject_psameas_object|1036|0|1652|0|{metadata|out_metadata|1|0|}616|615|}
{2010211001|XXGvertex_iport_iport|1037|0|1653|0|{0|in|}615|617|}
{2010006001|XXGobject_psameas_object|1038|0|1655|0|{metadata|in_metadata|1|0|}617|615|}
{2010601001|XXGgraph_vertex_vertex|1039|0|1656|0|{Sort_Remove_Dup_On_Hash|}512|618|}
{2010604001|XXGgraph_flow_flow|1040|0|1658|0|{Flow_3|}618|619|}
{2010604001|XXGgraph_flow_flow|1041|0|1660|0|{Flow_5|}618|620|}
{2010601001|XXGgraph_vertex_vertex|1042|0|1662|0|{Dedup_Sorted_1|}618|621|}
{2010212001|XXGvertex_oport_oport|1043|0|1664|0|{0|out|}621|622|}
{2010212001|XXGvertex_oport_oport|1044|0|1666|0|{1|dup|}621|623|}
{2010212001|XXGvertex_oport_oport|1045|0|1668|0|{2|reject|}621|624|}
{2010212001|XXGvertex_oport_oport|1046|0|1670|0|{3|error|}621|625|}
{2010212001|XXGvertex_oport_oport|1047|0|1672|0|{4|log|}621|626|}
{2010211001|XXGvertex_iport_iport|1048|0|1674|0|{0|in|}621|627|}
{2010214001|XXGiport_src_flow|1049|0|1676|0|{0|}627|620|}
{2010007001|XXGobject_proto_object|1050|0|1677|0|{}621|628|}
{2010212001|XXGvertex_oport_oport|1051|0|1679|0|{0|out|}628|629|}
{2010006001|XXGobject_psameas_object|1052|0|1681|0|{metadata|out_metadata|1|0|}629|628|}
{2010212001|XXGvertex_oport_oport|1053|0|1682|0|{1|dup|}628|630|}
{2010006001|XXGobject_psameas_object|1054|0|1684|0|{metadata|dup_metadata|1|0|}630|628|}
{2010212001|XXGvertex_oport_oport|1055|0|1685|0|{2|reject|}628|631|}
{2010006001|XXGobject_psameas_object|1056|0|1687|0|{metadata|reject_metadata|1|0|}631|628|}
{2010212001|XXGvertex_oport_oport|1057|0|1688|0|{3|error|}628|632|}
{2010006001|XXGobject_psameas_object|1058|0|1690|0|{metadata|error_metadata|1|0|}632|628|}
{2010212001|XXGvertex_oport_oport|1059|0|1691|0|{4|log|}628|633|}
{2010006001|XXGobject_psameas_object|1060|0|1693|0|{metadata|log_metadata|1|0|}633|628|}
{2010211001|XXGvertex_iport_iport|1061|0|1694|0|{0|in|}628|634|}
{2010006001|XXGobject_psameas_object|1062|0|1696|0|{metadata|in_metadata|1|0|}634|628|}
{2010601001|XXGgraph_vertex_vertex|1063|0|1697|0|{PBKS_dxf_hk_part1_|}618|635|}
{2010604001|XXGgraph_flow_flow|1064|0|1699|0|{Flow_1|}635|636|}
{2010601001|XXGgraph_vertex_vertex|1065|0|1701|0|{Partition_by_Key|}635|637|}
{2010212001|XXGvertex_oport_oport|1066|0|1703|0|{0|out|}637|638|}
{2010213001|XXGoport_dst_flow|1067|0|1705|0|{0|}638|636|}
{2010211001|XXGvertex_iport_iport|1068|0|1706|0|{0|in|}637|639|}
{2010601001|XXGgraph_vertex_vertex|1069|0|1708|0|{Sort|}635|640|}
{2010212001|XXGvertex_oport_oport|1070|0|1710|0|{0|out|}640|641|}
{2010211001|XXGvertex_iport_iport|1071|0|1712|0|{0|in|}640|642|}
{2010214001|XXGiport_src_flow|1072|0|1714|0|{0|}642|636|}
{2010212001|XXGvertex_oport_oport|1073|0|1715|0|{0|out0|}635|643|}
{2010216002|XXGoport_binding_oport|1074|0|1717|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}643|641|}
{2010213001|XXGoport_dst_flow|1075|0|1718|0|{0|}643|619|}
{2010211001|XXGvertex_iport_iport|1076|0|1719|0|{0|in0|}635|644|}
{2010215002|XXGiport_binding_iport|1077|0|1721|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}644|639|}
{2010007001|XXGobject_proto_object|1078|0|1722|0|{}635|645|}
{2010604001|XXGgraph_flow_flow|1079|0|1724|0|{Flow_1|}645|646|}
{2010601001|XXGgraph_vertex_vertex|1080|0|1726|0|{Partition_by_Key|}645|647|}
{2010212001|XXGvertex_oport_oport|1081|0|1728|0|{0|out|}647|648|}
{2010213001|XXGoport_dst_flow|1082|0|1730|0|{0|}648|646|}
{2010211001|XXGvertex_iport_iport|1083|0|1731|0|{0|in|}647|649|}
{2010007001|XXGobject_proto_object|1084|0|1733|0|{}647|650|}
{2010212001|XXGvertex_oport_oport|1085|0|1735|0|{0|out|}650|651|}
{2010006001|XXGobject_psameas_object|1086|0|1737|0|{metadata|out_metadata|1|0|}651|650|}
{2010211001|XXGvertex_iport_iport|1087|0|1738|0|{0|in|}650|652|}
{2010006001|XXGobject_psameas_object|1088|0|1740|0|{metadata|in_metadata|1|0|}652|650|}
{2010006001|XXGobject_psameas_object|1089|0|1741|0|{Layout|InputLayout|1|0|}647|645|}
{2010006001|XXGobject_psameas_object|1090|0|1742|0|{key|Key|1|0|}647|645|}
{2010601001|XXGgraph_vertex_vertex|1091|0|1743|0|{Sort|}645|653|}
{2010212001|XXGvertex_oport_oport|1092|0|1745|0|{0|out|}653|654|}
{2010211001|XXGvertex_iport_iport|1093|0|1747|0|{0|in|}653|655|}
{2010214001|XXGiport_src_flow|1094|0|1749|0|{0|}655|646|}
{2010007001|XXGobject_proto_object|1095|0|1750|0|{}653|656|}
{2010212001|XXGvertex_oport_oport|1096|0|1752|0|{0|out|}656|657|}
{2010006001|XXGobject_psameas_object|1097|0|1754|0|{metadata|out_metadata|1|0|}657|656|}
{2010211001|XXGvertex_iport_iport|1098|0|1755|0|{0|in|}656|658|}
{2010006001|XXGobject_psameas_object|1099|0|1757|0|{metadata|in_metadata|1|0|}658|656|}
{2010006001|XXGobject_psameas_object|1100|0|1758|0|{Layout|OutputLayout|1|0|}653|645|}
{2010006001|XXGobject_psameas_object|1101|0|1759|0|{key|Key|1|0|}653|645|}
{2010006001|XXGobject_psameas_object|1102|0|1760|0|{max_core|Max_core|1|0|}653|645|}
{2010212001|XXGvertex_oport_oport|1103|0|1761|0|{0|out0|}645|659|}
{2010216002|XXGoport_binding_oport|1104|0|1763|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}659|654|}
{2010211001|XXGvertex_iport_iport|1105|0|1764|0|{0|in0|}645|660|}
{2010215002|XXGiport_binding_iport|1106|0|1766|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}660|649|}
{2010006001|XXGobject_psameas_object|1107|0|1767|0|{InputLayout|Layout|0|0|}635|564|}
{2010601001|XXGgraph_vertex_vertex|1108|0|1768|0|{Sort_within_Groups|}618|661|}
{2010212001|XXGvertex_oport_oport|1109|0|1770|0|{0|out|}661|662|}
{2010213001|XXGoport_dst_flow|1110|0|1772|0|{0|}662|620|}
{2010211001|XXGvertex_iport_iport|1111|0|1773|0|{0|in|}661|663|}
{2010214001|XXGiport_src_flow|1112|0|1775|0|{0|}663|619|}
{2010007001|XXGobject_proto_object|1113|0|1776|0|{}661|664|}
{2010212001|XXGvertex_oport_oport|1114|0|1778|0|{0|out|}664|665|}
{2010006001|XXGobject_psameas_object|1115|0|1780|0|{metadata|out_metadata|1|0|}665|664|}
{2010211001|XXGvertex_iport_iport|1116|0|1781|0|{0|in|}664|666|}
{2010006001|XXGobject_psameas_object|1117|0|1783|0|{metadata|in_metadata|1|0|}666|664|}
{2010212001|XXGvertex_oport_oport|1118|0|1784|0|{0|out0|}618|667|}
{2010216002|XXGoport_binding_oport|1119|0|1786|0|{.5|.5|{0|}14672|}667|622|}
{2010213001|XXGoport_dst_flow|1120|0|1787|0|{0|}667|530|}
{2010212001|XXGvertex_oport_oport|1121|0|1788|0|{1|out1|}618|668|}
{2010216002|XXGoport_binding_oport|1122|0|1790|0|{.5|.5|{0|}14673|}668|623|}
{2010213001|XXGoport_dst_flow|1123|0|1791|0|{0|}668|535|}
{2010211001|XXGvertex_iport_iport|1124|0|1792|0|{0|in0|}618|669|}
{2010215002|XXGiport_binding_iport|1125|0|1794|0|{.5|.5|{0|}14671|}669|644|}
{2010214001|XXGiport_src_flow|1126|0|1795|0|{0|}669|527|}
{2010601001|XXGgraph_vertex_vertex|1127|0|1796|0|{Sort_on_Adjusted_Natural_Keys|}512|670|}
{2010212001|XXGvertex_oport_oport|1128|0|1798|0|{0|out|}670|671|}
{2010213001|XXGoport_dst_flow|1129|0|1800|0|{0|}671|523|}
{2010211001|XXGvertex_iport_iport|1130|0|1801|0|{0|in|}670|672|}
{2010214001|XXGiport_src_flow|1131|0|1803|0|{0|}672|525|}
{2010007001|XXGobject_proto_object|1132|0|1804|0|{}670|673|}
{2010212001|XXGvertex_oport_oport|1133|0|1806|0|{0|out|}673|674|}
{2010006001|XXGobject_psameas_object|1134|0|1808|0|{metadata|out_metadata|1|0|}674|673|}
{2010211001|XXGvertex_iport_iport|1135|0|1809|0|{0|in|}673|675|}
{2010006001|XXGobject_psameas_object|1136|0|1811|0|{metadata|in_metadata|1|0|}675|673|}
{2010601001|XXGgraph_vertex_vertex|1137|0|1812|0|{Trash_1|}512|676|}
{2010211001|XXGvertex_iport_iport|1138|0|1814|0|{0|in|}676|677|}
{2010214001|XXGiport_src_flow|1139|0|1816|0|{0|}677|533|}
{2010007001|XXGobject_proto_object|1140|0|1817|0|{}676|678|}
{2010211001|XXGvertex_iport_iport|1141|0|1819|0|{0|in|}678|679|}
{2010006001|XXGobject_psameas_object|1142|0|1821|0|{metadata|in_metadata|1|0|}679|678|}
{2010601001|XXGgraph_vertex_vertex|1143|0|1822|0|{Trash_2|}512|680|}
{2010211001|XXGvertex_iport_iport|1144|0|1824|0|{0|in|}680|681|}
{2010214001|XXGiport_src_flow|1145|0|1826|0|{0|}681|532|}
{2010007001|XXGobject_proto_object|1146|0|1827|0|{}680|682|}
{2010211001|XXGvertex_iport_iport|1147|0|1829|0|{0|in|}682|683|}
{2010006001|XXGobject_psameas_object|1148|0|1831|0|{metadata|in_metadata|1|0|}683|682|}
{2010601001|XXGgraph_vertex_vertex|1149|0|1832|0|{Trash_3|}512|684|}
{2010211001|XXGvertex_iport_iport|1150|0|1834|0|{0|in|}684|685|}
{2010214001|XXGiport_src_flow|1151|0|1836|0|{0|}685|535|}
{2010007001|XXGobject_proto_object|1152|0|1837|0|{}684|686|}
{2010211001|XXGvertex_iport_iport|1153|0|1839|0|{0|in|}686|687|}
{2010006001|XXGobject_psameas_object|1154|0|1841|0|{metadata|in_metadata|1|0|}687|686|}
{2010212001|XXGvertex_oport_oport|1155|0|1842|0|{0|out0|}512|688|}
{2010216002|XXGoport_binding_oport|1156|0|1844|0|{.5|.5|{0|}14899|}688|607|}
{2010213001|XXGoport_dst_flow|1157|0|1845|0|{0|}688|509|}
{2010211001|XXGvertex_iport_iport|1158|0|1846|0|{0|in0|}512|689|}
{2010215002|XXGiport_binding_iport|1159|0|1848|0|{.5|.5|{0|}14898|}689|569|}
{2010214001|XXGiport_src_flow|1160|0|1849|0|{0|}689|507|}
{2010601001|XXGgraph_vertex_vertex|1161|0|1850|0|{Get_Last_Lookup_Record|}502|690|}
{2010605001|XXGgraph_legend_legend|1162|0|1852|0|{0|}690|691|}
{2010241001|XXGlegend_face_face|1163|0|1854|0|{}691|692|}
{2010605001|XXGgraph_legend_legend|1164|0|1856|0|{1|}690|693|}
{2010241001|XXGlegend_face_face|1165|0|1858|0|{}693|694|}
{2010605001|XXGgraph_legend_legend|1166|0|1860|0|{2|}690|695|}
{2010241001|XXGlegend_face_face|1167|0|1862|0|{}695|696|}
{2010605001|XXGgraph_legend_legend|1168|0|1864|0|{3|}690|697|}
{2010241001|XXGlegend_face_face|1169|0|1866|0|{}697|698|}
{2010604001|XXGgraph_flow_flow|1170|0|1868|0|{Flow_1|}690|699|}
{2010604001|XXGgraph_flow_flow|1171|0|1870|0|{Flow_2|}690|700|}
{2010604001|XXGgraph_flow_flow|1172|0|1872|0|{Flow_3|}690|701|}
{2010604001|XXGgraph_flow_flow|1173|0|1874|0|{Flow_4|}690|702|}
{2010604001|XXGgraph_flow_flow|1174|0|1876|0|{Flow_5|}690|703|}
{2010604001|XXGgraph_flow_flow|1175|0|1878|0|{Flow_6|}690|704|}
{2010604001|XXGgraph_flow_flow|1176|0|1880|0|{Flow_7|}690|705|}
{2010604001|XXGgraph_flow_flow|1177|0|1882|0|{Flow_8|}690|706|}
{2010604001|XXGgraph_flow_flow|1178|0|1884|0|{Flow_9|}690|707|}
{2010601001|XXGgraph_vertex_vertex|1179|0|1886|0|{Dedup_Sorted|}690|708|}
{2010212001|XXGvertex_oport_oport|1180|0|1888|0|{0|out|}708|709|}
{2010212001|XXGvertex_oport_oport|1181|0|1890|0|{1|dup|}708|710|}
{2010213001|XXGoport_dst_flow|1182|0|1892|0|{0|}710|706|}
{2010212001|XXGvertex_oport_oport|1183|0|1893|0|{2|reject|}708|711|}
{2010212001|XXGvertex_oport_oport|1184|0|1895|0|{3|error|}708|712|}
{2010212001|XXGvertex_oport_oport|1185|0|1897|0|{4|log|}708|713|}
{2010211001|XXGvertex_iport_iport|1186|0|1899|0|{0|in|}708|714|}
{2010214001|XXGiport_src_flow|1187|0|1901|0|{0|}714|701|}
{2010007001|XXGobject_proto_object|1188|0|1902|0|{}708|715|}
{2010212001|XXGvertex_oport_oport|1189|0|1904|0|{0|out|}715|716|}
{2010006001|XXGobject_psameas_object|1190|0|1906|0|{metadata|out_metadata|1|0|}716|715|}
{2010212001|XXGvertex_oport_oport|1191|0|1907|0|{1|dup|}715|717|}
{2010006001|XXGobject_psameas_object|1192|0|1909|0|{metadata|dup_metadata|1|0|}717|715|}
{2010212001|XXGvertex_oport_oport|1193|0|1910|0|{2|reject|}715|718|}
{2010006001|XXGobject_psameas_object|1194|0|1912|0|{metadata|reject_metadata|1|0|}718|715|}
{2010212001|XXGvertex_oport_oport|1195|0|1913|0|{3|error|}715|719|}
{2010006001|XXGobject_psameas_object|1196|0|1915|0|{metadata|error_metadata|1|0|}719|715|}
{2010212001|XXGvertex_oport_oport|1197|0|1916|0|{4|log|}715|720|}
{2010006001|XXGobject_psameas_object|1198|0|1918|0|{metadata|log_metadata|1|0|}720|715|}
{2010211001|XXGvertex_iport_iport|1199|0|1919|0|{0|in|}715|721|}
{2010006001|XXGobject_psameas_object|1200|0|1921|0|{metadata|in_metadata|1|0|}721|715|}
{2010601001|XXGgraph_vertex_vertex|1201|0|1922|0|{FBE_filter_matching_lkp_record|}690|722|}
{2010212001|XXGvertex_oport_oport|1202|0|1924|0|{0|out|}722|723|}
{2010213001|XXGoport_dst_flow|1203|0|1926|0|{0|}723|700|}
{2010212001|XXGvertex_oport_oport|1204|0|1927|0|{1|deselect|}722|724|}
{2010213001|XXGoport_dst_flow|1205|0|1929|0|{0|}724|707|}
{2010212001|XXGvertex_oport_oport|1206|0|1930|0|{2|reject|}722|725|}
{2010212001|XXGvertex_oport_oport|1207|0|1932|0|{3|error|}722|726|}
{2010212001|XXGvertex_oport_oport|1208|0|1934|0|{4|log|}722|727|}
{2010211001|XXGvertex_iport_iport|1209|0|1936|0|{0|in|}722|728|}
{2010214001|XXGiport_src_flow|1210|0|1938|0|{0|}728|703|}
{2010007001|XXGobject_proto_object|1211|0|1939|0|{}722|729|}
{2010212001|XXGvertex_oport_oport|1212|0|1941|0|{0|out|}729|730|}
{2010006001|XXGobject_psameas_object|1213|0|1943|0|{metadata|out_metadata|1|0|}730|729|}
{2010212001|XXGvertex_oport_oport|1214|0|1944|0|{1|deselect|}729|731|}
{2010006001|XXGobject_psameas_object|1215|0|1946|0|{metadata|deselect_metadata|1|0|}731|729|}
{2010212001|XXGvertex_oport_oport|1216|0|1947|0|{2|reject|}729|732|}
{2010006001|XXGobject_psameas_object|1217|0|1949|0|{metadata|reject_metadata|1|0|}732|729|}
{2010212001|XXGvertex_oport_oport|1218|0|1950|0|{3|error|}729|733|}
{2010006001|XXGobject_psameas_object|1219|0|1952|0|{metadata|error_metadata|1|0|}733|729|}
{2010212001|XXGvertex_oport_oport|1220|0|1953|0|{4|log|}729|734|}
{2010006001|XXGobject_psameas_object|1221|0|1955|0|{metadata|log_metadata|1|0|}734|729|}
{2010211001|XXGvertex_iport_iport|1222|0|1956|0|{0|in|}729|735|}
{2010006001|XXGobject_psameas_object|1223|0|1958|0|{metadata|in_metadata|1|0|}735|729|}
{2010601001|XXGgraph_vertex_vertex|1224|0|1959|0|{RFMT_Get_Hash_On_NK|}690|736|}
{2010212001|XXGvertex_oport_oport|1225|0|1961|0|{0|out0|}736|737|}
{2010213001|XXGoport_dst_flow|1226|0|1963|0|{0|}737|699|}
{2010212001|XXGvertex_oport_oport|1227|0|1964|0|{1|reject0|}736|738|}
{2010212001|XXGvertex_oport_oport|1228|0|1966|0|{2|error0|}736|739|}
{2010212001|XXGvertex_oport_oport|1229|0|1968|0|{3|log|}736|740|}
{2010211001|XXGvertex_iport_iport|1230|0|1970|0|{0|in|}736|741|}
{2010007001|XXGobject_proto_object|1231|0|1972|0|{}736|742|}
{2010212001|XXGvertex_oport_oport|1232|0|1974|0|{0|out0|}742|743|}
{2010006001|XXGobject_psameas_object|1233|0|1976|0|{metadata|out0_metadata|1|0|}743|742|}
{2010006001|XXGobject_psameas_object|1234|0|1977|0|{transform0|transform0|1|0|}743|742|}
{2010212001|XXGvertex_oport_oport|1235|0|1978|0|{1|reject0|}742|744|}
{2010006001|XXGobject_psameas_object|1236|0|1980|0|{metadata|reject0_metadata|1|0|}744|742|}
{2010212001|XXGvertex_oport_oport|1237|0|1981|0|{2|error0|}742|745|}
{2010006001|XXGobject_psameas_object|1238|0|1983|0|{metadata|error0_metadata|1|0|}745|742|}
{2010212001|XXGvertex_oport_oport|1239|0|1984|0|{3|log|}742|746|}
{2010006001|XXGobject_psameas_object|1240|0|1986|0|{metadata|log_metadata|1|0|}746|742|}
{2010211001|XXGvertex_iport_iport|1241|0|1987|0|{0|in|}742|747|}
{2010006001|XXGobject_psameas_object|1242|0|1989|0|{metadata|in_metadata|1|0|}747|742|}
{2010601001|XXGgraph_vertex_vertex|1243|0|1990|0|{RFMT_Lookup_with_IDS|}690|748|}
{2010212001|XXGvertex_oport_oport|1244|0|1992|0|{0|out0|}748|749|}
{2010213001|XXGoport_dst_flow|1245|0|1994|0|{0|}749|702|}
{2010212001|XXGvertex_oport_oport|1246|0|1995|0|{1|reject0|}748|750|}
{2010212001|XXGvertex_oport_oport|1247|0|1997|0|{2|error0|}748|751|}
{2010212001|XXGvertex_oport_oport|1248|0|1999|0|{3|log|}748|752|}
{2010211001|XXGvertex_iport_iport|1249|0|2001|0|{0|in|}748|753|}
{2010214001|XXGiport_src_flow|1250|0|2003|0|{0|}753|704|}
{2010007001|XXGobject_proto_object|1251|0|2004|0|{}748|754|}
{2010212001|XXGvertex_oport_oport|1252|0|2006|0|{0|out0|}754|755|}
{2010006001|XXGobject_psameas_object|1253|0|2008|0|{metadata|out0_metadata|1|0|}755|754|}
{2010006001|XXGobject_psameas_object|1254|0|2009|0|{transform0|transform0|1|0|}755|754|}
{2010212001|XXGvertex_oport_oport|1255|0|2010|0|{1|reject0|}754|756|}
{2010006001|XXGobject_psameas_object|1256|0|2012|0|{metadata|reject0_metadata|1|0|}756|754|}
{2010212001|XXGvertex_oport_oport|1257|0|2013|0|{2|error0|}754|757|}
{2010006001|XXGobject_psameas_object|1258|0|2015|0|{metadata|error0_metadata|1|0|}757|754|}
{2010212001|XXGvertex_oport_oport|1259|0|2016|0|{3|log|}754|758|}
{2010006001|XXGobject_psameas_object|1260|0|2018|0|{metadata|log_metadata|1|0|}758|754|}
{2010211001|XXGvertex_iport_iport|1261|0|2019|0|{0|in|}754|759|}
{2010006001|XXGobject_psameas_object|1262|0|2021|0|{metadata|in_metadata|1|0|}759|754|}
{2010601001|XXGgraph_vertex_vertex|1263|0|2022|0|{Sort_De_dup|}690|760|}
{2010604001|XXGgraph_flow_flow|1264|0|2024|0|{Flow_10|}760|761|}
{2010604001|XXGgraph_flow_flow|1265|0|2026|0|{Flow_4|}760|762|}
{2010244001|XXGflow_watcher_watcher|1266|0|2028|0|{}762|763|}
{2010601001|XXGgraph_vertex_vertex|1267|0|2030|0|{Dedup_Sorted_1|}760|764|}
{2010212001|XXGvertex_oport_oport|1268|0|2032|0|{0|out|}764|765|}
{2010212001|XXGvertex_oport_oport|1269|0|2034|0|{1|dup|}764|766|}
{2010212001|XXGvertex_oport_oport|1270|0|2036|0|{2|reject|}764|767|}
{2010212001|XXGvertex_oport_oport|1271|0|2038|0|{3|error|}764|768|}
{2010212001|XXGvertex_oport_oport|1272|0|2040|0|{4|log|}764|769|}
{2010211001|XXGvertex_iport_iport|1273|0|2042|0|{0|in|}764|770|}
{2010214001|XXGiport_src_flow|1274|0|2044|0|{0|}770|761|}
{2010007001|XXGobject_proto_object|1275|0|2045|0|{}764|771|}
{2010212001|XXGvertex_oport_oport|1276|0|2047|0|{0|out|}771|772|}
{2010006001|XXGobject_psameas_object|1277|0|2049|0|{metadata|out_metadata|1|0|}772|771|}
{2010212001|XXGvertex_oport_oport|1278|0|2050|0|{1|dup|}771|773|}
{2010006001|XXGobject_psameas_object|1279|0|2052|0|{metadata|dup_metadata|1|0|}773|771|}
{2010212001|XXGvertex_oport_oport|1280|0|2053|0|{2|reject|}771|774|}
{2010006001|XXGobject_psameas_object|1281|0|2055|0|{metadata|reject_metadata|1|0|}774|771|}
{2010212001|XXGvertex_oport_oport|1282|0|2056|0|{3|error|}771|775|}
{2010006001|XXGobject_psameas_object|1283|0|2058|0|{metadata|error_metadata|1|0|}775|771|}
{2010212001|XXGvertex_oport_oport|1284|0|2059|0|{4|log|}771|776|}
{2010006001|XXGobject_psameas_object|1285|0|2061|0|{metadata|log_metadata|1|0|}776|771|}
{2010211001|XXGvertex_iport_iport|1286|0|2062|0|{0|in|}771|777|}
{2010006001|XXGobject_psameas_object|1287|0|2064|0|{metadata|in_metadata|1|0|}777|771|}
{2010601001|XXGgraph_vertex_vertex|1288|0|2065|0|{PBKS_dxf_hk_part1_|}760|778|}
{2010604001|XXGgraph_flow_flow|1289|0|2067|0|{Flow_1|}778|779|}
{2010601001|XXGgraph_vertex_vertex|1290|0|2069|0|{Partition_by_Key|}778|780|}
{2010212001|XXGvertex_oport_oport|1291|0|2071|0|{0|out|}780|781|}
{2010213001|XXGoport_dst_flow|1292|0|2073|0|{0|}781|779|}
{2010211001|XXGvertex_iport_iport|1293|0|2074|0|{0|in|}780|782|}
{2010601001|XXGgraph_vertex_vertex|1294|0|2076|0|{Sort|}778|783|}
{2010212001|XXGvertex_oport_oport|1295|0|2078|0|{0|out|}783|784|}
{2010211001|XXGvertex_iport_iport|1296|0|2080|0|{0|in|}783|785|}
{2010214001|XXGiport_src_flow|1297|0|2082|0|{0|}785|779|}
{2010212001|XXGvertex_oport_oport|1298|0|2083|0|{0|out0|}778|786|}
{2010216002|XXGoport_binding_oport|1299|0|2085|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}786|784|}
{2010213001|XXGoport_dst_flow|1300|0|2086|0|{0|}786|762|}
{2010211001|XXGvertex_iport_iport|1301|0|2087|0|{0|in0|}778|787|}
{2010215002|XXGiport_binding_iport|1302|0|2089|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}787|782|}
{2010007001|XXGobject_proto_object|1303|0|2090|0|{}778|788|}
{2010604001|XXGgraph_flow_flow|1304|0|2092|0|{Flow_1|}788|789|}
{2010601001|XXGgraph_vertex_vertex|1305|0|2094|0|{Partition_by_Key|}788|790|}
{2010212001|XXGvertex_oport_oport|1306|0|2096|0|{0|out|}790|791|}
{2010213001|XXGoport_dst_flow|1307|0|2098|0|{0|}791|789|}
{2010211001|XXGvertex_iport_iport|1308|0|2099|0|{0|in|}790|792|}
{2010007001|XXGobject_proto_object|1309|0|2101|0|{}790|793|}
{2010212001|XXGvertex_oport_oport|1310|0|2103|0|{0|out|}793|794|}
{2010006001|XXGobject_psameas_object|1311|0|2105|0|{metadata|out_metadata|1|0|}794|793|}
{2010211001|XXGvertex_iport_iport|1312|0|2106|0|{0|in|}793|795|}
{2010006001|XXGobject_psameas_object|1313|0|2108|0|{metadata|in_metadata|1|0|}795|793|}
{2010006001|XXGobject_psameas_object|1314|0|2109|0|{Layout|InputLayout|1|0|}790|788|}
{2010006001|XXGobject_psameas_object|1315|0|2110|0|{key|Key|1|0|}790|788|}
{2010601001|XXGgraph_vertex_vertex|1316|0|2111|0|{Sort|}788|796|}
{2010212001|XXGvertex_oport_oport|1317|0|2113|0|{0|out|}796|797|}
{2010211001|XXGvertex_iport_iport|1318|0|2115|0|{0|in|}796|798|}
{2010214001|XXGiport_src_flow|1319|0|2117|0|{0|}798|789|}
{2010007001|XXGobject_proto_object|1320|0|2118|0|{}796|799|}
{2010212001|XXGvertex_oport_oport|1321|0|2120|0|{0|out|}799|800|}
{2010006001|XXGobject_psameas_object|1322|0|2122|0|{metadata|out_metadata|1|0|}800|799|}
{2010211001|XXGvertex_iport_iport|1323|0|2123|0|{0|in|}799|801|}
{2010006001|XXGobject_psameas_object|1324|0|2125|0|{metadata|in_metadata|1|0|}801|799|}
{2010006001|XXGobject_psameas_object|1325|0|2126|0|{Layout|OutputLayout|1|0|}796|788|}
{2010006001|XXGobject_psameas_object|1326|0|2127|0|{key|Key|1|0|}796|788|}
{2010006001|XXGobject_psameas_object|1327|0|2128|0|{max_core|Max_core|1|0|}796|788|}
{2010212001|XXGvertex_oport_oport|1328|0|2129|0|{0|out0|}788|802|}
{2010216002|XXGoport_binding_oport|1329|0|2131|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}802|797|}
{2010211001|XXGvertex_iport_iport|1330|0|2132|0|{0|in0|}788|803|}
{2010215002|XXGiport_binding_iport|1331|0|2134|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}803|792|}
{2010601001|XXGgraph_vertex_vertex|1332|0|2135|0|{Sort_within_Groups_1|}760|804|}
{2010212001|XXGvertex_oport_oport|1333|0|2137|0|{0|out|}804|805|}
{2010213001|XXGoport_dst_flow|1334|0|2139|0|{0|}805|761|}
{2010211001|XXGvertex_iport_iport|1335|0|2140|0|{0|in|}804|806|}
{2010214001|XXGiport_src_flow|1336|0|2142|0|{0|}806|762|}
{2010007001|XXGobject_proto_object|1337|0|2143|0|{}804|807|}
{2010212001|XXGvertex_oport_oport|1338|0|2145|0|{0|out|}807|808|}
{2010006001|XXGobject_psameas_object|1339|0|2147|0|{metadata|out_metadata|1|0|}808|807|}
{2010211001|XXGvertex_iport_iport|1340|0|2148|0|{0|in|}807|809|}
{2010006001|XXGobject_psameas_object|1341|0|2150|0|{metadata|in_metadata|1|0|}809|807|}
{2010212001|XXGvertex_oport_oport|1342|0|2151|0|{0|out0|}760|810|}
{2010216002|XXGoport_binding_oport|1343|0|2153|0|{.5|.5|{0|}7792|}810|765|}
{2010213001|XXGoport_dst_flow|1344|0|2154|0|{0|}810|704|}
{2010212001|XXGvertex_oport_oport|1345|0|2155|0|{1|out1|}760|811|}
{2010216002|XXGoport_binding_oport|1346|0|2157|0|{.5|.5|{0|}7793|}811|766|}
{2010213001|XXGoport_dst_flow|1347|0|2158|0|{0|}811|705|}
{2010211001|XXGvertex_iport_iport|1348|0|2159|0|{0|in0|}760|812|}
{2010215002|XXGiport_binding_iport|1349|0|2161|0|{.5|.5|{0|}7791|}812|787|}
{2010214001|XXGiport_src_flow|1350|0|2162|0|{0|}812|699|}
{2010601001|XXGgraph_vertex_vertex|1351|0|2163|0|{Sort_within_Groups|}690|813|}
{2010212001|XXGvertex_oport_oport|1352|0|2165|0|{0|out|}813|814|}
{2010213001|XXGoport_dst_flow|1353|0|2167|0|{0|}814|701|}
{2010211001|XXGvertex_iport_iport|1354|0|2168|0|{0|in|}813|815|}
{2010214001|XXGiport_src_flow|1355|0|2170|0|{0|}815|700|}
{2010007001|XXGobject_proto_object|1356|0|2171|0|{}813|816|}
{2010212001|XXGvertex_oport_oport|1357|0|2173|0|{0|out|}816|817|}
{2010006001|XXGobject_psameas_object|1358|0|2175|0|{metadata|out_metadata|1|0|}817|816|}
{2010211001|XXGvertex_iport_iport|1359|0|2176|0|{0|in|}816|818|}
{2010006001|XXGobject_psameas_object|1360|0|2178|0|{metadata|in_metadata|1|0|}818|816|}
{2010601001|XXGgraph_vertex_vertex|1361|0|2179|0|{Trash|}690|819|}
{2010211001|XXGvertex_iport_iport|1362|0|2181|0|{0|in|}819|820|}
{2010214001|XXGiport_src_flow|1363|0|2183|0|{0|}820|705|}
{2010007001|XXGobject_proto_object|1364|0|2184|0|{}819|821|}
{2010211001|XXGvertex_iport_iport|1365|0|2186|0|{0|in|}821|822|}
{2010006001|XXGobject_psameas_object|1366|0|2188|0|{metadata|in_metadata|1|0|}822|821|}
{2010601001|XXGgraph_vertex_vertex|1367|0|2189|0|{Trash_1|}690|823|}
{2010211001|XXGvertex_iport_iport|1368|0|2191|0|{0|in|}823|824|}
{2010214001|XXGiport_src_flow|1369|0|2193|0|{0|}824|706|}
{2010007001|XXGobject_proto_object|1370|0|2194|0|{}823|825|}
{2010211001|XXGvertex_iport_iport|1371|0|2196|0|{0|in|}825|826|}
{2010006001|XXGobject_psameas_object|1372|0|2198|0|{metadata|in_metadata|1|0|}826|825|}
{2010601001|XXGgraph_vertex_vertex|1373|0|2199|0|{Trash_2|}690|827|}
{2010211001|XXGvertex_iport_iport|1374|0|2201|0|{0|in|}827|828|}
{2010214001|XXGiport_src_flow|1375|0|2203|0|{0|}828|707|}
{2010007001|XXGobject_proto_object|1376|0|2204|0|{}827|829|}
{2010211001|XXGvertex_iport_iport|1377|0|2206|0|{0|in|}829|830|}
{2010006001|XXGobject_psameas_object|1378|0|2208|0|{metadata|in_metadata|1|0|}830|829|}
{2010601001|XXGgraph_vertex_vertex|1379|0|2209|0|{Two_Step_Lookup|}690|831|}
{2010605001|XXGgraph_legend_legend|1380|0|2211|0|{0|}831|832|}
{2010241001|XXGlegend_face_face|1381|0|2213|0|{}832|833|}
{2010604001|XXGgraph_flow_flow|1382|0|2215|0|{Flow_1|}831|834|}
{2010604001|XXGgraph_flow_flow|1383|0|2217|0|{Flow_2|}831|835|}
{2010604001|XXGgraph_flow_flow|1384|0|2219|0|{Flow_3|}831|836|}
{2010604001|XXGgraph_flow_flow|1385|0|2221|0|{Flow_4|}831|837|}
{2010604001|XXGgraph_flow_flow|1386|0|2223|0|{Flow_5|}831|838|}
{2010604001|XXGgraph_flow_flow|1387|0|2225|0|{Flow_6|}831|839|}
{2010601001|XXGgraph_vertex_vertex|1388|0|2227|0|{FBE_Pass_Only_Matching_Rec|}831|840|}
{2010212001|XXGvertex_oport_oport|1389|0|2229|0|{0|out|}840|841|}
{2010213001|XXGoport_dst_flow|1390|0|2231|0|{0|}841|838|}
{2010212001|XXGvertex_oport_oport|1391|0|2232|0|{1|deselect|}840|842|}
{2010213001|XXGoport_dst_flow|1392|0|2234|0|{0|}842|839|}
{2010212001|XXGvertex_oport_oport|1393|0|2235|0|{2|reject|}840|843|}
{2010212001|XXGvertex_oport_oport|1394|0|2237|0|{3|error|}840|844|}
{2010212001|XXGvertex_oport_oport|1395|0|2239|0|{4|log|}840|845|}
{2010211001|XXGvertex_iport_iport|1396|0|2241|0|{0|in|}840|846|}
{2010214001|XXGiport_src_flow|1397|0|2243|0|{0|}846|837|}
{2010007001|XXGobject_proto_object|1398|0|2244|0|{}840|847|}
{2010212001|XXGvertex_oport_oport|1399|0|2246|0|{0|out|}847|848|}
{2010006001|XXGobject_psameas_object|1400|0|2248|0|{metadata|out_metadata|1|0|}848|847|}
{2010212001|XXGvertex_oport_oport|1401|0|2249|0|{1|deselect|}847|849|}
{2010006001|XXGobject_psameas_object|1402|0|2251|0|{metadata|deselect_metadata|1|0|}849|847|}
{2010212001|XXGvertex_oport_oport|1403|0|2252|0|{2|reject|}847|850|}
{2010006001|XXGobject_psameas_object|1404|0|2254|0|{metadata|reject_metadata|1|0|}850|847|}
{2010212001|XXGvertex_oport_oport|1405|0|2255|0|{3|error|}847|851|}
{2010006001|XXGobject_psameas_object|1406|0|2257|0|{metadata|error_metadata|1|0|}851|847|}
{2010212001|XXGvertex_oport_oport|1407|0|2258|0|{4|log|}847|852|}
{2010006001|XXGobject_psameas_object|1408|0|2260|0|{metadata|log_metadata|1|0|}852|847|}
{2010211001|XXGvertex_iport_iport|1409|0|2261|0|{0|in|}847|853|}
{2010006001|XXGobject_psameas_object|1410|0|2263|0|{metadata|in_metadata|1|0|}853|847|}
{2010601001|XXGgraph_vertex_vertex|1411|0|2264|0|{FBE_filter_matching_lkp_record|}831|854|}
{2010212001|XXGvertex_oport_oport|1412|0|2266|0|{0|out|}854|855|}
{2010213001|XXGoport_dst_flow|1413|0|2268|0|{0|}855|836|}
{2010212001|XXGvertex_oport_oport|1414|0|2269|0|{1|deselect|}854|856|}
{2010213001|XXGoport_dst_flow|1415|0|2271|0|{0|}856|834|}
{2010212001|XXGvertex_oport_oport|1416|0|2272|0|{2|reject|}854|857|}
{2010212001|XXGvertex_oport_oport|1417|0|2274|0|{3|error|}854|858|}
{2010212001|XXGvertex_oport_oport|1418|0|2276|0|{4|log|}854|859|}
{2010211001|XXGvertex_iport_iport|1419|0|2278|0|{0|in|}854|860|}
{2010007001|XXGobject_proto_object|1420|0|2280|0|{}854|861|}
{2010212001|XXGvertex_oport_oport|1421|0|2282|0|{0|out|}861|862|}
{2010006001|XXGobject_psameas_object|1422|0|2284|0|{metadata|out_metadata|1|0|}862|861|}
{2010212001|XXGvertex_oport_oport|1423|0|2285|0|{1|deselect|}861|863|}
{2010006001|XXGobject_psameas_object|1424|0|2287|0|{metadata|deselect_metadata|1|0|}863|861|}
{2010212001|XXGvertex_oport_oport|1425|0|2288|0|{2|reject|}861|864|}
{2010006001|XXGobject_psameas_object|1426|0|2290|0|{metadata|reject_metadata|1|0|}864|861|}
{2010212001|XXGvertex_oport_oport|1427|0|2291|0|{3|error|}861|865|}
{2010006001|XXGobject_psameas_object|1428|0|2293|0|{metadata|error_metadata|1|0|}865|861|}
{2010212001|XXGvertex_oport_oport|1429|0|2294|0|{4|log|}861|866|}
{2010006001|XXGobject_psameas_object|1430|0|2296|0|{metadata|log_metadata|1|0|}866|861|}
{2010211001|XXGvertex_iport_iport|1431|0|2297|0|{0|in|}861|867|}
{2010006001|XXGobject_psameas_object|1432|0|2299|0|{metadata|in_metadata|1|0|}867|861|}
{2010601001|XXGgraph_vertex_vertex|1433|0|2300|0|{Merge|}831|868|}
{2010212001|XXGvertex_oport_oport|1434|0|2302|0|{0|out|}868|869|}
{2010211001|XXGvertex_iport_iport|1435|0|2304|0|{0|in|}868|870|}
{2010214001|XXGiport_src_flow|1436|0|2306|0|{0|}870|836|}
{2010214001|XXGiport_src_flow|1437|0|2307|0|{1|}870|838|}
{2010007001|XXGobject_proto_object|1438|0|2308|0|{}868|871|}
{2010212001|XXGvertex_oport_oport|1439|0|2310|0|{0|out|}871|872|}
{2010006001|XXGobject_psameas_object|1440|0|2312|0|{metadata|out_metadata|1|0|}872|871|}
{2010211001|XXGvertex_iport_iport|1441|0|2313|0|{0|in|}871|873|}
{2010006001|XXGobject_psameas_object|1442|0|2315|0|{metadata|in_metadata|1|0|}873|871|}
{2010601001|XXGgraph_vertex_vertex|1443|0|2316|0|{No_Match_Record_In_Second_Pass|}831|874|}
{2010211001|XXGvertex_iport_iport|1444|0|2318|0|{0|in|}874|875|}
{2010214001|XXGiport_src_flow|1445|0|2320|0|{0|}875|839|}
{2010007001|XXGobject_proto_object|1446|0|2321|0|{}874|876|}
{2010211001|XXGvertex_iport_iport|1447|0|2323|0|{0|in|}876|877|}
{2010006001|XXGobject_psameas_object|1448|0|2325|0|{metadata|in_metadata|1|0|}877|876|}
{2010601001|XXGgraph_vertex_vertex|1449|0|2326|0|{RFMT_Lookup_with_IDS_Archive_|}831|878|}
{2010212001|XXGvertex_oport_oport|1450|0|2328|0|{0|out0|}878|879|}
{2010213001|XXGoport_dst_flow|1451|0|2330|0|{0|}879|837|}
{2010212001|XXGvertex_oport_oport|1452|0|2331|0|{1|reject0|}878|880|}
{2010212001|XXGvertex_oport_oport|1453|0|2333|0|{2|error0|}878|881|}
{2010212001|XXGvertex_oport_oport|1454|0|2335|0|{3|log|}878|882|}
{2010211001|XXGvertex_iport_iport|1455|0|2337|0|{0|in|}878|883|}
{2010214001|XXGiport_src_flow|1456|0|2339|0|{0|}883|835|}
{2010007001|XXGobject_proto_object|1457|0|2340|0|{}878|884|}
{2010212001|XXGvertex_oport_oport|1458|0|2342|0|{0|out0|}884|885|}
{2010006001|XXGobject_psameas_object|1459|0|2344|0|{metadata|out0_metadata|1|0|}885|884|}
{2010006001|XXGobject_psameas_object|1460|0|2345|0|{transform0|transform0|1|0|}885|884|}
{2010212001|XXGvertex_oport_oport|1461|0|2346|0|{1|reject0|}884|886|}
{2010006001|XXGobject_psameas_object|1462|0|2348|0|{metadata|reject0_metadata|1|0|}886|884|}
{2010212001|XXGvertex_oport_oport|1463|0|2349|0|{2|error0|}884|887|}
{2010006001|XXGobject_psameas_object|1464|0|2351|0|{metadata|error0_metadata|1|0|}887|884|}
{2010212001|XXGvertex_oport_oport|1465|0|2352|0|{3|log|}884|888|}
{2010006001|XXGobject_psameas_object|1466|0|2354|0|{metadata|log_metadata|1|0|}888|884|}
{2010211001|XXGvertex_iport_iport|1467|0|2355|0|{0|in|}884|889|}
{2010006001|XXGobject_psameas_object|1468|0|2357|0|{metadata|in_metadata|1|0|}889|884|}
{2010601001|XXGgraph_vertex_vertex|1469|0|2358|0|{RFMT_Pass_only_Hash_Keys|}831|890|}
{2010212001|XXGvertex_oport_oport|1470|0|2360|0|{0|out0|}890|891|}
{2010213001|XXGoport_dst_flow|1471|0|2362|0|{0|}891|835|}
{2010212001|XXGvertex_oport_oport|1472|0|2363|0|{1|reject0|}890|892|}
{2010212001|XXGvertex_oport_oport|1473|0|2365|0|{2|error0|}890|893|}
{2010212001|XXGvertex_oport_oport|1474|0|2367|0|{3|log|}890|894|}
{2010211001|XXGvertex_iport_iport|1475|0|2369|0|{0|in|}890|895|}
{2010214001|XXGiport_src_flow|1476|0|2371|0|{0|}895|834|}
{2010007001|XXGobject_proto_object|1477|0|2372|0|{}890|896|}
{2010212001|XXGvertex_oport_oport|1478|0|2374|0|{0|out0|}896|897|}
{2010006001|XXGobject_psameas_object|1479|0|2376|0|{metadata|out0_metadata|1|0|}897|896|}
{2010006001|XXGobject_psameas_object|1480|0|2377|0|{transform0|transform0|1|0|}897|896|}
{2010212001|XXGvertex_oport_oport|1481|0|2378|0|{1|reject0|}896|898|}
{2010006001|XXGobject_psameas_object|1482|0|2380|0|{metadata|reject0_metadata|1|0|}898|896|}
{2010212001|XXGvertex_oport_oport|1483|0|2381|0|{2|error0|}896|899|}
{2010006001|XXGobject_psameas_object|1484|0|2383|0|{metadata|error0_metadata|1|0|}899|896|}
{2010212001|XXGvertex_oport_oport|1485|0|2384|0|{3|log|}896|900|}
{2010006001|XXGobject_psameas_object|1486|0|2386|0|{metadata|log_metadata|1|0|}900|896|}
{2010211001|XXGvertex_iport_iport|1487|0|2387|0|{0|in|}896|901|}
{2010006001|XXGobject_psameas_object|1488|0|2389|0|{metadata|in_metadata|1|0|}901|896|}
{2010212001|XXGvertex_oport_oport|1489|0|2390|0|{0|out0|}831|902|}
{2010216002|XXGoport_binding_oport|1490|0|2392|0|{.5|.5|{0|}15500|}902|869|}
{2010213001|XXGoport_dst_flow|1491|0|2393|0|{0|}902|703|}
{2010211001|XXGvertex_iport_iport|1492|0|2394|0|{0|in0|}831|903|}
{2010215002|XXGiport_binding_iport|1493|0|2396|0|{.5|.5|{0|}15499|}903|860|}
{2010214001|XXGiport_src_flow|1494|0|2397|0|{0|}903|702|}
{2010212001|XXGvertex_oport_oport|1495|0|2398|0|{0|out0|}690|904|}
{2010216002|XXGoport_binding_oport|1496|0|2400|0|{.5|.5|{0|}15515|}904|709|}
{2010213001|XXGoport_dst_flow|1497|0|2401|0|{0|}904|510|}
{2010211001|XXGvertex_iport_iport|1498|0|2402|0|{0|in1|}690|905|}
{2010215002|XXGiport_binding_iport|1499|0|2404|0|{.5|.5|{0|}15514|}905|741|}
{2010214001|XXGiport_src_flow|1500|0|2405|0|{0|}905|508|}
{2010601001|XXGgraph_vertex_vertex|1501|0|2406|0|{Merge|}502|906|}
{2010212001|XXGvertex_oport_oport|1502|0|2408|0|{0|out|}906|907|}
{2010211001|XXGvertex_iport_iport|1503|0|2410|0|{0|in|}906|908|}
{2010214001|XXGiport_src_flow|1504|0|2412|0|{0|}908|511|}
{2010007001|XXGobject_proto_object|1505|0|2413|0|{}906|909|}
{2010212001|XXGvertex_oport_oport|1506|0|2415|0|{0|out|}909|910|}
{2010006001|XXGobject_psameas_object|1507|0|2417|0|{metadata|out_metadata|1|0|}910|909|}
{2010211001|XXGvertex_iport_iport|1508|0|2418|0|{0|in|}909|911|}
{2010006001|XXGobject_psameas_object|1509|0|2420|0|{metadata|in_metadata|1|0|}911|909|}
{2010601001|XXGgraph_vertex_vertex|1510|0|2421|0|{Replicate|}502|912|}
{2010212001|XXGvertex_oport_oport|1511|0|2423|0|{0|out|}912|913|}
{2010213001|XXGoport_dst_flow|1512|0|2425|0|{0|}913|507|}
{2010213001|XXGoport_dst_flow|1513|0|2426|0|{1|}913|508|}
{2010211001|XXGvertex_iport_iport|1514|0|2427|0|{0|in|}912|914|}
{2010007001|XXGobject_proto_object|1515|0|2429|0|{}912|915|}
{2010212001|XXGvertex_oport_oport|1516|0|2431|0|{0|out|}915|916|}
{2010006001|XXGobject_psameas_object|1517|0|2433|0|{metadata|out_metadata|1|0|}916|915|}
{2010211001|XXGvertex_iport_iport|1518|0|2434|0|{0|in|}915|917|}
{2010006001|XXGobject_psameas_object|1519|0|2436|0|{metadata|in_metadata|1|0|}917|915|}
{2010601001|XXGgraph_vertex_vertex|1520|0|2437|0|{Replicate_1|}502|918|}
{2010212001|XXGvertex_oport_oport|1521|0|2439|0|{0|out|}918|919|}
{2010213001|XXGoport_dst_flow|1522|0|2441|0|{0|}919|511|}
{2010211001|XXGvertex_iport_iport|1523|0|2442|0|{0|in|}918|920|}
{2010214001|XXGiport_src_flow|1524|0|2444|0|{0|}920|509|}
{2010214001|XXGiport_src_flow|1525|0|2445|0|{1|}920|510|}
{2010007001|XXGobject_proto_object|1526|0|2446|0|{}918|921|}
{2010212001|XXGvertex_oport_oport|1527|0|2448|0|{0|out|}921|922|}
{2010006001|XXGobject_psameas_object|1528|0|2450|0|{metadata|out_metadata|1|0|}922|921|}
{2010211001|XXGvertex_iport_iport|1529|0|2451|0|{0|in|}921|923|}
{2010006001|XXGobject_psameas_object|1530|0|2453|0|{metadata|in_metadata|1|0|}923|921|}
{2010212001|XXGvertex_oport_oport|1531|0|2454|0|{0|out0|}502|924|}
{2010216002|XXGoport_binding_oport|1532|0|2456|0|{.5|.5|{0|}7797|}924|907|}
{2010211001|XXGvertex_iport_iport|1533|0|2457|0|{0|in0|}502|925|}
{2010215002|XXGiport_binding_iport|1534|0|2459|0|{.5|.5|{0|}7796|}925|914|}
{2010601001|XXGgraph_vertex_vertex|1535|0|2460|0|{ids_lookup_2|}143|926|}
{2010605001|XXGgraph_legend_legend|1536|0|2462|0|{0|}926|927|}
{2010241001|XXGlegend_face_face|1537|0|2464|0|{}927|928|}
{2010605001|XXGgraph_legend_legend|1538|0|2466|0|{1|}926|929|}
{2010241001|XXGlegend_face_face|1539|0|2468|0|{}929|930|}
{2010604001|XXGgraph_flow_flow|1540|0|2470|0|{Flow_1|}926|931|}
{2010604001|XXGgraph_flow_flow|1541|0|2472|0|{Flow_2|}926|932|}
{2010604001|XXGgraph_flow_flow|1542|0|2474|0|{Flow_3|}926|933|}
{2010604001|XXGgraph_flow_flow|1543|0|2476|0|{Flow_4|}926|934|}
{2010604001|XXGgraph_flow_flow|1544|0|2478|0|{Flow_5|}926|935|}
{2010601001|XXGgraph_vertex_vertex|1545|0|2480|0|{Get_All_LookUp_Record|}926|936|}
{2010605001|XXGgraph_legend_legend|1546|0|2482|0|{0|}936|937|}
{2010241001|XXGlegend_face_face|1547|0|2484|0|{}937|938|}
{2010605001|XXGgraph_legend_legend|1548|0|2486|0|{1|}936|939|}
{2010241001|XXGlegend_face_face|1549|0|2488|0|{}939|940|}
{2010605001|XXGgraph_legend_legend|1550|0|2490|0|{2|}936|941|}
{2010241001|XXGlegend_face_face|1551|0|2492|0|{}941|942|}
{2010605001|XXGgraph_legend_legend|1552|0|2494|0|{3|}936|943|}
{2010241001|XXGlegend_face_face|1553|0|2496|0|{}943|944|}
{2010605001|XXGgraph_legend_legend|1554|0|2498|0|{4|}936|945|}
{2010241001|XXGlegend_face_face|1555|0|2500|0|{}945|946|}
{2010604001|XXGgraph_flow_flow|1556|0|2502|0|{Flow_1|}936|947|}
{2010604001|XXGgraph_flow_flow|1557|0|2504|0|{Flow_10|}936|948|}
{2010604001|XXGgraph_flow_flow|1558|0|2506|0|{Flow_11|}936|949|}
{2010604001|XXGgraph_flow_flow|1559|0|2508|0|{Flow_12|}936|950|}
{2010604001|XXGgraph_flow_flow|1560|0|2510|0|{Flow_18|}936|951|}
{2010604001|XXGgraph_flow_flow|1561|0|2512|0|{Flow_2|}936|952|}
{2010604001|XXGgraph_flow_flow|1562|0|2514|0|{Flow_3|}936|953|}
{2010604001|XXGgraph_flow_flow|1563|0|2516|0|{Flow_4|}936|954|}
{2010604001|XXGgraph_flow_flow|1564|0|2518|0|{Flow_5|}936|955|}
{2010604001|XXGgraph_flow_flow|1565|0|2520|0|{Flow_6|}936|956|}
{2010604001|XXGgraph_flow_flow|1566|0|2522|0|{Flow_7|}936|957|}
{2010604001|XXGgraph_flow_flow|1567|0|2524|0|{Flow_8|}936|958|}
{2010604001|XXGgraph_flow_flow|1568|0|2526|0|{Flow_9|}936|959|}
{2010601001|XXGgraph_vertex_vertex|1569|0|2528|0|{Dedup_Sorted|}936|960|}
{2010212001|XXGvertex_oport_oport|1570|0|2530|0|{0|out|}960|961|}
{2010213001|XXGoport_dst_flow|1571|0|2532|0|{0|}961|952|}
{2010212001|XXGvertex_oport_oport|1572|0|2533|0|{1|dup|}960|962|}
{2010213001|XXGoport_dst_flow|1573|0|2535|0|{0|}962|956|}
{2010212001|XXGvertex_oport_oport|1574|0|2536|0|{2|reject|}960|963|}
{2010212001|XXGvertex_oport_oport|1575|0|2538|0|{3|error|}960|964|}
{2010212001|XXGvertex_oport_oport|1576|0|2540|0|{4|log|}960|965|}
{2010211001|XXGvertex_iport_iport|1577|0|2542|0|{0|in|}960|966|}
{2010214001|XXGiport_src_flow|1578|0|2544|0|{0|}966|947|}
{2010006001|XXGobject_psameas_object|1579|0|2545|0|{Layout|Layout|0|0|}960|967|}
{2010212001|XXGvertex_oport_oport|1580|0|2547|0|{0|out|}967|968|}
{2010213001|XXGoport_dst_flow|1581|0|2549|0|{0|}968|950|}
{2010212001|XXGvertex_oport_oport|1582|0|2550|0|{1|reject|}967|969|}
{2010212001|XXGvertex_oport_oport|1583|0|2552|0|{2|error|}967|970|}
{2010212001|XXGvertex_oport_oport|1584|0|2554|0|{3|log|}967|971|}
{2010211001|XXGvertex_iport_iport|1585|0|2556|0|{0|in|}967|972|}
{2010214001|XXGiport_src_flow|1586|0|2558|0|{0|}972|948|}
{2010006001|XXGobject_psameas_object|1587|0|2559|0|{in_metadata|out0_metadata|0|0|}967|973|}
{2010212001|XXGvertex_oport_oport|1588|0|2561|0|{0|out0|}973|974|}
{2010213001|XXGoport_dst_flow|1589|0|2563|0|{0|}974|951|}
{2010212001|XXGvertex_oport_oport|1590|0|2564|0|{1|reject0|}973|975|}
{2010212001|XXGvertex_oport_oport|1591|0|2566|0|{2|error0|}973|976|}
{2010212001|XXGvertex_oport_oport|1592|0|2568|0|{3|log|}973|977|}
{2010211001|XXGvertex_iport_iport|1593|0|2570|0|{0|in|}973|978|}
{2010006001|XXGobject_psameas_object|1594|0|2572|0|{Layout|Layout|0|0|}973|242|}
{2010006001|XXGobject_psameas_object|1595|0|2573|0|{in_metadata|out1_metadata|0|0|}973|242|}
{2010006001|XXGobject_psameas_object|1596|0|2574|0|{reject0_metadata|out1_metadata|0|0|}973|242|}
{2010006001|XXGobject_psameas_object|1597|0|2575|0|{reject_metadata|out0_metadata|0|0|}967|973|}
{2010006001|XXGobject_psameas_object|1598|0|2576|0|{dup_metadata|out_metadata|0|0|}960|979|}
{2010212001|XXGvertex_oport_oport|1599|0|2578|0|{0|out|}979|980|}
{2010213001|XXGoport_dst_flow|1600|0|2580|0|{0|}980|949|}
{2010212001|XXGvertex_oport_oport|1601|0|2581|0|{1|deselect|}979|981|}
{2010213001|XXGoport_dst_flow|1602|0|2583|0|{0|}981|957|}
{2010212001|XXGvertex_oport_oport|1603|0|2584|0|{2|reject|}979|982|}
{2010212001|XXGvertex_oport_oport|1604|0|2586|0|{3|error|}979|983|}
{2010212001|XXGvertex_oport_oport|1605|0|2588|0|{4|log|}979|984|}
{2010211001|XXGvertex_iport_iport|1606|0|2590|0|{0|in|}979|985|}
{2010214001|XXGiport_src_flow|1607|0|2592|0|{0|}985|958|}
{2010006001|XXGobject_psameas_object|1608|0|2593|0|{Layout|Layout|0|0|}979|967|}
{2010006001|XXGobject_psameas_object|1609|0|2594|0|{deselect_metadata|out_metadata|0|0|}979|979|}
{2010006001|XXGobject_psameas_object|1610|0|2595|0|{in_metadata|out_metadata|0|0|}979|967|}
{2010006001|XXGobject_psameas_object|1611|0|2596|0|{reject_metadata|out_metadata|0|0|}979|967|}
{2010006001|XXGobject_psameas_object|1612|0|2597|0|{in_metadata|out_metadata|0|0|}960|979|}
{2010006001|XXGobject_psameas_object|1613|0|2598|0|{out_metadata|out_metadata|0|0|}960|979|}
{2010006001|XXGobject_psameas_object|1614|0|2599|0|{reject_metadata|out_metadata|0|0|}960|979|}
{2010601001|XXGgraph_vertex_vertex|1615|0|2600|0|{FBE_Filter_match_records|}936|979|}
{2010601001|XXGgraph_vertex_vertex|1616|0|2601|0|{Get_Hash_on_SRC_NK|}936|973|}
{2010601001|XXGgraph_vertex_vertex|1617|0|2602|0|{Merge|}936|986|}
{2010212001|XXGvertex_oport_oport|1618|0|2604|0|{0|out|}986|987|}
{2010213001|XXGoport_dst_flow|1619|0|2606|0|{0|}987|958|}
{2010211001|XXGvertex_iport_iport|1620|0|2607|0|{0|in|}986|988|}
{2010214001|XXGiport_src_flow|1621|0|2609|0|{0|}988|953|}
{2010214001|XXGiport_src_flow|1622|0|2610|0|{1|}988|950|}
{2010006001|XXGobject_psameas_object|1623|0|2611|0|{Layout|Layout|0|0|}986|967|}
{2010006001|XXGobject_psameas_object|1624|0|2612|0|{in_metadata|out_metadata|0|0|}986|967|}
{2010006001|XXGobject_psameas_object|1625|0|2613|0|{out_metadata|out_metadata|0|0|}986|967|}
{2010601001|XXGgraph_vertex_vertex|1626|0|2614|0|{Normalize_Get_all_records_from_Archive_Lkp|}936|967|}
{2010601001|XXGgraph_vertex_vertex|1627|0|2615|0|{Normalize_Get_all_records_from_lkp|}936|989|}
{2010212001|XXGvertex_oport_oport|1628|0|2617|0|{0|out|}989|990|}
{2010213001|XXGoport_dst_flow|1629|0|2619|0|{0|}990|953|}
{2010212001|XXGvertex_oport_oport|1630|0|2620|0|{1|reject|}989|991|}
{2010212001|XXGvertex_oport_oport|1631|0|2622|0|{2|error|}989|992|}
{2010212001|XXGvertex_oport_oport|1632|0|2624|0|{3|log|}989|993|}
{2010211001|XXGvertex_iport_iport|1633|0|2626|0|{0|in|}989|994|}
{2010214001|XXGiport_src_flow|1634|0|2628|0|{0|}994|955|}
{2010006001|XXGobject_psameas_object|1635|0|2629|0|{in_metadata|out0_metadata|0|0|}989|973|}
{2010006001|XXGobject_psameas_object|1636|0|2630|0|{reject_metadata|out0_metadata|0|0|}989|973|}
{2010601001|XXGgraph_vertex_vertex|1637|0|2631|0|{Replicate|}936|995|}
{2010212001|XXGvertex_oport_oport|1638|0|2633|0|{0|out|}995|996|}
{2010211001|XXGvertex_iport_iport|1639|0|2635|0|{0|in|}995|997|}
{2010214001|XXGiport_src_flow|1640|0|2637|0|{0|}997|952|}
{2010006001|XXGobject_psameas_object|1641|0|2638|0|{Layout|Layout|0|0|}995|967|}
{2010006001|XXGobject_psameas_object|1642|0|2639|0|{in_metadata|out_metadata|0|0|}995|979|}
{2010006001|XXGobject_psameas_object|1643|0|2640|0|{out_metadata|out_metadata|0|0|}995|979|}
{2010601001|XXGgraph_vertex_vertex|1644|0|2641|0|{Replicate_1|}936|998|}
{2010212001|XXGvertex_oport_oport|1645|0|2643|0|{0|out|}998|999|}
{2010213001|XXGoport_dst_flow|1646|0|2645|0|{0|}999|955|}
{2010213001|XXGoport_dst_flow|1647|0|2646|0|{1|}999|948|}
{2010211001|XXGvertex_iport_iport|1648|0|2647|0|{0|in|}998|1000|}
{2010214001|XXGiport_src_flow|1649|0|2649|0|{0|}1000|954|}
{2010006001|XXGobject_psameas_object|1650|0|2650|0|{Layout|Layout|0|0|}998|967|}
{2010006001|XXGobject_psameas_object|1651|0|2651|0|{in_metadata|out0_metadata|0|0|}998|973|}
{2010006001|XXGobject_psameas_object|1652|0|2652|0|{out_metadata|out0_metadata|0|0|}998|973|}
{2010601001|XXGgraph_vertex_vertex|1653|0|2653|0|{Sort_Remove_Dup_On_Hash|}936|1001|}
{2010604001|XXGgraph_flow_flow|1654|0|2655|0|{Flow_3|}1001|1002|}
{2010604001|XXGgraph_flow_flow|1655|0|2657|0|{Flow_5|}1001|1003|}
{2010601001|XXGgraph_vertex_vertex|1656|0|2659|0|{Dedup_Sorted_1|}1001|1004|}
{2010212001|XXGvertex_oport_oport|1657|0|2661|0|{0|out|}1004|1005|}
{2010212001|XXGvertex_oport_oport|1658|0|2663|0|{1|dup|}1004|1006|}
{2010212001|XXGvertex_oport_oport|1659|0|2665|0|{2|reject|}1004|1007|}
{2010212001|XXGvertex_oport_oport|1660|0|2667|0|{3|error|}1004|1008|}
{2010212001|XXGvertex_oport_oport|1661|0|2669|0|{4|log|}1004|1009|}
{2010211001|XXGvertex_iport_iport|1662|0|2671|0|{0|in|}1004|1010|}
{2010214001|XXGiport_src_flow|1663|0|2673|0|{0|}1010|1003|}
{2010006001|XXGobject_psameas_object|1664|0|2674|0|{Layout|Layout|0|0|}1004|967|}
{2010006001|XXGobject_psameas_object|1665|0|2675|0|{dup_metadata|out0_metadata|0|0|}1004|973|}
{2010006001|XXGobject_psameas_object|1666|0|2676|0|{in_metadata|out0_metadata|0|0|}1004|973|}
{2010006001|XXGobject_psameas_object|1667|0|2677|0|{out_metadata|out0_metadata|0|0|}1004|973|}
{2010006001|XXGobject_psameas_object|1668|0|2678|0|{reject_metadata|out0_metadata|0|0|}1004|973|}
{2010601001|XXGgraph_vertex_vertex|1669|0|2679|0|{PBKS_dxf_hk_part1_|}1001|1011|}
{2010604001|XXGgraph_flow_flow|1670|0|2681|0|{Flow_1|}1011|1012|}
{2010601001|XXGgraph_vertex_vertex|1671|0|2683|0|{Partition_by_Key|}1011|1013|}
{2010212001|XXGvertex_oport_oport|1672|0|2685|0|{0|out|}1013|1014|}
{2010213001|XXGoport_dst_flow|1673|0|2687|0|{0|}1014|1012|}
{2010211001|XXGvertex_iport_iport|1674|0|2688|0|{0|in|}1013|1015|}
{2010006001|XXGobject_psameas_object|1675|0|2690|0|{in_metadata|out0_metadata|0|0|}1013|973|}
{2010006001|XXGobject_psameas_object|1676|0|2691|0|{out_metadata|out0_metadata|0|0|}1013|973|}
{2010601001|XXGgraph_vertex_vertex|1677|0|2692|0|{Sort|}1011|1016|}
{2010212001|XXGvertex_oport_oport|1678|0|2694|0|{0|out|}1016|1017|}
{2010211001|XXGvertex_iport_iport|1679|0|2696|0|{0|in|}1016|1018|}
{2010214001|XXGiport_src_flow|1680|0|2698|0|{0|}1018|1012|}
{2010006001|XXGobject_psameas_object|1681|0|2699|0|{in_metadata|out0_metadata|0|0|}1016|973|}
{2010006001|XXGobject_psameas_object|1682|0|2700|0|{out_metadata|out0_metadata|0|0|}1016|973|}
{2010212001|XXGvertex_oport_oport|1683|0|2701|0|{0|out0|}1011|1019|}
{2010216002|XXGoport_binding_oport|1684|0|2703|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}1019|1017|}
{2010213001|XXGoport_dst_flow|1685|0|2704|0|{0|}1019|1002|}
{2010211001|XXGvertex_iport_iport|1686|0|2705|0|{0|in0|}1011|1020|}
{2010215002|XXGiport_binding_iport|1687|0|2707|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}1020|1015|}
{2010006001|XXGobject_psameas_object|1688|0|2708|0|{OutputLayout|Layout|0|0|}1011|967|}
{2010601001|XXGgraph_vertex_vertex|1689|0|2709|0|{Sort_within_Groups|}1001|1021|}
{2010212001|XXGvertex_oport_oport|1690|0|2711|0|{0|out|}1021|1022|}
{2010213001|XXGoport_dst_flow|1691|0|2713|0|{0|}1022|1003|}
{2010211001|XXGvertex_iport_iport|1692|0|2714|0|{0|in|}1021|1023|}
{2010214001|XXGiport_src_flow|1693|0|2716|0|{0|}1023|1002|}
{2010006001|XXGobject_psameas_object|1694|0|2717|0|{Layout|Layout|0|0|}1021|967|}
{2010006001|XXGobject_psameas_object|1695|0|2718|0|{in_metadata|out0_metadata|0|0|}1021|973|}
{2010006001|XXGobject_psameas_object|1696|0|2719|0|{out_metadata|out0_metadata|0|0|}1021|973|}
{2010212001|XXGvertex_oport_oport|1697|0|2720|0|{0|out0|}1001|1024|}
{2010216002|XXGoport_binding_oport|1698|0|2722|0|{.5|.5|{0|}14672|}1024|1005|}
{2010213001|XXGoport_dst_flow|1699|0|2723|0|{0|}1024|954|}
{2010212001|XXGvertex_oport_oport|1700|0|2724|0|{1|out1|}1001|1025|}
{2010216002|XXGoport_binding_oport|1701|0|2726|0|{.5|.5|{0|}14673|}1025|1006|}
{2010213001|XXGoport_dst_flow|1702|0|2727|0|{0|}1025|959|}
{2010211001|XXGvertex_iport_iport|1703|0|2728|0|{0|in0|}1001|1026|}
{2010215002|XXGiport_binding_iport|1704|0|2730|0|{.5|.5|{0|}14671|}1026|1020|}
{2010214001|XXGiport_src_flow|1705|0|2731|0|{0|}1026|951|}
{2010601001|XXGgraph_vertex_vertex|1706|0|2732|0|{Sort_on_Adjusted_Natural_Keys|}936|1027|}
{2010212001|XXGvertex_oport_oport|1707|0|2734|0|{0|out|}1027|1028|}
{2010213001|XXGoport_dst_flow|1708|0|2736|0|{0|}1028|947|}
{2010211001|XXGvertex_iport_iport|1709|0|2737|0|{0|in|}1027|1029|}
{2010214001|XXGiport_src_flow|1710|0|2739|0|{0|}1029|949|}
{2010006001|XXGobject_psameas_object|1711|0|2740|0|{Layout|Layout|0|0|}1027|967|}
{2010006001|XXGobject_psameas_object|1712|0|2741|0|{in_metadata|out_metadata|0|0|}1027|979|}
{2010006001|XXGobject_psameas_object|1713|0|2742|0|{out_metadata|out_metadata|0|0|}1027|979|}
{2010601001|XXGgraph_vertex_vertex|1714|0|2743|0|{Trash_1|}936|1030|}
{2010211001|XXGvertex_iport_iport|1715|0|2745|0|{0|in|}1030|1031|}
{2010214001|XXGiport_src_flow|1716|0|2747|0|{0|}1031|957|}
{2010006001|XXGobject_psameas_object|1717|0|2748|0|{Layout|Layout|0|0|}1030|967|}
{2010006001|XXGobject_psameas_object|1718|0|2749|0|{in_metadata|out_metadata|0|0|}1030|979|}
{2010601001|XXGgraph_vertex_vertex|1719|0|2750|0|{Trash_2|}936|1032|}
{2010211001|XXGvertex_iport_iport|1720|0|2752|0|{0|in|}1032|1033|}
{2010214001|XXGiport_src_flow|1721|0|2754|0|{0|}1033|956|}
{2010006001|XXGobject_psameas_object|1722|0|2755|0|{Layout|Layout|0|0|}1032|967|}
{2010006001|XXGobject_psameas_object|1723|0|2756|0|{in_metadata|out_metadata|0|0|}1032|979|}
{2010601001|XXGgraph_vertex_vertex|1724|0|2757|0|{Trash_3|}936|1034|}
{2010211001|XXGvertex_iport_iport|1725|0|2759|0|{0|in|}1034|1035|}
{2010214001|XXGiport_src_flow|1726|0|2761|0|{0|}1035|959|}
{2010006001|XXGobject_psameas_object|1727|0|2762|0|{Layout|Layout|0|0|}1034|967|}
{2010006001|XXGobject_psameas_object|1728|0|2763|0|{in_metadata|out0_metadata|0|0|}1034|973|}
{2010212001|XXGvertex_oport_oport|1729|0|2764|0|{0|out0|}936|1036|}
{2010216002|XXGoport_binding_oport|1730|0|2766|0|{.5|.5|{0|}14919|}1036|996|}
{2010213001|XXGoport_dst_flow|1731|0|2767|0|{0|}1036|933|}
{2010211001|XXGvertex_iport_iport|1732|0|2768|0|{0|in0|}936|1037|}
{2010215002|XXGiport_binding_iport|1733|0|2770|0|{.5|.5|{0|}14918|}1037|978|}
{2010214001|XXGiport_src_flow|1734|0|2771|0|{0|}1037|931|}
{2010601001|XXGgraph_vertex_vertex|1735|0|2772|0|{Get_Last_Lookup_Record|}926|1038|}
{2010605001|XXGgraph_legend_legend|1736|0|2774|0|{0|}1038|1039|}
{2010241001|XXGlegend_face_face|1737|0|2776|0|{}1039|1040|}
{2010605001|XXGgraph_legend_legend|1738|0|2778|0|{1|}1038|1041|}
{2010241001|XXGlegend_face_face|1739|0|2780|0|{}1041|1042|}
{2010605001|XXGgraph_legend_legend|1740|0|2782|0|{2|}1038|1043|}
{2010241001|XXGlegend_face_face|1741|0|2784|0|{}1043|1044|}
{2010605001|XXGgraph_legend_legend|1742|0|2786|0|{3|}1038|1045|}
{2010241001|XXGlegend_face_face|1743|0|2788|0|{}1045|1046|}
{2010604001|XXGgraph_flow_flow|1744|0|2790|0|{Flow_1|}1038|1047|}
{2010604001|XXGgraph_flow_flow|1745|0|2792|0|{Flow_2|}1038|1048|}
{2010604001|XXGgraph_flow_flow|1746|0|2794|0|{Flow_3|}1038|1049|}
{2010604001|XXGgraph_flow_flow|1747|0|2796|0|{Flow_4|}1038|1050|}
{2010604001|XXGgraph_flow_flow|1748|0|2798|0|{Flow_5|}1038|1051|}
{2010604001|XXGgraph_flow_flow|1749|0|2800|0|{Flow_6|}1038|1052|}
{2010604001|XXGgraph_flow_flow|1750|0|2802|0|{Flow_7|}1038|1053|}
{2010604001|XXGgraph_flow_flow|1751|0|2804|0|{Flow_8|}1038|1054|}
{2010604001|XXGgraph_flow_flow|1752|0|2806|0|{Flow_9|}1038|1055|}
{2010601001|XXGgraph_vertex_vertex|1753|0|2808|0|{Dedup_Sorted|}1038|1056|}
{2010212001|XXGvertex_oport_oport|1754|0|2810|0|{0|out|}1056|1057|}
{2010212001|XXGvertex_oport_oport|1755|0|2812|0|{1|dup|}1056|1058|}
{2010213001|XXGoport_dst_flow|1756|0|2814|0|{0|}1058|1054|}
{2010212001|XXGvertex_oport_oport|1757|0|2815|0|{2|reject|}1056|1059|}
{2010212001|XXGvertex_oport_oport|1758|0|2817|0|{3|error|}1056|1060|}
{2010212001|XXGvertex_oport_oport|1759|0|2819|0|{4|log|}1056|1061|}
{2010211001|XXGvertex_iport_iport|1760|0|2821|0|{0|in|}1056|1062|}
{2010214001|XXGiport_src_flow|1761|0|2823|0|{0|}1062|1049|}
{2010006001|XXGobject_psameas_object|1762|0|2824|0|{Layout|Layout|0|0|}1056|967|}
{2010006001|XXGobject_psameas_object|1763|0|2825|0|{dup_metadata|out_metadata|0|0|}1056|1063|}
{2010212001|XXGvertex_oport_oport|1764|0|2827|0|{0|out|}1063|1064|}
{2010213001|XXGoport_dst_flow|1765|0|2829|0|{0|}1064|1048|}
{2010212001|XXGvertex_oport_oport|1766|0|2830|0|{1|deselect|}1063|1065|}
{2010213001|XXGoport_dst_flow|1767|0|2832|0|{0|}1065|1055|}
{2010212001|XXGvertex_oport_oport|1768|0|2833|0|{2|reject|}1063|1066|}
{2010212001|XXGvertex_oport_oport|1769|0|2835|0|{3|error|}1063|1067|}
{2010212001|XXGvertex_oport_oport|1770|0|2837|0|{4|log|}1063|1068|}
{2010211001|XXGvertex_iport_iport|1771|0|2839|0|{0|in|}1063|1069|}
{2010214001|XXGiport_src_flow|1772|0|2841|0|{0|}1069|1051|}
{2010006001|XXGobject_psameas_object|1773|0|2842|0|{Layout|Layout|0|0|}1063|967|}
{2010006001|XXGobject_psameas_object|1774|0|2843|0|{deselect_metadata|out_metadata|0|0|}1063|1063|}
{2010006001|XXGobject_psameas_object|1775|0|2844|0|{in_metadata|out_metadata|0|0|}1063|1070|}
{2010212001|XXGvertex_oport_oport|1776|0|2846|0|{0|out|}1070|1071|}
{2010213001|XXGoport_dst_flow|1777|0|2848|0|{0|}1071|1072|}
{2010212001|XXGvertex_oport_oport|1778|0|2850|0|{1|deselect|}1070|1073|}
{2010213001|XXGoport_dst_flow|1779|0|2852|0|{0|}1073|1074|}
{2010212001|XXGvertex_oport_oport|1780|0|2854|0|{2|reject|}1070|1075|}
{2010212001|XXGvertex_oport_oport|1781|0|2856|0|{3|error|}1070|1076|}
{2010212001|XXGvertex_oport_oport|1782|0|2858|0|{4|log|}1070|1077|}
{2010211001|XXGvertex_iport_iport|1783|0|2860|0|{0|in|}1070|1078|}
{2010006001|XXGobject_psameas_object|1784|0|2862|0|{Layout|Layout|0|0|}1070|967|}
{2010006001|XXGobject_psameas_object|1785|0|2863|0|{in_metadata|out0_metadata|0|0|}1070|1079|}
{2010212001|XXGvertex_oport_oport|1786|0|2865|0|{0|out0|}1079|1080|}
{2010213001|XXGoport_dst_flow|1787|0|2867|0|{0|}1080|1050|}
{2010212001|XXGvertex_oport_oport|1788|0|2868|0|{1|reject0|}1079|1081|}
{2010212001|XXGvertex_oport_oport|1789|0|2870|0|{2|error0|}1079|1082|}
{2010212001|XXGvertex_oport_oport|1790|0|2872|0|{3|log|}1079|1083|}
{2010211001|XXGvertex_iport_iport|1791|0|2874|0|{0|in|}1079|1084|}
{2010214001|XXGiport_src_flow|1792|0|2876|0|{0|}1084|1052|}
{2010006001|XXGobject_psameas_object|1793|0|2877|0|{Layout|Layout|0|0|}1079|967|}
{2010006001|XXGobject_psameas_object|1794|0|2878|0|{in_metadata|out0_metadata|0|0|}1079|1085|}
{2010212001|XXGvertex_oport_oport|1795|0|2880|0|{0|out0|}1085|1086|}
{2010213001|XXGoport_dst_flow|1796|0|2882|0|{0|}1086|1047|}
{2010212001|XXGvertex_oport_oport|1797|0|2883|0|{1|reject0|}1085|1087|}
{2010212001|XXGvertex_oport_oport|1798|0|2885|0|{2|error0|}1085|1088|}
{2010212001|XXGvertex_oport_oport|1799|0|2887|0|{3|log|}1085|1089|}
{2010211001|XXGvertex_iport_iport|1800|0|2889|0|{0|in|}1085|1090|}
{2010006001|XXGobject_psameas_object|1801|0|2891|0|{Layout|Layout|0|0|}1085|242|}
{2010006001|XXGobject_psameas_object|1802|0|2892|0|{in_metadata|out1_metadata|0|0|}1085|242|}
{2010006001|XXGobject_psameas_object|1803|0|2893|0|{reject0_metadata|out1_metadata|0|0|}1085|242|}
{2010006001|XXGobject_psameas_object|1804|0|2894|0|{reject0_metadata|out0_metadata|0|0|}1079|1085|}
{2010006001|XXGobject_psameas_object|1805|0|2895|0|{reject_metadata|out0_metadata|0|0|}1070|1079|}
{2010006001|XXGobject_psameas_object|1806|0|2896|0|{reject_metadata|out_metadata|0|0|}1063|1070|}
{2010006001|XXGobject_psameas_object|1807|0|2897|0|{in_metadata|out_metadata|0|0|}1056|1063|}
{2010006001|XXGobject_psameas_object|1808|0|2898|0|{out_metadata|out_metadata|0|0|}1056|1063|}
{2010006001|XXGobject_psameas_object|1809|0|2899|0|{reject_metadata|out_metadata|0|0|}1056|1063|}
{2010601001|XXGgraph_vertex_vertex|1810|0|2900|0|{FBE_filter_matching_lkp_record|}1038|1063|}
{2010601001|XXGgraph_vertex_vertex|1811|0|2901|0|{RFMT_Get_Hash_On_NK|}1038|1085|}
{2010601001|XXGgraph_vertex_vertex|1812|0|2902|0|{RFMT_Lookup_with_IDS|}1038|1079|}
{2010601001|XXGgraph_vertex_vertex|1813|0|2903|0|{Sort_De_dup|}1038|1091|}
{2010604001|XXGgraph_flow_flow|1814|0|2905|0|{Flow_10|}1091|1092|}
{2010604001|XXGgraph_flow_flow|1815|0|2907|0|{Flow_4|}1091|1093|}
{2010244001|XXGflow_watcher_watcher|1816|0|2909|0|{}1093|1094|}
{2010601001|XXGgraph_vertex_vertex|1817|0|2911|0|{Dedup_Sorted_1|}1091|1095|}
{2010212001|XXGvertex_oport_oport|1818|0|2913|0|{0|out|}1095|1096|}
{2010212001|XXGvertex_oport_oport|1819|0|2915|0|{1|dup|}1095|1097|}
{2010212001|XXGvertex_oport_oport|1820|0|2917|0|{2|reject|}1095|1098|}
{2010212001|XXGvertex_oport_oport|1821|0|2919|0|{3|error|}1095|1099|}
{2010212001|XXGvertex_oport_oport|1822|0|2921|0|{4|log|}1095|1100|}
{2010211001|XXGvertex_iport_iport|1823|0|2923|0|{0|in|}1095|1101|}
{2010214001|XXGiport_src_flow|1824|0|2925|0|{0|}1101|1092|}
{2010006001|XXGobject_psameas_object|1825|0|2926|0|{Layout|Layout|0|0|}1095|967|}
{2010006001|XXGobject_psameas_object|1826|0|2927|0|{dup_metadata|out0_metadata|0|0|}1095|1085|}
{2010006001|XXGobject_psameas_object|1827|0|2928|0|{in_metadata|out0_metadata|0|0|}1095|1085|}
{2010006001|XXGobject_psameas_object|1828|0|2929|0|{out_metadata|out0_metadata|0|0|}1095|1085|}
{2010006001|XXGobject_psameas_object|1829|0|2930|0|{reject_metadata|out0_metadata|0|0|}1095|1085|}
{2010601001|XXGgraph_vertex_vertex|1830|0|2931|0|{PBKS_dxf_hk_part1_|}1091|1102|}
{2010604001|XXGgraph_flow_flow|1831|0|2933|0|{Flow_1|}1102|1103|}
{2010601001|XXGgraph_vertex_vertex|1832|0|2935|0|{Partition_by_Key|}1102|1104|}
{2010212001|XXGvertex_oport_oport|1833|0|2937|0|{0|out|}1104|1105|}
{2010213001|XXGoport_dst_flow|1834|0|2939|0|{0|}1105|1103|}
{2010211001|XXGvertex_iport_iport|1835|0|2940|0|{0|in|}1104|1106|}
{2010006001|XXGobject_psameas_object|1836|0|2942|0|{in_metadata|out0_metadata|0|0|}1104|1085|}
{2010006001|XXGobject_psameas_object|1837|0|2943|0|{out_metadata|out0_metadata|0|0|}1104|1085|}
{2010601001|XXGgraph_vertex_vertex|1838|0|2944|0|{Sort|}1102|1107|}
{2010212001|XXGvertex_oport_oport|1839|0|2946|0|{0|out|}1107|1108|}
{2010211001|XXGvertex_iport_iport|1840|0|2948|0|{0|in|}1107|1109|}
{2010214001|XXGiport_src_flow|1841|0|2950|0|{0|}1109|1103|}
{2010006001|XXGobject_psameas_object|1842|0|2951|0|{in_metadata|out0_metadata|0|0|}1107|1085|}
{2010006001|XXGobject_psameas_object|1843|0|2952|0|{out_metadata|out0_metadata|0|0|}1107|1085|}
{2010212001|XXGvertex_oport_oport|1844|0|2953|0|{0|out0|}1102|1110|}
{2010216002|XXGoport_binding_oport|1845|0|2955|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}1110|1108|}
{2010213001|XXGoport_dst_flow|1846|0|2956|0|{0|}1110|1093|}
{2010211001|XXGvertex_iport_iport|1847|0|2957|0|{0|in0|}1102|1111|}
{2010215002|XXGiport_binding_iport|1848|0|2959|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}1111|1106|}
{2010006001|XXGobject_psameas_object|1849|0|2960|0|{InputLayout|Layout|0|0|}1102|242|}
{2010006001|XXGobject_psameas_object|1850|0|2961|0|{OutputLayout|Layout|0|0|}1102|967|}
{2010601001|XXGgraph_vertex_vertex|1851|0|2962|0|{Sort_within_Groups_1|}1091|1112|}
{2010212001|XXGvertex_oport_oport|1852|0|2964|0|{0|out|}1112|1113|}
{2010213001|XXGoport_dst_flow|1853|0|2966|0|{0|}1113|1092|}
{2010211001|XXGvertex_iport_iport|1854|0|2967|0|{0|in|}1112|1114|}
{2010214001|XXGiport_src_flow|1855|0|2969|0|{0|}1114|1093|}
{2010006001|XXGobject_psameas_object|1856|0|2970|0|{Layout|Layout|0|0|}1112|967|}
{2010006001|XXGobject_psameas_object|1857|0|2971|0|{in_metadata|out0_metadata|0|0|}1112|1085|}
{2010006001|XXGobject_psameas_object|1858|0|2972|0|{out_metadata|out0_metadata|0|0|}1112|1085|}
{2010212001|XXGvertex_oport_oport|1859|0|2973|0|{0|out0|}1091|1115|}
{2010216002|XXGoport_binding_oport|1860|0|2975|0|{.5|.5|{0|}7792|}1115|1096|}
{2010213001|XXGoport_dst_flow|1861|0|2976|0|{0|}1115|1052|}
{2010212001|XXGvertex_oport_oport|1862|0|2977|0|{1|out1|}1091|1116|}
{2010216002|XXGoport_binding_oport|1863|0|2979|0|{.5|.5|{0|}7793|}1116|1097|}
{2010213001|XXGoport_dst_flow|1864|0|2980|0|{0|}1116|1053|}
{2010211001|XXGvertex_iport_iport|1865|0|2981|0|{0|in0|}1091|1117|}
{2010215002|XXGiport_binding_iport|1866|0|2983|0|{.5|.5|{0|}7791|}1117|1111|}
{2010214001|XXGiport_src_flow|1867|0|2984|0|{0|}1117|1047|}
{2010601001|XXGgraph_vertex_vertex|1868|0|2985|0|{Sort_within_Groups|}1038|1118|}
{2010212001|XXGvertex_oport_oport|1869|0|2987|0|{0|out|}1118|1119|}
{2010213001|XXGoport_dst_flow|1870|0|2989|0|{0|}1119|1049|}
{2010211001|XXGvertex_iport_iport|1871|0|2990|0|{0|in|}1118|1120|}
{2010214001|XXGiport_src_flow|1872|0|2992|0|{0|}1120|1048|}
{2010006001|XXGobject_psameas_object|1873|0|2993|0|{Layout|Layout|0|0|}1118|967|}
{2010006001|XXGobject_psameas_object|1874|0|2994|0|{in_metadata|out_metadata|0|0|}1118|1063|}
{2010006001|XXGobject_psameas_object|1875|0|2995|0|{out_metadata|out_metadata|0|0|}1118|1063|}
{2010601001|XXGgraph_vertex_vertex|1876|0|2996|0|{Trash|}1038|1121|}
{2010211001|XXGvertex_iport_iport|1877|0|2998|0|{0|in|}1121|1122|}
{2010214001|XXGiport_src_flow|1878|0|3000|0|{0|}1122|1053|}
{2010006001|XXGobject_psameas_object|1879|0|3001|0|{Layout|Layout|0|0|}1121|967|}
{2010006001|XXGobject_psameas_object|1880|0|3002|0|{in_metadata|out0_metadata|0|0|}1121|1085|}
{2010601001|XXGgraph_vertex_vertex|1881|0|3003|0|{Trash_1|}1038|1123|}
{2010211001|XXGvertex_iport_iport|1882|0|3005|0|{0|in|}1123|1124|}
{2010214001|XXGiport_src_flow|1883|0|3007|0|{0|}1124|1054|}
{2010006001|XXGobject_psameas_object|1884|0|3008|0|{Layout|Layout|0|0|}1123|967|}
{2010006001|XXGobject_psameas_object|1885|0|3009|0|{in_metadata|out_metadata|0|0|}1123|1063|}
{2010601001|XXGgraph_vertex_vertex|1886|0|3010|0|{Trash_2|}1038|1125|}
{2010211001|XXGvertex_iport_iport|1887|0|3012|0|{0|in|}1125|1126|}
{2010214001|XXGiport_src_flow|1888|0|3014|0|{0|}1126|1055|}
{2010006001|XXGobject_psameas_object|1889|0|3015|0|{Layout|Layout|0|0|}1125|967|}
{2010006001|XXGobject_psameas_object|1890|0|3016|0|{in_metadata|out_metadata|0|0|}1125|1063|}
{2010601001|XXGgraph_vertex_vertex|1891|0|3017|0|{Two_Step_Lookup|}1038|1127|}
{2010605001|XXGgraph_legend_legend|1892|0|3019|0|{0|}1127|1128|}
{2010241001|XXGlegend_face_face|1893|0|3021|0|{}1128|1129|}
{2010604001|XXGgraph_flow_flow|1894|0|3023|0|{Flow_1|}1127|1074|}
{2010604001|XXGgraph_flow_flow|1895|0|3024|0|{Flow_2|}1127|1130|}
{2010604001|XXGgraph_flow_flow|1896|0|3026|0|{Flow_3|}1127|1072|}
{2010604001|XXGgraph_flow_flow|1897|0|3027|0|{Flow_4|}1127|1131|}
{2010604001|XXGgraph_flow_flow|1898|0|3029|0|{Flow_5|}1127|1132|}
{2010604001|XXGgraph_flow_flow|1899|0|3031|0|{Flow_6|}1127|1133|}
{2010601001|XXGgraph_vertex_vertex|1900|0|3033|0|{FBE_Pass_Only_Matching_Rec|}1127|1134|}
{2010212001|XXGvertex_oport_oport|1901|0|3035|0|{0|out|}1134|1135|}
{2010213001|XXGoport_dst_flow|1902|0|3037|0|{0|}1135|1132|}
{2010212001|XXGvertex_oport_oport|1903|0|3038|0|{1|deselect|}1134|1136|}
{2010213001|XXGoport_dst_flow|1904|0|3040|0|{0|}1136|1133|}
{2010212001|XXGvertex_oport_oport|1905|0|3041|0|{2|reject|}1134|1137|}
{2010212001|XXGvertex_oport_oport|1906|0|3043|0|{3|error|}1134|1138|}
{2010212001|XXGvertex_oport_oport|1907|0|3045|0|{4|log|}1134|1139|}
{2010211001|XXGvertex_iport_iport|1908|0|3047|0|{0|in|}1134|1140|}
{2010214001|XXGiport_src_flow|1909|0|3049|0|{0|}1140|1131|}
{2010006001|XXGobject_psameas_object|1910|0|3050|0|{Layout|Layout|0|0|}1134|967|}
{2010006001|XXGobject_psameas_object|1911|0|3051|0|{deselect_metadata|out_metadata|0|0|}1134|1070|}
{2010006001|XXGobject_psameas_object|1912|0|3052|0|{in_metadata|out0_metadata|0|0|}1134|1141|}
{2010212001|XXGvertex_oport_oport|1913|0|3054|0|{0|out0|}1141|1142|}
{2010213001|XXGoport_dst_flow|1914|0|3056|0|{0|}1142|1131|}
{2010212001|XXGvertex_oport_oport|1915|0|3057|0|{1|reject0|}1141|1143|}
{2010212001|XXGvertex_oport_oport|1916|0|3059|0|{2|error0|}1141|1144|}
{2010212001|XXGvertex_oport_oport|1917|0|3061|0|{3|log|}1141|1145|}
{2010211001|XXGvertex_iport_iport|1918|0|3063|0|{0|in|}1141|1146|}
{2010214001|XXGiport_src_flow|1919|0|3065|0|{0|}1146|1130|}
{2010006001|XXGobject_psameas_object|1920|0|3066|0|{Layout|Layout|0|0|}1141|967|}
{2010006001|XXGobject_psameas_object|1921|0|3067|0|{in_metadata|out0_metadata|0|0|}1141|1147|}
{2010212001|XXGvertex_oport_oport|1922|0|3069|0|{0|out0|}1147|1148|}
{2010213001|XXGoport_dst_flow|1923|0|3071|0|{0|}1148|1130|}
{2010212001|XXGvertex_oport_oport|1924|0|3072|0|{1|reject0|}1147|1149|}
{2010212001|XXGvertex_oport_oport|1925|0|3074|0|{2|error0|}1147|1150|}
{2010212001|XXGvertex_oport_oport|1926|0|3076|0|{3|log|}1147|1151|}
{2010211001|XXGvertex_iport_iport|1927|0|3078|0|{0|in|}1147|1152|}
{2010214001|XXGiport_src_flow|1928|0|3080|0|{0|}1152|1074|}
{2010006001|XXGobject_psameas_object|1929|0|3081|0|{Layout|Layout|0|0|}1147|967|}
{2010006001|XXGobject_psameas_object|1930|0|3082|0|{in_metadata|deselect_metadata|0|0|}1147|1070|}
{2010006001|XXGobject_psameas_object|1931|0|3083|0|{reject0_metadata|deselect_metadata|0|0|}1147|1070|}
{2010006001|XXGobject_psameas_object|1932|0|3084|0|{reject0_metadata|out0_metadata|0|0|}1141|1147|}
{2010006001|XXGobject_psameas_object|1933|0|3085|0|{out_metadata|out_metadata|0|0|}1134|1070|}
{2010006001|XXGobject_psameas_object|1934|0|3086|0|{reject_metadata|out0_metadata|0|0|}1134|1141|}
{2010601001|XXGgraph_vertex_vertex|1935|0|3087|0|{FBE_filter_matching_lkp_record|}1127|1070|}
{2010601001|XXGgraph_vertex_vertex|1936|0|3088|0|{Merge|}1127|1153|}
{2010212001|XXGvertex_oport_oport|1937|0|3090|0|{0|out|}1153|1154|}
{2010211001|XXGvertex_iport_iport|1938|0|3092|0|{0|in|}1153|1155|}
{2010214001|XXGiport_src_flow|1939|0|3094|0|{0|}1155|1072|}
{2010214001|XXGiport_src_flow|1940|0|3095|0|{1|}1155|1132|}
{2010006001|XXGobject_psameas_object|1941|0|3096|0|{Layout|Layout|0|0|}1153|967|}
{2010006001|XXGobject_psameas_object|1942|0|3097|0|{in_metadata|out_metadata|0|0|}1153|1070|}
{2010006001|XXGobject_psameas_object|1943|0|3098|0|{out_metadata|out_metadata|0|0|}1153|1070|}
{2010601001|XXGgraph_vertex_vertex|1944|0|3099|0|{No_Match_Record_In_Second_Pass|}1127|1156|}
{2010211001|XXGvertex_iport_iport|1945|0|3101|0|{0|in|}1156|1157|}
{2010214001|XXGiport_src_flow|1946|0|3103|0|{0|}1157|1133|}
{2010006001|XXGobject_psameas_object|1947|0|3104|0|{Layout|Layout|0|0|}1156|967|}
{2010006001|XXGobject_psameas_object|1948|0|3105|0|{in_metadata|out_metadata|0|0|}1156|1070|}
{2010601001|XXGgraph_vertex_vertex|1949|0|3106|0|{RFMT_Lookup_with_IDS_Archive_|}1127|1141|}
{2010601001|XXGgraph_vertex_vertex|1950|0|3107|0|{RFMT_Pass_only_Hash_Keys|}1127|1147|}
{2010212001|XXGvertex_oport_oport|1951|0|3108|0|{0|out0|}1127|1158|}
{2010216002|XXGoport_binding_oport|1952|0|3110|0|{.5|.5|{0|}15500|}1158|1154|}
{2010213001|XXGoport_dst_flow|1953|0|3111|0|{0|}1158|1051|}
{2010211001|XXGvertex_iport_iport|1954|0|3112|0|{0|in0|}1127|1159|}
{2010215002|XXGiport_binding_iport|1955|0|3114|0|{.5|.5|{0|}15499|}1159|1078|}
{2010214001|XXGiport_src_flow|1956|0|3115|0|{0|}1159|1050|}
{2010212001|XXGvertex_oport_oport|1957|0|3116|0|{0|out0|}1038|1160|}
{2010216002|XXGoport_binding_oport|1958|0|3118|0|{.5|.5|{0|}15515|}1160|1057|}
{2010213001|XXGoport_dst_flow|1959|0|3119|0|{0|}1160|934|}
{2010211001|XXGvertex_iport_iport|1960|0|3120|0|{0|in1|}1038|1161|}
{2010215002|XXGiport_binding_iport|1961|0|3122|0|{.5|.5|{0|}15514|}1161|1090|}
{2010214001|XXGiport_src_flow|1962|0|3123|0|{0|}1161|932|}
{2010601001|XXGgraph_vertex_vertex|1963|0|3124|0|{Merge|}926|1162|}
{2010212001|XXGvertex_oport_oport|1964|0|3126|0|{0|out|}1162|1163|}
{2010211001|XXGvertex_iport_iport|1965|0|3128|0|{0|in|}1162|1164|}
{2010214001|XXGiport_src_flow|1966|0|3130|0|{0|}1164|935|}
{2010006001|XXGobject_psameas_object|1967|0|3131|0|{Layout|Layout|0|0|}1162|157|}
{2010006001|XXGobject_psameas_object|1968|0|3132|0|{in_metadata|write_metadata|0|0|}1162|157|}
{2010006001|XXGobject_psameas_object|1969|0|3133|0|{out_metadata|write_metadata|0|0|}1162|157|}
{2010601001|XXGgraph_vertex_vertex|1970|0|3134|0|{Replicate|}926|1165|}
{2010212001|XXGvertex_oport_oport|1971|0|3136|0|{0|out|}1165|1166|}
{2010213001|XXGoport_dst_flow|1972|0|3138|0|{0|}1166|931|}
{2010213001|XXGoport_dst_flow|1973|0|3139|0|{1|}1166|932|}
{2010211001|XXGvertex_iport_iport|1974|0|3140|0|{0|in|}1165|1167|}
{2010006001|XXGobject_psameas_object|1975|0|3142|0|{Layout|Layout|0|0|}1165|242|}
{2010006001|XXGobject_psameas_object|1976|0|3143|0|{in_metadata|out1_metadata|0|0|}1165|242|}
{2010006001|XXGobject_psameas_object|1977|0|3144|0|{out_metadata|out1_metadata|0|0|}1165|242|}
{2010601001|XXGgraph_vertex_vertex|1978|0|3145|0|{Replicate_1|}926|1168|}
{2010212001|XXGvertex_oport_oport|1979|0|3147|0|{0|out|}1168|1169|}
{2010213001|XXGoport_dst_flow|1980|0|3149|0|{0|}1169|935|}
{2010211001|XXGvertex_iport_iport|1981|0|3150|0|{0|in|}1168|1170|}
{2010214001|XXGiport_src_flow|1982|0|3152|0|{0|}1170|933|}
{2010214001|XXGiport_src_flow|1983|0|3153|0|{1|}1170|934|}
{2010006001|XXGobject_psameas_object|1984|0|3154|0|{Layout|Layout|0|0|}1168|967|}
{2010006001|XXGobject_psameas_object|1985|0|3155|0|{in_metadata|out_metadata|0|0|}1168|1063|}
{2010006001|XXGobject_psameas_object|1986|0|3156|0|{out_metadata|out_metadata|0|0|}1168|1063|}
{2010212001|XXGvertex_oport_oport|1987|0|3157|0|{0|out0|}926|1171|}
{2010216002|XXGoport_binding_oport|1988|0|3159|0|{.5|.5|{0|}7802|}1171|1163|}
{2010213001|XXGoport_dst_flow|1989|0|3160|0|{0|}1171|150|}
{2010211001|XXGvertex_iport_iport|1990|0|3161|0|{0|in0|}926|1172|}
{2010215002|XXGiport_binding_iport|1991|0|3163|0|{.5|.5|{0|}7801|}1172|1167|}
{2010007001|XXGobject_proto_object|1992|0|3164|0|{}926|1173|}
{2010605001|XXGgraph_legend_legend|1993|0|3166|0|{0|}1173|1174|}
{2010241001|XXGlegend_face_face|1994|0|3168|0|{}1174|1175|}
{2010605001|XXGgraph_legend_legend|1995|0|3170|0|{1|}1173|1176|}
{2010241001|XXGlegend_face_face|1996|0|3172|0|{}1176|1177|}
{2010604001|XXGgraph_flow_flow|1997|0|3174|0|{Flow_1|}1173|1178|}
{2010604001|XXGgraph_flow_flow|1998|0|3176|0|{Flow_2|}1173|1179|}
{2010604001|XXGgraph_flow_flow|1999|0|3178|0|{Flow_3|}1173|1180|}
{2010604001|XXGgraph_flow_flow|2000|0|3180|0|{Flow_4|}1173|1181|}
{2010604001|XXGgraph_flow_flow|2001|0|3182|0|{Flow_5|}1173|1182|}
{2010601001|XXGgraph_vertex_vertex|2002|0|3184|0|{Get_All_LookUp_Record|}1173|1183|}
{2010605001|XXGgraph_legend_legend|2003|0|3186|0|{0|}1183|1184|}
{2010241001|XXGlegend_face_face|2004|0|3188|0|{}1184|1185|}
{2010605001|XXGgraph_legend_legend|2005|0|3190|0|{1|}1183|1186|}
{2010241001|XXGlegend_face_face|2006|0|3192|0|{}1186|1187|}
{2010605001|XXGgraph_legend_legend|2007|0|3194|0|{2|}1183|1188|}
{2010241001|XXGlegend_face_face|2008|0|3196|0|{}1188|1189|}
{2010605001|XXGgraph_legend_legend|2009|0|3198|0|{3|}1183|1190|}
{2010241001|XXGlegend_face_face|2010|0|3200|0|{}1190|1191|}
{2010605001|XXGgraph_legend_legend|2011|0|3202|0|{4|}1183|1192|}
{2010241001|XXGlegend_face_face|2012|0|3204|0|{}1192|1193|}
{2010604001|XXGgraph_flow_flow|2013|0|3206|0|{Flow_1|}1183|1194|}
{2010604001|XXGgraph_flow_flow|2014|0|3208|0|{Flow_10|}1183|1195|}
{2010604001|XXGgraph_flow_flow|2015|0|3210|0|{Flow_11|}1183|1196|}
{2010604001|XXGgraph_flow_flow|2016|0|3212|0|{Flow_12|}1183|1197|}
{2010604001|XXGgraph_flow_flow|2017|0|3214|0|{Flow_18|}1183|1198|}
{2010604001|XXGgraph_flow_flow|2018|0|3216|0|{Flow_2|}1183|1199|}
{2010604001|XXGgraph_flow_flow|2019|0|3218|0|{Flow_3|}1183|1200|}
{2010604001|XXGgraph_flow_flow|2020|0|3220|0|{Flow_4|}1183|1201|}
{2010604001|XXGgraph_flow_flow|2021|0|3222|0|{Flow_5|}1183|1202|}
{2010604001|XXGgraph_flow_flow|2022|0|3224|0|{Flow_6|}1183|1203|}
{2010604001|XXGgraph_flow_flow|2023|0|3226|0|{Flow_7|}1183|1204|}
{2010604001|XXGgraph_flow_flow|2024|0|3228|0|{Flow_8|}1183|1205|}
{2010604001|XXGgraph_flow_flow|2025|0|3230|0|{Flow_9|}1183|1206|}
{2010601001|XXGgraph_vertex_vertex|2026|0|3232|0|{Dedup_Sorted|}1183|1207|}
{2010212001|XXGvertex_oport_oport|2027|0|3234|0|{0|out|}1207|1208|}
{2010213001|XXGoport_dst_flow|2028|0|3236|0|{0|}1208|1199|}
{2010212001|XXGvertex_oport_oport|2029|0|3237|0|{1|dup|}1207|1209|}
{2010213001|XXGoport_dst_flow|2030|0|3239|0|{0|}1209|1203|}
{2010212001|XXGvertex_oport_oport|2031|0|3240|0|{2|reject|}1207|1210|}
{2010212001|XXGvertex_oport_oport|2032|0|3242|0|{3|error|}1207|1211|}
{2010212001|XXGvertex_oport_oport|2033|0|3244|0|{4|log|}1207|1212|}
{2010211001|XXGvertex_iport_iport|2034|0|3246|0|{0|in|}1207|1213|}
{2010214001|XXGiport_src_flow|2035|0|3248|0|{0|}1213|1194|}
{2010007001|XXGobject_proto_object|2036|0|3249|0|{}1207|1214|}
{2010212001|XXGvertex_oport_oport|2037|0|3251|0|{0|out|}1214|1215|}
{2010006001|XXGobject_psameas_object|2038|0|3253|0|{metadata|out_metadata|1|0|}1215|1214|}
{2010212001|XXGvertex_oport_oport|2039|0|3254|0|{1|dup|}1214|1216|}
{2010006001|XXGobject_psameas_object|2040|0|3256|0|{metadata|dup_metadata|1|0|}1216|1214|}
{2010212001|XXGvertex_oport_oport|2041|0|3257|0|{2|reject|}1214|1217|}
{2010006001|XXGobject_psameas_object|2042|0|3259|0|{metadata|reject_metadata|1|0|}1217|1214|}
{2010212001|XXGvertex_oport_oport|2043|0|3260|0|{3|error|}1214|1218|}
{2010006001|XXGobject_psameas_object|2044|0|3262|0|{metadata|error_metadata|1|0|}1218|1214|}
{2010212001|XXGvertex_oport_oport|2045|0|3263|0|{4|log|}1214|1219|}
{2010006001|XXGobject_psameas_object|2046|0|3265|0|{metadata|log_metadata|1|0|}1219|1214|}
{2010211001|XXGvertex_iport_iport|2047|0|3266|0|{0|in|}1214|1220|}
{2010006001|XXGobject_psameas_object|2048|0|3268|0|{metadata|in_metadata|1|0|}1220|1214|}
{2010601001|XXGgraph_vertex_vertex|2049|0|3269|0|{FBE_Filter_match_records|}1183|1221|}
{2010212001|XXGvertex_oport_oport|2050|0|3271|0|{0|out|}1221|1222|}
{2010213001|XXGoport_dst_flow|2051|0|3273|0|{0|}1222|1196|}
{2010212001|XXGvertex_oport_oport|2052|0|3274|0|{1|deselect|}1221|1223|}
{2010213001|XXGoport_dst_flow|2053|0|3276|0|{0|}1223|1204|}
{2010212001|XXGvertex_oport_oport|2054|0|3277|0|{2|reject|}1221|1224|}
{2010212001|XXGvertex_oport_oport|2055|0|3279|0|{3|error|}1221|1225|}
{2010212001|XXGvertex_oport_oport|2056|0|3281|0|{4|log|}1221|1226|}
{2010211001|XXGvertex_iport_iport|2057|0|3283|0|{0|in|}1221|1227|}
{2010214001|XXGiport_src_flow|2058|0|3285|0|{0|}1227|1205|}
{2010007001|XXGobject_proto_object|2059|0|3286|0|{}1221|1228|}
{2010212001|XXGvertex_oport_oport|2060|0|3288|0|{0|out|}1228|1229|}
{2010006001|XXGobject_psameas_object|2061|0|3290|0|{metadata|out_metadata|1|0|}1229|1228|}
{2010212001|XXGvertex_oport_oport|2062|0|3291|0|{1|deselect|}1228|1230|}
{2010006001|XXGobject_psameas_object|2063|0|3293|0|{metadata|deselect_metadata|1|0|}1230|1228|}
{2010212001|XXGvertex_oport_oport|2064|0|3294|0|{2|reject|}1228|1231|}
{2010006001|XXGobject_psameas_object|2065|0|3296|0|{metadata|reject_metadata|1|0|}1231|1228|}
{2010212001|XXGvertex_oport_oport|2066|0|3297|0|{3|error|}1228|1232|}
{2010006001|XXGobject_psameas_object|2067|0|3299|0|{metadata|error_metadata|1|0|}1232|1228|}
{2010212001|XXGvertex_oport_oport|2068|0|3300|0|{4|log|}1228|1233|}
{2010006001|XXGobject_psameas_object|2069|0|3302|0|{metadata|log_metadata|1|0|}1233|1228|}
{2010211001|XXGvertex_iport_iport|2070|0|3303|0|{0|in|}1228|1234|}
{2010006001|XXGobject_psameas_object|2071|0|3305|0|{metadata|in_metadata|1|0|}1234|1228|}
{2010601001|XXGgraph_vertex_vertex|2072|0|3306|0|{Get_Hash_on_SRC_NK|}1183|1235|}
{2010212001|XXGvertex_oport_oport|2073|0|3308|0|{0|out0|}1235|1236|}
{2010213001|XXGoport_dst_flow|2074|0|3310|0|{0|}1236|1198|}
{2010212001|XXGvertex_oport_oport|2075|0|3311|0|{1|reject0|}1235|1237|}
{2010212001|XXGvertex_oport_oport|2076|0|3313|0|{2|error0|}1235|1238|}
{2010212001|XXGvertex_oport_oport|2077|0|3315|0|{3|log|}1235|1239|}
{2010211001|XXGvertex_iport_iport|2078|0|3317|0|{0|in|}1235|1240|}
{2010007001|XXGobject_proto_object|2079|0|3319|0|{}1235|1241|}
{2010212001|XXGvertex_oport_oport|2080|0|3321|0|{0|out0|}1241|1242|}
{2010006001|XXGobject_psameas_object|2081|0|3323|0|{metadata|out0_metadata|1|0|}1242|1241|}
{2010006001|XXGobject_psameas_object|2082|0|3324|0|{transform0|transform0|1|0|}1242|1241|}
{2010212001|XXGvertex_oport_oport|2083|0|3325|0|{1|reject0|}1241|1243|}
{2010006001|XXGobject_psameas_object|2084|0|3327|0|{metadata|reject0_metadata|1|0|}1243|1241|}
{2010212001|XXGvertex_oport_oport|2085|0|3328|0|{2|error0|}1241|1244|}
{2010006001|XXGobject_psameas_object|2086|0|3330|0|{metadata|error0_metadata|1|0|}1244|1241|}
{2010212001|XXGvertex_oport_oport|2087|0|3331|0|{3|log|}1241|1245|}
{2010006001|XXGobject_psameas_object|2088|0|3333|0|{metadata|log_metadata|1|0|}1245|1241|}
{2010211001|XXGvertex_iport_iport|2089|0|3334|0|{0|in|}1241|1246|}
{2010006001|XXGobject_psameas_object|2090|0|3336|0|{metadata|in_metadata|1|0|}1246|1241|}
{2010601001|XXGgraph_vertex_vertex|2091|0|3337|0|{Merge|}1183|1247|}
{2010212001|XXGvertex_oport_oport|2092|0|3339|0|{0|out|}1247|1248|}
{2010213001|XXGoport_dst_flow|2093|0|3341|0|{0|}1248|1205|}
{2010211001|XXGvertex_iport_iport|2094|0|3342|0|{0|in|}1247|1249|}
{2010214001|XXGiport_src_flow|2095|0|3344|0|{0|}1249|1200|}
{2010214001|XXGiport_src_flow|2096|0|3345|0|{1|}1249|1197|}
{2010007001|XXGobject_proto_object|2097|0|3346|0|{}1247|1250|}
{2010212001|XXGvertex_oport_oport|2098|0|3348|0|{0|out|}1250|1251|}
{2010006001|XXGobject_psameas_object|2099|0|3350|0|{metadata|out_metadata|1|0|}1251|1250|}
{2010211001|XXGvertex_iport_iport|2100|0|3351|0|{0|in|}1250|1252|}
{2010006001|XXGobject_psameas_object|2101|0|3353|0|{metadata|in_metadata|1|0|}1252|1250|}
{2010601001|XXGgraph_vertex_vertex|2102|0|3354|0|{Normalize_Get_all_records_from_Archive_Lkp|}1183|1253|}
{2010212001|XXGvertex_oport_oport|2103|0|3356|0|{0|out|}1253|1254|}
{2010213001|XXGoport_dst_flow|2104|0|3358|0|{0|}1254|1197|}
{2010212001|XXGvertex_oport_oport|2105|0|3359|0|{1|reject|}1253|1255|}
{2010212001|XXGvertex_oport_oport|2106|0|3361|0|{2|error|}1253|1256|}
{2010212001|XXGvertex_oport_oport|2107|0|3363|0|{3|log|}1253|1257|}
{2010211001|XXGvertex_iport_iport|2108|0|3365|0|{0|in|}1253|1258|}
{2010214001|XXGiport_src_flow|2109|0|3367|0|{0|}1258|1195|}
{2010007001|XXGobject_proto_object|2110|0|3368|0|{}1253|1259|}
{2010212001|XXGvertex_oport_oport|2111|0|3370|0|{0|out|}1259|1260|}
{2010006001|XXGobject_psameas_object|2112|0|3372|0|{metadata|out_metadata|1|0|}1260|1259|}
{2010212001|XXGvertex_oport_oport|2113|0|3373|0|{1|reject|}1259|1261|}
{2010006001|XXGobject_psameas_object|2114|0|3375|0|{metadata|reject_metadata|1|0|}1261|1259|}
{2010212001|XXGvertex_oport_oport|2115|0|3376|0|{2|error|}1259|1262|}
{2010006001|XXGobject_psameas_object|2116|0|3378|0|{metadata|error_metadata|1|0|}1262|1259|}
{2010212001|XXGvertex_oport_oport|2117|0|3379|0|{3|log|}1259|1263|}
{2010006001|XXGobject_psameas_object|2118|0|3381|0|{metadata|log_metadata|1|0|}1263|1259|}
{2010211001|XXGvertex_iport_iport|2119|0|3382|0|{0|in|}1259|1264|}
{2010006001|XXGobject_psameas_object|2120|0|3384|0|{metadata|in_metadata|1|0|}1264|1259|}
{2010601001|XXGgraph_vertex_vertex|2121|0|3385|0|{Normalize_Get_all_records_from_lkp|}1183|1265|}
{2010212001|XXGvertex_oport_oport|2122|0|3387|0|{0|out|}1265|1266|}
{2010213001|XXGoport_dst_flow|2123|0|3389|0|{0|}1266|1200|}
{2010212001|XXGvertex_oport_oport|2124|0|3390|0|{1|reject|}1265|1267|}
{2010212001|XXGvertex_oport_oport|2125|0|3392|0|{2|error|}1265|1268|}
{2010212001|XXGvertex_oport_oport|2126|0|3394|0|{3|log|}1265|1269|}
{2010211001|XXGvertex_iport_iport|2127|0|3396|0|{0|in|}1265|1270|}
{2010214001|XXGiport_src_flow|2128|0|3398|0|{0|}1270|1202|}
{2010007001|XXGobject_proto_object|2129|0|3399|0|{}1265|1271|}
{2010212001|XXGvertex_oport_oport|2130|0|3401|0|{0|out|}1271|1272|}
{2010006001|XXGobject_psameas_object|2131|0|3403|0|{metadata|out_metadata|1|0|}1272|1271|}
{2010212001|XXGvertex_oport_oport|2132|0|3404|0|{1|reject|}1271|1273|}
{2010006001|XXGobject_psameas_object|2133|0|3406|0|{metadata|reject_metadata|1|0|}1273|1271|}
{2010212001|XXGvertex_oport_oport|2134|0|3407|0|{2|error|}1271|1274|}
{2010006001|XXGobject_psameas_object|2135|0|3409|0|{metadata|error_metadata|1|0|}1274|1271|}
{2010212001|XXGvertex_oport_oport|2136|0|3410|0|{3|log|}1271|1275|}
{2010006001|XXGobject_psameas_object|2137|0|3412|0|{metadata|log_metadata|1|0|}1275|1271|}
{2010211001|XXGvertex_iport_iport|2138|0|3413|0|{0|in|}1271|1276|}
{2010006001|XXGobject_psameas_object|2139|0|3415|0|{metadata|in_metadata|1|0|}1276|1271|}
{2010601001|XXGgraph_vertex_vertex|2140|0|3416|0|{Replicate|}1183|1277|}
{2010212001|XXGvertex_oport_oport|2141|0|3418|0|{0|out|}1277|1278|}
{2010211001|XXGvertex_iport_iport|2142|0|3420|0|{0|in|}1277|1279|}
{2010214001|XXGiport_src_flow|2143|0|3422|0|{0|}1279|1199|}
{2010007001|XXGobject_proto_object|2144|0|3423|0|{}1277|1280|}
{2010212001|XXGvertex_oport_oport|2145|0|3425|0|{0|out|}1280|1281|}
{2010006001|XXGobject_psameas_object|2146|0|3427|0|{metadata|out_metadata|1|0|}1281|1280|}
{2010211001|XXGvertex_iport_iport|2147|0|3428|0|{0|in|}1280|1282|}
{2010006001|XXGobject_psameas_object|2148|0|3430|0|{metadata|in_metadata|1|0|}1282|1280|}
{2010601001|XXGgraph_vertex_vertex|2149|0|3431|0|{Replicate_1|}1183|1283|}
{2010212001|XXGvertex_oport_oport|2150|0|3433|0|{0|out|}1283|1284|}
{2010213001|XXGoport_dst_flow|2151|0|3435|0|{0|}1284|1202|}
{2010213001|XXGoport_dst_flow|2152|0|3436|0|{1|}1284|1195|}
{2010211001|XXGvertex_iport_iport|2153|0|3437|0|{0|in|}1283|1285|}
{2010214001|XXGiport_src_flow|2154|0|3439|0|{0|}1285|1201|}
{2010007001|XXGobject_proto_object|2155|0|3440|0|{}1283|1286|}
{2010212001|XXGvertex_oport_oport|2156|0|3442|0|{0|out|}1286|1287|}
{2010006001|XXGobject_psameas_object|2157|0|3444|0|{metadata|out_metadata|1|0|}1287|1286|}
{2010211001|XXGvertex_iport_iport|2158|0|3445|0|{0|in|}1286|1288|}
{2010006001|XXGobject_psameas_object|2159|0|3447|0|{metadata|in_metadata|1|0|}1288|1286|}
{2010601001|XXGgraph_vertex_vertex|2160|0|3448|0|{Sort_Remove_Dup_On_Hash|}1183|1289|}
{2010604001|XXGgraph_flow_flow|2161|0|3450|0|{Flow_3|}1289|1290|}
{2010604001|XXGgraph_flow_flow|2162|0|3452|0|{Flow_5|}1289|1291|}
{2010601001|XXGgraph_vertex_vertex|2163|0|3454|0|{Dedup_Sorted_1|}1289|1292|}
{2010212001|XXGvertex_oport_oport|2164|0|3456|0|{0|out|}1292|1293|}
{2010212001|XXGvertex_oport_oport|2165|0|3458|0|{1|dup|}1292|1294|}
{2010212001|XXGvertex_oport_oport|2166|0|3460|0|{2|reject|}1292|1295|}
{2010212001|XXGvertex_oport_oport|2167|0|3462|0|{3|error|}1292|1296|}
{2010212001|XXGvertex_oport_oport|2168|0|3464|0|{4|log|}1292|1297|}
{2010211001|XXGvertex_iport_iport|2169|0|3466|0|{0|in|}1292|1298|}
{2010214001|XXGiport_src_flow|2170|0|3468|0|{0|}1298|1291|}
{2010007001|XXGobject_proto_object|2171|0|3469|0|{}1292|1299|}
{2010212001|XXGvertex_oport_oport|2172|0|3471|0|{0|out|}1299|1300|}
{2010006001|XXGobject_psameas_object|2173|0|3473|0|{metadata|out_metadata|1|0|}1300|1299|}
{2010212001|XXGvertex_oport_oport|2174|0|3474|0|{1|dup|}1299|1301|}
{2010006001|XXGobject_psameas_object|2175|0|3476|0|{metadata|dup_metadata|1|0|}1301|1299|}
{2010212001|XXGvertex_oport_oport|2176|0|3477|0|{2|reject|}1299|1302|}
{2010006001|XXGobject_psameas_object|2177|0|3479|0|{metadata|reject_metadata|1|0|}1302|1299|}
{2010212001|XXGvertex_oport_oport|2178|0|3480|0|{3|error|}1299|1303|}
{2010006001|XXGobject_psameas_object|2179|0|3482|0|{metadata|error_metadata|1|0|}1303|1299|}
{2010212001|XXGvertex_oport_oport|2180|0|3483|0|{4|log|}1299|1304|}
{2010006001|XXGobject_psameas_object|2181|0|3485|0|{metadata|log_metadata|1|0|}1304|1299|}
{2010211001|XXGvertex_iport_iport|2182|0|3486|0|{0|in|}1299|1305|}
{2010006001|XXGobject_psameas_object|2183|0|3488|0|{metadata|in_metadata|1|0|}1305|1299|}
{2010601001|XXGgraph_vertex_vertex|2184|0|3489|0|{PBKS_dxf_hk_part1_|}1289|1306|}
{2010604001|XXGgraph_flow_flow|2185|0|3491|0|{Flow_1|}1306|1307|}
{2010601001|XXGgraph_vertex_vertex|2186|0|3493|0|{Partition_by_Key|}1306|1308|}
{2010212001|XXGvertex_oport_oport|2187|0|3495|0|{0|out|}1308|1309|}
{2010213001|XXGoport_dst_flow|2188|0|3497|0|{0|}1309|1307|}
{2010211001|XXGvertex_iport_iport|2189|0|3498|0|{0|in|}1308|1310|}
{2010601001|XXGgraph_vertex_vertex|2190|0|3500|0|{Sort|}1306|1311|}
{2010212001|XXGvertex_oport_oport|2191|0|3502|0|{0|out|}1311|1312|}
{2010211001|XXGvertex_iport_iport|2192|0|3504|0|{0|in|}1311|1313|}
{2010214001|XXGiport_src_flow|2193|0|3506|0|{0|}1313|1307|}
{2010212001|XXGvertex_oport_oport|2194|0|3507|0|{0|out0|}1306|1314|}
{2010216002|XXGoport_binding_oport|2195|0|3509|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}1314|1312|}
{2010213001|XXGoport_dst_flow|2196|0|3510|0|{0|}1314|1290|}
{2010211001|XXGvertex_iport_iport|2197|0|3511|0|{0|in0|}1306|1315|}
{2010215002|XXGiport_binding_iport|2198|0|3513|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}1315|1310|}
{2010007001|XXGobject_proto_object|2199|0|3514|0|{}1306|1316|}
{2010604001|XXGgraph_flow_flow|2200|0|3516|0|{Flow_1|}1316|1317|}
{2010601001|XXGgraph_vertex_vertex|2201|0|3518|0|{Partition_by_Key|}1316|1318|}
{2010212001|XXGvertex_oport_oport|2202|0|3520|0|{0|out|}1318|1319|}
{2010213001|XXGoport_dst_flow|2203|0|3522|0|{0|}1319|1317|}
{2010211001|XXGvertex_iport_iport|2204|0|3523|0|{0|in|}1318|1320|}
{2010007001|XXGobject_proto_object|2205|0|3525|0|{}1318|1321|}
{2010212001|XXGvertex_oport_oport|2206|0|3527|0|{0|out|}1321|1322|}
{2010006001|XXGobject_psameas_object|2207|0|3529|0|{metadata|out_metadata|1|0|}1322|1321|}
{2010211001|XXGvertex_iport_iport|2208|0|3530|0|{0|in|}1321|1323|}
{2010006001|XXGobject_psameas_object|2209|0|3532|0|{metadata|in_metadata|1|0|}1323|1321|}
{2010006001|XXGobject_psameas_object|2210|0|3533|0|{Layout|InputLayout|1|0|}1318|1316|}
{2010006001|XXGobject_psameas_object|2211|0|3534|0|{key|Key|1|0|}1318|1316|}
{2010601001|XXGgraph_vertex_vertex|2212|0|3535|0|{Sort|}1316|1324|}
{2010212001|XXGvertex_oport_oport|2213|0|3537|0|{0|out|}1324|1325|}
{2010211001|XXGvertex_iport_iport|2214|0|3539|0|{0|in|}1324|1326|}
{2010214001|XXGiport_src_flow|2215|0|3541|0|{0|}1326|1317|}
{2010007001|XXGobject_proto_object|2216|0|3542|0|{}1324|1327|}
{2010212001|XXGvertex_oport_oport|2217|0|3544|0|{0|out|}1327|1328|}
{2010006001|XXGobject_psameas_object|2218|0|3546|0|{metadata|out_metadata|1|0|}1328|1327|}
{2010211001|XXGvertex_iport_iport|2219|0|3547|0|{0|in|}1327|1329|}
{2010006001|XXGobject_psameas_object|2220|0|3549|0|{metadata|in_metadata|1|0|}1329|1327|}
{2010006001|XXGobject_psameas_object|2221|0|3550|0|{Layout|OutputLayout|1|0|}1324|1316|}
{2010006001|XXGobject_psameas_object|2222|0|3551|0|{key|Key|1|0|}1324|1316|}
{2010006001|XXGobject_psameas_object|2223|0|3552|0|{max_core|Max_core|1|0|}1324|1316|}
{2010212001|XXGvertex_oport_oport|2224|0|3553|0|{0|out0|}1316|1330|}
{2010216002|XXGoport_binding_oport|2225|0|3555|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}1330|1325|}
{2010211001|XXGvertex_iport_iport|2226|0|3556|0|{0|in0|}1316|1331|}
{2010215002|XXGiport_binding_iport|2227|0|3558|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}1331|1320|}
{2010006001|XXGobject_psameas_object|2228|0|3559|0|{InputLayout|Layout|0|0|}1306|1235|}
{2010601001|XXGgraph_vertex_vertex|2229|0|3560|0|{Sort_within_Groups|}1289|1332|}
{2010212001|XXGvertex_oport_oport|2230|0|3562|0|{0|out|}1332|1333|}
{2010213001|XXGoport_dst_flow|2231|0|3564|0|{0|}1333|1291|}
{2010211001|XXGvertex_iport_iport|2232|0|3565|0|{0|in|}1332|1334|}
{2010214001|XXGiport_src_flow|2233|0|3567|0|{0|}1334|1290|}
{2010007001|XXGobject_proto_object|2234|0|3568|0|{}1332|1335|}
{2010212001|XXGvertex_oport_oport|2235|0|3570|0|{0|out|}1335|1336|}
{2010006001|XXGobject_psameas_object|2236|0|3572|0|{metadata|out_metadata|1|0|}1336|1335|}
{2010211001|XXGvertex_iport_iport|2237|0|3573|0|{0|in|}1335|1337|}
{2010006001|XXGobject_psameas_object|2238|0|3575|0|{metadata|in_metadata|1|0|}1337|1335|}
{2010212001|XXGvertex_oport_oport|2239|0|3576|0|{0|out0|}1289|1338|}
{2010216002|XXGoport_binding_oport|2240|0|3578|0|{.5|.5|{0|}14672|}1338|1293|}
{2010213001|XXGoport_dst_flow|2241|0|3579|0|{0|}1338|1201|}
{2010212001|XXGvertex_oport_oport|2242|0|3580|0|{1|out1|}1289|1339|}
{2010216002|XXGoport_binding_oport|2243|0|3582|0|{.5|.5|{0|}14673|}1339|1294|}
{2010213001|XXGoport_dst_flow|2244|0|3583|0|{0|}1339|1206|}
{2010211001|XXGvertex_iport_iport|2245|0|3584|0|{0|in0|}1289|1340|}
{2010215002|XXGiport_binding_iport|2246|0|3586|0|{.5|.5|{0|}14671|}1340|1315|}
{2010214001|XXGiport_src_flow|2247|0|3587|0|{0|}1340|1198|}
{2010601001|XXGgraph_vertex_vertex|2248|0|3588|0|{Sort_on_Adjusted_Natural_Keys|}1183|1341|}
{2010212001|XXGvertex_oport_oport|2249|0|3590|0|{0|out|}1341|1342|}
{2010213001|XXGoport_dst_flow|2250|0|3592|0|{0|}1342|1194|}
{2010211001|XXGvertex_iport_iport|2251|0|3593|0|{0|in|}1341|1343|}
{2010214001|XXGiport_src_flow|2252|0|3595|0|{0|}1343|1196|}
{2010007001|XXGobject_proto_object|2253|0|3596|0|{}1341|1344|}
{2010212001|XXGvertex_oport_oport|2254|0|3598|0|{0|out|}1344|1345|}
{2010006001|XXGobject_psameas_object|2255|0|3600|0|{metadata|out_metadata|1|0|}1345|1344|}
{2010211001|XXGvertex_iport_iport|2256|0|3601|0|{0|in|}1344|1346|}
{2010006001|XXGobject_psameas_object|2257|0|3603|0|{metadata|in_metadata|1|0|}1346|1344|}
{2010601001|XXGgraph_vertex_vertex|2258|0|3604|0|{Trash_1|}1183|1347|}
{2010211001|XXGvertex_iport_iport|2259|0|3606|0|{0|in|}1347|1348|}
{2010214001|XXGiport_src_flow|2260|0|3608|0|{0|}1348|1204|}
{2010007001|XXGobject_proto_object|2261|0|3609|0|{}1347|1349|}
{2010211001|XXGvertex_iport_iport|2262|0|3611|0|{0|in|}1349|1350|}
{2010006001|XXGobject_psameas_object|2263|0|3613|0|{metadata|in_metadata|1|0|}1350|1349|}
{2010601001|XXGgraph_vertex_vertex|2264|0|3614|0|{Trash_2|}1183|1351|}
{2010211001|XXGvertex_iport_iport|2265|0|3616|0|{0|in|}1351|1352|}
{2010214001|XXGiport_src_flow|2266|0|3618|0|{0|}1352|1203|}
{2010007001|XXGobject_proto_object|2267|0|3619|0|{}1351|1353|}
{2010211001|XXGvertex_iport_iport|2268|0|3621|0|{0|in|}1353|1354|}
{2010006001|XXGobject_psameas_object|2269|0|3623|0|{metadata|in_metadata|1|0|}1354|1353|}
{2010601001|XXGgraph_vertex_vertex|2270|0|3624|0|{Trash_3|}1183|1355|}
{2010211001|XXGvertex_iport_iport|2271|0|3626|0|{0|in|}1355|1356|}
{2010214001|XXGiport_src_flow|2272|0|3628|0|{0|}1356|1206|}
{2010007001|XXGobject_proto_object|2273|0|3629|0|{}1355|1357|}
{2010211001|XXGvertex_iport_iport|2274|0|3631|0|{0|in|}1357|1358|}
{2010006001|XXGobject_psameas_object|2275|0|3633|0|{metadata|in_metadata|1|0|}1358|1357|}
{2010212001|XXGvertex_oport_oport|2276|0|3634|0|{0|out0|}1183|1359|}
{2010216002|XXGoport_binding_oport|2277|0|3636|0|{.5|.5|{0|}14899|}1359|1278|}
{2010213001|XXGoport_dst_flow|2278|0|3637|0|{0|}1359|1180|}
{2010211001|XXGvertex_iport_iport|2279|0|3638|0|{0|in0|}1183|1360|}
{2010215002|XXGiport_binding_iport|2280|0|3640|0|{.5|.5|{0|}14898|}1360|1240|}
{2010214001|XXGiport_src_flow|2281|0|3641|0|{0|}1360|1178|}
{2010601001|XXGgraph_vertex_vertex|2282|0|3642|0|{Get_Last_Lookup_Record|}1173|1361|}
{2010605001|XXGgraph_legend_legend|2283|0|3644|0|{0|}1361|1362|}
{2010241001|XXGlegend_face_face|2284|0|3646|0|{}1362|1363|}
{2010605001|XXGgraph_legend_legend|2285|0|3648|0|{1|}1361|1364|}
{2010241001|XXGlegend_face_face|2286|0|3650|0|{}1364|1365|}
{2010605001|XXGgraph_legend_legend|2287|0|3652|0|{2|}1361|1366|}
{2010241001|XXGlegend_face_face|2288|0|3654|0|{}1366|1367|}
{2010605001|XXGgraph_legend_legend|2289|0|3656|0|{3|}1361|1368|}
{2010241001|XXGlegend_face_face|2290|0|3658|0|{}1368|1369|}
{2010604001|XXGgraph_flow_flow|2291|0|3660|0|{Flow_1|}1361|1370|}
{2010604001|XXGgraph_flow_flow|2292|0|3662|0|{Flow_2|}1361|1371|}
{2010604001|XXGgraph_flow_flow|2293|0|3664|0|{Flow_3|}1361|1372|}
{2010604001|XXGgraph_flow_flow|2294|0|3666|0|{Flow_4|}1361|1373|}
{2010604001|XXGgraph_flow_flow|2295|0|3668|0|{Flow_5|}1361|1374|}
{2010604001|XXGgraph_flow_flow|2296|0|3670|0|{Flow_6|}1361|1375|}
{2010604001|XXGgraph_flow_flow|2297|0|3672|0|{Flow_7|}1361|1376|}
{2010604001|XXGgraph_flow_flow|2298|0|3674|0|{Flow_8|}1361|1377|}
{2010604001|XXGgraph_flow_flow|2299|0|3676|0|{Flow_9|}1361|1378|}
{2010601001|XXGgraph_vertex_vertex|2300|0|3678|0|{Dedup_Sorted|}1361|1379|}
{2010212001|XXGvertex_oport_oport|2301|0|3680|0|{0|out|}1379|1380|}
{2010212001|XXGvertex_oport_oport|2302|0|3682|0|{1|dup|}1379|1381|}
{2010213001|XXGoport_dst_flow|2303|0|3684|0|{0|}1381|1377|}
{2010212001|XXGvertex_oport_oport|2304|0|3685|0|{2|reject|}1379|1382|}
{2010212001|XXGvertex_oport_oport|2305|0|3687|0|{3|error|}1379|1383|}
{2010212001|XXGvertex_oport_oport|2306|0|3689|0|{4|log|}1379|1384|}
{2010211001|XXGvertex_iport_iport|2307|0|3691|0|{0|in|}1379|1385|}
{2010214001|XXGiport_src_flow|2308|0|3693|0|{0|}1385|1372|}
{2010007001|XXGobject_proto_object|2309|0|3694|0|{}1379|1386|}
{2010212001|XXGvertex_oport_oport|2310|0|3696|0|{0|out|}1386|1387|}
{2010006001|XXGobject_psameas_object|2311|0|3698|0|{metadata|out_metadata|1|0|}1387|1386|}
{2010212001|XXGvertex_oport_oport|2312|0|3699|0|{1|dup|}1386|1388|}
{2010006001|XXGobject_psameas_object|2313|0|3701|0|{metadata|dup_metadata|1|0|}1388|1386|}
{2010212001|XXGvertex_oport_oport|2314|0|3702|0|{2|reject|}1386|1389|}
{2010006001|XXGobject_psameas_object|2315|0|3704|0|{metadata|reject_metadata|1|0|}1389|1386|}
{2010212001|XXGvertex_oport_oport|2316|0|3705|0|{3|error|}1386|1390|}
{2010006001|XXGobject_psameas_object|2317|0|3707|0|{metadata|error_metadata|1|0|}1390|1386|}
{2010212001|XXGvertex_oport_oport|2318|0|3708|0|{4|log|}1386|1391|}
{2010006001|XXGobject_psameas_object|2319|0|3710|0|{metadata|log_metadata|1|0|}1391|1386|}
{2010211001|XXGvertex_iport_iport|2320|0|3711|0|{0|in|}1386|1392|}
{2010006001|XXGobject_psameas_object|2321|0|3713|0|{metadata|in_metadata|1|0|}1392|1386|}
{2010601001|XXGgraph_vertex_vertex|2322|0|3714|0|{FBE_filter_matching_lkp_record|}1361|1393|}
{2010212001|XXGvertex_oport_oport|2323|0|3716|0|{0|out|}1393|1394|}
{2010213001|XXGoport_dst_flow|2324|0|3718|0|{0|}1394|1371|}
{2010212001|XXGvertex_oport_oport|2325|0|3719|0|{1|deselect|}1393|1395|}
{2010213001|XXGoport_dst_flow|2326|0|3721|0|{0|}1395|1378|}
{2010212001|XXGvertex_oport_oport|2327|0|3722|0|{2|reject|}1393|1396|}
{2010212001|XXGvertex_oport_oport|2328|0|3724|0|{3|error|}1393|1397|}
{2010212001|XXGvertex_oport_oport|2329|0|3726|0|{4|log|}1393|1398|}
{2010211001|XXGvertex_iport_iport|2330|0|3728|0|{0|in|}1393|1399|}
{2010214001|XXGiport_src_flow|2331|0|3730|0|{0|}1399|1374|}
{2010007001|XXGobject_proto_object|2332|0|3731|0|{}1393|1400|}
{2010212001|XXGvertex_oport_oport|2333|0|3733|0|{0|out|}1400|1401|}
{2010006001|XXGobject_psameas_object|2334|0|3735|0|{metadata|out_metadata|1|0|}1401|1400|}
{2010212001|XXGvertex_oport_oport|2335|0|3736|0|{1|deselect|}1400|1402|}
{2010006001|XXGobject_psameas_object|2336|0|3738|0|{metadata|deselect_metadata|1|0|}1402|1400|}
{2010212001|XXGvertex_oport_oport|2337|0|3739|0|{2|reject|}1400|1403|}
{2010006001|XXGobject_psameas_object|2338|0|3741|0|{metadata|reject_metadata|1|0|}1403|1400|}
{2010212001|XXGvertex_oport_oport|2339|0|3742|0|{3|error|}1400|1404|}
{2010006001|XXGobject_psameas_object|2340|0|3744|0|{metadata|error_metadata|1|0|}1404|1400|}
{2010212001|XXGvertex_oport_oport|2341|0|3745|0|{4|log|}1400|1405|}
{2010006001|XXGobject_psameas_object|2342|0|3747|0|{metadata|log_metadata|1|0|}1405|1400|}
{2010211001|XXGvertex_iport_iport|2343|0|3748|0|{0|in|}1400|1406|}
{2010006001|XXGobject_psameas_object|2344|0|3750|0|{metadata|in_metadata|1|0|}1406|1400|}
{2010601001|XXGgraph_vertex_vertex|2345|0|3751|0|{RFMT_Get_Hash_On_NK|}1361|1407|}
{2010212001|XXGvertex_oport_oport|2346|0|3753|0|{0|out0|}1407|1408|}
{2010213001|XXGoport_dst_flow|2347|0|3755|0|{0|}1408|1370|}
{2010212001|XXGvertex_oport_oport|2348|0|3756|0|{1|reject0|}1407|1409|}
{2010212001|XXGvertex_oport_oport|2349|0|3758|0|{2|error0|}1407|1410|}
{2010212001|XXGvertex_oport_oport|2350|0|3760|0|{3|log|}1407|1411|}
{2010211001|XXGvertex_iport_iport|2351|0|3762|0|{0|in|}1407|1412|}
{2010007001|XXGobject_proto_object|2352|0|3764|0|{}1407|1413|}
{2010212001|XXGvertex_oport_oport|2353|0|3766|0|{0|out0|}1413|1414|}
{2010006001|XXGobject_psameas_object|2354|0|3768|0|{metadata|out0_metadata|1|0|}1414|1413|}
{2010006001|XXGobject_psameas_object|2355|0|3769|0|{transform0|transform0|1|0|}1414|1413|}
{2010212001|XXGvertex_oport_oport|2356|0|3770|0|{1|reject0|}1413|1415|}
{2010006001|XXGobject_psameas_object|2357|0|3772|0|{metadata|reject0_metadata|1|0|}1415|1413|}
{2010212001|XXGvertex_oport_oport|2358|0|3773|0|{2|error0|}1413|1416|}
{2010006001|XXGobject_psameas_object|2359|0|3775|0|{metadata|error0_metadata|1|0|}1416|1413|}
{2010212001|XXGvertex_oport_oport|2360|0|3776|0|{3|log|}1413|1417|}
{2010006001|XXGobject_psameas_object|2361|0|3778|0|{metadata|log_metadata|1|0|}1417|1413|}
{2010211001|XXGvertex_iport_iport|2362|0|3779|0|{0|in|}1413|1418|}
{2010006001|XXGobject_psameas_object|2363|0|3781|0|{metadata|in_metadata|1|0|}1418|1413|}
{2010601001|XXGgraph_vertex_vertex|2364|0|3782|0|{RFMT_Lookup_with_IDS|}1361|1419|}
{2010212001|XXGvertex_oport_oport|2365|0|3784|0|{0|out0|}1419|1420|}
{2010213001|XXGoport_dst_flow|2366|0|3786|0|{0|}1420|1373|}
{2010212001|XXGvertex_oport_oport|2367|0|3787|0|{1|reject0|}1419|1421|}
{2010212001|XXGvertex_oport_oport|2368|0|3789|0|{2|error0|}1419|1422|}
{2010212001|XXGvertex_oport_oport|2369|0|3791|0|{3|log|}1419|1423|}
{2010211001|XXGvertex_iport_iport|2370|0|3793|0|{0|in|}1419|1424|}
{2010214001|XXGiport_src_flow|2371|0|3795|0|{0|}1424|1375|}
{2010007001|XXGobject_proto_object|2372|0|3796|0|{}1419|1425|}
{2010212001|XXGvertex_oport_oport|2373|0|3798|0|{0|out0|}1425|1426|}
{2010006001|XXGobject_psameas_object|2374|0|3800|0|{metadata|out0_metadata|1|0|}1426|1425|}
{2010006001|XXGobject_psameas_object|2375|0|3801|0|{transform0|transform0|1|0|}1426|1425|}
{2010212001|XXGvertex_oport_oport|2376|0|3802|0|{1|reject0|}1425|1427|}
{2010006001|XXGobject_psameas_object|2377|0|3804|0|{metadata|reject0_metadata|1|0|}1427|1425|}
{2010212001|XXGvertex_oport_oport|2378|0|3805|0|{2|error0|}1425|1428|}
{2010006001|XXGobject_psameas_object|2379|0|3807|0|{metadata|error0_metadata|1|0|}1428|1425|}
{2010212001|XXGvertex_oport_oport|2380|0|3808|0|{3|log|}1425|1429|}
{2010006001|XXGobject_psameas_object|2381|0|3810|0|{metadata|log_metadata|1|0|}1429|1425|}
{2010211001|XXGvertex_iport_iport|2382|0|3811|0|{0|in|}1425|1430|}
{2010006001|XXGobject_psameas_object|2383|0|3813|0|{metadata|in_metadata|1|0|}1430|1425|}
{2010601001|XXGgraph_vertex_vertex|2384|0|3814|0|{Sort_De_dup|}1361|1431|}
{2010604001|XXGgraph_flow_flow|2385|0|3816|0|{Flow_10|}1431|1432|}
{2010604001|XXGgraph_flow_flow|2386|0|3818|0|{Flow_4|}1431|1433|}
{2010244001|XXGflow_watcher_watcher|2387|0|3820|0|{}1433|1434|}
{2010601001|XXGgraph_vertex_vertex|2388|0|3822|0|{Dedup_Sorted_1|}1431|1435|}
{2010212001|XXGvertex_oport_oport|2389|0|3824|0|{0|out|}1435|1436|}
{2010212001|XXGvertex_oport_oport|2390|0|3826|0|{1|dup|}1435|1437|}
{2010212001|XXGvertex_oport_oport|2391|0|3828|0|{2|reject|}1435|1438|}
{2010212001|XXGvertex_oport_oport|2392|0|3830|0|{3|error|}1435|1439|}
{2010212001|XXGvertex_oport_oport|2393|0|3832|0|{4|log|}1435|1440|}
{2010211001|XXGvertex_iport_iport|2394|0|3834|0|{0|in|}1435|1441|}
{2010214001|XXGiport_src_flow|2395|0|3836|0|{0|}1441|1432|}
{2010007001|XXGobject_proto_object|2396|0|3837|0|{}1435|1442|}
{2010212001|XXGvertex_oport_oport|2397|0|3839|0|{0|out|}1442|1443|}
{2010006001|XXGobject_psameas_object|2398|0|3841|0|{metadata|out_metadata|1|0|}1443|1442|}
{2010212001|XXGvertex_oport_oport|2399|0|3842|0|{1|dup|}1442|1444|}
{2010006001|XXGobject_psameas_object|2400|0|3844|0|{metadata|dup_metadata|1|0|}1444|1442|}
{2010212001|XXGvertex_oport_oport|2401|0|3845|0|{2|reject|}1442|1445|}
{2010006001|XXGobject_psameas_object|2402|0|3847|0|{metadata|reject_metadata|1|0|}1445|1442|}
{2010212001|XXGvertex_oport_oport|2403|0|3848|0|{3|error|}1442|1446|}
{2010006001|XXGobject_psameas_object|2404|0|3850|0|{metadata|error_metadata|1|0|}1446|1442|}
{2010212001|XXGvertex_oport_oport|2405|0|3851|0|{4|log|}1442|1447|}
{2010006001|XXGobject_psameas_object|2406|0|3853|0|{metadata|log_metadata|1|0|}1447|1442|}
{2010211001|XXGvertex_iport_iport|2407|0|3854|0|{0|in|}1442|1448|}
{2010006001|XXGobject_psameas_object|2408|0|3856|0|{metadata|in_metadata|1|0|}1448|1442|}
{2010601001|XXGgraph_vertex_vertex|2409|0|3857|0|{PBKS_dxf_hk_part1_|}1431|1449|}
{2010604001|XXGgraph_flow_flow|2410|0|3859|0|{Flow_1|}1449|1450|}
{2010601001|XXGgraph_vertex_vertex|2411|0|3861|0|{Partition_by_Key|}1449|1451|}
{2010212001|XXGvertex_oport_oport|2412|0|3863|0|{0|out|}1451|1452|}
{2010213001|XXGoport_dst_flow|2413|0|3865|0|{0|}1452|1450|}
{2010211001|XXGvertex_iport_iport|2414|0|3866|0|{0|in|}1451|1453|}
{2010601001|XXGgraph_vertex_vertex|2415|0|3868|0|{Sort|}1449|1454|}
{2010212001|XXGvertex_oport_oport|2416|0|3870|0|{0|out|}1454|1455|}
{2010211001|XXGvertex_iport_iport|2417|0|3872|0|{0|in|}1454|1456|}
{2010214001|XXGiport_src_flow|2418|0|3874|0|{0|}1456|1450|}
{2010212001|XXGvertex_oport_oport|2419|0|3875|0|{0|out0|}1449|1457|}
{2010216002|XXGoport_binding_oport|2420|0|3877|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}1457|1455|}
{2010213001|XXGoport_dst_flow|2421|0|3878|0|{0|}1457|1433|}
{2010211001|XXGvertex_iport_iport|2422|0|3879|0|{0|in0|}1449|1458|}
{2010215002|XXGiport_binding_iport|2423|0|3881|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}1458|1453|}
{2010007001|XXGobject_proto_object|2424|0|3882|0|{}1449|1459|}
{2010604001|XXGgraph_flow_flow|2425|0|3884|0|{Flow_1|}1459|1460|}
{2010601001|XXGgraph_vertex_vertex|2426|0|3886|0|{Partition_by_Key|}1459|1461|}
{2010212001|XXGvertex_oport_oport|2427|0|3888|0|{0|out|}1461|1462|}
{2010213001|XXGoport_dst_flow|2428|0|3890|0|{0|}1462|1460|}
{2010211001|XXGvertex_iport_iport|2429|0|3891|0|{0|in|}1461|1463|}
{2010007001|XXGobject_proto_object|2430|0|3893|0|{}1461|1464|}
{2010212001|XXGvertex_oport_oport|2431|0|3895|0|{0|out|}1464|1465|}
{2010006001|XXGobject_psameas_object|2432|0|3897|0|{metadata|out_metadata|1|0|}1465|1464|}
{2010211001|XXGvertex_iport_iport|2433|0|3898|0|{0|in|}1464|1466|}
{2010006001|XXGobject_psameas_object|2434|0|3900|0|{metadata|in_metadata|1|0|}1466|1464|}
{2010006001|XXGobject_psameas_object|2435|0|3901|0|{Layout|InputLayout|1|0|}1461|1459|}
{2010006001|XXGobject_psameas_object|2436|0|3902|0|{key|Key|1|0|}1461|1459|}
{2010601001|XXGgraph_vertex_vertex|2437|0|3903|0|{Sort|}1459|1467|}
{2010212001|XXGvertex_oport_oport|2438|0|3905|0|{0|out|}1467|1468|}
{2010211001|XXGvertex_iport_iport|2439|0|3907|0|{0|in|}1467|1469|}
{2010214001|XXGiport_src_flow|2440|0|3909|0|{0|}1469|1460|}
{2010007001|XXGobject_proto_object|2441|0|3910|0|{}1467|1470|}
{2010212001|XXGvertex_oport_oport|2442|0|3912|0|{0|out|}1470|1471|}
{2010006001|XXGobject_psameas_object|2443|0|3914|0|{metadata|out_metadata|1|0|}1471|1470|}
{2010211001|XXGvertex_iport_iport|2444|0|3915|0|{0|in|}1470|1472|}
{2010006001|XXGobject_psameas_object|2445|0|3917|0|{metadata|in_metadata|1|0|}1472|1470|}
{2010006001|XXGobject_psameas_object|2446|0|3918|0|{Layout|OutputLayout|1|0|}1467|1459|}
{2010006001|XXGobject_psameas_object|2447|0|3919|0|{key|Key|1|0|}1467|1459|}
{2010006001|XXGobject_psameas_object|2448|0|3920|0|{max_core|Max_core|1|0|}1467|1459|}
{2010212001|XXGvertex_oport_oport|2449|0|3921|0|{0|out0|}1459|1473|}
{2010216002|XXGoport_binding_oport|2450|0|3923|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}1473|1468|}
{2010211001|XXGvertex_iport_iport|2451|0|3924|0|{0|in0|}1459|1474|}
{2010215002|XXGiport_binding_iport|2452|0|3926|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}1474|1463|}
{2010601001|XXGgraph_vertex_vertex|2453|0|3927|0|{Sort_within_Groups_1|}1431|1475|}
{2010212001|XXGvertex_oport_oport|2454|0|3929|0|{0|out|}1475|1476|}
{2010213001|XXGoport_dst_flow|2455|0|3931|0|{0|}1476|1432|}
{2010211001|XXGvertex_iport_iport|2456|0|3932|0|{0|in|}1475|1477|}
{2010214001|XXGiport_src_flow|2457|0|3934|0|{0|}1477|1433|}
{2010007001|XXGobject_proto_object|2458|0|3935|0|{}1475|1478|}
{2010212001|XXGvertex_oport_oport|2459|0|3937|0|{0|out|}1478|1479|}
{2010006001|XXGobject_psameas_object|2460|0|3939|0|{metadata|out_metadata|1|0|}1479|1478|}
{2010211001|XXGvertex_iport_iport|2461|0|3940|0|{0|in|}1478|1480|}
{2010006001|XXGobject_psameas_object|2462|0|3942|0|{metadata|in_metadata|1|0|}1480|1478|}
{2010212001|XXGvertex_oport_oport|2463|0|3943|0|{0|out0|}1431|1481|}
{2010216002|XXGoport_binding_oport|2464|0|3945|0|{.5|.5|{0|}7792|}1481|1436|}
{2010213001|XXGoport_dst_flow|2465|0|3946|0|{0|}1481|1375|}
{2010212001|XXGvertex_oport_oport|2466|0|3947|0|{1|out1|}1431|1482|}
{2010216002|XXGoport_binding_oport|2467|0|3949|0|{.5|.5|{0|}7793|}1482|1437|}
{2010213001|XXGoport_dst_flow|2468|0|3950|0|{0|}1482|1376|}
{2010211001|XXGvertex_iport_iport|2469|0|3951|0|{0|in0|}1431|1483|}
{2010215002|XXGiport_binding_iport|2470|0|3953|0|{.5|.5|{0|}7791|}1483|1458|}
{2010214001|XXGiport_src_flow|2471|0|3954|0|{0|}1483|1370|}
{2010601001|XXGgraph_vertex_vertex|2472|0|3955|0|{Sort_within_Groups|}1361|1484|}
{2010212001|XXGvertex_oport_oport|2473|0|3957|0|{0|out|}1484|1485|}
{2010213001|XXGoport_dst_flow|2474|0|3959|0|{0|}1485|1372|}
{2010211001|XXGvertex_iport_iport|2475|0|3960|0|{0|in|}1484|1486|}
{2010214001|XXGiport_src_flow|2476|0|3962|0|{0|}1486|1371|}
{2010007001|XXGobject_proto_object|2477|0|3963|0|{}1484|1487|}
{2010212001|XXGvertex_oport_oport|2478|0|3965|0|{0|out|}1487|1488|}
{2010006001|XXGobject_psameas_object|2479|0|3967|0|{metadata|out_metadata|1|0|}1488|1487|}
{2010211001|XXGvertex_iport_iport|2480|0|3968|0|{0|in|}1487|1489|}
{2010006001|XXGobject_psameas_object|2481|0|3970|0|{metadata|in_metadata|1|0|}1489|1487|}
{2010601001|XXGgraph_vertex_vertex|2482|0|3971|0|{Trash|}1361|1490|}
{2010211001|XXGvertex_iport_iport|2483|0|3973|0|{0|in|}1490|1491|}
{2010214001|XXGiport_src_flow|2484|0|3975|0|{0|}1491|1376|}
{2010007001|XXGobject_proto_object|2485|0|3976|0|{}1490|1492|}
{2010211001|XXGvertex_iport_iport|2486|0|3978|0|{0|in|}1492|1493|}
{2010006001|XXGobject_psameas_object|2487|0|3980|0|{metadata|in_metadata|1|0|}1493|1492|}
{2010601001|XXGgraph_vertex_vertex|2488|0|3981|0|{Trash_1|}1361|1494|}
{2010211001|XXGvertex_iport_iport|2489|0|3983|0|{0|in|}1494|1495|}
{2010214001|XXGiport_src_flow|2490|0|3985|0|{0|}1495|1377|}
{2010007001|XXGobject_proto_object|2491|0|3986|0|{}1494|1496|}
{2010211001|XXGvertex_iport_iport|2492|0|3988|0|{0|in|}1496|1497|}
{2010006001|XXGobject_psameas_object|2493|0|3990|0|{metadata|in_metadata|1|0|}1497|1496|}
{2010601001|XXGgraph_vertex_vertex|2494|0|3991|0|{Trash_2|}1361|1498|}
{2010211001|XXGvertex_iport_iport|2495|0|3993|0|{0|in|}1498|1499|}
{2010214001|XXGiport_src_flow|2496|0|3995|0|{0|}1499|1378|}
{2010007001|XXGobject_proto_object|2497|0|3996|0|{}1498|1500|}
{2010211001|XXGvertex_iport_iport|2498|0|3998|0|{0|in|}1500|1501|}
{2010006001|XXGobject_psameas_object|2499|0|4000|0|{metadata|in_metadata|1|0|}1501|1500|}
{2010601001|XXGgraph_vertex_vertex|2500|0|4001|0|{Two_Step_Lookup|}1361|1502|}
{2010605001|XXGgraph_legend_legend|2501|0|4003|0|{0|}1502|1503|}
{2010241001|XXGlegend_face_face|2502|0|4005|0|{}1503|1504|}
{2010604001|XXGgraph_flow_flow|2503|0|4007|0|{Flow_1|}1502|1505|}
{2010604001|XXGgraph_flow_flow|2504|0|4009|0|{Flow_2|}1502|1506|}
{2010604001|XXGgraph_flow_flow|2505|0|4011|0|{Flow_3|}1502|1507|}
{2010604001|XXGgraph_flow_flow|2506|0|4013|0|{Flow_4|}1502|1508|}
{2010604001|XXGgraph_flow_flow|2507|0|4015|0|{Flow_5|}1502|1509|}
{2010604001|XXGgraph_flow_flow|2508|0|4017|0|{Flow_6|}1502|1510|}
{2010601001|XXGgraph_vertex_vertex|2509|0|4019|0|{FBE_Pass_Only_Matching_Rec|}1502|1511|}
{2010212001|XXGvertex_oport_oport|2510|0|4021|0|{0|out|}1511|1512|}
{2010213001|XXGoport_dst_flow|2511|0|4023|0|{0|}1512|1509|}
{2010212001|XXGvertex_oport_oport|2512|0|4024|0|{1|deselect|}1511|1513|}
{2010213001|XXGoport_dst_flow|2513|0|4026|0|{0|}1513|1510|}
{2010212001|XXGvertex_oport_oport|2514|0|4027|0|{2|reject|}1511|1514|}
{2010212001|XXGvertex_oport_oport|2515|0|4029|0|{3|error|}1511|1515|}
{2010212001|XXGvertex_oport_oport|2516|0|4031|0|{4|log|}1511|1516|}
{2010211001|XXGvertex_iport_iport|2517|0|4033|0|{0|in|}1511|1517|}
{2010214001|XXGiport_src_flow|2518|0|4035|0|{0|}1517|1508|}
{2010007001|XXGobject_proto_object|2519|0|4036|0|{}1511|1518|}
{2010212001|XXGvertex_oport_oport|2520|0|4038|0|{0|out|}1518|1519|}
{2010006001|XXGobject_psameas_object|2521|0|4040|0|{metadata|out_metadata|1|0|}1519|1518|}
{2010212001|XXGvertex_oport_oport|2522|0|4041|0|{1|deselect|}1518|1520|}
{2010006001|XXGobject_psameas_object|2523|0|4043|0|{metadata|deselect_metadata|1|0|}1520|1518|}
{2010212001|XXGvertex_oport_oport|2524|0|4044|0|{2|reject|}1518|1521|}
{2010006001|XXGobject_psameas_object|2525|0|4046|0|{metadata|reject_metadata|1|0|}1521|1518|}
{2010212001|XXGvertex_oport_oport|2526|0|4047|0|{3|error|}1518|1522|}
{2010006001|XXGobject_psameas_object|2527|0|4049|0|{metadata|error_metadata|1|0|}1522|1518|}
{2010212001|XXGvertex_oport_oport|2528|0|4050|0|{4|log|}1518|1523|}
{2010006001|XXGobject_psameas_object|2529|0|4052|0|{metadata|log_metadata|1|0|}1523|1518|}
{2010211001|XXGvertex_iport_iport|2530|0|4053|0|{0|in|}1518|1524|}
{2010006001|XXGobject_psameas_object|2531|0|4055|0|{metadata|in_metadata|1|0|}1524|1518|}
{2010601001|XXGgraph_vertex_vertex|2532|0|4056|0|{FBE_filter_matching_lkp_record|}1502|1525|}
{2010212001|XXGvertex_oport_oport|2533|0|4058|0|{0|out|}1525|1526|}
{2010213001|XXGoport_dst_flow|2534|0|4060|0|{0|}1526|1507|}
{2010212001|XXGvertex_oport_oport|2535|0|4061|0|{1|deselect|}1525|1527|}
{2010213001|XXGoport_dst_flow|2536|0|4063|0|{0|}1527|1505|}
{2010212001|XXGvertex_oport_oport|2537|0|4064|0|{2|reject|}1525|1528|}
{2010212001|XXGvertex_oport_oport|2538|0|4066|0|{3|error|}1525|1529|}
{2010212001|XXGvertex_oport_oport|2539|0|4068|0|{4|log|}1525|1530|}
{2010211001|XXGvertex_iport_iport|2540|0|4070|0|{0|in|}1525|1531|}
{2010007001|XXGobject_proto_object|2541|0|4072|0|{}1525|1532|}
{2010212001|XXGvertex_oport_oport|2542|0|4074|0|{0|out|}1532|1533|}
{2010006001|XXGobject_psameas_object|2543|0|4076|0|{metadata|out_metadata|1|0|}1533|1532|}
{2010212001|XXGvertex_oport_oport|2544|0|4077|0|{1|deselect|}1532|1534|}
{2010006001|XXGobject_psameas_object|2545|0|4079|0|{metadata|deselect_metadata|1|0|}1534|1532|}
{2010212001|XXGvertex_oport_oport|2546|0|4080|0|{2|reject|}1532|1535|}
{2010006001|XXGobject_psameas_object|2547|0|4082|0|{metadata|reject_metadata|1|0|}1535|1532|}
{2010212001|XXGvertex_oport_oport|2548|0|4083|0|{3|error|}1532|1536|}
{2010006001|XXGobject_psameas_object|2549|0|4085|0|{metadata|error_metadata|1|0|}1536|1532|}
{2010212001|XXGvertex_oport_oport|2550|0|4086|0|{4|log|}1532|1537|}
{2010006001|XXGobject_psameas_object|2551|0|4088|0|{metadata|log_metadata|1|0|}1537|1532|}
{2010211001|XXGvertex_iport_iport|2552|0|4089|0|{0|in|}1532|1538|}
{2010006001|XXGobject_psameas_object|2553|0|4091|0|{metadata|in_metadata|1|0|}1538|1532|}
{2010601001|XXGgraph_vertex_vertex|2554|0|4092|0|{Merge|}1502|1539|}
{2010212001|XXGvertex_oport_oport|2555|0|4094|0|{0|out|}1539|1540|}
{2010211001|XXGvertex_iport_iport|2556|0|4096|0|{0|in|}1539|1541|}
{2010214001|XXGiport_src_flow|2557|0|4098|0|{0|}1541|1507|}
{2010214001|XXGiport_src_flow|2558|0|4099|0|{1|}1541|1509|}
{2010007001|XXGobject_proto_object|2559|0|4100|0|{}1539|1542|}
{2010212001|XXGvertex_oport_oport|2560|0|4102|0|{0|out|}1542|1543|}
{2010006001|XXGobject_psameas_object|2561|0|4104|0|{metadata|out_metadata|1|0|}1543|1542|}
{2010211001|XXGvertex_iport_iport|2562|0|4105|0|{0|in|}1542|1544|}
{2010006001|XXGobject_psameas_object|2563|0|4107|0|{metadata|in_metadata|1|0|}1544|1542|}
{2010601001|XXGgraph_vertex_vertex|2564|0|4108|0|{No_Match_Record_In_Second_Pass|}1502|1545|}
{2010211001|XXGvertex_iport_iport|2565|0|4110|0|{0|in|}1545|1546|}
{2010214001|XXGiport_src_flow|2566|0|4112|0|{0|}1546|1510|}
{2010007001|XXGobject_proto_object|2567|0|4113|0|{}1545|1547|}
{2010211001|XXGvertex_iport_iport|2568|0|4115|0|{0|in|}1547|1548|}
{2010006001|XXGobject_psameas_object|2569|0|4117|0|{metadata|in_metadata|1|0|}1548|1547|}
{2010601001|XXGgraph_vertex_vertex|2570|0|4118|0|{RFMT_Lookup_with_IDS_Archive_|}1502|1549|}
{2010212001|XXGvertex_oport_oport|2571|0|4120|0|{0|out0|}1549|1550|}
{2010213001|XXGoport_dst_flow|2572|0|4122|0|{0|}1550|1508|}
{2010212001|XXGvertex_oport_oport|2573|0|4123|0|{1|reject0|}1549|1551|}
{2010212001|XXGvertex_oport_oport|2574|0|4125|0|{2|error0|}1549|1552|}
{2010212001|XXGvertex_oport_oport|2575|0|4127|0|{3|log|}1549|1553|}
{2010211001|XXGvertex_iport_iport|2576|0|4129|0|{0|in|}1549|1554|}
{2010214001|XXGiport_src_flow|2577|0|4131|0|{0|}1554|1506|}
{2010007001|XXGobject_proto_object|2578|0|4132|0|{}1549|1555|}
{2010212001|XXGvertex_oport_oport|2579|0|4134|0|{0|out0|}1555|1556|}
{2010006001|XXGobject_psameas_object|2580|0|4136|0|{metadata|out0_metadata|1|0|}1556|1555|}
{2010006001|XXGobject_psameas_object|2581|0|4137|0|{transform0|transform0|1|0|}1556|1555|}
{2010212001|XXGvertex_oport_oport|2582|0|4138|0|{1|reject0|}1555|1557|}
{2010006001|XXGobject_psameas_object|2583|0|4140|0|{metadata|reject0_metadata|1|0|}1557|1555|}
{2010212001|XXGvertex_oport_oport|2584|0|4141|0|{2|error0|}1555|1558|}
{2010006001|XXGobject_psameas_object|2585|0|4143|0|{metadata|error0_metadata|1|0|}1558|1555|}
{2010212001|XXGvertex_oport_oport|2586|0|4144|0|{3|log|}1555|1559|}
{2010006001|XXGobject_psameas_object|2587|0|4146|0|{metadata|log_metadata|1|0|}1559|1555|}
{2010211001|XXGvertex_iport_iport|2588|0|4147|0|{0|in|}1555|1560|}
{2010006001|XXGobject_psameas_object|2589|0|4149|0|{metadata|in_metadata|1|0|}1560|1555|}
{2010601001|XXGgraph_vertex_vertex|2590|0|4150|0|{RFMT_Pass_only_Hash_Keys|}1502|1561|}
{2010212001|XXGvertex_oport_oport|2591|0|4152|0|{0|out0|}1561|1562|}
{2010213001|XXGoport_dst_flow|2592|0|4154|0|{0|}1562|1506|}
{2010212001|XXGvertex_oport_oport|2593|0|4155|0|{1|reject0|}1561|1563|}
{2010212001|XXGvertex_oport_oport|2594|0|4157|0|{2|error0|}1561|1564|}
{2010212001|XXGvertex_oport_oport|2595|0|4159|0|{3|log|}1561|1565|}
{2010211001|XXGvertex_iport_iport|2596|0|4161|0|{0|in|}1561|1566|}
{2010214001|XXGiport_src_flow|2597|0|4163|0|{0|}1566|1505|}
{2010007001|XXGobject_proto_object|2598|0|4164|0|{}1561|1567|}
{2010212001|XXGvertex_oport_oport|2599|0|4166|0|{0|out0|}1567|1568|}
{2010006001|XXGobject_psameas_object|2600|0|4168|0|{metadata|out0_metadata|1|0|}1568|1567|}
{2010006001|XXGobject_psameas_object|2601|0|4169|0|{transform0|transform0|1|0|}1568|1567|}
{2010212001|XXGvertex_oport_oport|2602|0|4170|0|{1|reject0|}1567|1569|}
{2010006001|XXGobject_psameas_object|2603|0|4172|0|{metadata|reject0_metadata|1|0|}1569|1567|}
{2010212001|XXGvertex_oport_oport|2604|0|4173|0|{2|error0|}1567|1570|}
{2010006001|XXGobject_psameas_object|2605|0|4175|0|{metadata|error0_metadata|1|0|}1570|1567|}
{2010212001|XXGvertex_oport_oport|2606|0|4176|0|{3|log|}1567|1571|}
{2010006001|XXGobject_psameas_object|2607|0|4178|0|{metadata|log_metadata|1|0|}1571|1567|}
{2010211001|XXGvertex_iport_iport|2608|0|4179|0|{0|in|}1567|1572|}
{2010006001|XXGobject_psameas_object|2609|0|4181|0|{metadata|in_metadata|1|0|}1572|1567|}
{2010212001|XXGvertex_oport_oport|2610|0|4182|0|{0|out0|}1502|1573|}
{2010216002|XXGoport_binding_oport|2611|0|4184|0|{.5|.5|{0|}15500|}1573|1540|}
{2010213001|XXGoport_dst_flow|2612|0|4185|0|{0|}1573|1374|}
{2010211001|XXGvertex_iport_iport|2613|0|4186|0|{0|in0|}1502|1574|}
{2010215002|XXGiport_binding_iport|2614|0|4188|0|{.5|.5|{0|}15499|}1574|1531|}
{2010214001|XXGiport_src_flow|2615|0|4189|0|{0|}1574|1373|}
{2010212001|XXGvertex_oport_oport|2616|0|4190|0|{0|out0|}1361|1575|}
{2010216002|XXGoport_binding_oport|2617|0|4192|0|{.5|.5|{0|}15515|}1575|1380|}
{2010213001|XXGoport_dst_flow|2618|0|4193|0|{0|}1575|1181|}
{2010211001|XXGvertex_iport_iport|2619|0|4194|0|{0|in1|}1361|1576|}
{2010215002|XXGiport_binding_iport|2620|0|4196|0|{.5|.5|{0|}15514|}1576|1412|}
{2010214001|XXGiport_src_flow|2621|0|4197|0|{0|}1576|1179|}
{2010601001|XXGgraph_vertex_vertex|2622|0|4198|0|{Merge|}1173|1577|}
{2010212001|XXGvertex_oport_oport|2623|0|4200|0|{0|out|}1577|1578|}
{2010211001|XXGvertex_iport_iport|2624|0|4202|0|{0|in|}1577|1579|}
{2010214001|XXGiport_src_flow|2625|0|4204|0|{0|}1579|1182|}
{2010007001|XXGobject_proto_object|2626|0|4205|0|{}1577|1580|}
{2010212001|XXGvertex_oport_oport|2627|0|4207|0|{0|out|}1580|1581|}
{2010006001|XXGobject_psameas_object|2628|0|4209|0|{metadata|out_metadata|1|0|}1581|1580|}
{2010211001|XXGvertex_iport_iport|2629|0|4210|0|{0|in|}1580|1582|}
{2010006001|XXGobject_psameas_object|2630|0|4212|0|{metadata|in_metadata|1|0|}1582|1580|}
{2010601001|XXGgraph_vertex_vertex|2631|0|4213|0|{Replicate|}1173|1583|}
{2010212001|XXGvertex_oport_oport|2632|0|4215|0|{0|out|}1583|1584|}
{2010213001|XXGoport_dst_flow|2633|0|4217|0|{0|}1584|1178|}
{2010213001|XXGoport_dst_flow|2634|0|4218|0|{1|}1584|1179|}
{2010211001|XXGvertex_iport_iport|2635|0|4219|0|{0|in|}1583|1585|}
{2010007001|XXGobject_proto_object|2636|0|4221|0|{}1583|1586|}
{2010212001|XXGvertex_oport_oport|2637|0|4223|0|{0|out|}1586|1587|}
{2010006001|XXGobject_psameas_object|2638|0|4225|0|{metadata|out_metadata|1|0|}1587|1586|}
{2010211001|XXGvertex_iport_iport|2639|0|4226|0|{0|in|}1586|1588|}
{2010006001|XXGobject_psameas_object|2640|0|4228|0|{metadata|in_metadata|1|0|}1588|1586|}
{2010601001|XXGgraph_vertex_vertex|2641|0|4229|0|{Replicate_1|}1173|1589|}
{2010212001|XXGvertex_oport_oport|2642|0|4231|0|{0|out|}1589|1590|}
{2010213001|XXGoport_dst_flow|2643|0|4233|0|{0|}1590|1182|}
{2010211001|XXGvertex_iport_iport|2644|0|4234|0|{0|in|}1589|1591|}
{2010214001|XXGiport_src_flow|2645|0|4236|0|{0|}1591|1180|}
{2010214001|XXGiport_src_flow|2646|0|4237|0|{1|}1591|1181|}
{2010007001|XXGobject_proto_object|2647|0|4238|0|{}1589|1592|}
{2010212001|XXGvertex_oport_oport|2648|0|4240|0|{0|out|}1592|1593|}
{2010006001|XXGobject_psameas_object|2649|0|4242|0|{metadata|out_metadata|1|0|}1593|1592|}
{2010211001|XXGvertex_iport_iport|2650|0|4243|0|{0|in|}1592|1594|}
{2010006001|XXGobject_psameas_object|2651|0|4245|0|{metadata|in_metadata|1|0|}1594|1592|}
{2010212001|XXGvertex_oport_oport|2652|0|4246|0|{0|out0|}1173|1595|}
{2010216002|XXGoport_binding_oport|2653|0|4248|0|{.5|.5|{0|}7797|}1595|1578|}
{2010211001|XXGvertex_iport_iport|2654|0|4249|0|{0|in0|}1173|1596|}
{2010215002|XXGiport_binding_iport|2655|0|4251|0|{.5|.5|{0|}7796|}1596|1585|}
{2010601001|XXGgraph_vertex_vertex|2656|0|4252|0|{ids_lookup_3|}143|1597|}
{2010605001|XXGgraph_legend_legend|2657|0|4254|0|{0|}1597|1598|}
{2010241001|XXGlegend_face_face|2658|0|4256|0|{}1598|1599|}
{2010605001|XXGgraph_legend_legend|2659|0|4258|0|{1|}1597|1600|}
{2010241001|XXGlegend_face_face|2660|0|4260|0|{}1600|1601|}
{2010604001|XXGgraph_flow_flow|2661|0|4262|0|{Flow_1|}1597|1602|}
{2010604001|XXGgraph_flow_flow|2662|0|4264|0|{Flow_2|}1597|1603|}
{2010604001|XXGgraph_flow_flow|2663|0|4266|0|{Flow_3|}1597|1604|}
{2010604001|XXGgraph_flow_flow|2664|0|4268|0|{Flow_4|}1597|1605|}
{2010604001|XXGgraph_flow_flow|2665|0|4270|0|{Flow_5|}1597|1606|}
{2010601001|XXGgraph_vertex_vertex|2666|0|4272|0|{Get_All_LookUp_Record|}1597|1607|}
{2010605001|XXGgraph_legend_legend|2667|0|4274|0|{0|}1607|1608|}
{2010241001|XXGlegend_face_face|2668|0|4276|0|{}1608|1609|}
{2010605001|XXGgraph_legend_legend|2669|0|4278|0|{1|}1607|1610|}
{2010241001|XXGlegend_face_face|2670|0|4280|0|{}1610|1611|}
{2010605001|XXGgraph_legend_legend|2671|0|4282|0|{2|}1607|1612|}
{2010241001|XXGlegend_face_face|2672|0|4284|0|{}1612|1613|}
{2010605001|XXGgraph_legend_legend|2673|0|4286|0|{3|}1607|1614|}
{2010241001|XXGlegend_face_face|2674|0|4288|0|{}1614|1615|}
{2010605001|XXGgraph_legend_legend|2675|0|4290|0|{4|}1607|1616|}
{2010241001|XXGlegend_face_face|2676|0|4292|0|{}1616|1617|}
{2010604001|XXGgraph_flow_flow|2677|0|4294|0|{Flow_1|}1607|1618|}
{2010604001|XXGgraph_flow_flow|2678|0|4296|0|{Flow_10|}1607|1619|}
{2010604001|XXGgraph_flow_flow|2679|0|4298|0|{Flow_11|}1607|1620|}
{2010604001|XXGgraph_flow_flow|2680|0|4300|0|{Flow_12|}1607|1621|}
{2010604001|XXGgraph_flow_flow|2681|0|4302|0|{Flow_18|}1607|1622|}
{2010604001|XXGgraph_flow_flow|2682|0|4304|0|{Flow_2|}1607|1623|}
{2010604001|XXGgraph_flow_flow|2683|0|4306|0|{Flow_3|}1607|1624|}
{2010604001|XXGgraph_flow_flow|2684|0|4308|0|{Flow_4|}1607|1625|}
{2010604001|XXGgraph_flow_flow|2685|0|4310|0|{Flow_5|}1607|1626|}
{2010604001|XXGgraph_flow_flow|2686|0|4312|0|{Flow_6|}1607|1627|}
{2010604001|XXGgraph_flow_flow|2687|0|4314|0|{Flow_7|}1607|1628|}
{2010604001|XXGgraph_flow_flow|2688|0|4316|0|{Flow_8|}1607|1629|}
{2010604001|XXGgraph_flow_flow|2689|0|4318|0|{Flow_9|}1607|1630|}
{2010601001|XXGgraph_vertex_vertex|2690|0|4320|0|{Dedup_Sorted|}1607|1631|}
{2010212001|XXGvertex_oport_oport|2691|0|4322|0|{0|out|}1631|1632|}
{2010213001|XXGoport_dst_flow|2692|0|4324|0|{0|}1632|1623|}
{2010212001|XXGvertex_oport_oport|2693|0|4325|0|{1|dup|}1631|1633|}
{2010213001|XXGoport_dst_flow|2694|0|4327|0|{0|}1633|1627|}
{2010212001|XXGvertex_oport_oport|2695|0|4328|0|{2|reject|}1631|1634|}
{2010212001|XXGvertex_oport_oport|2696|0|4330|0|{3|error|}1631|1635|}
{2010212001|XXGvertex_oport_oport|2697|0|4332|0|{4|log|}1631|1636|}
{2010211001|XXGvertex_iport_iport|2698|0|4334|0|{0|in|}1631|1637|}
{2010214001|XXGiport_src_flow|2699|0|4336|0|{0|}1637|1618|}
{2010006001|XXGobject_psameas_object|2700|0|4337|0|{Layout|Layout|0|0|}1631|1638|}
{2010212001|XXGvertex_oport_oport|2701|0|4339|0|{0|out|}1638|1639|}
{2010213001|XXGoport_dst_flow|2702|0|4341|0|{0|}1639|1621|}
{2010212001|XXGvertex_oport_oport|2703|0|4342|0|{1|reject|}1638|1640|}
{2010212001|XXGvertex_oport_oport|2704|0|4344|0|{2|error|}1638|1641|}
{2010212001|XXGvertex_oport_oport|2705|0|4346|0|{3|log|}1638|1642|}
{2010211001|XXGvertex_iport_iport|2706|0|4348|0|{0|in|}1638|1643|}
{2010214001|XXGiport_src_flow|2707|0|4350|0|{0|}1643|1619|}
{2010006001|XXGobject_psameas_object|2708|0|4351|0|{in_metadata|out0_metadata|0|0|}1638|1644|}
{2010212001|XXGvertex_oport_oport|2709|0|4353|0|{0|out0|}1644|1645|}
{2010213001|XXGoport_dst_flow|2710|0|4355|0|{0|}1645|1622|}
{2010212001|XXGvertex_oport_oport|2711|0|4356|0|{1|reject0|}1644|1646|}
{2010212001|XXGvertex_oport_oport|2712|0|4358|0|{2|error0|}1644|1647|}
{2010212001|XXGvertex_oport_oport|2713|0|4360|0|{3|log|}1644|1648|}
{2010211001|XXGvertex_iport_iport|2714|0|4362|0|{0|in|}1644|1649|}
{2010006001|XXGobject_psameas_object|2715|0|4364|0|{Layout|Layout|0|0|}1644|242|}
{2010006001|XXGobject_psameas_object|2716|0|4365|0|{in_metadata|out2_metadata|0|0|}1644|242|}
{2010006001|XXGobject_psameas_object|2717|0|4366|0|{reject0_metadata|out2_metadata|0|0|}1644|242|}
{2010006001|XXGobject_psameas_object|2718|0|4367|0|{reject_metadata|out0_metadata|0|0|}1638|1644|}
{2010006001|XXGobject_psameas_object|2719|0|4368|0|{dup_metadata|out_metadata|0|0|}1631|1650|}
{2010212001|XXGvertex_oport_oport|2720|0|4370|0|{0|out|}1650|1651|}
{2010213001|XXGoport_dst_flow|2721|0|4372|0|{0|}1651|1620|}
{2010212001|XXGvertex_oport_oport|2722|0|4373|0|{1|deselect|}1650|1652|}
{2010213001|XXGoport_dst_flow|2723|0|4375|0|{0|}1652|1628|}
{2010212001|XXGvertex_oport_oport|2724|0|4376|0|{2|reject|}1650|1653|}
{2010212001|XXGvertex_oport_oport|2725|0|4378|0|{3|error|}1650|1654|}
{2010212001|XXGvertex_oport_oport|2726|0|4380|0|{4|log|}1650|1655|}
{2010211001|XXGvertex_iport_iport|2727|0|4382|0|{0|in|}1650|1656|}
{2010214001|XXGiport_src_flow|2728|0|4384|0|{0|}1656|1629|}
{2010006001|XXGobject_psameas_object|2729|0|4385|0|{Layout|Layout|0|0|}1650|1638|}
{2010006001|XXGobject_psameas_object|2730|0|4386|0|{deselect_metadata|out_metadata|0|0|}1650|1650|}
{2010006001|XXGobject_psameas_object|2731|0|4387|0|{in_metadata|out_metadata|0|0|}1650|1657|}
{2010212001|XXGvertex_oport_oport|2732|0|4389|0|{0|out|}1657|1658|}
{2010213001|XXGoport_dst_flow|2733|0|4391|0|{0|}1658|1624|}
{2010212001|XXGvertex_oport_oport|2734|0|4392|0|{1|reject|}1657|1659|}
{2010212001|XXGvertex_oport_oport|2735|0|4394|0|{2|error|}1657|1660|}
{2010212001|XXGvertex_oport_oport|2736|0|4396|0|{3|log|}1657|1661|}
{2010211001|XXGvertex_iport_iport|2737|0|4398|0|{0|in|}1657|1662|}
{2010214001|XXGiport_src_flow|2738|0|4400|0|{0|}1662|1626|}
{2010006001|XXGobject_psameas_object|2739|0|4401|0|{in_metadata|out0_metadata|0|0|}1657|1644|}
{2010006001|XXGobject_psameas_object|2740|0|4402|0|{reject_metadata|out0_metadata|0|0|}1657|1644|}
{2010006001|XXGobject_psameas_object|2741|0|4403|0|{reject_metadata|out_metadata|0|0|}1650|1657|}
{2010006001|XXGobject_psameas_object|2742|0|4404|0|{in_metadata|out_metadata|0|0|}1631|1650|}
{2010006001|XXGobject_psameas_object|2743|0|4405|0|{out_metadata|out_metadata|0|0|}1631|1650|}
{2010006001|XXGobject_psameas_object|2744|0|4406|0|{reject_metadata|out_metadata|0|0|}1631|1650|}
{2010601001|XXGgraph_vertex_vertex|2745|0|4407|0|{FBE_Filter_match_records|}1607|1650|}
{2010601001|XXGgraph_vertex_vertex|2746|0|4408|0|{Get_Hash_on_SRC_NK|}1607|1644|}
{2010601001|XXGgraph_vertex_vertex|2747|0|4409|0|{Merge|}1607|1663|}
{2010212001|XXGvertex_oport_oport|2748|0|4411|0|{0|out|}1663|1664|}
{2010213001|XXGoport_dst_flow|2749|0|4413|0|{0|}1664|1629|}
{2010211001|XXGvertex_iport_iport|2750|0|4414|0|{0|in|}1663|1665|}
{2010214001|XXGiport_src_flow|2751|0|4416|0|{0|}1665|1624|}
{2010214001|XXGiport_src_flow|2752|0|4417|0|{1|}1665|1621|}
{2010006001|XXGobject_psameas_object|2753|0|4418|0|{Layout|Layout|0|0|}1663|1638|}
{2010006001|XXGobject_psameas_object|2754|0|4419|0|{in_metadata|out_metadata|0|0|}1663|1657|}
{2010006001|XXGobject_psameas_object|2755|0|4420|0|{out_metadata|out_metadata|0|0|}1663|1657|}
{2010601001|XXGgraph_vertex_vertex|2756|0|4421|0|{Normalize_Get_all_records_from_Archive_Lkp|}1607|1638|}
{2010601001|XXGgraph_vertex_vertex|2757|0|4422|0|{Normalize_Get_all_records_from_lkp|}1607|1657|}
{2010601001|XXGgraph_vertex_vertex|2758|0|4423|0|{Replicate|}1607|1666|}
{2010212001|XXGvertex_oport_oport|2759|0|4425|0|{0|out|}1666|1667|}
{2010211001|XXGvertex_iport_iport|2760|0|4427|0|{0|in|}1666|1668|}
{2010214001|XXGiport_src_flow|2761|0|4429|0|{0|}1668|1623|}
{2010006001|XXGobject_psameas_object|2762|0|4430|0|{Layout|Layout|0|0|}1666|1638|}
{2010006001|XXGobject_psameas_object|2763|0|4431|0|{in_metadata|out_metadata|0|0|}1666|1650|}
{2010006001|XXGobject_psameas_object|2764|0|4432|0|{out_metadata|out_metadata|0|0|}1666|1650|}
{2010601001|XXGgraph_vertex_vertex|2765|0|4433|0|{Replicate_1|}1607|1669|}
{2010212001|XXGvertex_oport_oport|2766|0|4435|0|{0|out|}1669|1670|}
{2010213001|XXGoport_dst_flow|2767|0|4437|0|{0|}1670|1626|}
{2010213001|XXGoport_dst_flow|2768|0|4438|0|{1|}1670|1619|}
{2010211001|XXGvertex_iport_iport|2769|0|4439|0|{0|in|}1669|1671|}
{2010214001|XXGiport_src_flow|2770|0|4441|0|{0|}1671|1625|}
{2010006001|XXGobject_psameas_object|2771|0|4442|0|{Layout|Layout|0|0|}1669|1638|}
{2010006001|XXGobject_psameas_object|2772|0|4443|0|{in_metadata|out0_metadata|0|0|}1669|1644|}
{2010006001|XXGobject_psameas_object|2773|0|4444|0|{out_metadata|out0_metadata|0|0|}1669|1644|}
{2010601001|XXGgraph_vertex_vertex|2774|0|4445|0|{Sort_Remove_Dup_On_Hash|}1607|1672|}
{2010604001|XXGgraph_flow_flow|2775|0|4447|0|{Flow_3|}1672|1673|}
{2010604001|XXGgraph_flow_flow|2776|0|4449|0|{Flow_5|}1672|1674|}
{2010601001|XXGgraph_vertex_vertex|2777|0|4451|0|{Dedup_Sorted_1|}1672|1675|}
{2010212001|XXGvertex_oport_oport|2778|0|4453|0|{0|out|}1675|1676|}
{2010212001|XXGvertex_oport_oport|2779|0|4455|0|{1|dup|}1675|1677|}
{2010212001|XXGvertex_oport_oport|2780|0|4457|0|{2|reject|}1675|1678|}
{2010212001|XXGvertex_oport_oport|2781|0|4459|0|{3|error|}1675|1679|}
{2010212001|XXGvertex_oport_oport|2782|0|4461|0|{4|log|}1675|1680|}
{2010211001|XXGvertex_iport_iport|2783|0|4463|0|{0|in|}1675|1681|}
{2010214001|XXGiport_src_flow|2784|0|4465|0|{0|}1681|1674|}
{2010006001|XXGobject_psameas_object|2785|0|4466|0|{Layout|Layout|0|0|}1675|1638|}
{2010006001|XXGobject_psameas_object|2786|0|4467|0|{dup_metadata|out0_metadata|0|0|}1675|1644|}
{2010006001|XXGobject_psameas_object|2787|0|4468|0|{in_metadata|out0_metadata|0|0|}1675|1644|}
{2010006001|XXGobject_psameas_object|2788|0|4469|0|{out_metadata|out0_metadata|0|0|}1675|1644|}
{2010006001|XXGobject_psameas_object|2789|0|4470|0|{reject_metadata|out0_metadata|0|0|}1675|1644|}
{2010601001|XXGgraph_vertex_vertex|2790|0|4471|0|{PBKS_dxf_hk_part1_|}1672|1682|}
{2010604001|XXGgraph_flow_flow|2791|0|4473|0|{Flow_1|}1682|1683|}
{2010601001|XXGgraph_vertex_vertex|2792|0|4475|0|{Partition_by_Key|}1682|1684|}
{2010212001|XXGvertex_oport_oport|2793|0|4477|0|{0|out|}1684|1685|}
{2010213001|XXGoport_dst_flow|2794|0|4479|0|{0|}1685|1683|}
{2010211001|XXGvertex_iport_iport|2795|0|4480|0|{0|in|}1684|1686|}
{2010006001|XXGobject_psameas_object|2796|0|4482|0|{in_metadata|out0_metadata|0|0|}1684|1644|}
{2010006001|XXGobject_psameas_object|2797|0|4483|0|{out_metadata|out0_metadata|0|0|}1684|1644|}
{2010601001|XXGgraph_vertex_vertex|2798|0|4484|0|{Sort|}1682|1687|}
{2010212001|XXGvertex_oport_oport|2799|0|4486|0|{0|out|}1687|1688|}
{2010211001|XXGvertex_iport_iport|2800|0|4488|0|{0|in|}1687|1689|}
{2010214001|XXGiport_src_flow|2801|0|4490|0|{0|}1689|1683|}
{2010006001|XXGobject_psameas_object|2802|0|4491|0|{in_metadata|out0_metadata|0|0|}1687|1644|}
{2010006001|XXGobject_psameas_object|2803|0|4492|0|{out_metadata|out0_metadata|0|0|}1687|1644|}
{2010212001|XXGvertex_oport_oport|2804|0|4493|0|{0|out0|}1682|1690|}
{2010216002|XXGoport_binding_oport|2805|0|4495|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}1690|1688|}
{2010213001|XXGoport_dst_flow|2806|0|4496|0|{0|}1690|1673|}
{2010211001|XXGvertex_iport_iport|2807|0|4497|0|{0|in0|}1682|1691|}
{2010215002|XXGiport_binding_iport|2808|0|4499|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}1691|1686|}
{2010006001|XXGobject_psameas_object|2809|0|4500|0|{OutputLayout|Layout|0|0|}1682|1638|}
{2010601001|XXGgraph_vertex_vertex|2810|0|4501|0|{Sort_within_Groups|}1672|1692|}
{2010212001|XXGvertex_oport_oport|2811|0|4503|0|{0|out|}1692|1693|}
{2010213001|XXGoport_dst_flow|2812|0|4505|0|{0|}1693|1674|}
{2010211001|XXGvertex_iport_iport|2813|0|4506|0|{0|in|}1692|1694|}
{2010214001|XXGiport_src_flow|2814|0|4508|0|{0|}1694|1673|}
{2010006001|XXGobject_psameas_object|2815|0|4509|0|{Layout|Layout|0|0|}1692|1638|}
{2010006001|XXGobject_psameas_object|2816|0|4510|0|{in_metadata|out0_metadata|0|0|}1692|1644|}
{2010006001|XXGobject_psameas_object|2817|0|4511|0|{out_metadata|out0_metadata|0|0|}1692|1644|}
{2010212001|XXGvertex_oport_oport|2818|0|4512|0|{0|out0|}1672|1695|}
{2010216002|XXGoport_binding_oport|2819|0|4514|0|{.5|.5|{0|}14672|}1695|1676|}
{2010213001|XXGoport_dst_flow|2820|0|4515|0|{0|}1695|1625|}
{2010212001|XXGvertex_oport_oport|2821|0|4516|0|{1|out1|}1672|1696|}
{2010216002|XXGoport_binding_oport|2822|0|4518|0|{.5|.5|{0|}14673|}1696|1677|}
{2010213001|XXGoport_dst_flow|2823|0|4519|0|{0|}1696|1630|}
{2010211001|XXGvertex_iport_iport|2824|0|4520|0|{0|in0|}1672|1697|}
{2010215002|XXGiport_binding_iport|2825|0|4522|0|{.5|.5|{0|}14671|}1697|1691|}
{2010214001|XXGiport_src_flow|2826|0|4523|0|{0|}1697|1622|}
{2010601001|XXGgraph_vertex_vertex|2827|0|4524|0|{Sort_on_Adjusted_Natural_Keys|}1607|1698|}
{2010212001|XXGvertex_oport_oport|2828|0|4526|0|{0|out|}1698|1699|}
{2010213001|XXGoport_dst_flow|2829|0|4528|0|{0|}1699|1618|}
{2010211001|XXGvertex_iport_iport|2830|0|4529|0|{0|in|}1698|1700|}
{2010214001|XXGiport_src_flow|2831|0|4531|0|{0|}1700|1620|}
{2010006001|XXGobject_psameas_object|2832|0|4532|0|{Layout|Layout|0|0|}1698|1638|}
{2010006001|XXGobject_psameas_object|2833|0|4533|0|{in_metadata|out_metadata|0|0|}1698|1650|}
{2010006001|XXGobject_psameas_object|2834|0|4534|0|{out_metadata|out_metadata|0|0|}1698|1650|}
{2010601001|XXGgraph_vertex_vertex|2835|0|4535|0|{Trash_1|}1607|1701|}
{2010211001|XXGvertex_iport_iport|2836|0|4537|0|{0|in|}1701|1702|}
{2010214001|XXGiport_src_flow|2837|0|4539|0|{0|}1702|1628|}
{2010006001|XXGobject_psameas_object|2838|0|4540|0|{Layout|Layout|0|0|}1701|1638|}
{2010006001|XXGobject_psameas_object|2839|0|4541|0|{in_metadata|out_metadata|0|0|}1701|1650|}
{2010601001|XXGgraph_vertex_vertex|2840|0|4542|0|{Trash_2|}1607|1703|}
{2010211001|XXGvertex_iport_iport|2841|0|4544|0|{0|in|}1703|1704|}
{2010214001|XXGiport_src_flow|2842|0|4546|0|{0|}1704|1627|}
{2010006001|XXGobject_psameas_object|2843|0|4547|0|{Layout|Layout|0|0|}1703|1638|}
{2010006001|XXGobject_psameas_object|2844|0|4548|0|{in_metadata|out_metadata|0|0|}1703|1650|}
{2010601001|XXGgraph_vertex_vertex|2845|0|4549|0|{Trash_3|}1607|1705|}
{2010211001|XXGvertex_iport_iport|2846|0|4551|0|{0|in|}1705|1706|}
{2010214001|XXGiport_src_flow|2847|0|4553|0|{0|}1706|1630|}
{2010006001|XXGobject_psameas_object|2848|0|4554|0|{Layout|Layout|0|0|}1705|1638|}
{2010006001|XXGobject_psameas_object|2849|0|4555|0|{in_metadata|out0_metadata|0|0|}1705|1644|}
{2010212001|XXGvertex_oport_oport|2850|0|4556|0|{0|out0|}1607|1707|}
{2010216002|XXGoport_binding_oport|2851|0|4558|0|{.5|.5|{0|}14919|}1707|1667|}
{2010213001|XXGoport_dst_flow|2852|0|4559|0|{0|}1707|1604|}
{2010211001|XXGvertex_iport_iport|2853|0|4560|0|{0|in0|}1607|1708|}
{2010215002|XXGiport_binding_iport|2854|0|4562|0|{.5|.5|{0|}14918|}1708|1649|}
{2010214001|XXGiport_src_flow|2855|0|4563|0|{0|}1708|1602|}
{2010601001|XXGgraph_vertex_vertex|2856|0|4564|0|{Get_Last_Lookup_Record|}1597|1709|}
{2010605001|XXGgraph_legend_legend|2857|0|4566|0|{0|}1709|1710|}
{2010241001|XXGlegend_face_face|2858|0|4568|0|{}1710|1711|}
{2010605001|XXGgraph_legend_legend|2859|0|4570|0|{1|}1709|1712|}
{2010241001|XXGlegend_face_face|2860|0|4572|0|{}1712|1713|}
{2010605001|XXGgraph_legend_legend|2861|0|4574|0|{2|}1709|1714|}
{2010241001|XXGlegend_face_face|2862|0|4576|0|{}1714|1715|}
{2010605001|XXGgraph_legend_legend|2863|0|4578|0|{3|}1709|1716|}
{2010241001|XXGlegend_face_face|2864|0|4580|0|{}1716|1717|}
{2010604001|XXGgraph_flow_flow|2865|0|4582|0|{Flow_1|}1709|1718|}
{2010604001|XXGgraph_flow_flow|2866|0|4584|0|{Flow_2|}1709|1719|}
{2010604001|XXGgraph_flow_flow|2867|0|4586|0|{Flow_3|}1709|1720|}
{2010604001|XXGgraph_flow_flow|2868|0|4588|0|{Flow_4|}1709|1721|}
{2010604001|XXGgraph_flow_flow|2869|0|4590|0|{Flow_5|}1709|1722|}
{2010604001|XXGgraph_flow_flow|2870|0|4592|0|{Flow_6|}1709|1723|}
{2010604001|XXGgraph_flow_flow|2871|0|4594|0|{Flow_7|}1709|1724|}
{2010604001|XXGgraph_flow_flow|2872|0|4596|0|{Flow_8|}1709|1725|}
{2010604001|XXGgraph_flow_flow|2873|0|4598|0|{Flow_9|}1709|1726|}
{2010601001|XXGgraph_vertex_vertex|2874|0|4600|0|{Dedup_Sorted|}1709|1727|}
{2010212001|XXGvertex_oport_oport|2875|0|4602|0|{0|out|}1727|1728|}
{2010212001|XXGvertex_oport_oport|2876|0|4604|0|{1|dup|}1727|1729|}
{2010213001|XXGoport_dst_flow|2877|0|4606|0|{0|}1729|1725|}
{2010212001|XXGvertex_oport_oport|2878|0|4607|0|{2|reject|}1727|1730|}
{2010212001|XXGvertex_oport_oport|2879|0|4609|0|{3|error|}1727|1731|}
{2010212001|XXGvertex_oport_oport|2880|0|4611|0|{4|log|}1727|1732|}
{2010211001|XXGvertex_iport_iport|2881|0|4613|0|{0|in|}1727|1733|}
{2010214001|XXGiport_src_flow|2882|0|4615|0|{0|}1733|1720|}
{2010006001|XXGobject_psameas_object|2883|0|4616|0|{Layout|Layout|0|0|}1727|1638|}
{2010006001|XXGobject_psameas_object|2884|0|4617|0|{dup_metadata|out_metadata|0|0|}1727|1734|}
{2010212001|XXGvertex_oport_oport|2885|0|4619|0|{0|out|}1734|1735|}
{2010213001|XXGoport_dst_flow|2886|0|4621|0|{0|}1735|1719|}
{2010212001|XXGvertex_oport_oport|2887|0|4622|0|{1|deselect|}1734|1736|}
{2010213001|XXGoport_dst_flow|2888|0|4624|0|{0|}1736|1726|}
{2010212001|XXGvertex_oport_oport|2889|0|4625|0|{2|reject|}1734|1737|}
{2010212001|XXGvertex_oport_oport|2890|0|4627|0|{3|error|}1734|1738|}
{2010212001|XXGvertex_oport_oport|2891|0|4629|0|{4|log|}1734|1739|}
{2010211001|XXGvertex_iport_iport|2892|0|4631|0|{0|in|}1734|1740|}
{2010214001|XXGiport_src_flow|2893|0|4633|0|{0|}1740|1722|}
{2010006001|XXGobject_psameas_object|2894|0|4634|0|{Layout|Layout|0|0|}1734|1638|}
{2010006001|XXGobject_psameas_object|2895|0|4635|0|{deselect_metadata|out_metadata|0|0|}1734|1734|}
{2010006001|XXGobject_psameas_object|2896|0|4636|0|{in_metadata|out_metadata|0|0|}1734|1741|}
{2010212001|XXGvertex_oport_oport|2897|0|4638|0|{0|out|}1741|1742|}
{2010213001|XXGoport_dst_flow|2898|0|4640|0|{0|}1742|1743|}
{2010212001|XXGvertex_oport_oport|2899|0|4642|0|{1|deselect|}1741|1744|}
{2010213001|XXGoport_dst_flow|2900|0|4644|0|{0|}1744|1745|}
{2010212001|XXGvertex_oport_oport|2901|0|4646|0|{2|reject|}1741|1746|}
{2010212001|XXGvertex_oport_oport|2902|0|4648|0|{3|error|}1741|1747|}
{2010212001|XXGvertex_oport_oport|2903|0|4650|0|{4|log|}1741|1748|}
{2010211001|XXGvertex_iport_iport|2904|0|4652|0|{0|in|}1741|1749|}
{2010006001|XXGobject_psameas_object|2905|0|4654|0|{Layout|Layout|0|0|}1741|1638|}
{2010006001|XXGobject_psameas_object|2906|0|4655|0|{in_metadata|out0_metadata|0|0|}1741|1750|}
{2010212001|XXGvertex_oport_oport|2907|0|4657|0|{0|out0|}1750|1751|}
{2010213001|XXGoport_dst_flow|2908|0|4659|0|{0|}1751|1721|}
{2010212001|XXGvertex_oport_oport|2909|0|4660|0|{1|reject0|}1750|1752|}
{2010212001|XXGvertex_oport_oport|2910|0|4662|0|{2|error0|}1750|1753|}
{2010212001|XXGvertex_oport_oport|2911|0|4664|0|{3|log|}1750|1754|}
{2010211001|XXGvertex_iport_iport|2912|0|4666|0|{0|in|}1750|1755|}
{2010214001|XXGiport_src_flow|2913|0|4668|0|{0|}1755|1723|}
{2010006001|XXGobject_psameas_object|2914|0|4669|0|{Layout|Layout|0|0|}1750|1638|}
{2010006001|XXGobject_psameas_object|2915|0|4670|0|{in_metadata|out0_metadata|0|0|}1750|1756|}
{2010212001|XXGvertex_oport_oport|2916|0|4672|0|{0|out0|}1756|1757|}
{2010213001|XXGoport_dst_flow|2917|0|4674|0|{0|}1757|1718|}
{2010212001|XXGvertex_oport_oport|2918|0|4675|0|{1|reject0|}1756|1758|}
{2010212001|XXGvertex_oport_oport|2919|0|4677|0|{2|error0|}1756|1759|}
{2010212001|XXGvertex_oport_oport|2920|0|4679|0|{3|log|}1756|1760|}
{2010211001|XXGvertex_iport_iport|2921|0|4681|0|{0|in|}1756|1761|}
{2010006001|XXGobject_psameas_object|2922|0|4683|0|{Layout|Layout|0|0|}1756|242|}
{2010006001|XXGobject_psameas_object|2923|0|4684|0|{in_metadata|out2_metadata|0|0|}1756|242|}
{2010006001|XXGobject_psameas_object|2924|0|4685|0|{reject0_metadata|out2_metadata|0|0|}1756|242|}
{2010006001|XXGobject_psameas_object|2925|0|4686|0|{reject0_metadata|out0_metadata|0|0|}1750|1756|}
{2010006001|XXGobject_psameas_object|2926|0|4687|0|{reject_metadata|out0_metadata|0|0|}1741|1750|}
{2010006001|XXGobject_psameas_object|2927|0|4688|0|{reject_metadata|out_metadata|0|0|}1734|1741|}
{2010006001|XXGobject_psameas_object|2928|0|4689|0|{in_metadata|out_metadata|0|0|}1727|1734|}
{2010006001|XXGobject_psameas_object|2929|0|4690|0|{out_metadata|out_metadata|0|0|}1727|1734|}
{2010006001|XXGobject_psameas_object|2930|0|4691|0|{reject_metadata|out_metadata|0|0|}1727|1734|}
{2010601001|XXGgraph_vertex_vertex|2931|0|4692|0|{FBE_filter_matching_lkp_record|}1709|1734|}
{2010601001|XXGgraph_vertex_vertex|2932|0|4693|0|{RFMT_Get_Hash_On_NK|}1709|1756|}
{2010601001|XXGgraph_vertex_vertex|2933|0|4694|0|{RFMT_Lookup_with_IDS|}1709|1750|}
{2010601001|XXGgraph_vertex_vertex|2934|0|4695|0|{Sort_De_dup|}1709|1762|}
{2010604001|XXGgraph_flow_flow|2935|0|4697|0|{Flow_10|}1762|1763|}
{2010604001|XXGgraph_flow_flow|2936|0|4699|0|{Flow_4|}1762|1764|}
{2010244001|XXGflow_watcher_watcher|2937|0|4701|0|{}1764|1765|}
{2010601001|XXGgraph_vertex_vertex|2938|0|4703|0|{Dedup_Sorted_1|}1762|1766|}
{2010212001|XXGvertex_oport_oport|2939|0|4705|0|{0|out|}1766|1767|}
{2010212001|XXGvertex_oport_oport|2940|0|4707|0|{1|dup|}1766|1768|}
{2010212001|XXGvertex_oport_oport|2941|0|4709|0|{2|reject|}1766|1769|}
{2010212001|XXGvertex_oport_oport|2942|0|4711|0|{3|error|}1766|1770|}
{2010212001|XXGvertex_oport_oport|2943|0|4713|0|{4|log|}1766|1771|}
{2010211001|XXGvertex_iport_iport|2944|0|4715|0|{0|in|}1766|1772|}
{2010214001|XXGiport_src_flow|2945|0|4717|0|{0|}1772|1763|}
{2010006001|XXGobject_psameas_object|2946|0|4718|0|{Layout|Layout|0|0|}1766|1638|}
{2010006001|XXGobject_psameas_object|2947|0|4719|0|{dup_metadata|out0_metadata|0|0|}1766|1756|}
{2010006001|XXGobject_psameas_object|2948|0|4720|0|{in_metadata|out0_metadata|0|0|}1766|1756|}
{2010006001|XXGobject_psameas_object|2949|0|4721|0|{out_metadata|out0_metadata|0|0|}1766|1756|}
{2010006001|XXGobject_psameas_object|2950|0|4722|0|{reject_metadata|out0_metadata|0|0|}1766|1756|}
{2010601001|XXGgraph_vertex_vertex|2951|0|4723|0|{PBKS_dxf_hk_part1_|}1762|1773|}
{2010604001|XXGgraph_flow_flow|2952|0|4725|0|{Flow_1|}1773|1774|}
{2010601001|XXGgraph_vertex_vertex|2953|0|4727|0|{Partition_by_Key|}1773|1775|}
{2010212001|XXGvertex_oport_oport|2954|0|4729|0|{0|out|}1775|1776|}
{2010213001|XXGoport_dst_flow|2955|0|4731|0|{0|}1776|1774|}
{2010211001|XXGvertex_iport_iport|2956|0|4732|0|{0|in|}1775|1777|}
{2010006001|XXGobject_psameas_object|2957|0|4734|0|{in_metadata|out0_metadata|0|0|}1775|1756|}
{2010006001|XXGobject_psameas_object|2958|0|4735|0|{out_metadata|out0_metadata|0|0|}1775|1756|}
{2010601001|XXGgraph_vertex_vertex|2959|0|4736|0|{Sort|}1773|1778|}
{2010212001|XXGvertex_oport_oport|2960|0|4738|0|{0|out|}1778|1779|}
{2010211001|XXGvertex_iport_iport|2961|0|4740|0|{0|in|}1778|1780|}
{2010214001|XXGiport_src_flow|2962|0|4742|0|{0|}1780|1774|}
{2010006001|XXGobject_psameas_object|2963|0|4743|0|{in_metadata|out0_metadata|0|0|}1778|1756|}
{2010006001|XXGobject_psameas_object|2964|0|4744|0|{out_metadata|out0_metadata|0|0|}1778|1756|}
{2010212001|XXGvertex_oport_oport|2965|0|4745|0|{0|out0|}1773|1781|}
{2010216002|XXGoport_binding_oport|2966|0|4747|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}1781|1779|}
{2010213001|XXGoport_dst_flow|2967|0|4748|0|{0|}1781|1764|}
{2010211001|XXGvertex_iport_iport|2968|0|4749|0|{0|in0|}1773|1782|}
{2010215002|XXGiport_binding_iport|2969|0|4751|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}1782|1777|}
{2010006001|XXGobject_psameas_object|2970|0|4752|0|{InputLayout|Layout|0|0|}1773|242|}
{2010006001|XXGobject_psameas_object|2971|0|4753|0|{OutputLayout|Layout|0|0|}1773|1638|}
{2010601001|XXGgraph_vertex_vertex|2972|0|4754|0|{Sort_within_Groups_1|}1762|1783|}
{2010212001|XXGvertex_oport_oport|2973|0|4756|0|{0|out|}1783|1784|}
{2010213001|XXGoport_dst_flow|2974|0|4758|0|{0|}1784|1763|}
{2010211001|XXGvertex_iport_iport|2975|0|4759|0|{0|in|}1783|1785|}
{2010214001|XXGiport_src_flow|2976|0|4761|0|{0|}1785|1764|}
{2010006001|XXGobject_psameas_object|2977|0|4762|0|{Layout|Layout|0|0|}1783|1638|}
{2010006001|XXGobject_psameas_object|2978|0|4763|0|{in_metadata|out0_metadata|0|0|}1783|1756|}
{2010006001|XXGobject_psameas_object|2979|0|4764|0|{out_metadata|out0_metadata|0|0|}1783|1756|}
{2010212001|XXGvertex_oport_oport|2980|0|4765|0|{0|out0|}1762|1786|}
{2010216002|XXGoport_binding_oport|2981|0|4767|0|{.5|.5|{0|}7792|}1786|1767|}
{2010213001|XXGoport_dst_flow|2982|0|4768|0|{0|}1786|1723|}
{2010212001|XXGvertex_oport_oport|2983|0|4769|0|{1|out1|}1762|1787|}
{2010216002|XXGoport_binding_oport|2984|0|4771|0|{.5|.5|{0|}7793|}1787|1768|}
{2010213001|XXGoport_dst_flow|2985|0|4772|0|{0|}1787|1724|}
{2010211001|XXGvertex_iport_iport|2986|0|4773|0|{0|in0|}1762|1788|}
{2010215002|XXGiport_binding_iport|2987|0|4775|0|{.5|.5|{0|}7791|}1788|1782|}
{2010214001|XXGiport_src_flow|2988|0|4776|0|{0|}1788|1718|}
{2010601001|XXGgraph_vertex_vertex|2989|0|4777|0|{Sort_within_Groups|}1709|1789|}
{2010212001|XXGvertex_oport_oport|2990|0|4779|0|{0|out|}1789|1790|}
{2010213001|XXGoport_dst_flow|2991|0|4781|0|{0|}1790|1720|}
{2010211001|XXGvertex_iport_iport|2992|0|4782|0|{0|in|}1789|1791|}
{2010214001|XXGiport_src_flow|2993|0|4784|0|{0|}1791|1719|}
{2010006001|XXGobject_psameas_object|2994|0|4785|0|{Layout|Layout|0|0|}1789|1638|}
{2010006001|XXGobject_psameas_object|2995|0|4786|0|{in_metadata|out_metadata|0|0|}1789|1734|}
{2010006001|XXGobject_psameas_object|2996|0|4787|0|{out_metadata|out_metadata|0|0|}1789|1734|}
{2010601001|XXGgraph_vertex_vertex|2997|0|4788|0|{Trash|}1709|1792|}
{2010211001|XXGvertex_iport_iport|2998|0|4790|0|{0|in|}1792|1793|}
{2010214001|XXGiport_src_flow|2999|0|4792|0|{0|}1793|1724|}
{2010006001|XXGobject_psameas_object|3000|0|4793|0|{Layout|Layout|0|0|}1792|1638|}
{2010006001|XXGobject_psameas_object|3001|0|4794|0|{in_metadata|out0_metadata|0|0|}1792|1756|}
{2010601001|XXGgraph_vertex_vertex|3002|0|4795|0|{Trash_1|}1709|1794|}
{2010211001|XXGvertex_iport_iport|3003|0|4797|0|{0|in|}1794|1795|}
{2010214001|XXGiport_src_flow|3004|0|4799|0|{0|}1795|1725|}
{2010006001|XXGobject_psameas_object|3005|0|4800|0|{Layout|Layout|0|0|}1794|1638|}
{2010006001|XXGobject_psameas_object|3006|0|4801|0|{in_metadata|out_metadata|0|0|}1794|1734|}
{2010601001|XXGgraph_vertex_vertex|3007|0|4802|0|{Trash_2|}1709|1796|}
{2010211001|XXGvertex_iport_iport|3008|0|4804|0|{0|in|}1796|1797|}
{2010214001|XXGiport_src_flow|3009|0|4806|0|{0|}1797|1726|}
{2010006001|XXGobject_psameas_object|3010|0|4807|0|{Layout|Layout|0|0|}1796|1638|}
{2010006001|XXGobject_psameas_object|3011|0|4808|0|{in_metadata|out_metadata|0|0|}1796|1734|}
{2010601001|XXGgraph_vertex_vertex|3012|0|4809|0|{Two_Step_Lookup|}1709|1798|}
{2010605001|XXGgraph_legend_legend|3013|0|4811|0|{0|}1798|1799|}
{2010241001|XXGlegend_face_face|3014|0|4813|0|{}1799|1800|}
{2010604001|XXGgraph_flow_flow|3015|0|4815|0|{Flow_1|}1798|1745|}
{2010604001|XXGgraph_flow_flow|3016|0|4816|0|{Flow_2|}1798|1801|}
{2010604001|XXGgraph_flow_flow|3017|0|4818|0|{Flow_3|}1798|1743|}
{2010604001|XXGgraph_flow_flow|3018|0|4819|0|{Flow_4|}1798|1802|}
{2010604001|XXGgraph_flow_flow|3019|0|4821|0|{Flow_5|}1798|1803|}
{2010604001|XXGgraph_flow_flow|3020|0|4823|0|{Flow_6|}1798|1804|}
{2010601001|XXGgraph_vertex_vertex|3021|0|4825|0|{FBE_Pass_Only_Matching_Rec|}1798|1805|}
{2010212001|XXGvertex_oport_oport|3022|0|4827|0|{0|out|}1805|1806|}
{2010213001|XXGoport_dst_flow|3023|0|4829|0|{0|}1806|1803|}
{2010212001|XXGvertex_oport_oport|3024|0|4830|0|{1|deselect|}1805|1807|}
{2010213001|XXGoport_dst_flow|3025|0|4832|0|{0|}1807|1804|}
{2010212001|XXGvertex_oport_oport|3026|0|4833|0|{2|reject|}1805|1808|}
{2010212001|XXGvertex_oport_oport|3027|0|4835|0|{3|error|}1805|1809|}
{2010212001|XXGvertex_oport_oport|3028|0|4837|0|{4|log|}1805|1810|}
{2010211001|XXGvertex_iport_iport|3029|0|4839|0|{0|in|}1805|1811|}
{2010214001|XXGiport_src_flow|3030|0|4841|0|{0|}1811|1802|}
{2010006001|XXGobject_psameas_object|3031|0|4842|0|{Layout|Layout|0|0|}1805|1638|}
{2010006001|XXGobject_psameas_object|3032|0|4843|0|{deselect_metadata|out_metadata|0|0|}1805|1741|}
{2010006001|XXGobject_psameas_object|3033|0|4844|0|{in_metadata|out0_metadata|0|0|}1805|1812|}
{2010212001|XXGvertex_oport_oport|3034|0|4846|0|{0|out0|}1812|1813|}
{2010213001|XXGoport_dst_flow|3035|0|4848|0|{0|}1813|1802|}
{2010212001|XXGvertex_oport_oport|3036|0|4849|0|{1|reject0|}1812|1814|}
{2010212001|XXGvertex_oport_oport|3037|0|4851|0|{2|error0|}1812|1815|}
{2010212001|XXGvertex_oport_oport|3038|0|4853|0|{3|log|}1812|1816|}
{2010211001|XXGvertex_iport_iport|3039|0|4855|0|{0|in|}1812|1817|}
{2010214001|XXGiport_src_flow|3040|0|4857|0|{0|}1817|1801|}
{2010006001|XXGobject_psameas_object|3041|0|4858|0|{Layout|Layout|0|0|}1812|1638|}
{2010006001|XXGobject_psameas_object|3042|0|4859|0|{in_metadata|out0_metadata|0|0|}1812|1818|}
{2010212001|XXGvertex_oport_oport|3043|0|4861|0|{0|out0|}1818|1819|}
{2010213001|XXGoport_dst_flow|3044|0|4863|0|{0|}1819|1801|}
{2010212001|XXGvertex_oport_oport|3045|0|4864|0|{1|reject0|}1818|1820|}
{2010212001|XXGvertex_oport_oport|3046|0|4866|0|{2|error0|}1818|1821|}
{2010212001|XXGvertex_oport_oport|3047|0|4868|0|{3|log|}1818|1822|}
{2010211001|XXGvertex_iport_iport|3048|0|4870|0|{0|in|}1818|1823|}
{2010214001|XXGiport_src_flow|3049|0|4872|0|{0|}1823|1745|}
{2010006001|XXGobject_psameas_object|3050|0|4873|0|{Layout|Layout|0|0|}1818|1638|}
{2010006001|XXGobject_psameas_object|3051|0|4874|0|{in_metadata|deselect_metadata|0|0|}1818|1741|}
{2010006001|XXGobject_psameas_object|3052|0|4875|0|{reject0_metadata|deselect_metadata|0|0|}1818|1741|}
{2010006001|XXGobject_psameas_object|3053|0|4876|0|{reject0_metadata|out0_metadata|0|0|}1812|1818|}
{2010006001|XXGobject_psameas_object|3054|0|4877|0|{out_metadata|out_metadata|0|0|}1805|1741|}
{2010006001|XXGobject_psameas_object|3055|0|4878|0|{reject_metadata|out0_metadata|0|0|}1805|1812|}
{2010601001|XXGgraph_vertex_vertex|3056|0|4879|0|{FBE_filter_matching_lkp_record|}1798|1741|}
{2010601001|XXGgraph_vertex_vertex|3057|0|4880|0|{Merge|}1798|1824|}
{2010212001|XXGvertex_oport_oport|3058|0|4882|0|{0|out|}1824|1825|}
{2010211001|XXGvertex_iport_iport|3059|0|4884|0|{0|in|}1824|1826|}
{2010214001|XXGiport_src_flow|3060|0|4886|0|{0|}1826|1743|}
{2010214001|XXGiport_src_flow|3061|0|4887|0|{1|}1826|1803|}
{2010006001|XXGobject_psameas_object|3062|0|4888|0|{Layout|Layout|0|0|}1824|1638|}
{2010006001|XXGobject_psameas_object|3063|0|4889|0|{in_metadata|out_metadata|0|0|}1824|1741|}
{2010006001|XXGobject_psameas_object|3064|0|4890|0|{out_metadata|out_metadata|0|0|}1824|1741|}
{2010601001|XXGgraph_vertex_vertex|3065|0|4891|0|{No_Match_Record_In_Second_Pass|}1798|1827|}
{2010211001|XXGvertex_iport_iport|3066|0|4893|0|{0|in|}1827|1828|}
{2010214001|XXGiport_src_flow|3067|0|4895|0|{0|}1828|1804|}
{2010006001|XXGobject_psameas_object|3068|0|4896|0|{Layout|Layout|0|0|}1827|1638|}
{2010006001|XXGobject_psameas_object|3069|0|4897|0|{in_metadata|out_metadata|0|0|}1827|1741|}
{2010601001|XXGgraph_vertex_vertex|3070|0|4898|0|{RFMT_Lookup_with_IDS_Archive_|}1798|1812|}
{2010601001|XXGgraph_vertex_vertex|3071|0|4899|0|{RFMT_Pass_only_Hash_Keys|}1798|1818|}
{2010212001|XXGvertex_oport_oport|3072|0|4900|0|{0|out0|}1798|1829|}
{2010216002|XXGoport_binding_oport|3073|0|4902|0|{.5|.5|{0|}15500|}1829|1825|}
{2010213001|XXGoport_dst_flow|3074|0|4903|0|{0|}1829|1722|}
{2010211001|XXGvertex_iport_iport|3075|0|4904|0|{0|in0|}1798|1830|}
{2010215002|XXGiport_binding_iport|3076|0|4906|0|{.5|.5|{0|}15499|}1830|1749|}
{2010214001|XXGiport_src_flow|3077|0|4907|0|{0|}1830|1721|}
{2010212001|XXGvertex_oport_oport|3078|0|4908|0|{0|out0|}1709|1831|}
{2010216002|XXGoport_binding_oport|3079|0|4910|0|{.5|.5|{0|}15515|}1831|1728|}
{2010213001|XXGoport_dst_flow|3080|0|4911|0|{0|}1831|1605|}
{2010211001|XXGvertex_iport_iport|3081|0|4912|0|{0|in1|}1709|1832|}
{2010215002|XXGiport_binding_iport|3082|0|4914|0|{.5|.5|{0|}15514|}1832|1761|}
{2010214001|XXGiport_src_flow|3083|0|4915|0|{0|}1832|1603|}
{2010601001|XXGgraph_vertex_vertex|3084|0|4916|0|{Merge|}1597|1833|}
{2010212001|XXGvertex_oport_oport|3085|0|4918|0|{0|out|}1833|1834|}
{2010211001|XXGvertex_iport_iport|3086|0|4920|0|{0|in|}1833|1835|}
{2010214001|XXGiport_src_flow|3087|0|4922|0|{0|}1835|1606|}
{2010006001|XXGobject_psameas_object|3088|0|4923|0|{Layout|Layout|0|0|}1833|161|}
{2010006001|XXGobject_psameas_object|3089|0|4924|0|{in_metadata|write_metadata|0|0|}1833|161|}
{2010006001|XXGobject_psameas_object|3090|0|4925|0|{out_metadata|write_metadata|0|0|}1833|161|}
{2010601001|XXGgraph_vertex_vertex|3091|0|4926|0|{Replicate|}1597|1836|}
{2010212001|XXGvertex_oport_oport|3092|0|4928|0|{0|out|}1836|1837|}
{2010213001|XXGoport_dst_flow|3093|0|4930|0|{0|}1837|1602|}
{2010213001|XXGoport_dst_flow|3094|0|4931|0|{1|}1837|1603|}
{2010211001|XXGvertex_iport_iport|3095|0|4932|0|{0|in|}1836|1838|}
{2010006001|XXGobject_psameas_object|3096|0|4934|0|{Layout|Layout|0|0|}1836|242|}
{2010006001|XXGobject_psameas_object|3097|0|4935|0|{in_metadata|out2_metadata|0|0|}1836|242|}
{2010006001|XXGobject_psameas_object|3098|0|4936|0|{out_metadata|out2_metadata|0|0|}1836|242|}
{2010601001|XXGgraph_vertex_vertex|3099|0|4937|0|{Replicate_1|}1597|1839|}
{2010212001|XXGvertex_oport_oport|3100|0|4939|0|{0|out|}1839|1840|}
{2010213001|XXGoport_dst_flow|3101|0|4941|0|{0|}1840|1606|}
{2010211001|XXGvertex_iport_iport|3102|0|4942|0|{0|in|}1839|1841|}
{2010214001|XXGiport_src_flow|3103|0|4944|0|{0|}1841|1604|}
{2010214001|XXGiport_src_flow|3104|0|4945|0|{1|}1841|1605|}
{2010006001|XXGobject_psameas_object|3105|0|4946|0|{Layout|Layout|0|0|}1839|1638|}
{2010006001|XXGobject_psameas_object|3106|0|4947|0|{in_metadata|out_metadata|0|0|}1839|1734|}
{2010006001|XXGobject_psameas_object|3107|0|4948|0|{out_metadata|out_metadata|0|0|}1839|1734|}
{2010212001|XXGvertex_oport_oport|3108|0|4949|0|{0|out0|}1597|1842|}
{2010216002|XXGoport_binding_oport|3109|0|4951|0|{.5|.5|{0|}7802|}1842|1834|}
{2010213001|XXGoport_dst_flow|3110|0|4952|0|{0|}1842|151|}
{2010211001|XXGvertex_iport_iport|3111|0|4953|0|{0|in0|}1597|1843|}
{2010215002|XXGiport_binding_iport|3112|0|4955|0|{.5|.5|{0|}7801|}1843|1838|}
{2010007001|XXGobject_proto_object|3113|0|4956|0|{}1597|1844|}
{2010605001|XXGgraph_legend_legend|3114|0|4958|0|{0|}1844|1845|}
{2010241001|XXGlegend_face_face|3115|0|4960|0|{}1845|1846|}
{2010605001|XXGgraph_legend_legend|3116|0|4962|0|{1|}1844|1847|}
{2010241001|XXGlegend_face_face|3117|0|4964|0|{}1847|1848|}
{2010604001|XXGgraph_flow_flow|3118|0|4966|0|{Flow_1|}1844|1849|}
{2010604001|XXGgraph_flow_flow|3119|0|4968|0|{Flow_2|}1844|1850|}
{2010604001|XXGgraph_flow_flow|3120|0|4970|0|{Flow_3|}1844|1851|}
{2010604001|XXGgraph_flow_flow|3121|0|4972|0|{Flow_4|}1844|1852|}
{2010604001|XXGgraph_flow_flow|3122|0|4974|0|{Flow_5|}1844|1853|}
{2010601001|XXGgraph_vertex_vertex|3123|0|4976|0|{Get_All_LookUp_Record|}1844|1854|}
{2010605001|XXGgraph_legend_legend|3124|0|4978|0|{0|}1854|1855|}
{2010241001|XXGlegend_face_face|3125|0|4980|0|{}1855|1856|}
{2010605001|XXGgraph_legend_legend|3126|0|4982|0|{1|}1854|1857|}
{2010241001|XXGlegend_face_face|3127|0|4984|0|{}1857|1858|}
{2010605001|XXGgraph_legend_legend|3128|0|4986|0|{2|}1854|1859|}
{2010241001|XXGlegend_face_face|3129|0|4988|0|{}1859|1860|}
{2010605001|XXGgraph_legend_legend|3130|0|4990|0|{3|}1854|1861|}
{2010241001|XXGlegend_face_face|3131|0|4992|0|{}1861|1862|}
{2010605001|XXGgraph_legend_legend|3132|0|4994|0|{4|}1854|1863|}
{2010241001|XXGlegend_face_face|3133|0|4996|0|{}1863|1864|}
{2010604001|XXGgraph_flow_flow|3134|0|4998|0|{Flow_1|}1854|1865|}
{2010604001|XXGgraph_flow_flow|3135|0|5000|0|{Flow_10|}1854|1866|}
{2010604001|XXGgraph_flow_flow|3136|0|5002|0|{Flow_11|}1854|1867|}
{2010604001|XXGgraph_flow_flow|3137|0|5004|0|{Flow_12|}1854|1868|}
{2010604001|XXGgraph_flow_flow|3138|0|5006|0|{Flow_18|}1854|1869|}
{2010604001|XXGgraph_flow_flow|3139|0|5008|0|{Flow_2|}1854|1870|}
{2010604001|XXGgraph_flow_flow|3140|0|5010|0|{Flow_3|}1854|1871|}
{2010604001|XXGgraph_flow_flow|3141|0|5012|0|{Flow_4|}1854|1872|}
{2010604001|XXGgraph_flow_flow|3142|0|5014|0|{Flow_5|}1854|1873|}
{2010604001|XXGgraph_flow_flow|3143|0|5016|0|{Flow_6|}1854|1874|}
{2010604001|XXGgraph_flow_flow|3144|0|5018|0|{Flow_7|}1854|1875|}
{2010604001|XXGgraph_flow_flow|3145|0|5020|0|{Flow_8|}1854|1876|}
{2010604001|XXGgraph_flow_flow|3146|0|5022|0|{Flow_9|}1854|1877|}
{2010601001|XXGgraph_vertex_vertex|3147|0|5024|0|{Dedup_Sorted|}1854|1878|}
{2010212001|XXGvertex_oport_oport|3148|0|5026|0|{0|out|}1878|1879|}
{2010213001|XXGoport_dst_flow|3149|0|5028|0|{0|}1879|1870|}
{2010212001|XXGvertex_oport_oport|3150|0|5029|0|{1|dup|}1878|1880|}
{2010213001|XXGoport_dst_flow|3151|0|5031|0|{0|}1880|1874|}
{2010212001|XXGvertex_oport_oport|3152|0|5032|0|{2|reject|}1878|1881|}
{2010212001|XXGvertex_oport_oport|3153|0|5034|0|{3|error|}1878|1882|}
{2010212001|XXGvertex_oport_oport|3154|0|5036|0|{4|log|}1878|1883|}
{2010211001|XXGvertex_iport_iport|3155|0|5038|0|{0|in|}1878|1884|}
{2010214001|XXGiport_src_flow|3156|0|5040|0|{0|}1884|1865|}
{2010007001|XXGobject_proto_object|3157|0|5041|0|{}1878|1885|}
{2010212001|XXGvertex_oport_oport|3158|0|5043|0|{0|out|}1885|1886|}
{2010006001|XXGobject_psameas_object|3159|0|5045|0|{metadata|out_metadata|1|0|}1886|1885|}
{2010212001|XXGvertex_oport_oport|3160|0|5046|0|{1|dup|}1885|1887|}
{2010006001|XXGobject_psameas_object|3161|0|5048|0|{metadata|dup_metadata|1|0|}1887|1885|}
{2010212001|XXGvertex_oport_oport|3162|0|5049|0|{2|reject|}1885|1888|}
{2010006001|XXGobject_psameas_object|3163|0|5051|0|{metadata|reject_metadata|1|0|}1888|1885|}
{2010212001|XXGvertex_oport_oport|3164|0|5052|0|{3|error|}1885|1889|}
{2010006001|XXGobject_psameas_object|3165|0|5054|0|{metadata|error_metadata|1|0|}1889|1885|}
{2010212001|XXGvertex_oport_oport|3166|0|5055|0|{4|log|}1885|1890|}
{2010006001|XXGobject_psameas_object|3167|0|5057|0|{metadata|log_metadata|1|0|}1890|1885|}
{2010211001|XXGvertex_iport_iport|3168|0|5058|0|{0|in|}1885|1891|}
{2010006001|XXGobject_psameas_object|3169|0|5060|0|{metadata|in_metadata|1|0|}1891|1885|}
{2010601001|XXGgraph_vertex_vertex|3170|0|5061|0|{FBE_Filter_match_records|}1854|1892|}
{2010212001|XXGvertex_oport_oport|3171|0|5063|0|{0|out|}1892|1893|}
{2010213001|XXGoport_dst_flow|3172|0|5065|0|{0|}1893|1867|}
{2010212001|XXGvertex_oport_oport|3173|0|5066|0|{1|deselect|}1892|1894|}
{2010213001|XXGoport_dst_flow|3174|0|5068|0|{0|}1894|1875|}
{2010212001|XXGvertex_oport_oport|3175|0|5069|0|{2|reject|}1892|1895|}
{2010212001|XXGvertex_oport_oport|3176|0|5071|0|{3|error|}1892|1896|}
{2010212001|XXGvertex_oport_oport|3177|0|5073|0|{4|log|}1892|1897|}
{2010211001|XXGvertex_iport_iport|3178|0|5075|0|{0|in|}1892|1898|}
{2010214001|XXGiport_src_flow|3179|0|5077|0|{0|}1898|1876|}
{2010007001|XXGobject_proto_object|3180|0|5078|0|{}1892|1899|}
{2010212001|XXGvertex_oport_oport|3181|0|5080|0|{0|out|}1899|1900|}
{2010006001|XXGobject_psameas_object|3182|0|5082|0|{metadata|out_metadata|1|0|}1900|1899|}
{2010212001|XXGvertex_oport_oport|3183|0|5083|0|{1|deselect|}1899|1901|}
{2010006001|XXGobject_psameas_object|3184|0|5085|0|{metadata|deselect_metadata|1|0|}1901|1899|}
{2010212001|XXGvertex_oport_oport|3185|0|5086|0|{2|reject|}1899|1902|}
{2010006001|XXGobject_psameas_object|3186|0|5088|0|{metadata|reject_metadata|1|0|}1902|1899|}
{2010212001|XXGvertex_oport_oport|3187|0|5089|0|{3|error|}1899|1903|}
{2010006001|XXGobject_psameas_object|3188|0|5091|0|{metadata|error_metadata|1|0|}1903|1899|}
{2010212001|XXGvertex_oport_oport|3189|0|5092|0|{4|log|}1899|1904|}
{2010006001|XXGobject_psameas_object|3190|0|5094|0|{metadata|log_metadata|1|0|}1904|1899|}
{2010211001|XXGvertex_iport_iport|3191|0|5095|0|{0|in|}1899|1905|}
{2010006001|XXGobject_psameas_object|3192|0|5097|0|{metadata|in_metadata|1|0|}1905|1899|}
{2010601001|XXGgraph_vertex_vertex|3193|0|5098|0|{Get_Hash_on_SRC_NK|}1854|1906|}
{2010212001|XXGvertex_oport_oport|3194|0|5100|0|{0|out0|}1906|1907|}
{2010213001|XXGoport_dst_flow|3195|0|5102|0|{0|}1907|1869|}
{2010212001|XXGvertex_oport_oport|3196|0|5103|0|{1|reject0|}1906|1908|}
{2010212001|XXGvertex_oport_oport|3197|0|5105|0|{2|error0|}1906|1909|}
{2010212001|XXGvertex_oport_oport|3198|0|5107|0|{3|log|}1906|1910|}
{2010211001|XXGvertex_iport_iport|3199|0|5109|0|{0|in|}1906|1911|}
{2010007001|XXGobject_proto_object|3200|0|5111|0|{}1906|1912|}
{2010212001|XXGvertex_oport_oport|3201|0|5113|0|{0|out0|}1912|1913|}
{2010006001|XXGobject_psameas_object|3202|0|5115|0|{metadata|out0_metadata|1|0|}1913|1912|}
{2010006001|XXGobject_psameas_object|3203|0|5116|0|{transform0|transform0|1|0|}1913|1912|}
{2010212001|XXGvertex_oport_oport|3204|0|5117|0|{1|reject0|}1912|1914|}
{2010006001|XXGobject_psameas_object|3205|0|5119|0|{metadata|reject0_metadata|1|0|}1914|1912|}
{2010212001|XXGvertex_oport_oport|3206|0|5120|0|{2|error0|}1912|1915|}
{2010006001|XXGobject_psameas_object|3207|0|5122|0|{metadata|error0_metadata|1|0|}1915|1912|}
{2010212001|XXGvertex_oport_oport|3208|0|5123|0|{3|log|}1912|1916|}
{2010006001|XXGobject_psameas_object|3209|0|5125|0|{metadata|log_metadata|1|0|}1916|1912|}
{2010211001|XXGvertex_iport_iport|3210|0|5126|0|{0|in|}1912|1917|}
{2010006001|XXGobject_psameas_object|3211|0|5128|0|{metadata|in_metadata|1|0|}1917|1912|}
{2010601001|XXGgraph_vertex_vertex|3212|0|5129|0|{Merge|}1854|1918|}
{2010212001|XXGvertex_oport_oport|3213|0|5131|0|{0|out|}1918|1919|}
{2010213001|XXGoport_dst_flow|3214|0|5133|0|{0|}1919|1876|}
{2010211001|XXGvertex_iport_iport|3215|0|5134|0|{0|in|}1918|1920|}
{2010214001|XXGiport_src_flow|3216|0|5136|0|{0|}1920|1871|}
{2010214001|XXGiport_src_flow|3217|0|5137|0|{1|}1920|1868|}
{2010007001|XXGobject_proto_object|3218|0|5138|0|{}1918|1921|}
{2010212001|XXGvertex_oport_oport|3219|0|5140|0|{0|out|}1921|1922|}
{2010006001|XXGobject_psameas_object|3220|0|5142|0|{metadata|out_metadata|1|0|}1922|1921|}
{2010211001|XXGvertex_iport_iport|3221|0|5143|0|{0|in|}1921|1923|}
{2010006001|XXGobject_psameas_object|3222|0|5145|0|{metadata|in_metadata|1|0|}1923|1921|}
{2010601001|XXGgraph_vertex_vertex|3223|0|5146|0|{Normalize_Get_all_records_from_Archive_Lkp|}1854|1924|}
{2010212001|XXGvertex_oport_oport|3224|0|5148|0|{0|out|}1924|1925|}
{2010213001|XXGoport_dst_flow|3225|0|5150|0|{0|}1925|1868|}
{2010212001|XXGvertex_oport_oport|3226|0|5151|0|{1|reject|}1924|1926|}
{2010212001|XXGvertex_oport_oport|3227|0|5153|0|{2|error|}1924|1927|}
{2010212001|XXGvertex_oport_oport|3228|0|5155|0|{3|log|}1924|1928|}
{2010211001|XXGvertex_iport_iport|3229|0|5157|0|{0|in|}1924|1929|}
{2010214001|XXGiport_src_flow|3230|0|5159|0|{0|}1929|1866|}
{2010007001|XXGobject_proto_object|3231|0|5160|0|{}1924|1930|}
{2010212001|XXGvertex_oport_oport|3232|0|5162|0|{0|out|}1930|1931|}
{2010006001|XXGobject_psameas_object|3233|0|5164|0|{metadata|out_metadata|1|0|}1931|1930|}
{2010212001|XXGvertex_oport_oport|3234|0|5165|0|{1|reject|}1930|1932|}
{2010006001|XXGobject_psameas_object|3235|0|5167|0|{metadata|reject_metadata|1|0|}1932|1930|}
{2010212001|XXGvertex_oport_oport|3236|0|5168|0|{2|error|}1930|1933|}
{2010006001|XXGobject_psameas_object|3237|0|5170|0|{metadata|error_metadata|1|0|}1933|1930|}
{2010212001|XXGvertex_oport_oport|3238|0|5171|0|{3|log|}1930|1934|}
{2010006001|XXGobject_psameas_object|3239|0|5173|0|{metadata|log_metadata|1|0|}1934|1930|}
{2010211001|XXGvertex_iport_iport|3240|0|5174|0|{0|in|}1930|1935|}
{2010006001|XXGobject_psameas_object|3241|0|5176|0|{metadata|in_metadata|1|0|}1935|1930|}
{2010601001|XXGgraph_vertex_vertex|3242|0|5177|0|{Normalize_Get_all_records_from_lkp|}1854|1936|}
{2010212001|XXGvertex_oport_oport|3243|0|5179|0|{0|out|}1936|1937|}
{2010213001|XXGoport_dst_flow|3244|0|5181|0|{0|}1937|1871|}
{2010212001|XXGvertex_oport_oport|3245|0|5182|0|{1|reject|}1936|1938|}
{2010212001|XXGvertex_oport_oport|3246|0|5184|0|{2|error|}1936|1939|}
{2010212001|XXGvertex_oport_oport|3247|0|5186|0|{3|log|}1936|1940|}
{2010211001|XXGvertex_iport_iport|3248|0|5188|0|{0|in|}1936|1941|}
{2010214001|XXGiport_src_flow|3249|0|5190|0|{0|}1941|1873|}
{2010007001|XXGobject_proto_object|3250|0|5191|0|{}1936|1942|}
{2010212001|XXGvertex_oport_oport|3251|0|5193|0|{0|out|}1942|1943|}
{2010006001|XXGobject_psameas_object|3252|0|5195|0|{metadata|out_metadata|1|0|}1943|1942|}
{2010212001|XXGvertex_oport_oport|3253|0|5196|0|{1|reject|}1942|1944|}
{2010006001|XXGobject_psameas_object|3254|0|5198|0|{metadata|reject_metadata|1|0|}1944|1942|}
{2010212001|XXGvertex_oport_oport|3255|0|5199|0|{2|error|}1942|1945|}
{2010006001|XXGobject_psameas_object|3256|0|5201|0|{metadata|error_metadata|1|0|}1945|1942|}
{2010212001|XXGvertex_oport_oport|3257|0|5202|0|{3|log|}1942|1946|}
{2010006001|XXGobject_psameas_object|3258|0|5204|0|{metadata|log_metadata|1|0|}1946|1942|}
{2010211001|XXGvertex_iport_iport|3259|0|5205|0|{0|in|}1942|1947|}
{2010006001|XXGobject_psameas_object|3260|0|5207|0|{metadata|in_metadata|1|0|}1947|1942|}
{2010601001|XXGgraph_vertex_vertex|3261|0|5208|0|{Replicate|}1854|1948|}
{2010212001|XXGvertex_oport_oport|3262|0|5210|0|{0|out|}1948|1949|}
{2010211001|XXGvertex_iport_iport|3263|0|5212|0|{0|in|}1948|1950|}
{2010214001|XXGiport_src_flow|3264|0|5214|0|{0|}1950|1870|}
{2010007001|XXGobject_proto_object|3265|0|5215|0|{}1948|1951|}
{2010212001|XXGvertex_oport_oport|3266|0|5217|0|{0|out|}1951|1952|}
{2010006001|XXGobject_psameas_object|3267|0|5219|0|{metadata|out_metadata|1|0|}1952|1951|}
{2010211001|XXGvertex_iport_iport|3268|0|5220|0|{0|in|}1951|1953|}
{2010006001|XXGobject_psameas_object|3269|0|5222|0|{metadata|in_metadata|1|0|}1953|1951|}
{2010601001|XXGgraph_vertex_vertex|3270|0|5223|0|{Replicate_1|}1854|1954|}
{2010212001|XXGvertex_oport_oport|3271|0|5225|0|{0|out|}1954|1955|}
{2010213001|XXGoport_dst_flow|3272|0|5227|0|{0|}1955|1873|}
{2010213001|XXGoport_dst_flow|3273|0|5228|0|{1|}1955|1866|}
{2010211001|XXGvertex_iport_iport|3274|0|5229|0|{0|in|}1954|1956|}
{2010214001|XXGiport_src_flow|3275|0|5231|0|{0|}1956|1872|}
{2010007001|XXGobject_proto_object|3276|0|5232|0|{}1954|1957|}
{2010212001|XXGvertex_oport_oport|3277|0|5234|0|{0|out|}1957|1958|}
{2010006001|XXGobject_psameas_object|3278|0|5236|0|{metadata|out_metadata|1|0|}1958|1957|}
{2010211001|XXGvertex_iport_iport|3279|0|5237|0|{0|in|}1957|1959|}
{2010006001|XXGobject_psameas_object|3280|0|5239|0|{metadata|in_metadata|1|0|}1959|1957|}
{2010601001|XXGgraph_vertex_vertex|3281|0|5240|0|{Sort_Remove_Dup_On_Hash|}1854|1960|}
{2010604001|XXGgraph_flow_flow|3282|0|5242|0|{Flow_3|}1960|1961|}
{2010604001|XXGgraph_flow_flow|3283|0|5244|0|{Flow_5|}1960|1962|}
{2010601001|XXGgraph_vertex_vertex|3284|0|5246|0|{Dedup_Sorted_1|}1960|1963|}
{2010212001|XXGvertex_oport_oport|3285|0|5248|0|{0|out|}1963|1964|}
{2010212001|XXGvertex_oport_oport|3286|0|5250|0|{1|dup|}1963|1965|}
{2010212001|XXGvertex_oport_oport|3287|0|5252|0|{2|reject|}1963|1966|}
{2010212001|XXGvertex_oport_oport|3288|0|5254|0|{3|error|}1963|1967|}
{2010212001|XXGvertex_oport_oport|3289|0|5256|0|{4|log|}1963|1968|}
{2010211001|XXGvertex_iport_iport|3290|0|5258|0|{0|in|}1963|1969|}
{2010214001|XXGiport_src_flow|3291|0|5260|0|{0|}1969|1962|}
{2010007001|XXGobject_proto_object|3292|0|5261|0|{}1963|1970|}
{2010212001|XXGvertex_oport_oport|3293|0|5263|0|{0|out|}1970|1971|}
{2010006001|XXGobject_psameas_object|3294|0|5265|0|{metadata|out_metadata|1|0|}1971|1970|}
{2010212001|XXGvertex_oport_oport|3295|0|5266|0|{1|dup|}1970|1972|}
{2010006001|XXGobject_psameas_object|3296|0|5268|0|{metadata|dup_metadata|1|0|}1972|1970|}
{2010212001|XXGvertex_oport_oport|3297|0|5269|0|{2|reject|}1970|1973|}
{2010006001|XXGobject_psameas_object|3298|0|5271|0|{metadata|reject_metadata|1|0|}1973|1970|}
{2010212001|XXGvertex_oport_oport|3299|0|5272|0|{3|error|}1970|1974|}
{2010006001|XXGobject_psameas_object|3300|0|5274|0|{metadata|error_metadata|1|0|}1974|1970|}
{2010212001|XXGvertex_oport_oport|3301|0|5275|0|{4|log|}1970|1975|}
{2010006001|XXGobject_psameas_object|3302|0|5277|0|{metadata|log_metadata|1|0|}1975|1970|}
{2010211001|XXGvertex_iport_iport|3303|0|5278|0|{0|in|}1970|1976|}
{2010006001|XXGobject_psameas_object|3304|0|5280|0|{metadata|in_metadata|1|0|}1976|1970|}
{2010601001|XXGgraph_vertex_vertex|3305|0|5281|0|{PBKS_dxf_hk_part1_|}1960|1977|}
{2010604001|XXGgraph_flow_flow|3306|0|5283|0|{Flow_1|}1977|1978|}
{2010601001|XXGgraph_vertex_vertex|3307|0|5285|0|{Partition_by_Key|}1977|1979|}
{2010212001|XXGvertex_oport_oport|3308|0|5287|0|{0|out|}1979|1980|}
{2010213001|XXGoport_dst_flow|3309|0|5289|0|{0|}1980|1978|}
{2010211001|XXGvertex_iport_iport|3310|0|5290|0|{0|in|}1979|1981|}
{2010601001|XXGgraph_vertex_vertex|3311|0|5292|0|{Sort|}1977|1982|}
{2010212001|XXGvertex_oport_oport|3312|0|5294|0|{0|out|}1982|1983|}
{2010211001|XXGvertex_iport_iport|3313|0|5296|0|{0|in|}1982|1984|}
{2010214001|XXGiport_src_flow|3314|0|5298|0|{0|}1984|1978|}
{2010212001|XXGvertex_oport_oport|3315|0|5299|0|{0|out0|}1977|1985|}
{2010216002|XXGoport_binding_oport|3316|0|5301|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}1985|1983|}
{2010213001|XXGoport_dst_flow|3317|0|5302|0|{0|}1985|1961|}
{2010211001|XXGvertex_iport_iport|3318|0|5303|0|{0|in0|}1977|1986|}
{2010215002|XXGiport_binding_iport|3319|0|5305|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}1986|1981|}
{2010007001|XXGobject_proto_object|3320|0|5306|0|{}1977|1987|}
{2010604001|XXGgraph_flow_flow|3321|0|5308|0|{Flow_1|}1987|1988|}
{2010601001|XXGgraph_vertex_vertex|3322|0|5310|0|{Partition_by_Key|}1987|1989|}
{2010212001|XXGvertex_oport_oport|3323|0|5312|0|{0|out|}1989|1990|}
{2010213001|XXGoport_dst_flow|3324|0|5314|0|{0|}1990|1988|}
{2010211001|XXGvertex_iport_iport|3325|0|5315|0|{0|in|}1989|1991|}
{2010007001|XXGobject_proto_object|3326|0|5317|0|{}1989|1992|}
{2010212001|XXGvertex_oport_oport|3327|0|5319|0|{0|out|}1992|1993|}
{2010006001|XXGobject_psameas_object|3328|0|5321|0|{metadata|out_metadata|1|0|}1993|1992|}
{2010211001|XXGvertex_iport_iport|3329|0|5322|0|{0|in|}1992|1994|}
{2010006001|XXGobject_psameas_object|3330|0|5324|0|{metadata|in_metadata|1|0|}1994|1992|}
{2010006001|XXGobject_psameas_object|3331|0|5325|0|{Layout|InputLayout|1|0|}1989|1987|}
{2010006001|XXGobject_psameas_object|3332|0|5326|0|{key|Key|1|0|}1989|1987|}
{2010601001|XXGgraph_vertex_vertex|3333|0|5327|0|{Sort|}1987|1995|}
{2010212001|XXGvertex_oport_oport|3334|0|5329|0|{0|out|}1995|1996|}
{2010211001|XXGvertex_iport_iport|3335|0|5331|0|{0|in|}1995|1997|}
{2010214001|XXGiport_src_flow|3336|0|5333|0|{0|}1997|1988|}
{2010007001|XXGobject_proto_object|3337|0|5334|0|{}1995|1998|}
{2010212001|XXGvertex_oport_oport|3338|0|5336|0|{0|out|}1998|1999|}
{2010006001|XXGobject_psameas_object|3339|0|5338|0|{metadata|out_metadata|1|0|}1999|1998|}
{2010211001|XXGvertex_iport_iport|3340|0|5339|0|{0|in|}1998|2000|}
{2010006001|XXGobject_psameas_object|3341|0|5341|0|{metadata|in_metadata|1|0|}2000|1998|}
{2010006001|XXGobject_psameas_object|3342|0|5342|0|{Layout|OutputLayout|1|0|}1995|1987|}
{2010006001|XXGobject_psameas_object|3343|0|5343|0|{key|Key|1|0|}1995|1987|}
{2010006001|XXGobject_psameas_object|3344|0|5344|0|{max_core|Max_core|1|0|}1995|1987|}
{2010212001|XXGvertex_oport_oport|3345|0|5345|0|{0|out0|}1987|2001|}
{2010216002|XXGoport_binding_oport|3346|0|5347|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}2001|1996|}
{2010211001|XXGvertex_iport_iport|3347|0|5348|0|{0|in0|}1987|2002|}
{2010215002|XXGiport_binding_iport|3348|0|5350|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}2002|1991|}
{2010006001|XXGobject_psameas_object|3349|0|5351|0|{InputLayout|Layout|0|0|}1977|1906|}
{2010601001|XXGgraph_vertex_vertex|3350|0|5352|0|{Sort_within_Groups|}1960|2003|}
{2010212001|XXGvertex_oport_oport|3351|0|5354|0|{0|out|}2003|2004|}
{2010213001|XXGoport_dst_flow|3352|0|5356|0|{0|}2004|1962|}
{2010211001|XXGvertex_iport_iport|3353|0|5357|0|{0|in|}2003|2005|}
{2010214001|XXGiport_src_flow|3354|0|5359|0|{0|}2005|1961|}
{2010007001|XXGobject_proto_object|3355|0|5360|0|{}2003|2006|}
{2010212001|XXGvertex_oport_oport|3356|0|5362|0|{0|out|}2006|2007|}
{2010006001|XXGobject_psameas_object|3357|0|5364|0|{metadata|out_metadata|1|0|}2007|2006|}
{2010211001|XXGvertex_iport_iport|3358|0|5365|0|{0|in|}2006|2008|}
{2010006001|XXGobject_psameas_object|3359|0|5367|0|{metadata|in_metadata|1|0|}2008|2006|}
{2010212001|XXGvertex_oport_oport|3360|0|5368|0|{0|out0|}1960|2009|}
{2010216002|XXGoport_binding_oport|3361|0|5370|0|{.5|.5|{0|}14672|}2009|1964|}
{2010213001|XXGoport_dst_flow|3362|0|5371|0|{0|}2009|1872|}
{2010212001|XXGvertex_oport_oport|3363|0|5372|0|{1|out1|}1960|2010|}
{2010216002|XXGoport_binding_oport|3364|0|5374|0|{.5|.5|{0|}14673|}2010|1965|}
{2010213001|XXGoport_dst_flow|3365|0|5375|0|{0|}2010|1877|}
{2010211001|XXGvertex_iport_iport|3366|0|5376|0|{0|in0|}1960|2011|}
{2010215002|XXGiport_binding_iport|3367|0|5378|0|{.5|.5|{0|}14671|}2011|1986|}
{2010214001|XXGiport_src_flow|3368|0|5379|0|{0|}2011|1869|}
{2010601001|XXGgraph_vertex_vertex|3369|0|5380|0|{Sort_on_Adjusted_Natural_Keys|}1854|2012|}
{2010212001|XXGvertex_oport_oport|3370|0|5382|0|{0|out|}2012|2013|}
{2010213001|XXGoport_dst_flow|3371|0|5384|0|{0|}2013|1865|}
{2010211001|XXGvertex_iport_iport|3372|0|5385|0|{0|in|}2012|2014|}
{2010214001|XXGiport_src_flow|3373|0|5387|0|{0|}2014|1867|}
{2010007001|XXGobject_proto_object|3374|0|5388|0|{}2012|2015|}
{2010212001|XXGvertex_oport_oport|3375|0|5390|0|{0|out|}2015|2016|}
{2010006001|XXGobject_psameas_object|3376|0|5392|0|{metadata|out_metadata|1|0|}2016|2015|}
{2010211001|XXGvertex_iport_iport|3377|0|5393|0|{0|in|}2015|2017|}
{2010006001|XXGobject_psameas_object|3378|0|5395|0|{metadata|in_metadata|1|0|}2017|2015|}
{2010601001|XXGgraph_vertex_vertex|3379|0|5396|0|{Trash_1|}1854|2018|}
{2010211001|XXGvertex_iport_iport|3380|0|5398|0|{0|in|}2018|2019|}
{2010214001|XXGiport_src_flow|3381|0|5400|0|{0|}2019|1875|}
{2010007001|XXGobject_proto_object|3382|0|5401|0|{}2018|2020|}
{2010211001|XXGvertex_iport_iport|3383|0|5403|0|{0|in|}2020|2021|}
{2010006001|XXGobject_psameas_object|3384|0|5405|0|{metadata|in_metadata|1|0|}2021|2020|}
{2010601001|XXGgraph_vertex_vertex|3385|0|5406|0|{Trash_2|}1854|2022|}
{2010211001|XXGvertex_iport_iport|3386|0|5408|0|{0|in|}2022|2023|}
{2010214001|XXGiport_src_flow|3387|0|5410|0|{0|}2023|1874|}
{2010007001|XXGobject_proto_object|3388|0|5411|0|{}2022|2024|}
{2010211001|XXGvertex_iport_iport|3389|0|5413|0|{0|in|}2024|2025|}
{2010006001|XXGobject_psameas_object|3390|0|5415|0|{metadata|in_metadata|1|0|}2025|2024|}
{2010601001|XXGgraph_vertex_vertex|3391|0|5416|0|{Trash_3|}1854|2026|}
{2010211001|XXGvertex_iport_iport|3392|0|5418|0|{0|in|}2026|2027|}
{2010214001|XXGiport_src_flow|3393|0|5420|0|{0|}2027|1877|}
{2010007001|XXGobject_proto_object|3394|0|5421|0|{}2026|2028|}
{2010211001|XXGvertex_iport_iport|3395|0|5423|0|{0|in|}2028|2029|}
{2010006001|XXGobject_psameas_object|3396|0|5425|0|{metadata|in_metadata|1|0|}2029|2028|}
{2010212001|XXGvertex_oport_oport|3397|0|5426|0|{0|out0|}1854|2030|}
{2010216002|XXGoport_binding_oport|3398|0|5428|0|{.5|.5|{0|}14899|}2030|1949|}
{2010213001|XXGoport_dst_flow|3399|0|5429|0|{0|}2030|1851|}
{2010211001|XXGvertex_iport_iport|3400|0|5430|0|{0|in0|}1854|2031|}
{2010215002|XXGiport_binding_iport|3401|0|5432|0|{.5|.5|{0|}14898|}2031|1911|}
{2010214001|XXGiport_src_flow|3402|0|5433|0|{0|}2031|1849|}
{2010601001|XXGgraph_vertex_vertex|3403|0|5434|0|{Get_Last_Lookup_Record|}1844|2032|}
{2010605001|XXGgraph_legend_legend|3404|0|5436|0|{0|}2032|2033|}
{2010241001|XXGlegend_face_face|3405|0|5438|0|{}2033|2034|}
{2010605001|XXGgraph_legend_legend|3406|0|5440|0|{1|}2032|2035|}
{2010241001|XXGlegend_face_face|3407|0|5442|0|{}2035|2036|}
{2010605001|XXGgraph_legend_legend|3408|0|5444|0|{2|}2032|2037|}
{2010241001|XXGlegend_face_face|3409|0|5446|0|{}2037|2038|}
{2010605001|XXGgraph_legend_legend|3410|0|5448|0|{3|}2032|2039|}
{2010241001|XXGlegend_face_face|3411|0|5450|0|{}2039|2040|}
{2010604001|XXGgraph_flow_flow|3412|0|5452|0|{Flow_1|}2032|2041|}
{2010604001|XXGgraph_flow_flow|3413|0|5454|0|{Flow_2|}2032|2042|}
{2010604001|XXGgraph_flow_flow|3414|0|5456|0|{Flow_3|}2032|2043|}
{2010604001|XXGgraph_flow_flow|3415|0|5458|0|{Flow_4|}2032|2044|}
{2010604001|XXGgraph_flow_flow|3416|0|5460|0|{Flow_5|}2032|2045|}
{2010604001|XXGgraph_flow_flow|3417|0|5462|0|{Flow_6|}2032|2046|}
{2010604001|XXGgraph_flow_flow|3418|0|5464|0|{Flow_7|}2032|2047|}
{2010604001|XXGgraph_flow_flow|3419|0|5466|0|{Flow_8|}2032|2048|}
{2010604001|XXGgraph_flow_flow|3420|0|5468|0|{Flow_9|}2032|2049|}
{2010601001|XXGgraph_vertex_vertex|3421|0|5470|0|{Dedup_Sorted|}2032|2050|}
{2010212001|XXGvertex_oport_oport|3422|0|5472|0|{0|out|}2050|2051|}
{2010212001|XXGvertex_oport_oport|3423|0|5474|0|{1|dup|}2050|2052|}
{2010213001|XXGoport_dst_flow|3424|0|5476|0|{0|}2052|2048|}
{2010212001|XXGvertex_oport_oport|3425|0|5477|0|{2|reject|}2050|2053|}
{2010212001|XXGvertex_oport_oport|3426|0|5479|0|{3|error|}2050|2054|}
{2010212001|XXGvertex_oport_oport|3427|0|5481|0|{4|log|}2050|2055|}
{2010211001|XXGvertex_iport_iport|3428|0|5483|0|{0|in|}2050|2056|}
{2010214001|XXGiport_src_flow|3429|0|5485|0|{0|}2056|2043|}
{2010007001|XXGobject_proto_object|3430|0|5486|0|{}2050|2057|}
{2010212001|XXGvertex_oport_oport|3431|0|5488|0|{0|out|}2057|2058|}
{2010006001|XXGobject_psameas_object|3432|0|5490|0|{metadata|out_metadata|1|0|}2058|2057|}
{2010212001|XXGvertex_oport_oport|3433|0|5491|0|{1|dup|}2057|2059|}
{2010006001|XXGobject_psameas_object|3434|0|5493|0|{metadata|dup_metadata|1|0|}2059|2057|}
{2010212001|XXGvertex_oport_oport|3435|0|5494|0|{2|reject|}2057|2060|}
{2010006001|XXGobject_psameas_object|3436|0|5496|0|{metadata|reject_metadata|1|0|}2060|2057|}
{2010212001|XXGvertex_oport_oport|3437|0|5497|0|{3|error|}2057|2061|}
{2010006001|XXGobject_psameas_object|3438|0|5499|0|{metadata|error_metadata|1|0|}2061|2057|}
{2010212001|XXGvertex_oport_oport|3439|0|5500|0|{4|log|}2057|2062|}
{2010006001|XXGobject_psameas_object|3440|0|5502|0|{metadata|log_metadata|1|0|}2062|2057|}
{2010211001|XXGvertex_iport_iport|3441|0|5503|0|{0|in|}2057|2063|}
{2010006001|XXGobject_psameas_object|3442|0|5505|0|{metadata|in_metadata|1|0|}2063|2057|}
{2010601001|XXGgraph_vertex_vertex|3443|0|5506|0|{FBE_filter_matching_lkp_record|}2032|2064|}
{2010212001|XXGvertex_oport_oport|3444|0|5508|0|{0|out|}2064|2065|}
{2010213001|XXGoport_dst_flow|3445|0|5510|0|{0|}2065|2042|}
{2010212001|XXGvertex_oport_oport|3446|0|5511|0|{1|deselect|}2064|2066|}
{2010213001|XXGoport_dst_flow|3447|0|5513|0|{0|}2066|2049|}
{2010212001|XXGvertex_oport_oport|3448|0|5514|0|{2|reject|}2064|2067|}
{2010212001|XXGvertex_oport_oport|3449|0|5516|0|{3|error|}2064|2068|}
{2010212001|XXGvertex_oport_oport|3450|0|5518|0|{4|log|}2064|2069|}
{2010211001|XXGvertex_iport_iport|3451|0|5520|0|{0|in|}2064|2070|}
{2010214001|XXGiport_src_flow|3452|0|5522|0|{0|}2070|2045|}
{2010007001|XXGobject_proto_object|3453|0|5523|0|{}2064|2071|}
{2010212001|XXGvertex_oport_oport|3454|0|5525|0|{0|out|}2071|2072|}
{2010006001|XXGobject_psameas_object|3455|0|5527|0|{metadata|out_metadata|1|0|}2072|2071|}
{2010212001|XXGvertex_oport_oport|3456|0|5528|0|{1|deselect|}2071|2073|}
{2010006001|XXGobject_psameas_object|3457|0|5530|0|{metadata|deselect_metadata|1|0|}2073|2071|}
{2010212001|XXGvertex_oport_oport|3458|0|5531|0|{2|reject|}2071|2074|}
{2010006001|XXGobject_psameas_object|3459|0|5533|0|{metadata|reject_metadata|1|0|}2074|2071|}
{2010212001|XXGvertex_oport_oport|3460|0|5534|0|{3|error|}2071|2075|}
{2010006001|XXGobject_psameas_object|3461|0|5536|0|{metadata|error_metadata|1|0|}2075|2071|}
{2010212001|XXGvertex_oport_oport|3462|0|5537|0|{4|log|}2071|2076|}
{2010006001|XXGobject_psameas_object|3463|0|5539|0|{metadata|log_metadata|1|0|}2076|2071|}
{2010211001|XXGvertex_iport_iport|3464|0|5540|0|{0|in|}2071|2077|}
{2010006001|XXGobject_psameas_object|3465|0|5542|0|{metadata|in_metadata|1|0|}2077|2071|}
{2010601001|XXGgraph_vertex_vertex|3466|0|5543|0|{RFMT_Get_Hash_On_NK|}2032|2078|}
{2010212001|XXGvertex_oport_oport|3467|0|5545|0|{0|out0|}2078|2079|}
{2010213001|XXGoport_dst_flow|3468|0|5547|0|{0|}2079|2041|}
{2010212001|XXGvertex_oport_oport|3469|0|5548|0|{1|reject0|}2078|2080|}
{2010212001|XXGvertex_oport_oport|3470|0|5550|0|{2|error0|}2078|2081|}
{2010212001|XXGvertex_oport_oport|3471|0|5552|0|{3|log|}2078|2082|}
{2010211001|XXGvertex_iport_iport|3472|0|5554|0|{0|in|}2078|2083|}
{2010007001|XXGobject_proto_object|3473|0|5556|0|{}2078|2084|}
{2010212001|XXGvertex_oport_oport|3474|0|5558|0|{0|out0|}2084|2085|}
{2010006001|XXGobject_psameas_object|3475|0|5560|0|{metadata|out0_metadata|1|0|}2085|2084|}
{2010006001|XXGobject_psameas_object|3476|0|5561|0|{transform0|transform0|1|0|}2085|2084|}
{2010212001|XXGvertex_oport_oport|3477|0|5562|0|{1|reject0|}2084|2086|}
{2010006001|XXGobject_psameas_object|3478|0|5564|0|{metadata|reject0_metadata|1|0|}2086|2084|}
{2010212001|XXGvertex_oport_oport|3479|0|5565|0|{2|error0|}2084|2087|}
{2010006001|XXGobject_psameas_object|3480|0|5567|0|{metadata|error0_metadata|1|0|}2087|2084|}
{2010212001|XXGvertex_oport_oport|3481|0|5568|0|{3|log|}2084|2088|}
{2010006001|XXGobject_psameas_object|3482|0|5570|0|{metadata|log_metadata|1|0|}2088|2084|}
{2010211001|XXGvertex_iport_iport|3483|0|5571|0|{0|in|}2084|2089|}
{2010006001|XXGobject_psameas_object|3484|0|5573|0|{metadata|in_metadata|1|0|}2089|2084|}
{2010601001|XXGgraph_vertex_vertex|3485|0|5574|0|{RFMT_Lookup_with_IDS|}2032|2090|}
{2010212001|XXGvertex_oport_oport|3486|0|5576|0|{0|out0|}2090|2091|}
{2010213001|XXGoport_dst_flow|3487|0|5578|0|{0|}2091|2044|}
{2010212001|XXGvertex_oport_oport|3488|0|5579|0|{1|reject0|}2090|2092|}
{2010212001|XXGvertex_oport_oport|3489|0|5581|0|{2|error0|}2090|2093|}
{2010212001|XXGvertex_oport_oport|3490|0|5583|0|{3|log|}2090|2094|}
{2010211001|XXGvertex_iport_iport|3491|0|5585|0|{0|in|}2090|2095|}
{2010214001|XXGiport_src_flow|3492|0|5587|0|{0|}2095|2046|}
{2010007001|XXGobject_proto_object|3493|0|5588|0|{}2090|2096|}
{2010212001|XXGvertex_oport_oport|3494|0|5590|0|{0|out0|}2096|2097|}
{2010006001|XXGobject_psameas_object|3495|0|5592|0|{metadata|out0_metadata|1|0|}2097|2096|}
{2010006001|XXGobject_psameas_object|3496|0|5593|0|{transform0|transform0|1|0|}2097|2096|}
{2010212001|XXGvertex_oport_oport|3497|0|5594|0|{1|reject0|}2096|2098|}
{2010006001|XXGobject_psameas_object|3498|0|5596|0|{metadata|reject0_metadata|1|0|}2098|2096|}
{2010212001|XXGvertex_oport_oport|3499|0|5597|0|{2|error0|}2096|2099|}
{2010006001|XXGobject_psameas_object|3500|0|5599|0|{metadata|error0_metadata|1|0|}2099|2096|}
{2010212001|XXGvertex_oport_oport|3501|0|5600|0|{3|log|}2096|2100|}
{2010006001|XXGobject_psameas_object|3502|0|5602|0|{metadata|log_metadata|1|0|}2100|2096|}
{2010211001|XXGvertex_iport_iport|3503|0|5603|0|{0|in|}2096|2101|}
{2010006001|XXGobject_psameas_object|3504|0|5605|0|{metadata|in_metadata|1|0|}2101|2096|}
{2010601001|XXGgraph_vertex_vertex|3505|0|5606|0|{Sort_De_dup|}2032|2102|}
{2010604001|XXGgraph_flow_flow|3506|0|5608|0|{Flow_10|}2102|2103|}
{2010604001|XXGgraph_flow_flow|3507|0|5610|0|{Flow_4|}2102|2104|}
{2010244001|XXGflow_watcher_watcher|3508|0|5612|0|{}2104|2105|}
{2010601001|XXGgraph_vertex_vertex|3509|0|5614|0|{Dedup_Sorted_1|}2102|2106|}
{2010212001|XXGvertex_oport_oport|3510|0|5616|0|{0|out|}2106|2107|}
{2010212001|XXGvertex_oport_oport|3511|0|5618|0|{1|dup|}2106|2108|}
{2010212001|XXGvertex_oport_oport|3512|0|5620|0|{2|reject|}2106|2109|}
{2010212001|XXGvertex_oport_oport|3513|0|5622|0|{3|error|}2106|2110|}
{2010212001|XXGvertex_oport_oport|3514|0|5624|0|{4|log|}2106|2111|}
{2010211001|XXGvertex_iport_iport|3515|0|5626|0|{0|in|}2106|2112|}
{2010214001|XXGiport_src_flow|3516|0|5628|0|{0|}2112|2103|}
{2010007001|XXGobject_proto_object|3517|0|5629|0|{}2106|2113|}
{2010212001|XXGvertex_oport_oport|3518|0|5631|0|{0|out|}2113|2114|}
{2010006001|XXGobject_psameas_object|3519|0|5633|0|{metadata|out_metadata|1|0|}2114|2113|}
{2010212001|XXGvertex_oport_oport|3520|0|5634|0|{1|dup|}2113|2115|}
{2010006001|XXGobject_psameas_object|3521|0|5636|0|{metadata|dup_metadata|1|0|}2115|2113|}
{2010212001|XXGvertex_oport_oport|3522|0|5637|0|{2|reject|}2113|2116|}
{2010006001|XXGobject_psameas_object|3523|0|5639|0|{metadata|reject_metadata|1|0|}2116|2113|}
{2010212001|XXGvertex_oport_oport|3524|0|5640|0|{3|error|}2113|2117|}
{2010006001|XXGobject_psameas_object|3525|0|5642|0|{metadata|error_metadata|1|0|}2117|2113|}
{2010212001|XXGvertex_oport_oport|3526|0|5643|0|{4|log|}2113|2118|}
{2010006001|XXGobject_psameas_object|3527|0|5645|0|{metadata|log_metadata|1|0|}2118|2113|}
{2010211001|XXGvertex_iport_iport|3528|0|5646|0|{0|in|}2113|2119|}
{2010006001|XXGobject_psameas_object|3529|0|5648|0|{metadata|in_metadata|1|0|}2119|2113|}
{2010601001|XXGgraph_vertex_vertex|3530|0|5649|0|{PBKS_dxf_hk_part1_|}2102|2120|}
{2010604001|XXGgraph_flow_flow|3531|0|5651|0|{Flow_1|}2120|2121|}
{2010601001|XXGgraph_vertex_vertex|3532|0|5653|0|{Partition_by_Key|}2120|2122|}
{2010212001|XXGvertex_oport_oport|3533|0|5655|0|{0|out|}2122|2123|}
{2010213001|XXGoport_dst_flow|3534|0|5657|0|{0|}2123|2121|}
{2010211001|XXGvertex_iport_iport|3535|0|5658|0|{0|in|}2122|2124|}
{2010601001|XXGgraph_vertex_vertex|3536|0|5660|0|{Sort|}2120|2125|}
{2010212001|XXGvertex_oport_oport|3537|0|5662|0|{0|out|}2125|2126|}
{2010211001|XXGvertex_iport_iport|3538|0|5664|0|{0|in|}2125|2127|}
{2010214001|XXGiport_src_flow|3539|0|5666|0|{0|}2127|2121|}
{2010212001|XXGvertex_oport_oport|3540|0|5667|0|{0|out0|}2120|2128|}
{2010216002|XXGoport_binding_oport|3541|0|5669|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}2128|2126|}
{2010213001|XXGoport_dst_flow|3542|0|5670|0|{0|}2128|2104|}
{2010211001|XXGvertex_iport_iport|3543|0|5671|0|{0|in0|}2120|2129|}
{2010215002|XXGiport_binding_iport|3544|0|5673|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}2129|2124|}
{2010007001|XXGobject_proto_object|3545|0|5674|0|{}2120|2130|}
{2010604001|XXGgraph_flow_flow|3546|0|5676|0|{Flow_1|}2130|2131|}
{2010601001|XXGgraph_vertex_vertex|3547|0|5678|0|{Partition_by_Key|}2130|2132|}
{2010212001|XXGvertex_oport_oport|3548|0|5680|0|{0|out|}2132|2133|}
{2010213001|XXGoport_dst_flow|3549|0|5682|0|{0|}2133|2131|}
{2010211001|XXGvertex_iport_iport|3550|0|5683|0|{0|in|}2132|2134|}
{2010007001|XXGobject_proto_object|3551|0|5685|0|{}2132|2135|}
{2010212001|XXGvertex_oport_oport|3552|0|5687|0|{0|out|}2135|2136|}
{2010006001|XXGobject_psameas_object|3553|0|5689|0|{metadata|out_metadata|1|0|}2136|2135|}
{2010211001|XXGvertex_iport_iport|3554|0|5690|0|{0|in|}2135|2137|}
{2010006001|XXGobject_psameas_object|3555|0|5692|0|{metadata|in_metadata|1|0|}2137|2135|}
{2010006001|XXGobject_psameas_object|3556|0|5693|0|{Layout|InputLayout|1|0|}2132|2130|}
{2010006001|XXGobject_psameas_object|3557|0|5694|0|{key|Key|1|0|}2132|2130|}
{2010601001|XXGgraph_vertex_vertex|3558|0|5695|0|{Sort|}2130|2138|}
{2010212001|XXGvertex_oport_oport|3559|0|5697|0|{0|out|}2138|2139|}
{2010211001|XXGvertex_iport_iport|3560|0|5699|0|{0|in|}2138|2140|}
{2010214001|XXGiport_src_flow|3561|0|5701|0|{0|}2140|2131|}
{2010007001|XXGobject_proto_object|3562|0|5702|0|{}2138|2141|}
{2010212001|XXGvertex_oport_oport|3563|0|5704|0|{0|out|}2141|2142|}
{2010006001|XXGobject_psameas_object|3564|0|5706|0|{metadata|out_metadata|1|0|}2142|2141|}
{2010211001|XXGvertex_iport_iport|3565|0|5707|0|{0|in|}2141|2143|}
{2010006001|XXGobject_psameas_object|3566|0|5709|0|{metadata|in_metadata|1|0|}2143|2141|}
{2010006001|XXGobject_psameas_object|3567|0|5710|0|{Layout|OutputLayout|1|0|}2138|2130|}
{2010006001|XXGobject_psameas_object|3568|0|5711|0|{key|Key|1|0|}2138|2130|}
{2010006001|XXGobject_psameas_object|3569|0|5712|0|{max_core|Max_core|1|0|}2138|2130|}
{2010212001|XXGvertex_oport_oport|3570|0|5713|0|{0|out0|}2130|2144|}
{2010216002|XXGoport_binding_oport|3571|0|5715|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}2144|2139|}
{2010211001|XXGvertex_iport_iport|3572|0|5716|0|{0|in0|}2130|2145|}
{2010215002|XXGiport_binding_iport|3573|0|5718|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}2145|2134|}
{2010601001|XXGgraph_vertex_vertex|3574|0|5719|0|{Sort_within_Groups_1|}2102|2146|}
{2010212001|XXGvertex_oport_oport|3575|0|5721|0|{0|out|}2146|2147|}
{2010213001|XXGoport_dst_flow|3576|0|5723|0|{0|}2147|2103|}
{2010211001|XXGvertex_iport_iport|3577|0|5724|0|{0|in|}2146|2148|}
{2010214001|XXGiport_src_flow|3578|0|5726|0|{0|}2148|2104|}
{2010007001|XXGobject_proto_object|3579|0|5727|0|{}2146|2149|}
{2010212001|XXGvertex_oport_oport|3580|0|5729|0|{0|out|}2149|2150|}
{2010006001|XXGobject_psameas_object|3581|0|5731|0|{metadata|out_metadata|1|0|}2150|2149|}
{2010211001|XXGvertex_iport_iport|3582|0|5732|0|{0|in|}2149|2151|}
{2010006001|XXGobject_psameas_object|3583|0|5734|0|{metadata|in_metadata|1|0|}2151|2149|}
{2010212001|XXGvertex_oport_oport|3584|0|5735|0|{0|out0|}2102|2152|}
{2010216002|XXGoport_binding_oport|3585|0|5737|0|{.5|.5|{0|}7792|}2152|2107|}
{2010213001|XXGoport_dst_flow|3586|0|5738|0|{0|}2152|2046|}
{2010212001|XXGvertex_oport_oport|3587|0|5739|0|{1|out1|}2102|2153|}
{2010216002|XXGoport_binding_oport|3588|0|5741|0|{.5|.5|{0|}7793|}2153|2108|}
{2010213001|XXGoport_dst_flow|3589|0|5742|0|{0|}2153|2047|}
{2010211001|XXGvertex_iport_iport|3590|0|5743|0|{0|in0|}2102|2154|}
{2010215002|XXGiport_binding_iport|3591|0|5745|0|{.5|.5|{0|}7791|}2154|2129|}
{2010214001|XXGiport_src_flow|3592|0|5746|0|{0|}2154|2041|}
{2010601001|XXGgraph_vertex_vertex|3593|0|5747|0|{Sort_within_Groups|}2032|2155|}
{2010212001|XXGvertex_oport_oport|3594|0|5749|0|{0|out|}2155|2156|}
{2010213001|XXGoport_dst_flow|3595|0|5751|0|{0|}2156|2043|}
{2010211001|XXGvertex_iport_iport|3596|0|5752|0|{0|in|}2155|2157|}
{2010214001|XXGiport_src_flow|3597|0|5754|0|{0|}2157|2042|}
{2010007001|XXGobject_proto_object|3598|0|5755|0|{}2155|2158|}
{2010212001|XXGvertex_oport_oport|3599|0|5757|0|{0|out|}2158|2159|}
{2010006001|XXGobject_psameas_object|3600|0|5759|0|{metadata|out_metadata|1|0|}2159|2158|}
{2010211001|XXGvertex_iport_iport|3601|0|5760|0|{0|in|}2158|2160|}
{2010006001|XXGobject_psameas_object|3602|0|5762|0|{metadata|in_metadata|1|0|}2160|2158|}
{2010601001|XXGgraph_vertex_vertex|3603|0|5763|0|{Trash|}2032|2161|}
{2010211001|XXGvertex_iport_iport|3604|0|5765|0|{0|in|}2161|2162|}
{2010214001|XXGiport_src_flow|3605|0|5767|0|{0|}2162|2047|}
{2010007001|XXGobject_proto_object|3606|0|5768|0|{}2161|2163|}
{2010211001|XXGvertex_iport_iport|3607|0|5770|0|{0|in|}2163|2164|}
{2010006001|XXGobject_psameas_object|3608|0|5772|0|{metadata|in_metadata|1|0|}2164|2163|}
{2010601001|XXGgraph_vertex_vertex|3609|0|5773|0|{Trash_1|}2032|2165|}
{2010211001|XXGvertex_iport_iport|3610|0|5775|0|{0|in|}2165|2166|}
{2010214001|XXGiport_src_flow|3611|0|5777|0|{0|}2166|2048|}
{2010007001|XXGobject_proto_object|3612|0|5778|0|{}2165|2167|}
{2010211001|XXGvertex_iport_iport|3613|0|5780|0|{0|in|}2167|2168|}
{2010006001|XXGobject_psameas_object|3614|0|5782|0|{metadata|in_metadata|1|0|}2168|2167|}
{2010601001|XXGgraph_vertex_vertex|3615|0|5783|0|{Trash_2|}2032|2169|}
{2010211001|XXGvertex_iport_iport|3616|0|5785|0|{0|in|}2169|2170|}
{2010214001|XXGiport_src_flow|3617|0|5787|0|{0|}2170|2049|}
{2010007001|XXGobject_proto_object|3618|0|5788|0|{}2169|2171|}
{2010211001|XXGvertex_iport_iport|3619|0|5790|0|{0|in|}2171|2172|}
{2010006001|XXGobject_psameas_object|3620|0|5792|0|{metadata|in_metadata|1|0|}2172|2171|}
{2010601001|XXGgraph_vertex_vertex|3621|0|5793|0|{Two_Step_Lookup|}2032|2173|}
{2010605001|XXGgraph_legend_legend|3622|0|5795|0|{0|}2173|2174|}
{2010241001|XXGlegend_face_face|3623|0|5797|0|{}2174|2175|}
{2010604001|XXGgraph_flow_flow|3624|0|5799|0|{Flow_1|}2173|2176|}
{2010604001|XXGgraph_flow_flow|3625|0|5801|0|{Flow_2|}2173|2177|}
{2010604001|XXGgraph_flow_flow|3626|0|5803|0|{Flow_3|}2173|2178|}
{2010604001|XXGgraph_flow_flow|3627|0|5805|0|{Flow_4|}2173|2179|}
{2010604001|XXGgraph_flow_flow|3628|0|5807|0|{Flow_5|}2173|2180|}
{2010604001|XXGgraph_flow_flow|3629|0|5809|0|{Flow_6|}2173|2181|}
{2010601001|XXGgraph_vertex_vertex|3630|0|5811|0|{FBE_Pass_Only_Matching_Rec|}2173|2182|}
{2010212001|XXGvertex_oport_oport|3631|0|5813|0|{0|out|}2182|2183|}
{2010213001|XXGoport_dst_flow|3632|0|5815|0|{0|}2183|2180|}
{2010212001|XXGvertex_oport_oport|3633|0|5816|0|{1|deselect|}2182|2184|}
{2010213001|XXGoport_dst_flow|3634|0|5818|0|{0|}2184|2181|}
{2010212001|XXGvertex_oport_oport|3635|0|5819|0|{2|reject|}2182|2185|}
{2010212001|XXGvertex_oport_oport|3636|0|5821|0|{3|error|}2182|2186|}
{2010212001|XXGvertex_oport_oport|3637|0|5823|0|{4|log|}2182|2187|}
{2010211001|XXGvertex_iport_iport|3638|0|5825|0|{0|in|}2182|2188|}
{2010214001|XXGiport_src_flow|3639|0|5827|0|{0|}2188|2179|}
{2010007001|XXGobject_proto_object|3640|0|5828|0|{}2182|2189|}
{2010212001|XXGvertex_oport_oport|3641|0|5830|0|{0|out|}2189|2190|}
{2010006001|XXGobject_psameas_object|3642|0|5832|0|{metadata|out_metadata|1|0|}2190|2189|}
{2010212001|XXGvertex_oport_oport|3643|0|5833|0|{1|deselect|}2189|2191|}
{2010006001|XXGobject_psameas_object|3644|0|5835|0|{metadata|deselect_metadata|1|0|}2191|2189|}
{2010212001|XXGvertex_oport_oport|3645|0|5836|0|{2|reject|}2189|2192|}
{2010006001|XXGobject_psameas_object|3646|0|5838|0|{metadata|reject_metadata|1|0|}2192|2189|}
{2010212001|XXGvertex_oport_oport|3647|0|5839|0|{3|error|}2189|2193|}
{2010006001|XXGobject_psameas_object|3648|0|5841|0|{metadata|error_metadata|1|0|}2193|2189|}
{2010212001|XXGvertex_oport_oport|3649|0|5842|0|{4|log|}2189|2194|}
{2010006001|XXGobject_psameas_object|3650|0|5844|0|{metadata|log_metadata|1|0|}2194|2189|}
{2010211001|XXGvertex_iport_iport|3651|0|5845|0|{0|in|}2189|2195|}
{2010006001|XXGobject_psameas_object|3652|0|5847|0|{metadata|in_metadata|1|0|}2195|2189|}
{2010601001|XXGgraph_vertex_vertex|3653|0|5848|0|{FBE_filter_matching_lkp_record|}2173|2196|}
{2010212001|XXGvertex_oport_oport|3654|0|5850|0|{0|out|}2196|2197|}
{2010213001|XXGoport_dst_flow|3655|0|5852|0|{0|}2197|2178|}
{2010212001|XXGvertex_oport_oport|3656|0|5853|0|{1|deselect|}2196|2198|}
{2010213001|XXGoport_dst_flow|3657|0|5855|0|{0|}2198|2176|}
{2010212001|XXGvertex_oport_oport|3658|0|5856|0|{2|reject|}2196|2199|}
{2010212001|XXGvertex_oport_oport|3659|0|5858|0|{3|error|}2196|2200|}
{2010212001|XXGvertex_oport_oport|3660|0|5860|0|{4|log|}2196|2201|}
{2010211001|XXGvertex_iport_iport|3661|0|5862|0|{0|in|}2196|2202|}
{2010007001|XXGobject_proto_object|3662|0|5864|0|{}2196|2203|}
{2010212001|XXGvertex_oport_oport|3663|0|5866|0|{0|out|}2203|2204|}
{2010006001|XXGobject_psameas_object|3664|0|5868|0|{metadata|out_metadata|1|0|}2204|2203|}
{2010212001|XXGvertex_oport_oport|3665|0|5869|0|{1|deselect|}2203|2205|}
{2010006001|XXGobject_psameas_object|3666|0|5871|0|{metadata|deselect_metadata|1|0|}2205|2203|}
{2010212001|XXGvertex_oport_oport|3667|0|5872|0|{2|reject|}2203|2206|}
{2010006001|XXGobject_psameas_object|3668|0|5874|0|{metadata|reject_metadata|1|0|}2206|2203|}
{2010212001|XXGvertex_oport_oport|3669|0|5875|0|{3|error|}2203|2207|}
{2010006001|XXGobject_psameas_object|3670|0|5877|0|{metadata|error_metadata|1|0|}2207|2203|}
{2010212001|XXGvertex_oport_oport|3671|0|5878|0|{4|log|}2203|2208|}
{2010006001|XXGobject_psameas_object|3672|0|5880|0|{metadata|log_metadata|1|0|}2208|2203|}
{2010211001|XXGvertex_iport_iport|3673|0|5881|0|{0|in|}2203|2209|}
{2010006001|XXGobject_psameas_object|3674|0|5883|0|{metadata|in_metadata|1|0|}2209|2203|}
{2010601001|XXGgraph_vertex_vertex|3675|0|5884|0|{Merge|}2173|2210|}
{2010212001|XXGvertex_oport_oport|3676|0|5886|0|{0|out|}2210|2211|}
{2010211001|XXGvertex_iport_iport|3677|0|5888|0|{0|in|}2210|2212|}
{2010214001|XXGiport_src_flow|3678|0|5890|0|{0|}2212|2178|}
{2010214001|XXGiport_src_flow|3679|0|5891|0|{1|}2212|2180|}
{2010007001|XXGobject_proto_object|3680|0|5892|0|{}2210|2213|}
{2010212001|XXGvertex_oport_oport|3681|0|5894|0|{0|out|}2213|2214|}
{2010006001|XXGobject_psameas_object|3682|0|5896|0|{metadata|out_metadata|1|0|}2214|2213|}
{2010211001|XXGvertex_iport_iport|3683|0|5897|0|{0|in|}2213|2215|}
{2010006001|XXGobject_psameas_object|3684|0|5899|0|{metadata|in_metadata|1|0|}2215|2213|}
{2010601001|XXGgraph_vertex_vertex|3685|0|5900|0|{No_Match_Record_In_Second_Pass|}2173|2216|}
{2010211001|XXGvertex_iport_iport|3686|0|5902|0|{0|in|}2216|2217|}
{2010214001|XXGiport_src_flow|3687|0|5904|0|{0|}2217|2181|}
{2010007001|XXGobject_proto_object|3688|0|5905|0|{}2216|2218|}
{2010211001|XXGvertex_iport_iport|3689|0|5907|0|{0|in|}2218|2219|}
{2010006001|XXGobject_psameas_object|3690|0|5909|0|{metadata|in_metadata|1|0|}2219|2218|}
{2010601001|XXGgraph_vertex_vertex|3691|0|5910|0|{RFMT_Lookup_with_IDS_Archive_|}2173|2220|}
{2010212001|XXGvertex_oport_oport|3692|0|5912|0|{0|out0|}2220|2221|}
{2010213001|XXGoport_dst_flow|3693|0|5914|0|{0|}2221|2179|}
{2010212001|XXGvertex_oport_oport|3694|0|5915|0|{1|reject0|}2220|2222|}
{2010212001|XXGvertex_oport_oport|3695|0|5917|0|{2|error0|}2220|2223|}
{2010212001|XXGvertex_oport_oport|3696|0|5919|0|{3|log|}2220|2224|}
{2010211001|XXGvertex_iport_iport|3697|0|5921|0|{0|in|}2220|2225|}
{2010214001|XXGiport_src_flow|3698|0|5923|0|{0|}2225|2177|}
{2010007001|XXGobject_proto_object|3699|0|5924|0|{}2220|2226|}
{2010212001|XXGvertex_oport_oport|3700|0|5926|0|{0|out0|}2226|2227|}
{2010006001|XXGobject_psameas_object|3701|0|5928|0|{metadata|out0_metadata|1|0|}2227|2226|}
{2010006001|XXGobject_psameas_object|3702|0|5929|0|{transform0|transform0|1|0|}2227|2226|}
{2010212001|XXGvertex_oport_oport|3703|0|5930|0|{1|reject0|}2226|2228|}
{2010006001|XXGobject_psameas_object|3704|0|5932|0|{metadata|reject0_metadata|1|0|}2228|2226|}
{2010212001|XXGvertex_oport_oport|3705|0|5933|0|{2|error0|}2226|2229|}
{2010006001|XXGobject_psameas_object|3706|0|5935|0|{metadata|error0_metadata|1|0|}2229|2226|}
{2010212001|XXGvertex_oport_oport|3707|0|5936|0|{3|log|}2226|2230|}
{2010006001|XXGobject_psameas_object|3708|0|5938|0|{metadata|log_metadata|1|0|}2230|2226|}
{2010211001|XXGvertex_iport_iport|3709|0|5939|0|{0|in|}2226|2231|}
{2010006001|XXGobject_psameas_object|3710|0|5941|0|{metadata|in_metadata|1|0|}2231|2226|}
{2010601001|XXGgraph_vertex_vertex|3711|0|5942|0|{RFMT_Pass_only_Hash_Keys|}2173|2232|}
{2010212001|XXGvertex_oport_oport|3712|0|5944|0|{0|out0|}2232|2233|}
{2010213001|XXGoport_dst_flow|3713|0|5946|0|{0|}2233|2177|}
{2010212001|XXGvertex_oport_oport|3714|0|5947|0|{1|reject0|}2232|2234|}
{2010212001|XXGvertex_oport_oport|3715|0|5949|0|{2|error0|}2232|2235|}
{2010212001|XXGvertex_oport_oport|3716|0|5951|0|{3|log|}2232|2236|}
{2010211001|XXGvertex_iport_iport|3717|0|5953|0|{0|in|}2232|2237|}
{2010214001|XXGiport_src_flow|3718|0|5955|0|{0|}2237|2176|}
{2010007001|XXGobject_proto_object|3719|0|5956|0|{}2232|2238|}
{2010212001|XXGvertex_oport_oport|3720|0|5958|0|{0|out0|}2238|2239|}
{2010006001|XXGobject_psameas_object|3721|0|5960|0|{metadata|out0_metadata|1|0|}2239|2238|}
{2010006001|XXGobject_psameas_object|3722|0|5961|0|{transform0|transform0|1|0|}2239|2238|}
{2010212001|XXGvertex_oport_oport|3723|0|5962|0|{1|reject0|}2238|2240|}
{2010006001|XXGobject_psameas_object|3724|0|5964|0|{metadata|reject0_metadata|1|0|}2240|2238|}
{2010212001|XXGvertex_oport_oport|3725|0|5965|0|{2|error0|}2238|2241|}
{2010006001|XXGobject_psameas_object|3726|0|5967|0|{metadata|error0_metadata|1|0|}2241|2238|}
{2010212001|XXGvertex_oport_oport|3727|0|5968|0|{3|log|}2238|2242|}
{2010006001|XXGobject_psameas_object|3728|0|5970|0|{metadata|log_metadata|1|0|}2242|2238|}
{2010211001|XXGvertex_iport_iport|3729|0|5971|0|{0|in|}2238|2243|}
{2010006001|XXGobject_psameas_object|3730|0|5973|0|{metadata|in_metadata|1|0|}2243|2238|}
{2010212001|XXGvertex_oport_oport|3731|0|5974|0|{0|out0|}2173|2244|}
{2010216002|XXGoport_binding_oport|3732|0|5976|0|{.5|.5|{0|}15500|}2244|2211|}
{2010213001|XXGoport_dst_flow|3733|0|5977|0|{0|}2244|2045|}
{2010211001|XXGvertex_iport_iport|3734|0|5978|0|{0|in0|}2173|2245|}
{2010215002|XXGiport_binding_iport|3735|0|5980|0|{.5|.5|{0|}15499|}2245|2202|}
{2010214001|XXGiport_src_flow|3736|0|5981|0|{0|}2245|2044|}
{2010212001|XXGvertex_oport_oport|3737|0|5982|0|{0|out0|}2032|2246|}
{2010216002|XXGoport_binding_oport|3738|0|5984|0|{.5|.5|{0|}15515|}2246|2051|}
{2010213001|XXGoport_dst_flow|3739|0|5985|0|{0|}2246|1852|}
{2010211001|XXGvertex_iport_iport|3740|0|5986|0|{0|in1|}2032|2247|}
{2010215002|XXGiport_binding_iport|3741|0|5988|0|{.5|.5|{0|}15514|}2247|2083|}
{2010214001|XXGiport_src_flow|3742|0|5989|0|{0|}2247|1850|}
{2010601001|XXGgraph_vertex_vertex|3743|0|5990|0|{Merge|}1844|2248|}
{2010212001|XXGvertex_oport_oport|3744|0|5992|0|{0|out|}2248|2249|}
{2010211001|XXGvertex_iport_iport|3745|0|5994|0|{0|in|}2248|2250|}
{2010214001|XXGiport_src_flow|3746|0|5996|0|{0|}2250|1853|}
{2010007001|XXGobject_proto_object|3747|0|5997|0|{}2248|2251|}
{2010212001|XXGvertex_oport_oport|3748|0|5999|0|{0|out|}2251|2252|}
{2010006001|XXGobject_psameas_object|3749|0|6001|0|{metadata|out_metadata|1|0|}2252|2251|}
{2010211001|XXGvertex_iport_iport|3750|0|6002|0|{0|in|}2251|2253|}
{2010006001|XXGobject_psameas_object|3751|0|6004|0|{metadata|in_metadata|1|0|}2253|2251|}
{2010601001|XXGgraph_vertex_vertex|3752|0|6005|0|{Replicate|}1844|2254|}
{2010212001|XXGvertex_oport_oport|3753|0|6007|0|{0|out|}2254|2255|}
{2010213001|XXGoport_dst_flow|3754|0|6009|0|{0|}2255|1849|}
{2010213001|XXGoport_dst_flow|3755|0|6010|0|{1|}2255|1850|}
{2010211001|XXGvertex_iport_iport|3756|0|6011|0|{0|in|}2254|2256|}
{2010007001|XXGobject_proto_object|3757|0|6013|0|{}2254|2257|}
{2010212001|XXGvertex_oport_oport|3758|0|6015|0|{0|out|}2257|2258|}
{2010006001|XXGobject_psameas_object|3759|0|6017|0|{metadata|out_metadata|1|0|}2258|2257|}
{2010211001|XXGvertex_iport_iport|3760|0|6018|0|{0|in|}2257|2259|}
{2010006001|XXGobject_psameas_object|3761|0|6020|0|{metadata|in_metadata|1|0|}2259|2257|}
{2010601001|XXGgraph_vertex_vertex|3762|0|6021|0|{Replicate_1|}1844|2260|}
{2010212001|XXGvertex_oport_oport|3763|0|6023|0|{0|out|}2260|2261|}
{2010213001|XXGoport_dst_flow|3764|0|6025|0|{0|}2261|1853|}
{2010211001|XXGvertex_iport_iport|3765|0|6026|0|{0|in|}2260|2262|}
{2010214001|XXGiport_src_flow|3766|0|6028|0|{0|}2262|1851|}
{2010214001|XXGiport_src_flow|3767|0|6029|0|{1|}2262|1852|}
{2010007001|XXGobject_proto_object|3768|0|6030|0|{}2260|2263|}
{2010212001|XXGvertex_oport_oport|3769|0|6032|0|{0|out|}2263|2264|}
{2010006001|XXGobject_psameas_object|3770|0|6034|0|{metadata|out_metadata|1|0|}2264|2263|}
{2010211001|XXGvertex_iport_iport|3771|0|6035|0|{0|in|}2263|2265|}
{2010006001|XXGobject_psameas_object|3772|0|6037|0|{metadata|in_metadata|1|0|}2265|2263|}
{2010212001|XXGvertex_oport_oport|3773|0|6038|0|{0|out0|}1844|2266|}
{2010216002|XXGoport_binding_oport|3774|0|6040|0|{.5|.5|{0|}7797|}2266|2249|}
{2010211001|XXGvertex_iport_iport|3775|0|6041|0|{0|in0|}1844|2267|}
{2010215002|XXGiport_binding_iport|3776|0|6043|0|{.5|.5|{0|}7796|}2267|2256|}
{2010601001|XXGgraph_vertex_vertex|3777|0|6044|0|{ids_lookup_4|}143|2268|}
{2010605001|XXGgraph_legend_legend|3778|0|6046|0|{0|}2268|2269|}
{2010241001|XXGlegend_face_face|3779|0|6048|0|{}2269|2270|}
{2010605001|XXGgraph_legend_legend|3780|0|6050|0|{1|}2268|2271|}
{2010241001|XXGlegend_face_face|3781|0|6052|0|{}2271|2272|}
{2010604001|XXGgraph_flow_flow|3782|0|6054|0|{Flow_1|}2268|2273|}
{2010604001|XXGgraph_flow_flow|3783|0|6056|0|{Flow_2|}2268|2274|}
{2010604001|XXGgraph_flow_flow|3784|0|6058|0|{Flow_3|}2268|2275|}
{2010604001|XXGgraph_flow_flow|3785|0|6060|0|{Flow_4|}2268|2276|}
{2010604001|XXGgraph_flow_flow|3786|0|6062|0|{Flow_5|}2268|2277|}
{2010601001|XXGgraph_vertex_vertex|3787|0|6064|0|{Get_All_LookUp_Record|}2268|2278|}
{2010605001|XXGgraph_legend_legend|3788|0|6066|0|{0|}2278|2279|}
{2010241001|XXGlegend_face_face|3789|0|6068|0|{}2279|2280|}
{2010605001|XXGgraph_legend_legend|3790|0|6070|0|{1|}2278|2281|}
{2010241001|XXGlegend_face_face|3791|0|6072|0|{}2281|2282|}
{2010605001|XXGgraph_legend_legend|3792|0|6074|0|{2|}2278|2283|}
{2010241001|XXGlegend_face_face|3793|0|6076|0|{}2283|2284|}
{2010605001|XXGgraph_legend_legend|3794|0|6078|0|{3|}2278|2285|}
{2010241001|XXGlegend_face_face|3795|0|6080|0|{}2285|2286|}
{2010605001|XXGgraph_legend_legend|3796|0|6082|0|{4|}2278|2287|}
{2010241001|XXGlegend_face_face|3797|0|6084|0|{}2287|2288|}
{2010604001|XXGgraph_flow_flow|3798|0|6086|0|{Flow_1|}2278|2289|}
{2010604001|XXGgraph_flow_flow|3799|0|6088|0|{Flow_10|}2278|2290|}
{2010604001|XXGgraph_flow_flow|3800|0|6090|0|{Flow_11|}2278|2291|}
{2010604001|XXGgraph_flow_flow|3801|0|6092|0|{Flow_12|}2278|2292|}
{2010604001|XXGgraph_flow_flow|3802|0|6094|0|{Flow_18|}2278|2293|}
{2010604001|XXGgraph_flow_flow|3803|0|6096|0|{Flow_2|}2278|2294|}
{2010604001|XXGgraph_flow_flow|3804|0|6098|0|{Flow_3|}2278|2295|}
{2010604001|XXGgraph_flow_flow|3805|0|6100|0|{Flow_4|}2278|2296|}
{2010604001|XXGgraph_flow_flow|3806|0|6102|0|{Flow_5|}2278|2297|}
{2010604001|XXGgraph_flow_flow|3807|0|6104|0|{Flow_6|}2278|2298|}
{2010604001|XXGgraph_flow_flow|3808|0|6106|0|{Flow_7|}2278|2299|}
{2010604001|XXGgraph_flow_flow|3809|0|6108|0|{Flow_8|}2278|2300|}
{2010604001|XXGgraph_flow_flow|3810|0|6110|0|{Flow_9|}2278|2301|}
{2010601001|XXGgraph_vertex_vertex|3811|0|6112|0|{Dedup_Sorted|}2278|2302|}
{2010212001|XXGvertex_oport_oport|3812|0|6114|0|{0|out|}2302|2303|}
{2010213001|XXGoport_dst_flow|3813|0|6116|0|{0|}2303|2294|}
{2010212001|XXGvertex_oport_oport|3814|0|6117|0|{1|dup|}2302|2304|}
{2010213001|XXGoport_dst_flow|3815|0|6119|0|{0|}2304|2298|}
{2010212001|XXGvertex_oport_oport|3816|0|6120|0|{2|reject|}2302|2305|}
{2010212001|XXGvertex_oport_oport|3817|0|6122|0|{3|error|}2302|2306|}
{2010212001|XXGvertex_oport_oport|3818|0|6124|0|{4|log|}2302|2307|}
{2010211001|XXGvertex_iport_iport|3819|0|6126|0|{0|in|}2302|2308|}
{2010214001|XXGiport_src_flow|3820|0|6128|0|{0|}2308|2289|}
{2010006001|XXGobject_psameas_object|3821|0|6129|0|{Layout|Layout|0|0|}2302|2309|}
{2010212001|XXGvertex_oport_oport|3822|0|6131|0|{0|out|}2309|2310|}
{2010213001|XXGoport_dst_flow|3823|0|6133|0|{0|}2310|2292|}
{2010212001|XXGvertex_oport_oport|3824|0|6134|0|{1|reject|}2309|2311|}
{2010212001|XXGvertex_oport_oport|3825|0|6136|0|{2|error|}2309|2312|}
{2010212001|XXGvertex_oport_oport|3826|0|6138|0|{3|log|}2309|2313|}
{2010211001|XXGvertex_iport_iport|3827|0|6140|0|{0|in|}2309|2314|}
{2010214001|XXGiport_src_flow|3828|0|6142|0|{0|}2314|2290|}
{2010006001|XXGobject_psameas_object|3829|0|6143|0|{in_metadata|out0_metadata|0|0|}2309|2315|}
{2010212001|XXGvertex_oport_oport|3830|0|6145|0|{0|out0|}2315|2316|}
{2010213001|XXGoport_dst_flow|3831|0|6147|0|{0|}2316|2293|}
{2010212001|XXGvertex_oport_oport|3832|0|6148|0|{1|reject0|}2315|2317|}
{2010212001|XXGvertex_oport_oport|3833|0|6150|0|{2|error0|}2315|2318|}
{2010212001|XXGvertex_oport_oport|3834|0|6152|0|{3|log|}2315|2319|}
{2010211001|XXGvertex_iport_iport|3835|0|6154|0|{0|in|}2315|2320|}
{2010006001|XXGobject_psameas_object|3836|0|6156|0|{Layout|Layout|0|0|}2315|242|}
{2010006001|XXGobject_psameas_object|3837|0|6157|0|{in_metadata|out3_metadata|0|0|}2315|242|}
{2010006001|XXGobject_psameas_object|3838|0|6158|0|{reject0_metadata|out3_metadata|0|0|}2315|242|}
{2010006001|XXGobject_psameas_object|3839|0|6159|0|{reject_metadata|out0_metadata|0|0|}2309|2315|}
{2010006001|XXGobject_psameas_object|3840|0|6160|0|{dup_metadata|out_metadata|0|0|}2302|2321|}
{2010212001|XXGvertex_oport_oport|3841|0|6162|0|{0|out|}2321|2322|}
{2010213001|XXGoport_dst_flow|3842|0|6164|0|{0|}2322|2291|}
{2010212001|XXGvertex_oport_oport|3843|0|6165|0|{1|deselect|}2321|2323|}
{2010213001|XXGoport_dst_flow|3844|0|6167|0|{0|}2323|2299|}
{2010212001|XXGvertex_oport_oport|3845|0|6168|0|{2|reject|}2321|2324|}
{2010212001|XXGvertex_oport_oport|3846|0|6170|0|{3|error|}2321|2325|}
{2010212001|XXGvertex_oport_oport|3847|0|6172|0|{4|log|}2321|2326|}
{2010211001|XXGvertex_iport_iport|3848|0|6174|0|{0|in|}2321|2327|}
{2010214001|XXGiport_src_flow|3849|0|6176|0|{0|}2327|2300|}
{2010006001|XXGobject_psameas_object|3850|0|6177|0|{Layout|Layout|0|0|}2321|2309|}
{2010006001|XXGobject_psameas_object|3851|0|6178|0|{deselect_metadata|out_metadata|0|0|}2321|2321|}
{2010006001|XXGobject_psameas_object|3852|0|6179|0|{in_metadata|out_metadata|0|0|}2321|2309|}
{2010006001|XXGobject_psameas_object|3853|0|6180|0|{reject_metadata|out_metadata|0|0|}2321|2309|}
{2010006001|XXGobject_psameas_object|3854|0|6181|0|{in_metadata|out_metadata|0|0|}2302|2321|}
{2010006001|XXGobject_psameas_object|3855|0|6182|0|{out_metadata|out_metadata|0|0|}2302|2321|}
{2010006001|XXGobject_psameas_object|3856|0|6183|0|{reject_metadata|out_metadata|0|0|}2302|2321|}
{2010601001|XXGgraph_vertex_vertex|3857|0|6184|0|{FBE_Filter_match_records|}2278|2321|}
{2010601001|XXGgraph_vertex_vertex|3858|0|6185|0|{Get_Hash_on_SRC_NK|}2278|2315|}
{2010601001|XXGgraph_vertex_vertex|3859|0|6186|0|{Merge|}2278|2328|}
{2010212001|XXGvertex_oport_oport|3860|0|6188|0|{0|out|}2328|2329|}
{2010213001|XXGoport_dst_flow|3861|0|6190|0|{0|}2329|2300|}
{2010211001|XXGvertex_iport_iport|3862|0|6191|0|{0|in|}2328|2330|}
{2010214001|XXGiport_src_flow|3863|0|6193|0|{0|}2330|2295|}
{2010214001|XXGiport_src_flow|3864|0|6194|0|{1|}2330|2292|}
{2010006001|XXGobject_psameas_object|3865|0|6195|0|{Layout|Layout|0|0|}2328|2309|}
{2010006001|XXGobject_psameas_object|3866|0|6196|0|{in_metadata|out_metadata|0|0|}2328|2309|}
{2010006001|XXGobject_psameas_object|3867|0|6197|0|{out_metadata|out_metadata|0|0|}2328|2309|}
{2010601001|XXGgraph_vertex_vertex|3868|0|6198|0|{Normalize_Get_all_records_from_Archive_Lkp|}2278|2309|}
{2010601001|XXGgraph_vertex_vertex|3869|0|6199|0|{Normalize_Get_all_records_from_lkp|}2278|2331|}
{2010212001|XXGvertex_oport_oport|3870|0|6201|0|{0|out|}2331|2332|}
{2010213001|XXGoport_dst_flow|3871|0|6203|0|{0|}2332|2295|}
{2010212001|XXGvertex_oport_oport|3872|0|6204|0|{1|reject|}2331|2333|}
{2010212001|XXGvertex_oport_oport|3873|0|6206|0|{2|error|}2331|2334|}
{2010212001|XXGvertex_oport_oport|3874|0|6208|0|{3|log|}2331|2335|}
{2010211001|XXGvertex_iport_iport|3875|0|6210|0|{0|in|}2331|2336|}
{2010214001|XXGiport_src_flow|3876|0|6212|0|{0|}2336|2297|}
{2010006001|XXGobject_psameas_object|3877|0|6213|0|{in_metadata|out0_metadata|0|0|}2331|2315|}
{2010006001|XXGobject_psameas_object|3878|0|6214|0|{reject_metadata|out0_metadata|0|0|}2331|2315|}
{2010601001|XXGgraph_vertex_vertex|3879|0|6215|0|{Replicate|}2278|2337|}
{2010212001|XXGvertex_oport_oport|3880|0|6217|0|{0|out|}2337|2338|}
{2010211001|XXGvertex_iport_iport|3881|0|6219|0|{0|in|}2337|2339|}
{2010214001|XXGiport_src_flow|3882|0|6221|0|{0|}2339|2294|}
{2010006001|XXGobject_psameas_object|3883|0|6222|0|{Layout|Layout|0|0|}2337|2309|}
{2010006001|XXGobject_psameas_object|3884|0|6223|0|{in_metadata|out_metadata|0|0|}2337|2321|}
{2010006001|XXGobject_psameas_object|3885|0|6224|0|{out_metadata|out_metadata|0|0|}2337|2321|}
{2010601001|XXGgraph_vertex_vertex|3886|0|6225|0|{Replicate_1|}2278|2340|}
{2010212001|XXGvertex_oport_oport|3887|0|6227|0|{0|out|}2340|2341|}
{2010213001|XXGoport_dst_flow|3888|0|6229|0|{0|}2341|2297|}
{2010213001|XXGoport_dst_flow|3889|0|6230|0|{1|}2341|2290|}
{2010211001|XXGvertex_iport_iport|3890|0|6231|0|{0|in|}2340|2342|}
{2010214001|XXGiport_src_flow|3891|0|6233|0|{0|}2342|2296|}
{2010006001|XXGobject_psameas_object|3892|0|6234|0|{Layout|Layout|0|0|}2340|2309|}
{2010006001|XXGobject_psameas_object|3893|0|6235|0|{in_metadata|out0_metadata|0|0|}2340|2315|}
{2010006001|XXGobject_psameas_object|3894|0|6236|0|{out_metadata|out0_metadata|0|0|}2340|2315|}
{2010601001|XXGgraph_vertex_vertex|3895|0|6237|0|{Sort_Remove_Dup_On_Hash|}2278|2343|}
{2010604001|XXGgraph_flow_flow|3896|0|6239|0|{Flow_3|}2343|2344|}
{2010604001|XXGgraph_flow_flow|3897|0|6241|0|{Flow_5|}2343|2345|}
{2010601001|XXGgraph_vertex_vertex|3898|0|6243|0|{Dedup_Sorted_1|}2343|2346|}
{2010212001|XXGvertex_oport_oport|3899|0|6245|0|{0|out|}2346|2347|}
{2010212001|XXGvertex_oport_oport|3900|0|6247|0|{1|dup|}2346|2348|}
{2010212001|XXGvertex_oport_oport|3901|0|6249|0|{2|reject|}2346|2349|}
{2010212001|XXGvertex_oport_oport|3902|0|6251|0|{3|error|}2346|2350|}
{2010212001|XXGvertex_oport_oport|3903|0|6253|0|{4|log|}2346|2351|}
{2010211001|XXGvertex_iport_iport|3904|0|6255|0|{0|in|}2346|2352|}
{2010214001|XXGiport_src_flow|3905|0|6257|0|{0|}2352|2345|}
{2010006001|XXGobject_psameas_object|3906|0|6258|0|{Layout|Layout|0|0|}2346|2309|}
{2010006001|XXGobject_psameas_object|3907|0|6259|0|{dup_metadata|out0_metadata|0|0|}2346|2315|}
{2010006001|XXGobject_psameas_object|3908|0|6260|0|{in_metadata|out0_metadata|0|0|}2346|2315|}
{2010006001|XXGobject_psameas_object|3909|0|6261|0|{out_metadata|out0_metadata|0|0|}2346|2315|}
{2010006001|XXGobject_psameas_object|3910|0|6262|0|{reject_metadata|out0_metadata|0|0|}2346|2315|}
{2010601001|XXGgraph_vertex_vertex|3911|0|6263|0|{PBKS_dxf_hk_part1_|}2343|2353|}
{2010604001|XXGgraph_flow_flow|3912|0|6265|0|{Flow_1|}2353|2354|}
{2010601001|XXGgraph_vertex_vertex|3913|0|6267|0|{Partition_by_Key|}2353|2355|}
{2010212001|XXGvertex_oport_oport|3914|0|6269|0|{0|out|}2355|2356|}
{2010213001|XXGoport_dst_flow|3915|0|6271|0|{0|}2356|2354|}
{2010211001|XXGvertex_iport_iport|3916|0|6272|0|{0|in|}2355|2357|}
{2010006001|XXGobject_psameas_object|3917|0|6274|0|{in_metadata|out0_metadata|0|0|}2355|2315|}
{2010006001|XXGobject_psameas_object|3918|0|6275|0|{out_metadata|out0_metadata|0|0|}2355|2315|}
{2010601001|XXGgraph_vertex_vertex|3919|0|6276|0|{Sort|}2353|2358|}
{2010212001|XXGvertex_oport_oport|3920|0|6278|0|{0|out|}2358|2359|}
{2010211001|XXGvertex_iport_iport|3921|0|6280|0|{0|in|}2358|2360|}
{2010214001|XXGiport_src_flow|3922|0|6282|0|{0|}2360|2354|}
{2010006001|XXGobject_psameas_object|3923|0|6283|0|{in_metadata|out0_metadata|0|0|}2358|2315|}
{2010006001|XXGobject_psameas_object|3924|0|6284|0|{out_metadata|out0_metadata|0|0|}2358|2315|}
{2010212001|XXGvertex_oport_oport|3925|0|6285|0|{0|out0|}2353|2361|}
{2010216002|XXGoport_binding_oport|3926|0|6287|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}2361|2359|}
{2010213001|XXGoport_dst_flow|3927|0|6288|0|{0|}2361|2344|}
{2010211001|XXGvertex_iport_iport|3928|0|6289|0|{0|in0|}2353|2362|}
{2010215002|XXGiport_binding_iport|3929|0|6291|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}2362|2357|}
{2010006001|XXGobject_psameas_object|3930|0|6292|0|{OutputLayout|Layout|0|0|}2353|2309|}
{2010601001|XXGgraph_vertex_vertex|3931|0|6293|0|{Sort_within_Groups|}2343|2363|}
{2010212001|XXGvertex_oport_oport|3932|0|6295|0|{0|out|}2363|2364|}
{2010213001|XXGoport_dst_flow|3933|0|6297|0|{0|}2364|2345|}
{2010211001|XXGvertex_iport_iport|3934|0|6298|0|{0|in|}2363|2365|}
{2010214001|XXGiport_src_flow|3935|0|6300|0|{0|}2365|2344|}
{2010006001|XXGobject_psameas_object|3936|0|6301|0|{Layout|Layout|0|0|}2363|2309|}
{2010006001|XXGobject_psameas_object|3937|0|6302|0|{in_metadata|out0_metadata|0|0|}2363|2315|}
{2010006001|XXGobject_psameas_object|3938|0|6303|0|{out_metadata|out0_metadata|0|0|}2363|2315|}
{2010212001|XXGvertex_oport_oport|3939|0|6304|0|{0|out0|}2343|2366|}
{2010216002|XXGoport_binding_oport|3940|0|6306|0|{.5|.5|{0|}14672|}2366|2347|}
{2010213001|XXGoport_dst_flow|3941|0|6307|0|{0|}2366|2296|}
{2010212001|XXGvertex_oport_oport|3942|0|6308|0|{1|out1|}2343|2367|}
{2010216002|XXGoport_binding_oport|3943|0|6310|0|{.5|.5|{0|}14673|}2367|2348|}
{2010213001|XXGoport_dst_flow|3944|0|6311|0|{0|}2367|2301|}
{2010211001|XXGvertex_iport_iport|3945|0|6312|0|{0|in0|}2343|2368|}
{2010215002|XXGiport_binding_iport|3946|0|6314|0|{.5|.5|{0|}14671|}2368|2362|}
{2010214001|XXGiport_src_flow|3947|0|6315|0|{0|}2368|2293|}
{2010601001|XXGgraph_vertex_vertex|3948|0|6316|0|{Sort_on_Adjusted_Natural_Keys|}2278|2369|}
{2010212001|XXGvertex_oport_oport|3949|0|6318|0|{0|out|}2369|2370|}
{2010213001|XXGoport_dst_flow|3950|0|6320|0|{0|}2370|2289|}
{2010211001|XXGvertex_iport_iport|3951|0|6321|0|{0|in|}2369|2371|}
{2010214001|XXGiport_src_flow|3952|0|6323|0|{0|}2371|2291|}
{2010006001|XXGobject_psameas_object|3953|0|6324|0|{Layout|Layout|0|0|}2369|2309|}
{2010006001|XXGobject_psameas_object|3954|0|6325|0|{in_metadata|out_metadata|0|0|}2369|2321|}
{2010006001|XXGobject_psameas_object|3955|0|6326|0|{out_metadata|out_metadata|0|0|}2369|2321|}
{2010601001|XXGgraph_vertex_vertex|3956|0|6327|0|{Trash_1|}2278|2372|}
{2010211001|XXGvertex_iport_iport|3957|0|6329|0|{0|in|}2372|2373|}
{2010214001|XXGiport_src_flow|3958|0|6331|0|{0|}2373|2299|}
{2010006001|XXGobject_psameas_object|3959|0|6332|0|{Layout|Layout|0|0|}2372|2309|}
{2010006001|XXGobject_psameas_object|3960|0|6333|0|{in_metadata|out_metadata|0|0|}2372|2321|}
{2010601001|XXGgraph_vertex_vertex|3961|0|6334|0|{Trash_2|}2278|2374|}
{2010211001|XXGvertex_iport_iport|3962|0|6336|0|{0|in|}2374|2375|}
{2010214001|XXGiport_src_flow|3963|0|6338|0|{0|}2375|2298|}
{2010006001|XXGobject_psameas_object|3964|0|6339|0|{Layout|Layout|0|0|}2374|2309|}
{2010006001|XXGobject_psameas_object|3965|0|6340|0|{in_metadata|out_metadata|0|0|}2374|2321|}
{2010601001|XXGgraph_vertex_vertex|3966|0|6341|0|{Trash_3|}2278|2376|}
{2010211001|XXGvertex_iport_iport|3967|0|6343|0|{0|in|}2376|2377|}
{2010214001|XXGiport_src_flow|3968|0|6345|0|{0|}2377|2301|}
{2010006001|XXGobject_psameas_object|3969|0|6346|0|{Layout|Layout|0|0|}2376|2309|}
{2010006001|XXGobject_psameas_object|3970|0|6347|0|{in_metadata|out0_metadata|0|0|}2376|2315|}
{2010212001|XXGvertex_oport_oport|3971|0|6348|0|{0|out0|}2278|2378|}
{2010216002|XXGoport_binding_oport|3972|0|6350|0|{.5|.5|{0|}14919|}2378|2338|}
{2010213001|XXGoport_dst_flow|3973|0|6351|0|{0|}2378|2275|}
{2010211001|XXGvertex_iport_iport|3974|0|6352|0|{0|in0|}2278|2379|}
{2010215002|XXGiport_binding_iport|3975|0|6354|0|{.5|.5|{0|}14918|}2379|2320|}
{2010214001|XXGiport_src_flow|3976|0|6355|0|{0|}2379|2273|}
{2010601001|XXGgraph_vertex_vertex|3977|0|6356|0|{Get_Last_Lookup_Record|}2268|2380|}
{2010605001|XXGgraph_legend_legend|3978|0|6358|0|{0|}2380|2381|}
{2010241001|XXGlegend_face_face|3979|0|6360|0|{}2381|2382|}
{2010605001|XXGgraph_legend_legend|3980|0|6362|0|{1|}2380|2383|}
{2010241001|XXGlegend_face_face|3981|0|6364|0|{}2383|2384|}
{2010605001|XXGgraph_legend_legend|3982|0|6366|0|{2|}2380|2385|}
{2010241001|XXGlegend_face_face|3983|0|6368|0|{}2385|2386|}
{2010605001|XXGgraph_legend_legend|3984|0|6370|0|{3|}2380|2387|}
{2010241001|XXGlegend_face_face|3985|0|6372|0|{}2387|2388|}
{2010604001|XXGgraph_flow_flow|3986|0|6374|0|{Flow_1|}2380|2389|}
{2010604001|XXGgraph_flow_flow|3987|0|6376|0|{Flow_2|}2380|2390|}
{2010604001|XXGgraph_flow_flow|3988|0|6378|0|{Flow_3|}2380|2391|}
{2010604001|XXGgraph_flow_flow|3989|0|6380|0|{Flow_4|}2380|2392|}
{2010604001|XXGgraph_flow_flow|3990|0|6382|0|{Flow_5|}2380|2393|}
{2010604001|XXGgraph_flow_flow|3991|0|6384|0|{Flow_6|}2380|2394|}
{2010604001|XXGgraph_flow_flow|3992|0|6386|0|{Flow_7|}2380|2395|}
{2010604001|XXGgraph_flow_flow|3993|0|6388|0|{Flow_8|}2380|2396|}
{2010604001|XXGgraph_flow_flow|3994|0|6390|0|{Flow_9|}2380|2397|}
{2010601001|XXGgraph_vertex_vertex|3995|0|6392|0|{Dedup_Sorted|}2380|2398|}
{2010212001|XXGvertex_oport_oport|3996|0|6394|0|{0|out|}2398|2399|}
{2010212001|XXGvertex_oport_oport|3997|0|6396|0|{1|dup|}2398|2400|}
{2010213001|XXGoport_dst_flow|3998|0|6398|0|{0|}2400|2396|}
{2010212001|XXGvertex_oport_oport|3999|0|6399|0|{2|reject|}2398|2401|}
{2010212001|XXGvertex_oport_oport|4000|0|6401|0|{3|error|}2398|2402|}
{2010212001|XXGvertex_oport_oport|4001|0|6403|0|{4|log|}2398|2403|}
{2010211001|XXGvertex_iport_iport|4002|0|6405|0|{0|in|}2398|2404|}
{2010214001|XXGiport_src_flow|4003|0|6407|0|{0|}2404|2391|}
{2010006001|XXGobject_psameas_object|4004|0|6408|0|{Layout|Layout|0|0|}2398|2309|}
{2010006001|XXGobject_psameas_object|4005|0|6409|0|{dup_metadata|out_metadata|0|0|}2398|2405|}
{2010212001|XXGvertex_oport_oport|4006|0|6411|0|{0|out|}2405|2406|}
{2010213001|XXGoport_dst_flow|4007|0|6413|0|{0|}2406|2390|}
{2010212001|XXGvertex_oport_oport|4008|0|6414|0|{1|deselect|}2405|2407|}
{2010213001|XXGoport_dst_flow|4009|0|6416|0|{0|}2407|2397|}
{2010212001|XXGvertex_oport_oport|4010|0|6417|0|{2|reject|}2405|2408|}
{2010212001|XXGvertex_oport_oport|4011|0|6419|0|{3|error|}2405|2409|}
{2010212001|XXGvertex_oport_oport|4012|0|6421|0|{4|log|}2405|2410|}
{2010211001|XXGvertex_iport_iport|4013|0|6423|0|{0|in|}2405|2411|}
{2010214001|XXGiport_src_flow|4014|0|6425|0|{0|}2411|2393|}
{2010006001|XXGobject_psameas_object|4015|0|6426|0|{Layout|Layout|0|0|}2405|2309|}
{2010006001|XXGobject_psameas_object|4016|0|6427|0|{deselect_metadata|out_metadata|0|0|}2405|2405|}
{2010006001|XXGobject_psameas_object|4017|0|6428|0|{in_metadata|out_metadata|0|0|}2405|2412|}
{2010212001|XXGvertex_oport_oport|4018|0|6430|0|{0|out|}2412|2413|}
{2010213001|XXGoport_dst_flow|4019|0|6432|0|{0|}2413|2414|}
{2010212001|XXGvertex_oport_oport|4020|0|6434|0|{1|deselect|}2412|2415|}
{2010213001|XXGoport_dst_flow|4021|0|6436|0|{0|}2415|2416|}
{2010212001|XXGvertex_oport_oport|4022|0|6438|0|{2|reject|}2412|2417|}
{2010212001|XXGvertex_oport_oport|4023|0|6440|0|{3|error|}2412|2418|}
{2010212001|XXGvertex_oport_oport|4024|0|6442|0|{4|log|}2412|2419|}
{2010211001|XXGvertex_iport_iport|4025|0|6444|0|{0|in|}2412|2420|}
{2010006001|XXGobject_psameas_object|4026|0|6446|0|{Layout|Layout|0|0|}2412|2309|}
{2010006001|XXGobject_psameas_object|4027|0|6447|0|{in_metadata|out0_metadata|0|0|}2412|2421|}
{2010212001|XXGvertex_oport_oport|4028|0|6449|0|{0|out0|}2421|2422|}
{2010213001|XXGoport_dst_flow|4029|0|6451|0|{0|}2422|2392|}
{2010212001|XXGvertex_oport_oport|4030|0|6452|0|{1|reject0|}2421|2423|}
{2010212001|XXGvertex_oport_oport|4031|0|6454|0|{2|error0|}2421|2424|}
{2010212001|XXGvertex_oport_oport|4032|0|6456|0|{3|log|}2421|2425|}
{2010211001|XXGvertex_iport_iport|4033|0|6458|0|{0|in|}2421|2426|}
{2010214001|XXGiport_src_flow|4034|0|6460|0|{0|}2426|2394|}
{2010006001|XXGobject_psameas_object|4035|0|6461|0|{Layout|Layout|0|0|}2421|2309|}
{2010006001|XXGobject_psameas_object|4036|0|6462|0|{in_metadata|out0_metadata|0|0|}2421|2427|}
{2010212001|XXGvertex_oport_oport|4037|0|6464|0|{0|out0|}2427|2428|}
{2010213001|XXGoport_dst_flow|4038|0|6466|0|{0|}2428|2389|}
{2010212001|XXGvertex_oport_oport|4039|0|6467|0|{1|reject0|}2427|2429|}
{2010212001|XXGvertex_oport_oport|4040|0|6469|0|{2|error0|}2427|2430|}
{2010212001|XXGvertex_oport_oport|4041|0|6471|0|{3|log|}2427|2431|}
{2010211001|XXGvertex_iport_iport|4042|0|6473|0|{0|in|}2427|2432|}
{2010006001|XXGobject_psameas_object|4043|0|6475|0|{Layout|Layout|0|0|}2427|242|}
{2010006001|XXGobject_psameas_object|4044|0|6476|0|{in_metadata|out3_metadata|0|0|}2427|242|}
{2010006001|XXGobject_psameas_object|4045|0|6477|0|{reject0_metadata|out3_metadata|0|0|}2427|242|}
{2010006001|XXGobject_psameas_object|4046|0|6478|0|{reject0_metadata|out0_metadata|0|0|}2421|2427|}
{2010006001|XXGobject_psameas_object|4047|0|6479|0|{reject_metadata|out0_metadata|0|0|}2412|2421|}
{2010006001|XXGobject_psameas_object|4048|0|6480|0|{reject_metadata|out_metadata|0|0|}2405|2412|}
{2010006001|XXGobject_psameas_object|4049|0|6481|0|{in_metadata|out_metadata|0|0|}2398|2405|}
{2010006001|XXGobject_psameas_object|4050|0|6482|0|{out_metadata|out_metadata|0|0|}2398|2405|}
{2010006001|XXGobject_psameas_object|4051|0|6483|0|{reject_metadata|out_metadata|0|0|}2398|2405|}
{2010601001|XXGgraph_vertex_vertex|4052|0|6484|0|{FBE_filter_matching_lkp_record|}2380|2405|}
{2010601001|XXGgraph_vertex_vertex|4053|0|6485|0|{RFMT_Get_Hash_On_NK|}2380|2427|}
{2010601001|XXGgraph_vertex_vertex|4054|0|6486|0|{RFMT_Lookup_with_IDS|}2380|2421|}
{2010601001|XXGgraph_vertex_vertex|4055|0|6487|0|{Sort_De_dup|}2380|2433|}
{2010604001|XXGgraph_flow_flow|4056|0|6489|0|{Flow_10|}2433|2434|}
{2010604001|XXGgraph_flow_flow|4057|0|6491|0|{Flow_4|}2433|2435|}
{2010244001|XXGflow_watcher_watcher|4058|0|6493|0|{}2435|2436|}
{2010601001|XXGgraph_vertex_vertex|4059|0|6495|0|{Dedup_Sorted_1|}2433|2437|}
{2010212001|XXGvertex_oport_oport|4060|0|6497|0|{0|out|}2437|2438|}
{2010212001|XXGvertex_oport_oport|4061|0|6499|0|{1|dup|}2437|2439|}
{2010212001|XXGvertex_oport_oport|4062|0|6501|0|{2|reject|}2437|2440|}
{2010212001|XXGvertex_oport_oport|4063|0|6503|0|{3|error|}2437|2441|}
{2010212001|XXGvertex_oport_oport|4064|0|6505|0|{4|log|}2437|2442|}
{2010211001|XXGvertex_iport_iport|4065|0|6507|0|{0|in|}2437|2443|}
{2010214001|XXGiport_src_flow|4066|0|6509|0|{0|}2443|2434|}
{2010006001|XXGobject_psameas_object|4067|0|6510|0|{Layout|Layout|0|0|}2437|2309|}
{2010006001|XXGobject_psameas_object|4068|0|6511|0|{dup_metadata|out0_metadata|0|0|}2437|2427|}
{2010006001|XXGobject_psameas_object|4069|0|6512|0|{in_metadata|out0_metadata|0|0|}2437|2427|}
{2010006001|XXGobject_psameas_object|4070|0|6513|0|{out_metadata|out0_metadata|0|0|}2437|2427|}
{2010006001|XXGobject_psameas_object|4071|0|6514|0|{reject_metadata|out0_metadata|0|0|}2437|2427|}
{2010601001|XXGgraph_vertex_vertex|4072|0|6515|0|{PBKS_dxf_hk_part1_|}2433|2444|}
{2010604001|XXGgraph_flow_flow|4073|0|6517|0|{Flow_1|}2444|2445|}
{2010601001|XXGgraph_vertex_vertex|4074|0|6519|0|{Partition_by_Key|}2444|2446|}
{2010212001|XXGvertex_oport_oport|4075|0|6521|0|{0|out|}2446|2447|}
{2010213001|XXGoport_dst_flow|4076|0|6523|0|{0|}2447|2445|}
{2010211001|XXGvertex_iport_iport|4077|0|6524|0|{0|in|}2446|2448|}
{2010006001|XXGobject_psameas_object|4078|0|6526|0|{in_metadata|out0_metadata|0|0|}2446|2427|}
{2010006001|XXGobject_psameas_object|4079|0|6527|0|{out_metadata|out0_metadata|0|0|}2446|2427|}
{2010601001|XXGgraph_vertex_vertex|4080|0|6528|0|{Sort|}2444|2449|}
{2010212001|XXGvertex_oport_oport|4081|0|6530|0|{0|out|}2449|2450|}
{2010211001|XXGvertex_iport_iport|4082|0|6532|0|{0|in|}2449|2451|}
{2010214001|XXGiport_src_flow|4083|0|6534|0|{0|}2451|2445|}
{2010006001|XXGobject_psameas_object|4084|0|6535|0|{in_metadata|out0_metadata|0|0|}2449|2427|}
{2010006001|XXGobject_psameas_object|4085|0|6536|0|{out_metadata|out0_metadata|0|0|}2449|2427|}
{2010212001|XXGvertex_oport_oport|4086|0|6537|0|{0|out0|}2444|2452|}
{2010216002|XXGoport_binding_oport|4087|0|6539|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}2452|2450|}
{2010213001|XXGoport_dst_flow|4088|0|6540|0|{0|}2452|2435|}
{2010211001|XXGvertex_iport_iport|4089|0|6541|0|{0|in0|}2444|2453|}
{2010215002|XXGiport_binding_iport|4090|0|6543|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}2453|2448|}
{2010006001|XXGobject_psameas_object|4091|0|6544|0|{InputLayout|Layout|0|0|}2444|242|}
{2010006001|XXGobject_psameas_object|4092|0|6545|0|{OutputLayout|Layout|0|0|}2444|2309|}
{2010601001|XXGgraph_vertex_vertex|4093|0|6546|0|{Sort_within_Groups_1|}2433|2454|}
{2010212001|XXGvertex_oport_oport|4094|0|6548|0|{0|out|}2454|2455|}
{2010213001|XXGoport_dst_flow|4095|0|6550|0|{0|}2455|2434|}
{2010211001|XXGvertex_iport_iport|4096|0|6551|0|{0|in|}2454|2456|}
{2010214001|XXGiport_src_flow|4097|0|6553|0|{0|}2456|2435|}
{2010006001|XXGobject_psameas_object|4098|0|6554|0|{Layout|Layout|0|0|}2454|2309|}
{2010006001|XXGobject_psameas_object|4099|0|6555|0|{in_metadata|out0_metadata|0|0|}2454|2427|}
{2010006001|XXGobject_psameas_object|4100|0|6556|0|{out_metadata|out0_metadata|0|0|}2454|2427|}
{2010212001|XXGvertex_oport_oport|4101|0|6557|0|{0|out0|}2433|2457|}
{2010216002|XXGoport_binding_oport|4102|0|6559|0|{.5|.5|{0|}7792|}2457|2438|}
{2010213001|XXGoport_dst_flow|4103|0|6560|0|{0|}2457|2394|}
{2010212001|XXGvertex_oport_oport|4104|0|6561|0|{1|out1|}2433|2458|}
{2010216002|XXGoport_binding_oport|4105|0|6563|0|{.5|.5|{0|}7793|}2458|2439|}
{2010213001|XXGoport_dst_flow|4106|0|6564|0|{0|}2458|2395|}
{2010211001|XXGvertex_iport_iport|4107|0|6565|0|{0|in0|}2433|2459|}
{2010215002|XXGiport_binding_iport|4108|0|6567|0|{.5|.5|{0|}7791|}2459|2453|}
{2010214001|XXGiport_src_flow|4109|0|6568|0|{0|}2459|2389|}
{2010601001|XXGgraph_vertex_vertex|4110|0|6569|0|{Sort_within_Groups|}2380|2460|}
{2010212001|XXGvertex_oport_oport|4111|0|6571|0|{0|out|}2460|2461|}
{2010213001|XXGoport_dst_flow|4112|0|6573|0|{0|}2461|2391|}
{2010211001|XXGvertex_iport_iport|4113|0|6574|0|{0|in|}2460|2462|}
{2010214001|XXGiport_src_flow|4114|0|6576|0|{0|}2462|2390|}
{2010006001|XXGobject_psameas_object|4115|0|6577|0|{Layout|Layout|0|0|}2460|2309|}
{2010006001|XXGobject_psameas_object|4116|0|6578|0|{in_metadata|out_metadata|0|0|}2460|2405|}
{2010006001|XXGobject_psameas_object|4117|0|6579|0|{out_metadata|out_metadata|0|0|}2460|2405|}
{2010601001|XXGgraph_vertex_vertex|4118|0|6580|0|{Trash|}2380|2463|}
{2010211001|XXGvertex_iport_iport|4119|0|6582|0|{0|in|}2463|2464|}
{2010214001|XXGiport_src_flow|4120|0|6584|0|{0|}2464|2395|}
{2010006001|XXGobject_psameas_object|4121|0|6585|0|{Layout|Layout|0|0|}2463|2309|}
{2010006001|XXGobject_psameas_object|4122|0|6586|0|{in_metadata|out0_metadata|0|0|}2463|2427|}
{2010601001|XXGgraph_vertex_vertex|4123|0|6587|0|{Trash_1|}2380|2465|}
{2010211001|XXGvertex_iport_iport|4124|0|6589|0|{0|in|}2465|2466|}
{2010214001|XXGiport_src_flow|4125|0|6591|0|{0|}2466|2396|}
{2010006001|XXGobject_psameas_object|4126|0|6592|0|{Layout|Layout|0|0|}2465|2309|}
{2010006001|XXGobject_psameas_object|4127|0|6593|0|{in_metadata|out_metadata|0|0|}2465|2405|}
{2010601001|XXGgraph_vertex_vertex|4128|0|6594|0|{Trash_2|}2380|2467|}
{2010211001|XXGvertex_iport_iport|4129|0|6596|0|{0|in|}2467|2468|}
{2010214001|XXGiport_src_flow|4130|0|6598|0|{0|}2468|2397|}
{2010006001|XXGobject_psameas_object|4131|0|6599|0|{Layout|Layout|0|0|}2467|2309|}
{2010006001|XXGobject_psameas_object|4132|0|6600|0|{in_metadata|out_metadata|0|0|}2467|2405|}
{2010601001|XXGgraph_vertex_vertex|4133|0|6601|0|{Two_Step_Lookup|}2380|2469|}
{2010605001|XXGgraph_legend_legend|4134|0|6603|0|{0|}2469|2470|}
{2010241001|XXGlegend_face_face|4135|0|6605|0|{}2470|2471|}
{2010604001|XXGgraph_flow_flow|4136|0|6607|0|{Flow_1|}2469|2416|}
{2010604001|XXGgraph_flow_flow|4137|0|6608|0|{Flow_2|}2469|2472|}
{2010604001|XXGgraph_flow_flow|4138|0|6610|0|{Flow_3|}2469|2414|}
{2010604001|XXGgraph_flow_flow|4139|0|6611|0|{Flow_4|}2469|2473|}
{2010604001|XXGgraph_flow_flow|4140|0|6613|0|{Flow_5|}2469|2474|}
{2010604001|XXGgraph_flow_flow|4141|0|6615|0|{Flow_6|}2469|2475|}
{2010601001|XXGgraph_vertex_vertex|4142|0|6617|0|{FBE_Pass_Only_Matching_Rec|}2469|2476|}
{2010212001|XXGvertex_oport_oport|4143|0|6619|0|{0|out|}2476|2477|}
{2010213001|XXGoport_dst_flow|4144|0|6621|0|{0|}2477|2474|}
{2010212001|XXGvertex_oport_oport|4145|0|6622|0|{1|deselect|}2476|2478|}
{2010213001|XXGoport_dst_flow|4146|0|6624|0|{0|}2478|2475|}
{2010212001|XXGvertex_oport_oport|4147|0|6625|0|{2|reject|}2476|2479|}
{2010212001|XXGvertex_oport_oport|4148|0|6627|0|{3|error|}2476|2480|}
{2010212001|XXGvertex_oport_oport|4149|0|6629|0|{4|log|}2476|2481|}
{2010211001|XXGvertex_iport_iport|4150|0|6631|0|{0|in|}2476|2482|}
{2010214001|XXGiport_src_flow|4151|0|6633|0|{0|}2482|2473|}
{2010006001|XXGobject_psameas_object|4152|0|6634|0|{Layout|Layout|0|0|}2476|2309|}
{2010006001|XXGobject_psameas_object|4153|0|6635|0|{deselect_metadata|out_metadata|0|0|}2476|2412|}
{2010006001|XXGobject_psameas_object|4154|0|6636|0|{in_metadata|out0_metadata|0|0|}2476|2483|}
{2010212001|XXGvertex_oport_oport|4155|0|6638|0|{0|out0|}2483|2484|}
{2010213001|XXGoport_dst_flow|4156|0|6640|0|{0|}2484|2473|}
{2010212001|XXGvertex_oport_oport|4157|0|6641|0|{1|reject0|}2483|2485|}
{2010212001|XXGvertex_oport_oport|4158|0|6643|0|{2|error0|}2483|2486|}
{2010212001|XXGvertex_oport_oport|4159|0|6645|0|{3|log|}2483|2487|}
{2010211001|XXGvertex_iport_iport|4160|0|6647|0|{0|in|}2483|2488|}
{2010214001|XXGiport_src_flow|4161|0|6649|0|{0|}2488|2472|}
{2010006001|XXGobject_psameas_object|4162|0|6650|0|{Layout|Layout|0|0|}2483|2309|}
{2010006001|XXGobject_psameas_object|4163|0|6651|0|{in_metadata|out0_metadata|0|0|}2483|2489|}
{2010212001|XXGvertex_oport_oport|4164|0|6653|0|{0|out0|}2489|2490|}
{2010213001|XXGoport_dst_flow|4165|0|6655|0|{0|}2490|2472|}
{2010212001|XXGvertex_oport_oport|4166|0|6656|0|{1|reject0|}2489|2491|}
{2010212001|XXGvertex_oport_oport|4167|0|6658|0|{2|error0|}2489|2492|}
{2010212001|XXGvertex_oport_oport|4168|0|6660|0|{3|log|}2489|2493|}
{2010211001|XXGvertex_iport_iport|4169|0|6662|0|{0|in|}2489|2494|}
{2010214001|XXGiport_src_flow|4170|0|6664|0|{0|}2494|2416|}
{2010006001|XXGobject_psameas_object|4171|0|6665|0|{Layout|Layout|0|0|}2489|2309|}
{2010006001|XXGobject_psameas_object|4172|0|6666|0|{in_metadata|deselect_metadata|0|0|}2489|2412|}
{2010006001|XXGobject_psameas_object|4173|0|6667|0|{reject0_metadata|deselect_metadata|0|0|}2489|2412|}
{2010006001|XXGobject_psameas_object|4174|0|6668|0|{reject0_metadata|out0_metadata|0|0|}2483|2489|}
{2010006001|XXGobject_psameas_object|4175|0|6669|0|{out_metadata|out_metadata|0|0|}2476|2412|}
{2010006001|XXGobject_psameas_object|4176|0|6670|0|{reject_metadata|out0_metadata|0|0|}2476|2483|}
{2010601001|XXGgraph_vertex_vertex|4177|0|6671|0|{FBE_filter_matching_lkp_record|}2469|2412|}
{2010601001|XXGgraph_vertex_vertex|4178|0|6672|0|{Merge|}2469|2495|}
{2010212001|XXGvertex_oport_oport|4179|0|6674|0|{0|out|}2495|2496|}
{2010211001|XXGvertex_iport_iport|4180|0|6676|0|{0|in|}2495|2497|}
{2010214001|XXGiport_src_flow|4181|0|6678|0|{0|}2497|2414|}
{2010214001|XXGiport_src_flow|4182|0|6679|0|{1|}2497|2474|}
{2010006001|XXGobject_psameas_object|4183|0|6680|0|{Layout|Layout|0|0|}2495|2309|}
{2010006001|XXGobject_psameas_object|4184|0|6681|0|{in_metadata|out_metadata|0|0|}2495|2412|}
{2010006001|XXGobject_psameas_object|4185|0|6682|0|{out_metadata|out_metadata|0|0|}2495|2412|}
{2010601001|XXGgraph_vertex_vertex|4186|0|6683|0|{No_Match_Record_In_Second_Pass|}2469|2498|}
{2010211001|XXGvertex_iport_iport|4187|0|6685|0|{0|in|}2498|2499|}
{2010214001|XXGiport_src_flow|4188|0|6687|0|{0|}2499|2475|}
{2010006001|XXGobject_psameas_object|4189|0|6688|0|{Layout|Layout|0|0|}2498|2309|}
{2010006001|XXGobject_psameas_object|4190|0|6689|0|{in_metadata|out_metadata|0|0|}2498|2412|}
{2010601001|XXGgraph_vertex_vertex|4191|0|6690|0|{RFMT_Lookup_with_IDS_Archive_|}2469|2483|}
{2010601001|XXGgraph_vertex_vertex|4192|0|6691|0|{RFMT_Pass_only_Hash_Keys|}2469|2489|}
{2010212001|XXGvertex_oport_oport|4193|0|6692|0|{0|out0|}2469|2500|}
{2010216002|XXGoport_binding_oport|4194|0|6694|0|{.5|.5|{0|}15500|}2500|2496|}
{2010213001|XXGoport_dst_flow|4195|0|6695|0|{0|}2500|2393|}
{2010211001|XXGvertex_iport_iport|4196|0|6696|0|{0|in0|}2469|2501|}
{2010215002|XXGiport_binding_iport|4197|0|6698|0|{.5|.5|{0|}15499|}2501|2420|}
{2010214001|XXGiport_src_flow|4198|0|6699|0|{0|}2501|2392|}
{2010212001|XXGvertex_oport_oport|4199|0|6700|0|{0|out0|}2380|2502|}
{2010216002|XXGoport_binding_oport|4200|0|6702|0|{.5|.5|{0|}15515|}2502|2399|}
{2010213001|XXGoport_dst_flow|4201|0|6703|0|{0|}2502|2276|}
{2010211001|XXGvertex_iport_iport|4202|0|6704|0|{0|in1|}2380|2503|}
{2010215002|XXGiport_binding_iport|4203|0|6706|0|{.5|.5|{0|}15514|}2503|2432|}
{2010214001|XXGiport_src_flow|4204|0|6707|0|{0|}2503|2274|}
{2010601001|XXGgraph_vertex_vertex|4205|0|6708|0|{Merge|}2268|2504|}
{2010212001|XXGvertex_oport_oport|4206|0|6710|0|{0|out|}2504|2505|}
{2010211001|XXGvertex_iport_iport|4207|0|6712|0|{0|in|}2504|2506|}
{2010214001|XXGiport_src_flow|4208|0|6714|0|{0|}2506|2277|}
{2010006001|XXGobject_psameas_object|4209|0|6715|0|{Layout|Layout|0|0|}2504|165|}
{2010006001|XXGobject_psameas_object|4210|0|6716|0|{in_metadata|write_metadata|0|0|}2504|165|}
{2010006001|XXGobject_psameas_object|4211|0|6717|0|{out_metadata|write_metadata|0|0|}2504|165|}
{2010601001|XXGgraph_vertex_vertex|4212|0|6718|0|{Replicate|}2268|2507|}
{2010212001|XXGvertex_oport_oport|4213|0|6720|0|{0|out|}2507|2508|}
{2010213001|XXGoport_dst_flow|4214|0|6722|0|{0|}2508|2273|}
{2010213001|XXGoport_dst_flow|4215|0|6723|0|{1|}2508|2274|}
{2010211001|XXGvertex_iport_iport|4216|0|6724|0|{0|in|}2507|2509|}
{2010006001|XXGobject_psameas_object|4217|0|6726|0|{Layout|Layout|0|0|}2507|242|}
{2010006001|XXGobject_psameas_object|4218|0|6727|0|{in_metadata|out3_metadata|0|0|}2507|242|}
{2010006001|XXGobject_psameas_object|4219|0|6728|0|{out_metadata|out3_metadata|0|0|}2507|242|}
{2010601001|XXGgraph_vertex_vertex|4220|0|6729|0|{Replicate_1|}2268|2510|}
{2010212001|XXGvertex_oport_oport|4221|0|6731|0|{0|out|}2510|2511|}
{2010213001|XXGoport_dst_flow|4222|0|6733|0|{0|}2511|2277|}
{2010211001|XXGvertex_iport_iport|4223|0|6734|0|{0|in|}2510|2512|}
{2010214001|XXGiport_src_flow|4224|0|6736|0|{0|}2512|2275|}
{2010214001|XXGiport_src_flow|4225|0|6737|0|{1|}2512|2276|}
{2010006001|XXGobject_psameas_object|4226|0|6738|0|{Layout|Layout|0|0|}2510|2309|}
{2010006001|XXGobject_psameas_object|4227|0|6739|0|{in_metadata|out_metadata|0|0|}2510|2405|}
{2010006001|XXGobject_psameas_object|4228|0|6740|0|{out_metadata|out_metadata|0|0|}2510|2405|}
{2010212001|XXGvertex_oport_oport|4229|0|6741|0|{0|out0|}2268|2513|}
{2010216002|XXGoport_binding_oport|4230|0|6743|0|{.5|.5|{0|}7802|}2513|2505|}
{2010213001|XXGoport_dst_flow|4231|0|6744|0|{0|}2513|152|}
{2010211001|XXGvertex_iport_iport|4232|0|6745|0|{0|in0|}2268|2514|}
{2010215002|XXGiport_binding_iport|4233|0|6747|0|{.5|.5|{0|}7801|}2514|2509|}
{2010007001|XXGobject_proto_object|4234|0|6748|0|{}2268|2515|}
{2010605001|XXGgraph_legend_legend|4235|0|6750|0|{0|}2515|2516|}
{2010241001|XXGlegend_face_face|4236|0|6752|0|{}2516|2517|}
{2010605001|XXGgraph_legend_legend|4237|0|6754|0|{1|}2515|2518|}
{2010241001|XXGlegend_face_face|4238|0|6756|0|{}2518|2519|}
{2010604001|XXGgraph_flow_flow|4239|0|6758|0|{Flow_1|}2515|2520|}
{2010604001|XXGgraph_flow_flow|4240|0|6760|0|{Flow_2|}2515|2521|}
{2010604001|XXGgraph_flow_flow|4241|0|6762|0|{Flow_3|}2515|2522|}
{2010604001|XXGgraph_flow_flow|4242|0|6764|0|{Flow_4|}2515|2523|}
{2010604001|XXGgraph_flow_flow|4243|0|6766|0|{Flow_5|}2515|2524|}
{2010601001|XXGgraph_vertex_vertex|4244|0|6768|0|{Get_All_LookUp_Record|}2515|2525|}
{2010605001|XXGgraph_legend_legend|4245|0|6770|0|{0|}2525|2526|}
{2010241001|XXGlegend_face_face|4246|0|6772|0|{}2526|2527|}
{2010605001|XXGgraph_legend_legend|4247|0|6774|0|{1|}2525|2528|}
{2010241001|XXGlegend_face_face|4248|0|6776|0|{}2528|2529|}
{2010605001|XXGgraph_legend_legend|4249|0|6778|0|{2|}2525|2530|}
{2010241001|XXGlegend_face_face|4250|0|6780|0|{}2530|2531|}
{2010605001|XXGgraph_legend_legend|4251|0|6782|0|{3|}2525|2532|}
{2010241001|XXGlegend_face_face|4252|0|6784|0|{}2532|2533|}
{2010605001|XXGgraph_legend_legend|4253|0|6786|0|{4|}2525|2534|}
{2010241001|XXGlegend_face_face|4254|0|6788|0|{}2534|2535|}
{2010604001|XXGgraph_flow_flow|4255|0|6790|0|{Flow_1|}2525|2536|}
{2010604001|XXGgraph_flow_flow|4256|0|6792|0|{Flow_10|}2525|2537|}
{2010604001|XXGgraph_flow_flow|4257|0|6794|0|{Flow_11|}2525|2538|}
{2010604001|XXGgraph_flow_flow|4258|0|6796|0|{Flow_12|}2525|2539|}
{2010604001|XXGgraph_flow_flow|4259|0|6798|0|{Flow_18|}2525|2540|}
{2010604001|XXGgraph_flow_flow|4260|0|6800|0|{Flow_2|}2525|2541|}
{2010604001|XXGgraph_flow_flow|4261|0|6802|0|{Flow_3|}2525|2542|}
{2010604001|XXGgraph_flow_flow|4262|0|6804|0|{Flow_4|}2525|2543|}
{2010604001|XXGgraph_flow_flow|4263|0|6806|0|{Flow_5|}2525|2544|}
{2010604001|XXGgraph_flow_flow|4264|0|6808|0|{Flow_6|}2525|2545|}
{2010604001|XXGgraph_flow_flow|4265|0|6810|0|{Flow_7|}2525|2546|}
{2010604001|XXGgraph_flow_flow|4266|0|6812|0|{Flow_8|}2525|2547|}
{2010604001|XXGgraph_flow_flow|4267|0|6814|0|{Flow_9|}2525|2548|}
{2010601001|XXGgraph_vertex_vertex|4268|0|6816|0|{Dedup_Sorted|}2525|2549|}
{2010212001|XXGvertex_oport_oport|4269|0|6818|0|{0|out|}2549|2550|}
{2010213001|XXGoport_dst_flow|4270|0|6820|0|{0|}2550|2541|}
{2010212001|XXGvertex_oport_oport|4271|0|6821|0|{1|dup|}2549|2551|}
{2010213001|XXGoport_dst_flow|4272|0|6823|0|{0|}2551|2545|}
{2010212001|XXGvertex_oport_oport|4273|0|6824|0|{2|reject|}2549|2552|}
{2010212001|XXGvertex_oport_oport|4274|0|6826|0|{3|error|}2549|2553|}
{2010212001|XXGvertex_oport_oport|4275|0|6828|0|{4|log|}2549|2554|}
{2010211001|XXGvertex_iport_iport|4276|0|6830|0|{0|in|}2549|2555|}
{2010214001|XXGiport_src_flow|4277|0|6832|0|{0|}2555|2536|}
{2010007001|XXGobject_proto_object|4278|0|6833|0|{}2549|2556|}
{2010212001|XXGvertex_oport_oport|4279|0|6835|0|{0|out|}2556|2557|}
{2010006001|XXGobject_psameas_object|4280|0|6837|0|{metadata|out_metadata|1|0|}2557|2556|}
{2010212001|XXGvertex_oport_oport|4281|0|6838|0|{1|dup|}2556|2558|}
{2010006001|XXGobject_psameas_object|4282|0|6840|0|{metadata|dup_metadata|1|0|}2558|2556|}
{2010212001|XXGvertex_oport_oport|4283|0|6841|0|{2|reject|}2556|2559|}
{2010006001|XXGobject_psameas_object|4284|0|6843|0|{metadata|reject_metadata|1|0|}2559|2556|}
{2010212001|XXGvertex_oport_oport|4285|0|6844|0|{3|error|}2556|2560|}
{2010006001|XXGobject_psameas_object|4286|0|6846|0|{metadata|error_metadata|1|0|}2560|2556|}
{2010212001|XXGvertex_oport_oport|4287|0|6847|0|{4|log|}2556|2561|}
{2010006001|XXGobject_psameas_object|4288|0|6849|0|{metadata|log_metadata|1|0|}2561|2556|}
{2010211001|XXGvertex_iport_iport|4289|0|6850|0|{0|in|}2556|2562|}
{2010006001|XXGobject_psameas_object|4290|0|6852|0|{metadata|in_metadata|1|0|}2562|2556|}
{2010601001|XXGgraph_vertex_vertex|4291|0|6853|0|{FBE_Filter_match_records|}2525|2563|}
{2010212001|XXGvertex_oport_oport|4292|0|6855|0|{0|out|}2563|2564|}
{2010213001|XXGoport_dst_flow|4293|0|6857|0|{0|}2564|2538|}
{2010212001|XXGvertex_oport_oport|4294|0|6858|0|{1|deselect|}2563|2565|}
{2010213001|XXGoport_dst_flow|4295|0|6860|0|{0|}2565|2546|}
{2010212001|XXGvertex_oport_oport|4296|0|6861|0|{2|reject|}2563|2566|}
{2010212001|XXGvertex_oport_oport|4297|0|6863|0|{3|error|}2563|2567|}
{2010212001|XXGvertex_oport_oport|4298|0|6865|0|{4|log|}2563|2568|}
{2010211001|XXGvertex_iport_iport|4299|0|6867|0|{0|in|}2563|2569|}
{2010214001|XXGiport_src_flow|4300|0|6869|0|{0|}2569|2547|}
{2010007001|XXGobject_proto_object|4301|0|6870|0|{}2563|2570|}
{2010212001|XXGvertex_oport_oport|4302|0|6872|0|{0|out|}2570|2571|}
{2010006001|XXGobject_psameas_object|4303|0|6874|0|{metadata|out_metadata|1|0|}2571|2570|}
{2010212001|XXGvertex_oport_oport|4304|0|6875|0|{1|deselect|}2570|2572|}
{2010006001|XXGobject_psameas_object|4305|0|6877|0|{metadata|deselect_metadata|1|0|}2572|2570|}
{2010212001|XXGvertex_oport_oport|4306|0|6878|0|{2|reject|}2570|2573|}
{2010006001|XXGobject_psameas_object|4307|0|6880|0|{metadata|reject_metadata|1|0|}2573|2570|}
{2010212001|XXGvertex_oport_oport|4308|0|6881|0|{3|error|}2570|2574|}
{2010006001|XXGobject_psameas_object|4309|0|6883|0|{metadata|error_metadata|1|0|}2574|2570|}
{2010212001|XXGvertex_oport_oport|4310|0|6884|0|{4|log|}2570|2575|}
{2010006001|XXGobject_psameas_object|4311|0|6886|0|{metadata|log_metadata|1|0|}2575|2570|}
{2010211001|XXGvertex_iport_iport|4312|0|6887|0|{0|in|}2570|2576|}
{2010006001|XXGobject_psameas_object|4313|0|6889|0|{metadata|in_metadata|1|0|}2576|2570|}
{2010601001|XXGgraph_vertex_vertex|4314|0|6890|0|{Get_Hash_on_SRC_NK|}2525|2577|}
{2010212001|XXGvertex_oport_oport|4315|0|6892|0|{0|out0|}2577|2578|}
{2010213001|XXGoport_dst_flow|4316|0|6894|0|{0|}2578|2540|}
{2010212001|XXGvertex_oport_oport|4317|0|6895|0|{1|reject0|}2577|2579|}
{2010212001|XXGvertex_oport_oport|4318|0|6897|0|{2|error0|}2577|2580|}
{2010212001|XXGvertex_oport_oport|4319|0|6899|0|{3|log|}2577|2581|}
{2010211001|XXGvertex_iport_iport|4320|0|6901|0|{0|in|}2577|2582|}
{2010007001|XXGobject_proto_object|4321|0|6903|0|{}2577|2583|}
{2010212001|XXGvertex_oport_oport|4322|0|6905|0|{0|out0|}2583|2584|}
{2010006001|XXGobject_psameas_object|4323|0|6907|0|{metadata|out0_metadata|1|0|}2584|2583|}
{2010006001|XXGobject_psameas_object|4324|0|6908|0|{transform0|transform0|1|0|}2584|2583|}
{2010212001|XXGvertex_oport_oport|4325|0|6909|0|{1|reject0|}2583|2585|}
{2010006001|XXGobject_psameas_object|4326|0|6911|0|{metadata|reject0_metadata|1|0|}2585|2583|}
{2010212001|XXGvertex_oport_oport|4327|0|6912|0|{2|error0|}2583|2586|}
{2010006001|XXGobject_psameas_object|4328|0|6914|0|{metadata|error0_metadata|1|0|}2586|2583|}
{2010212001|XXGvertex_oport_oport|4329|0|6915|0|{3|log|}2583|2587|}
{2010006001|XXGobject_psameas_object|4330|0|6917|0|{metadata|log_metadata|1|0|}2587|2583|}
{2010211001|XXGvertex_iport_iport|4331|0|6918|0|{0|in|}2583|2588|}
{2010006001|XXGobject_psameas_object|4332|0|6920|0|{metadata|in_metadata|1|0|}2588|2583|}
{2010601001|XXGgraph_vertex_vertex|4333|0|6921|0|{Merge|}2525|2589|}
{2010212001|XXGvertex_oport_oport|4334|0|6923|0|{0|out|}2589|2590|}
{2010213001|XXGoport_dst_flow|4335|0|6925|0|{0|}2590|2547|}
{2010211001|XXGvertex_iport_iport|4336|0|6926|0|{0|in|}2589|2591|}
{2010214001|XXGiport_src_flow|4337|0|6928|0|{0|}2591|2542|}
{2010214001|XXGiport_src_flow|4338|0|6929|0|{1|}2591|2539|}
{2010007001|XXGobject_proto_object|4339|0|6930|0|{}2589|2592|}
{2010212001|XXGvertex_oport_oport|4340|0|6932|0|{0|out|}2592|2593|}
{2010006001|XXGobject_psameas_object|4341|0|6934|0|{metadata|out_metadata|1|0|}2593|2592|}
{2010211001|XXGvertex_iport_iport|4342|0|6935|0|{0|in|}2592|2594|}
{2010006001|XXGobject_psameas_object|4343|0|6937|0|{metadata|in_metadata|1|0|}2594|2592|}
{2010601001|XXGgraph_vertex_vertex|4344|0|6938|0|{Normalize_Get_all_records_from_Archive_Lkp|}2525|2595|}
{2010212001|XXGvertex_oport_oport|4345|0|6940|0|{0|out|}2595|2596|}
{2010213001|XXGoport_dst_flow|4346|0|6942|0|{0|}2596|2539|}
{2010212001|XXGvertex_oport_oport|4347|0|6943|0|{1|reject|}2595|2597|}
{2010212001|XXGvertex_oport_oport|4348|0|6945|0|{2|error|}2595|2598|}
{2010212001|XXGvertex_oport_oport|4349|0|6947|0|{3|log|}2595|2599|}
{2010211001|XXGvertex_iport_iport|4350|0|6949|0|{0|in|}2595|2600|}
{2010214001|XXGiport_src_flow|4351|0|6951|0|{0|}2600|2537|}
{2010007001|XXGobject_proto_object|4352|0|6952|0|{}2595|2601|}
{2010212001|XXGvertex_oport_oport|4353|0|6954|0|{0|out|}2601|2602|}
{2010006001|XXGobject_psameas_object|4354|0|6956|0|{metadata|out_metadata|1|0|}2602|2601|}
{2010212001|XXGvertex_oport_oport|4355|0|6957|0|{1|reject|}2601|2603|}
{2010006001|XXGobject_psameas_object|4356|0|6959|0|{metadata|reject_metadata|1|0|}2603|2601|}
{2010212001|XXGvertex_oport_oport|4357|0|6960|0|{2|error|}2601|2604|}
{2010006001|XXGobject_psameas_object|4358|0|6962|0|{metadata|error_metadata|1|0|}2604|2601|}
{2010212001|XXGvertex_oport_oport|4359|0|6963|0|{3|log|}2601|2605|}
{2010006001|XXGobject_psameas_object|4360|0|6965|0|{metadata|log_metadata|1|0|}2605|2601|}
{2010211001|XXGvertex_iport_iport|4361|0|6966|0|{0|in|}2601|2606|}
{2010006001|XXGobject_psameas_object|4362|0|6968|0|{metadata|in_metadata|1|0|}2606|2601|}
{2010601001|XXGgraph_vertex_vertex|4363|0|6969|0|{Normalize_Get_all_records_from_lkp|}2525|2607|}
{2010212001|XXGvertex_oport_oport|4364|0|6971|0|{0|out|}2607|2608|}
{2010213001|XXGoport_dst_flow|4365|0|6973|0|{0|}2608|2542|}
{2010212001|XXGvertex_oport_oport|4366|0|6974|0|{1|reject|}2607|2609|}
{2010212001|XXGvertex_oport_oport|4367|0|6976|0|{2|error|}2607|2610|}
{2010212001|XXGvertex_oport_oport|4368|0|6978|0|{3|log|}2607|2611|}
{2010211001|XXGvertex_iport_iport|4369|0|6980|0|{0|in|}2607|2612|}
{2010214001|XXGiport_src_flow|4370|0|6982|0|{0|}2612|2544|}
{2010007001|XXGobject_proto_object|4371|0|6983|0|{}2607|2613|}
{2010212001|XXGvertex_oport_oport|4372|0|6985|0|{0|out|}2613|2614|}
{2010006001|XXGobject_psameas_object|4373|0|6987|0|{metadata|out_metadata|1|0|}2614|2613|}
{2010212001|XXGvertex_oport_oport|4374|0|6988|0|{1|reject|}2613|2615|}
{2010006001|XXGobject_psameas_object|4375|0|6990|0|{metadata|reject_metadata|1|0|}2615|2613|}
{2010212001|XXGvertex_oport_oport|4376|0|6991|0|{2|error|}2613|2616|}
{2010006001|XXGobject_psameas_object|4377|0|6993|0|{metadata|error_metadata|1|0|}2616|2613|}
{2010212001|XXGvertex_oport_oport|4378|0|6994|0|{3|log|}2613|2617|}
{2010006001|XXGobject_psameas_object|4379|0|6996|0|{metadata|log_metadata|1|0|}2617|2613|}
{2010211001|XXGvertex_iport_iport|4380|0|6997|0|{0|in|}2613|2618|}
{2010006001|XXGobject_psameas_object|4381|0|6999|0|{metadata|in_metadata|1|0|}2618|2613|}
{2010601001|XXGgraph_vertex_vertex|4382|0|7000|0|{Replicate|}2525|2619|}
{2010212001|XXGvertex_oport_oport|4383|0|7002|0|{0|out|}2619|2620|}
{2010211001|XXGvertex_iport_iport|4384|0|7004|0|{0|in|}2619|2621|}
{2010214001|XXGiport_src_flow|4385|0|7006|0|{0|}2621|2541|}
{2010007001|XXGobject_proto_object|4386|0|7007|0|{}2619|2622|}
{2010212001|XXGvertex_oport_oport|4387|0|7009|0|{0|out|}2622|2623|}
{2010006001|XXGobject_psameas_object|4388|0|7011|0|{metadata|out_metadata|1|0|}2623|2622|}
{2010211001|XXGvertex_iport_iport|4389|0|7012|0|{0|in|}2622|2624|}
{2010006001|XXGobject_psameas_object|4390|0|7014|0|{metadata|in_metadata|1|0|}2624|2622|}
{2010601001|XXGgraph_vertex_vertex|4391|0|7015|0|{Replicate_1|}2525|2625|}
{2010212001|XXGvertex_oport_oport|4392|0|7017|0|{0|out|}2625|2626|}
{2010213001|XXGoport_dst_flow|4393|0|7019|0|{0|}2626|2544|}
{2010213001|XXGoport_dst_flow|4394|0|7020|0|{1|}2626|2537|}
{2010211001|XXGvertex_iport_iport|4395|0|7021|0|{0|in|}2625|2627|}
{2010214001|XXGiport_src_flow|4396|0|7023|0|{0|}2627|2543|}
{2010007001|XXGobject_proto_object|4397|0|7024|0|{}2625|2628|}
{2010212001|XXGvertex_oport_oport|4398|0|7026|0|{0|out|}2628|2629|}
{2010006001|XXGobject_psameas_object|4399|0|7028|0|{metadata|out_metadata|1|0|}2629|2628|}
{2010211001|XXGvertex_iport_iport|4400|0|7029|0|{0|in|}2628|2630|}
{2010006001|XXGobject_psameas_object|4401|0|7031|0|{metadata|in_metadata|1|0|}2630|2628|}
{2010601001|XXGgraph_vertex_vertex|4402|0|7032|0|{Sort_Remove_Dup_On_Hash|}2525|2631|}
{2010604001|XXGgraph_flow_flow|4403|0|7034|0|{Flow_3|}2631|2632|}
{2010604001|XXGgraph_flow_flow|4404|0|7036|0|{Flow_5|}2631|2633|}
{2010601001|XXGgraph_vertex_vertex|4405|0|7038|0|{Dedup_Sorted_1|}2631|2634|}
{2010212001|XXGvertex_oport_oport|4406|0|7040|0|{0|out|}2634|2635|}
{2010212001|XXGvertex_oport_oport|4407|0|7042|0|{1|dup|}2634|2636|}
{2010212001|XXGvertex_oport_oport|4408|0|7044|0|{2|reject|}2634|2637|}
{2010212001|XXGvertex_oport_oport|4409|0|7046|0|{3|error|}2634|2638|}
{2010212001|XXGvertex_oport_oport|4410|0|7048|0|{4|log|}2634|2639|}
{2010211001|XXGvertex_iport_iport|4411|0|7050|0|{0|in|}2634|2640|}
{2010214001|XXGiport_src_flow|4412|0|7052|0|{0|}2640|2633|}
{2010007001|XXGobject_proto_object|4413|0|7053|0|{}2634|2641|}
{2010212001|XXGvertex_oport_oport|4414|0|7055|0|{0|out|}2641|2642|}
{2010006001|XXGobject_psameas_object|4415|0|7057|0|{metadata|out_metadata|1|0|}2642|2641|}
{2010212001|XXGvertex_oport_oport|4416|0|7058|0|{1|dup|}2641|2643|}
{2010006001|XXGobject_psameas_object|4417|0|7060|0|{metadata|dup_metadata|1|0|}2643|2641|}
{2010212001|XXGvertex_oport_oport|4418|0|7061|0|{2|reject|}2641|2644|}
{2010006001|XXGobject_psameas_object|4419|0|7063|0|{metadata|reject_metadata|1|0|}2644|2641|}
{2010212001|XXGvertex_oport_oport|4420|0|7064|0|{3|error|}2641|2645|}
{2010006001|XXGobject_psameas_object|4421|0|7066|0|{metadata|error_metadata|1|0|}2645|2641|}
{2010212001|XXGvertex_oport_oport|4422|0|7067|0|{4|log|}2641|2646|}
{2010006001|XXGobject_psameas_object|4423|0|7069|0|{metadata|log_metadata|1|0|}2646|2641|}
{2010211001|XXGvertex_iport_iport|4424|0|7070|0|{0|in|}2641|2647|}
{2010006001|XXGobject_psameas_object|4425|0|7072|0|{metadata|in_metadata|1|0|}2647|2641|}
{2010601001|XXGgraph_vertex_vertex|4426|0|7073|0|{PBKS_dxf_hk_part1_|}2631|2648|}
{2010604001|XXGgraph_flow_flow|4427|0|7075|0|{Flow_1|}2648|2649|}
{2010601001|XXGgraph_vertex_vertex|4428|0|7077|0|{Partition_by_Key|}2648|2650|}
{2010212001|XXGvertex_oport_oport|4429|0|7079|0|{0|out|}2650|2651|}
{2010213001|XXGoport_dst_flow|4430|0|7081|0|{0|}2651|2649|}
{2010211001|XXGvertex_iport_iport|4431|0|7082|0|{0|in|}2650|2652|}
{2010601001|XXGgraph_vertex_vertex|4432|0|7084|0|{Sort|}2648|2653|}
{2010212001|XXGvertex_oport_oport|4433|0|7086|0|{0|out|}2653|2654|}
{2010211001|XXGvertex_iport_iport|4434|0|7088|0|{0|in|}2653|2655|}
{2010214001|XXGiport_src_flow|4435|0|7090|0|{0|}2655|2649|}
{2010212001|XXGvertex_oport_oport|4436|0|7091|0|{0|out0|}2648|2656|}
{2010216002|XXGoport_binding_oport|4437|0|7093|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}2656|2654|}
{2010213001|XXGoport_dst_flow|4438|0|7094|0|{0|}2656|2632|}
{2010211001|XXGvertex_iport_iport|4439|0|7095|0|{0|in0|}2648|2657|}
{2010215002|XXGiport_binding_iport|4440|0|7097|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}2657|2652|}
{2010007001|XXGobject_proto_object|4441|0|7098|0|{}2648|2658|}
{2010604001|XXGgraph_flow_flow|4442|0|7100|0|{Flow_1|}2658|2659|}
{2010601001|XXGgraph_vertex_vertex|4443|0|7102|0|{Partition_by_Key|}2658|2660|}
{2010212001|XXGvertex_oport_oport|4444|0|7104|0|{0|out|}2660|2661|}
{2010213001|XXGoport_dst_flow|4445|0|7106|0|{0|}2661|2659|}
{2010211001|XXGvertex_iport_iport|4446|0|7107|0|{0|in|}2660|2662|}
{2010007001|XXGobject_proto_object|4447|0|7109|0|{}2660|2663|}
{2010212001|XXGvertex_oport_oport|4448|0|7111|0|{0|out|}2663|2664|}
{2010006001|XXGobject_psameas_object|4449|0|7113|0|{metadata|out_metadata|1|0|}2664|2663|}
{2010211001|XXGvertex_iport_iport|4450|0|7114|0|{0|in|}2663|2665|}
{2010006001|XXGobject_psameas_object|4451|0|7116|0|{metadata|in_metadata|1|0|}2665|2663|}
{2010006001|XXGobject_psameas_object|4452|0|7117|0|{Layout|InputLayout|1|0|}2660|2658|}
{2010006001|XXGobject_psameas_object|4453|0|7118|0|{key|Key|1|0|}2660|2658|}
{2010601001|XXGgraph_vertex_vertex|4454|0|7119|0|{Sort|}2658|2666|}
{2010212001|XXGvertex_oport_oport|4455|0|7121|0|{0|out|}2666|2667|}
{2010211001|XXGvertex_iport_iport|4456|0|7123|0|{0|in|}2666|2668|}
{2010214001|XXGiport_src_flow|4457|0|7125|0|{0|}2668|2659|}
{2010007001|XXGobject_proto_object|4458|0|7126|0|{}2666|2669|}
{2010212001|XXGvertex_oport_oport|4459|0|7128|0|{0|out|}2669|2670|}
{2010006001|XXGobject_psameas_object|4460|0|7130|0|{metadata|out_metadata|1|0|}2670|2669|}
{2010211001|XXGvertex_iport_iport|4461|0|7131|0|{0|in|}2669|2671|}
{2010006001|XXGobject_psameas_object|4462|0|7133|0|{metadata|in_metadata|1|0|}2671|2669|}
{2010006001|XXGobject_psameas_object|4463|0|7134|0|{Layout|OutputLayout|1|0|}2666|2658|}
{2010006001|XXGobject_psameas_object|4464|0|7135|0|{key|Key|1|0|}2666|2658|}
{2010006001|XXGobject_psameas_object|4465|0|7136|0|{max_core|Max_core|1|0|}2666|2658|}
{2010212001|XXGvertex_oport_oport|4466|0|7137|0|{0|out0|}2658|2672|}
{2010216002|XXGoport_binding_oport|4467|0|7139|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}2672|2667|}
{2010211001|XXGvertex_iport_iport|4468|0|7140|0|{0|in0|}2658|2673|}
{2010215002|XXGiport_binding_iport|4469|0|7142|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}2673|2662|}
{2010006001|XXGobject_psameas_object|4470|0|7143|0|{InputLayout|Layout|0|0|}2648|2577|}
{2010601001|XXGgraph_vertex_vertex|4471|0|7144|0|{Sort_within_Groups|}2631|2674|}
{2010212001|XXGvertex_oport_oport|4472|0|7146|0|{0|out|}2674|2675|}
{2010213001|XXGoport_dst_flow|4473|0|7148|0|{0|}2675|2633|}
{2010211001|XXGvertex_iport_iport|4474|0|7149|0|{0|in|}2674|2676|}
{2010214001|XXGiport_src_flow|4475|0|7151|0|{0|}2676|2632|}
{2010007001|XXGobject_proto_object|4476|0|7152|0|{}2674|2677|}
{2010212001|XXGvertex_oport_oport|4477|0|7154|0|{0|out|}2677|2678|}
{2010006001|XXGobject_psameas_object|4478|0|7156|0|{metadata|out_metadata|1|0|}2678|2677|}
{2010211001|XXGvertex_iport_iport|4479|0|7157|0|{0|in|}2677|2679|}
{2010006001|XXGobject_psameas_object|4480|0|7159|0|{metadata|in_metadata|1|0|}2679|2677|}
{2010212001|XXGvertex_oport_oport|4481|0|7160|0|{0|out0|}2631|2680|}
{2010216002|XXGoport_binding_oport|4482|0|7162|0|{.5|.5|{0|}14672|}2680|2635|}
{2010213001|XXGoport_dst_flow|4483|0|7163|0|{0|}2680|2543|}
{2010212001|XXGvertex_oport_oport|4484|0|7164|0|{1|out1|}2631|2681|}
{2010216002|XXGoport_binding_oport|4485|0|7166|0|{.5|.5|{0|}14673|}2681|2636|}
{2010213001|XXGoport_dst_flow|4486|0|7167|0|{0|}2681|2548|}
{2010211001|XXGvertex_iport_iport|4487|0|7168|0|{0|in0|}2631|2682|}
{2010215002|XXGiport_binding_iport|4488|0|7170|0|{.5|.5|{0|}14671|}2682|2657|}
{2010214001|XXGiport_src_flow|4489|0|7171|0|{0|}2682|2540|}
{2010601001|XXGgraph_vertex_vertex|4490|0|7172|0|{Sort_on_Adjusted_Natural_Keys|}2525|2683|}
{2010212001|XXGvertex_oport_oport|4491|0|7174|0|{0|out|}2683|2684|}
{2010213001|XXGoport_dst_flow|4492|0|7176|0|{0|}2684|2536|}
{2010211001|XXGvertex_iport_iport|4493|0|7177|0|{0|in|}2683|2685|}
{2010214001|XXGiport_src_flow|4494|0|7179|0|{0|}2685|2538|}
{2010007001|XXGobject_proto_object|4495|0|7180|0|{}2683|2686|}
{2010212001|XXGvertex_oport_oport|4496|0|7182|0|{0|out|}2686|2687|}
{2010006001|XXGobject_psameas_object|4497|0|7184|0|{metadata|out_metadata|1|0|}2687|2686|}
{2010211001|XXGvertex_iport_iport|4498|0|7185|0|{0|in|}2686|2688|}
{2010006001|XXGobject_psameas_object|4499|0|7187|0|{metadata|in_metadata|1|0|}2688|2686|}
{2010601001|XXGgraph_vertex_vertex|4500|0|7188|0|{Trash_1|}2525|2689|}
{2010211001|XXGvertex_iport_iport|4501|0|7190|0|{0|in|}2689|2690|}
{2010214001|XXGiport_src_flow|4502|0|7192|0|{0|}2690|2546|}
{2010007001|XXGobject_proto_object|4503|0|7193|0|{}2689|2691|}
{2010211001|XXGvertex_iport_iport|4504|0|7195|0|{0|in|}2691|2692|}
{2010006001|XXGobject_psameas_object|4505|0|7197|0|{metadata|in_metadata|1|0|}2692|2691|}
{2010601001|XXGgraph_vertex_vertex|4506|0|7198|0|{Trash_2|}2525|2693|}
{2010211001|XXGvertex_iport_iport|4507|0|7200|0|{0|in|}2693|2694|}
{2010214001|XXGiport_src_flow|4508|0|7202|0|{0|}2694|2545|}
{2010007001|XXGobject_proto_object|4509|0|7203|0|{}2693|2695|}
{2010211001|XXGvertex_iport_iport|4510|0|7205|0|{0|in|}2695|2696|}
{2010006001|XXGobject_psameas_object|4511|0|7207|0|{metadata|in_metadata|1|0|}2696|2695|}
{2010601001|XXGgraph_vertex_vertex|4512|0|7208|0|{Trash_3|}2525|2697|}
{2010211001|XXGvertex_iport_iport|4513|0|7210|0|{0|in|}2697|2698|}
{2010214001|XXGiport_src_flow|4514|0|7212|0|{0|}2698|2548|}
{2010007001|XXGobject_proto_object|4515|0|7213|0|{}2697|2699|}
{2010211001|XXGvertex_iport_iport|4516|0|7215|0|{0|in|}2699|2700|}
{2010006001|XXGobject_psameas_object|4517|0|7217|0|{metadata|in_metadata|1|0|}2700|2699|}
{2010212001|XXGvertex_oport_oport|4518|0|7218|0|{0|out0|}2525|2701|}
{2010216002|XXGoport_binding_oport|4519|0|7220|0|{.5|.5|{0|}14899|}2701|2620|}
{2010213001|XXGoport_dst_flow|4520|0|7221|0|{0|}2701|2522|}
{2010211001|XXGvertex_iport_iport|4521|0|7222|0|{0|in0|}2525|2702|}
{2010215002|XXGiport_binding_iport|4522|0|7224|0|{.5|.5|{0|}14898|}2702|2582|}
{2010214001|XXGiport_src_flow|4523|0|7225|0|{0|}2702|2520|}
{2010601001|XXGgraph_vertex_vertex|4524|0|7226|0|{Get_Last_Lookup_Record|}2515|2703|}
{2010605001|XXGgraph_legend_legend|4525|0|7228|0|{0|}2703|2704|}
{2010241001|XXGlegend_face_face|4526|0|7230|0|{}2704|2705|}
{2010605001|XXGgraph_legend_legend|4527|0|7232|0|{1|}2703|2706|}
{2010241001|XXGlegend_face_face|4528|0|7234|0|{}2706|2707|}
{2010605001|XXGgraph_legend_legend|4529|0|7236|0|{2|}2703|2708|}
{2010241001|XXGlegend_face_face|4530|0|7238|0|{}2708|2709|}
{2010605001|XXGgraph_legend_legend|4531|0|7240|0|{3|}2703|2710|}
{2010241001|XXGlegend_face_face|4532|0|7242|0|{}2710|2711|}
{2010604001|XXGgraph_flow_flow|4533|0|7244|0|{Flow_1|}2703|2712|}
{2010604001|XXGgraph_flow_flow|4534|0|7246|0|{Flow_2|}2703|2713|}
{2010604001|XXGgraph_flow_flow|4535|0|7248|0|{Flow_3|}2703|2714|}
{2010604001|XXGgraph_flow_flow|4536|0|7250|0|{Flow_4|}2703|2715|}
{2010604001|XXGgraph_flow_flow|4537|0|7252|0|{Flow_5|}2703|2716|}
{2010604001|XXGgraph_flow_flow|4538|0|7254|0|{Flow_6|}2703|2717|}
{2010604001|XXGgraph_flow_flow|4539|0|7256|0|{Flow_7|}2703|2718|}
{2010604001|XXGgraph_flow_flow|4540|0|7258|0|{Flow_8|}2703|2719|}
{2010604001|XXGgraph_flow_flow|4541|0|7260|0|{Flow_9|}2703|2720|}
{2010601001|XXGgraph_vertex_vertex|4542|0|7262|0|{Dedup_Sorted|}2703|2721|}
{2010212001|XXGvertex_oport_oport|4543|0|7264|0|{0|out|}2721|2722|}
{2010212001|XXGvertex_oport_oport|4544|0|7266|0|{1|dup|}2721|2723|}
{2010213001|XXGoport_dst_flow|4545|0|7268|0|{0|}2723|2719|}
{2010212001|XXGvertex_oport_oport|4546|0|7269|0|{2|reject|}2721|2724|}
{2010212001|XXGvertex_oport_oport|4547|0|7271|0|{3|error|}2721|2725|}
{2010212001|XXGvertex_oport_oport|4548|0|7273|0|{4|log|}2721|2726|}
{2010211001|XXGvertex_iport_iport|4549|0|7275|0|{0|in|}2721|2727|}
{2010214001|XXGiport_src_flow|4550|0|7277|0|{0|}2727|2714|}
{2010007001|XXGobject_proto_object|4551|0|7278|0|{}2721|2728|}
{2010212001|XXGvertex_oport_oport|4552|0|7280|0|{0|out|}2728|2729|}
{2010006001|XXGobject_psameas_object|4553|0|7282|0|{metadata|out_metadata|1|0|}2729|2728|}
{2010212001|XXGvertex_oport_oport|4554|0|7283|0|{1|dup|}2728|2730|}
{2010006001|XXGobject_psameas_object|4555|0|7285|0|{metadata|dup_metadata|1|0|}2730|2728|}
{2010212001|XXGvertex_oport_oport|4556|0|7286|0|{2|reject|}2728|2731|}
{2010006001|XXGobject_psameas_object|4557|0|7288|0|{metadata|reject_metadata|1|0|}2731|2728|}
{2010212001|XXGvertex_oport_oport|4558|0|7289|0|{3|error|}2728|2732|}
{2010006001|XXGobject_psameas_object|4559|0|7291|0|{metadata|error_metadata|1|0|}2732|2728|}
{2010212001|XXGvertex_oport_oport|4560|0|7292|0|{4|log|}2728|2733|}
{2010006001|XXGobject_psameas_object|4561|0|7294|0|{metadata|log_metadata|1|0|}2733|2728|}
{2010211001|XXGvertex_iport_iport|4562|0|7295|0|{0|in|}2728|2734|}
{2010006001|XXGobject_psameas_object|4563|0|7297|0|{metadata|in_metadata|1|0|}2734|2728|}
{2010601001|XXGgraph_vertex_vertex|4564|0|7298|0|{FBE_filter_matching_lkp_record|}2703|2735|}
{2010212001|XXGvertex_oport_oport|4565|0|7300|0|{0|out|}2735|2736|}
{2010213001|XXGoport_dst_flow|4566|0|7302|0|{0|}2736|2713|}
{2010212001|XXGvertex_oport_oport|4567|0|7303|0|{1|deselect|}2735|2737|}
{2010213001|XXGoport_dst_flow|4568|0|7305|0|{0|}2737|2720|}
{2010212001|XXGvertex_oport_oport|4569|0|7306|0|{2|reject|}2735|2738|}
{2010212001|XXGvertex_oport_oport|4570|0|7308|0|{3|error|}2735|2739|}
{2010212001|XXGvertex_oport_oport|4571|0|7310|0|{4|log|}2735|2740|}
{2010211001|XXGvertex_iport_iport|4572|0|7312|0|{0|in|}2735|2741|}
{2010214001|XXGiport_src_flow|4573|0|7314|0|{0|}2741|2716|}
{2010007001|XXGobject_proto_object|4574|0|7315|0|{}2735|2742|}
{2010212001|XXGvertex_oport_oport|4575|0|7317|0|{0|out|}2742|2743|}
{2010006001|XXGobject_psameas_object|4576|0|7319|0|{metadata|out_metadata|1|0|}2743|2742|}
{2010212001|XXGvertex_oport_oport|4577|0|7320|0|{1|deselect|}2742|2744|}
{2010006001|XXGobject_psameas_object|4578|0|7322|0|{metadata|deselect_metadata|1|0|}2744|2742|}
{2010212001|XXGvertex_oport_oport|4579|0|7323|0|{2|reject|}2742|2745|}
{2010006001|XXGobject_psameas_object|4580|0|7325|0|{metadata|reject_metadata|1|0|}2745|2742|}
{2010212001|XXGvertex_oport_oport|4581|0|7326|0|{3|error|}2742|2746|}
{2010006001|XXGobject_psameas_object|4582|0|7328|0|{metadata|error_metadata|1|0|}2746|2742|}
{2010212001|XXGvertex_oport_oport|4583|0|7329|0|{4|log|}2742|2747|}
{2010006001|XXGobject_psameas_object|4584|0|7331|0|{metadata|log_metadata|1|0|}2747|2742|}
{2010211001|XXGvertex_iport_iport|4585|0|7332|0|{0|in|}2742|2748|}
{2010006001|XXGobject_psameas_object|4586|0|7334|0|{metadata|in_metadata|1|0|}2748|2742|}
{2010601001|XXGgraph_vertex_vertex|4587|0|7335|0|{RFMT_Get_Hash_On_NK|}2703|2749|}
{2010212001|XXGvertex_oport_oport|4588|0|7337|0|{0|out0|}2749|2750|}
{2010213001|XXGoport_dst_flow|4589|0|7339|0|{0|}2750|2712|}
{2010212001|XXGvertex_oport_oport|4590|0|7340|0|{1|reject0|}2749|2751|}
{2010212001|XXGvertex_oport_oport|4591|0|7342|0|{2|error0|}2749|2752|}
{2010212001|XXGvertex_oport_oport|4592|0|7344|0|{3|log|}2749|2753|}
{2010211001|XXGvertex_iport_iport|4593|0|7346|0|{0|in|}2749|2754|}
{2010007001|XXGobject_proto_object|4594|0|7348|0|{}2749|2755|}
{2010212001|XXGvertex_oport_oport|4595|0|7350|0|{0|out0|}2755|2756|}
{2010006001|XXGobject_psameas_object|4596|0|7352|0|{metadata|out0_metadata|1|0|}2756|2755|}
{2010006001|XXGobject_psameas_object|4597|0|7353|0|{transform0|transform0|1|0|}2756|2755|}
{2010212001|XXGvertex_oport_oport|4598|0|7354|0|{1|reject0|}2755|2757|}
{2010006001|XXGobject_psameas_object|4599|0|7356|0|{metadata|reject0_metadata|1|0|}2757|2755|}
{2010212001|XXGvertex_oport_oport|4600|0|7357|0|{2|error0|}2755|2758|}
{2010006001|XXGobject_psameas_object|4601|0|7359|0|{metadata|error0_metadata|1|0|}2758|2755|}
{2010212001|XXGvertex_oport_oport|4602|0|7360|0|{3|log|}2755|2759|}
{2010006001|XXGobject_psameas_object|4603|0|7362|0|{metadata|log_metadata|1|0|}2759|2755|}
{2010211001|XXGvertex_iport_iport|4604|0|7363|0|{0|in|}2755|2760|}
{2010006001|XXGobject_psameas_object|4605|0|7365|0|{metadata|in_metadata|1|0|}2760|2755|}
{2010601001|XXGgraph_vertex_vertex|4606|0|7366|0|{RFMT_Lookup_with_IDS|}2703|2761|}
{2010212001|XXGvertex_oport_oport|4607|0|7368|0|{0|out0|}2761|2762|}
{2010213001|XXGoport_dst_flow|4608|0|7370|0|{0|}2762|2715|}
{2010212001|XXGvertex_oport_oport|4609|0|7371|0|{1|reject0|}2761|2763|}
{2010212001|XXGvertex_oport_oport|4610|0|7373|0|{2|error0|}2761|2764|}
{2010212001|XXGvertex_oport_oport|4611|0|7375|0|{3|log|}2761|2765|}
{2010211001|XXGvertex_iport_iport|4612|0|7377|0|{0|in|}2761|2766|}
{2010214001|XXGiport_src_flow|4613|0|7379|0|{0|}2766|2717|}
{2010007001|XXGobject_proto_object|4614|0|7380|0|{}2761|2767|}
{2010212001|XXGvertex_oport_oport|4615|0|7382|0|{0|out0|}2767|2768|}
{2010006001|XXGobject_psameas_object|4616|0|7384|0|{metadata|out0_metadata|1|0|}2768|2767|}
{2010006001|XXGobject_psameas_object|4617|0|7385|0|{transform0|transform0|1|0|}2768|2767|}
{2010212001|XXGvertex_oport_oport|4618|0|7386|0|{1|reject0|}2767|2769|}
{2010006001|XXGobject_psameas_object|4619|0|7388|0|{metadata|reject0_metadata|1|0|}2769|2767|}
{2010212001|XXGvertex_oport_oport|4620|0|7389|0|{2|error0|}2767|2770|}
{2010006001|XXGobject_psameas_object|4621|0|7391|0|{metadata|error0_metadata|1|0|}2770|2767|}
{2010212001|XXGvertex_oport_oport|4622|0|7392|0|{3|log|}2767|2771|}
{2010006001|XXGobject_psameas_object|4623|0|7394|0|{metadata|log_metadata|1|0|}2771|2767|}
{2010211001|XXGvertex_iport_iport|4624|0|7395|0|{0|in|}2767|2772|}
{2010006001|XXGobject_psameas_object|4625|0|7397|0|{metadata|in_metadata|1|0|}2772|2767|}
{2010601001|XXGgraph_vertex_vertex|4626|0|7398|0|{Sort_De_dup|}2703|2773|}
{2010604001|XXGgraph_flow_flow|4627|0|7400|0|{Flow_10|}2773|2774|}
{2010604001|XXGgraph_flow_flow|4628|0|7402|0|{Flow_4|}2773|2775|}
{2010244001|XXGflow_watcher_watcher|4629|0|7404|0|{}2775|2776|}
{2010601001|XXGgraph_vertex_vertex|4630|0|7406|0|{Dedup_Sorted_1|}2773|2777|}
{2010212001|XXGvertex_oport_oport|4631|0|7408|0|{0|out|}2777|2778|}
{2010212001|XXGvertex_oport_oport|4632|0|7410|0|{1|dup|}2777|2779|}
{2010212001|XXGvertex_oport_oport|4633|0|7412|0|{2|reject|}2777|2780|}
{2010212001|XXGvertex_oport_oport|4634|0|7414|0|{3|error|}2777|2781|}
{2010212001|XXGvertex_oport_oport|4635|0|7416|0|{4|log|}2777|2782|}
{2010211001|XXGvertex_iport_iport|4636|0|7418|0|{0|in|}2777|2783|}
{2010214001|XXGiport_src_flow|4637|0|7420|0|{0|}2783|2774|}
{2010007001|XXGobject_proto_object|4638|0|7421|0|{}2777|2784|}
{2010212001|XXGvertex_oport_oport|4639|0|7423|0|{0|out|}2784|2785|}
{2010006001|XXGobject_psameas_object|4640|0|7425|0|{metadata|out_metadata|1|0|}2785|2784|}
{2010212001|XXGvertex_oport_oport|4641|0|7426|0|{1|dup|}2784|2786|}
{2010006001|XXGobject_psameas_object|4642|0|7428|0|{metadata|dup_metadata|1|0|}2786|2784|}
{2010212001|XXGvertex_oport_oport|4643|0|7429|0|{2|reject|}2784|2787|}
{2010006001|XXGobject_psameas_object|4644|0|7431|0|{metadata|reject_metadata|1|0|}2787|2784|}
{2010212001|XXGvertex_oport_oport|4645|0|7432|0|{3|error|}2784|2788|}
{2010006001|XXGobject_psameas_object|4646|0|7434|0|{metadata|error_metadata|1|0|}2788|2784|}
{2010212001|XXGvertex_oport_oport|4647|0|7435|0|{4|log|}2784|2789|}
{2010006001|XXGobject_psameas_object|4648|0|7437|0|{metadata|log_metadata|1|0|}2789|2784|}
{2010211001|XXGvertex_iport_iport|4649|0|7438|0|{0|in|}2784|2790|}
{2010006001|XXGobject_psameas_object|4650|0|7440|0|{metadata|in_metadata|1|0|}2790|2784|}
{2010601001|XXGgraph_vertex_vertex|4651|0|7441|0|{PBKS_dxf_hk_part1_|}2773|2791|}
{2010604001|XXGgraph_flow_flow|4652|0|7443|0|{Flow_1|}2791|2792|}
{2010601001|XXGgraph_vertex_vertex|4653|0|7445|0|{Partition_by_Key|}2791|2793|}
{2010212001|XXGvertex_oport_oport|4654|0|7447|0|{0|out|}2793|2794|}
{2010213001|XXGoport_dst_flow|4655|0|7449|0|{0|}2794|2792|}
{2010211001|XXGvertex_iport_iport|4656|0|7450|0|{0|in|}2793|2795|}
{2010601001|XXGgraph_vertex_vertex|4657|0|7452|0|{Sort|}2791|2796|}
{2010212001|XXGvertex_oport_oport|4658|0|7454|0|{0|out|}2796|2797|}
{2010211001|XXGvertex_iport_iport|4659|0|7456|0|{0|in|}2796|2798|}
{2010214001|XXGiport_src_flow|4660|0|7458|0|{0|}2798|2792|}
{2010212001|XXGvertex_oport_oport|4661|0|7459|0|{0|out0|}2791|2799|}
{2010216002|XXGoport_binding_oport|4662|0|7461|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}2799|2797|}
{2010213001|XXGoport_dst_flow|4663|0|7462|0|{0|}2799|2775|}
{2010211001|XXGvertex_iport_iport|4664|0|7463|0|{0|in0|}2791|2800|}
{2010215002|XXGiport_binding_iport|4665|0|7465|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}2800|2795|}
{2010007001|XXGobject_proto_object|4666|0|7466|0|{}2791|2801|}
{2010604001|XXGgraph_flow_flow|4667|0|7468|0|{Flow_1|}2801|2802|}
{2010601001|XXGgraph_vertex_vertex|4668|0|7470|0|{Partition_by_Key|}2801|2803|}
{2010212001|XXGvertex_oport_oport|4669|0|7472|0|{0|out|}2803|2804|}
{2010213001|XXGoport_dst_flow|4670|0|7474|0|{0|}2804|2802|}
{2010211001|XXGvertex_iport_iport|4671|0|7475|0|{0|in|}2803|2805|}
{2010007001|XXGobject_proto_object|4672|0|7477|0|{}2803|2806|}
{2010212001|XXGvertex_oport_oport|4673|0|7479|0|{0|out|}2806|2807|}
{2010006001|XXGobject_psameas_object|4674|0|7481|0|{metadata|out_metadata|1|0|}2807|2806|}
{2010211001|XXGvertex_iport_iport|4675|0|7482|0|{0|in|}2806|2808|}
{2010006001|XXGobject_psameas_object|4676|0|7484|0|{metadata|in_metadata|1|0|}2808|2806|}
{2010006001|XXGobject_psameas_object|4677|0|7485|0|{Layout|InputLayout|1|0|}2803|2801|}
{2010006001|XXGobject_psameas_object|4678|0|7486|0|{key|Key|1|0|}2803|2801|}
{2010601001|XXGgraph_vertex_vertex|4679|0|7487|0|{Sort|}2801|2809|}
{2010212001|XXGvertex_oport_oport|4680|0|7489|0|{0|out|}2809|2810|}
{2010211001|XXGvertex_iport_iport|4681|0|7491|0|{0|in|}2809|2811|}
{2010214001|XXGiport_src_flow|4682|0|7493|0|{0|}2811|2802|}
{2010007001|XXGobject_proto_object|4683|0|7494|0|{}2809|2812|}
{2010212001|XXGvertex_oport_oport|4684|0|7496|0|{0|out|}2812|2813|}
{2010006001|XXGobject_psameas_object|4685|0|7498|0|{metadata|out_metadata|1|0|}2813|2812|}
{2010211001|XXGvertex_iport_iport|4686|0|7499|0|{0|in|}2812|2814|}
{2010006001|XXGobject_psameas_object|4687|0|7501|0|{metadata|in_metadata|1|0|}2814|2812|}
{2010006001|XXGobject_psameas_object|4688|0|7502|0|{Layout|OutputLayout|1|0|}2809|2801|}
{2010006001|XXGobject_psameas_object|4689|0|7503|0|{key|Key|1|0|}2809|2801|}
{2010006001|XXGobject_psameas_object|4690|0|7504|0|{max_core|Max_core|1|0|}2809|2801|}
{2010212001|XXGvertex_oport_oport|4691|0|7505|0|{0|out0|}2801|2815|}
{2010216002|XXGoport_binding_oport|4692|0|7507|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}2815|2810|}
{2010211001|XXGvertex_iport_iport|4693|0|7508|0|{0|in0|}2801|2816|}
{2010215002|XXGiport_binding_iport|4694|0|7510|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}2816|2805|}
{2010601001|XXGgraph_vertex_vertex|4695|0|7511|0|{Sort_within_Groups_1|}2773|2817|}
{2010212001|XXGvertex_oport_oport|4696|0|7513|0|{0|out|}2817|2818|}
{2010213001|XXGoport_dst_flow|4697|0|7515|0|{0|}2818|2774|}
{2010211001|XXGvertex_iport_iport|4698|0|7516|0|{0|in|}2817|2819|}
{2010214001|XXGiport_src_flow|4699|0|7518|0|{0|}2819|2775|}
{2010007001|XXGobject_proto_object|4700|0|7519|0|{}2817|2820|}
{2010212001|XXGvertex_oport_oport|4701|0|7521|0|{0|out|}2820|2821|}
{2010006001|XXGobject_psameas_object|4702|0|7523|0|{metadata|out_metadata|1|0|}2821|2820|}
{2010211001|XXGvertex_iport_iport|4703|0|7524|0|{0|in|}2820|2822|}
{2010006001|XXGobject_psameas_object|4704|0|7526|0|{metadata|in_metadata|1|0|}2822|2820|}
{2010212001|XXGvertex_oport_oport|4705|0|7527|0|{0|out0|}2773|2823|}
{2010216002|XXGoport_binding_oport|4706|0|7529|0|{.5|.5|{0|}7792|}2823|2778|}
{2010213001|XXGoport_dst_flow|4707|0|7530|0|{0|}2823|2717|}
{2010212001|XXGvertex_oport_oport|4708|0|7531|0|{1|out1|}2773|2824|}
{2010216002|XXGoport_binding_oport|4709|0|7533|0|{.5|.5|{0|}7793|}2824|2779|}
{2010213001|XXGoport_dst_flow|4710|0|7534|0|{0|}2824|2718|}
{2010211001|XXGvertex_iport_iport|4711|0|7535|0|{0|in0|}2773|2825|}
{2010215002|XXGiport_binding_iport|4712|0|7537|0|{.5|.5|{0|}7791|}2825|2800|}
{2010214001|XXGiport_src_flow|4713|0|7538|0|{0|}2825|2712|}
{2010601001|XXGgraph_vertex_vertex|4714|0|7539|0|{Sort_within_Groups|}2703|2826|}
{2010212001|XXGvertex_oport_oport|4715|0|7541|0|{0|out|}2826|2827|}
{2010213001|XXGoport_dst_flow|4716|0|7543|0|{0|}2827|2714|}
{2010211001|XXGvertex_iport_iport|4717|0|7544|0|{0|in|}2826|2828|}
{2010214001|XXGiport_src_flow|4718|0|7546|0|{0|}2828|2713|}
{2010007001|XXGobject_proto_object|4719|0|7547|0|{}2826|2829|}
{2010212001|XXGvertex_oport_oport|4720|0|7549|0|{0|out|}2829|2830|}
{2010006001|XXGobject_psameas_object|4721|0|7551|0|{metadata|out_metadata|1|0|}2830|2829|}
{2010211001|XXGvertex_iport_iport|4722|0|7552|0|{0|in|}2829|2831|}
{2010006001|XXGobject_psameas_object|4723|0|7554|0|{metadata|in_metadata|1|0|}2831|2829|}
{2010601001|XXGgraph_vertex_vertex|4724|0|7555|0|{Trash|}2703|2832|}
{2010211001|XXGvertex_iport_iport|4725|0|7557|0|{0|in|}2832|2833|}
{2010214001|XXGiport_src_flow|4726|0|7559|0|{0|}2833|2718|}
{2010007001|XXGobject_proto_object|4727|0|7560|0|{}2832|2834|}
{2010211001|XXGvertex_iport_iport|4728|0|7562|0|{0|in|}2834|2835|}
{2010006001|XXGobject_psameas_object|4729|0|7564|0|{metadata|in_metadata|1|0|}2835|2834|}
{2010601001|XXGgraph_vertex_vertex|4730|0|7565|0|{Trash_1|}2703|2836|}
{2010211001|XXGvertex_iport_iport|4731|0|7567|0|{0|in|}2836|2837|}
{2010214001|XXGiport_src_flow|4732|0|7569|0|{0|}2837|2719|}
{2010007001|XXGobject_proto_object|4733|0|7570|0|{}2836|2838|}
{2010211001|XXGvertex_iport_iport|4734|0|7572|0|{0|in|}2838|2839|}
{2010006001|XXGobject_psameas_object|4735|0|7574|0|{metadata|in_metadata|1|0|}2839|2838|}
{2010601001|XXGgraph_vertex_vertex|4736|0|7575|0|{Trash_2|}2703|2840|}
{2010211001|XXGvertex_iport_iport|4737|0|7577|0|{0|in|}2840|2841|}
{2010214001|XXGiport_src_flow|4738|0|7579|0|{0|}2841|2720|}
{2010007001|XXGobject_proto_object|4739|0|7580|0|{}2840|2842|}
{2010211001|XXGvertex_iport_iport|4740|0|7582|0|{0|in|}2842|2843|}
{2010006001|XXGobject_psameas_object|4741|0|7584|0|{metadata|in_metadata|1|0|}2843|2842|}
{2010601001|XXGgraph_vertex_vertex|4742|0|7585|0|{Two_Step_Lookup|}2703|2844|}
{2010605001|XXGgraph_legend_legend|4743|0|7587|0|{0|}2844|2845|}
{2010241001|XXGlegend_face_face|4744|0|7589|0|{}2845|2846|}
{2010604001|XXGgraph_flow_flow|4745|0|7591|0|{Flow_1|}2844|2847|}
{2010604001|XXGgraph_flow_flow|4746|0|7593|0|{Flow_2|}2844|2848|}
{2010604001|XXGgraph_flow_flow|4747|0|7595|0|{Flow_3|}2844|2849|}
{2010604001|XXGgraph_flow_flow|4748|0|7597|0|{Flow_4|}2844|2850|}
{2010604001|XXGgraph_flow_flow|4749|0|7599|0|{Flow_5|}2844|2851|}
{2010604001|XXGgraph_flow_flow|4750|0|7601|0|{Flow_6|}2844|2852|}
{2010601001|XXGgraph_vertex_vertex|4751|0|7603|0|{FBE_Pass_Only_Matching_Rec|}2844|2853|}
{2010212001|XXGvertex_oport_oport|4752|0|7605|0|{0|out|}2853|2854|}
{2010213001|XXGoport_dst_flow|4753|0|7607|0|{0|}2854|2851|}
{2010212001|XXGvertex_oport_oport|4754|0|7608|0|{1|deselect|}2853|2855|}
{2010213001|XXGoport_dst_flow|4755|0|7610|0|{0|}2855|2852|}
{2010212001|XXGvertex_oport_oport|4756|0|7611|0|{2|reject|}2853|2856|}
{2010212001|XXGvertex_oport_oport|4757|0|7613|0|{3|error|}2853|2857|}
{2010212001|XXGvertex_oport_oport|4758|0|7615|0|{4|log|}2853|2858|}
{2010211001|XXGvertex_iport_iport|4759|0|7617|0|{0|in|}2853|2859|}
{2010214001|XXGiport_src_flow|4760|0|7619|0|{0|}2859|2850|}
{2010007001|XXGobject_proto_object|4761|0|7620|0|{}2853|2860|}
{2010212001|XXGvertex_oport_oport|4762|0|7622|0|{0|out|}2860|2861|}
{2010006001|XXGobject_psameas_object|4763|0|7624|0|{metadata|out_metadata|1|0|}2861|2860|}
{2010212001|XXGvertex_oport_oport|4764|0|7625|0|{1|deselect|}2860|2862|}
{2010006001|XXGobject_psameas_object|4765|0|7627|0|{metadata|deselect_metadata|1|0|}2862|2860|}
{2010212001|XXGvertex_oport_oport|4766|0|7628|0|{2|reject|}2860|2863|}
{2010006001|XXGobject_psameas_object|4767|0|7630|0|{metadata|reject_metadata|1|0|}2863|2860|}
{2010212001|XXGvertex_oport_oport|4768|0|7631|0|{3|error|}2860|2864|}
{2010006001|XXGobject_psameas_object|4769|0|7633|0|{metadata|error_metadata|1|0|}2864|2860|}
{2010212001|XXGvertex_oport_oport|4770|0|7634|0|{4|log|}2860|2865|}
{2010006001|XXGobject_psameas_object|4771|0|7636|0|{metadata|log_metadata|1|0|}2865|2860|}
{2010211001|XXGvertex_iport_iport|4772|0|7637|0|{0|in|}2860|2866|}
{2010006001|XXGobject_psameas_object|4773|0|7639|0|{metadata|in_metadata|1|0|}2866|2860|}
{2010601001|XXGgraph_vertex_vertex|4774|0|7640|0|{FBE_filter_matching_lkp_record|}2844|2867|}
{2010212001|XXGvertex_oport_oport|4775|0|7642|0|{0|out|}2867|2868|}
{2010213001|XXGoport_dst_flow|4776|0|7644|0|{0|}2868|2849|}
{2010212001|XXGvertex_oport_oport|4777|0|7645|0|{1|deselect|}2867|2869|}
{2010213001|XXGoport_dst_flow|4778|0|7647|0|{0|}2869|2847|}
{2010212001|XXGvertex_oport_oport|4779|0|7648|0|{2|reject|}2867|2870|}
{2010212001|XXGvertex_oport_oport|4780|0|7650|0|{3|error|}2867|2871|}
{2010212001|XXGvertex_oport_oport|4781|0|7652|0|{4|log|}2867|2872|}
{2010211001|XXGvertex_iport_iport|4782|0|7654|0|{0|in|}2867|2873|}
{2010007001|XXGobject_proto_object|4783|0|7656|0|{}2867|2874|}
{2010212001|XXGvertex_oport_oport|4784|0|7658|0|{0|out|}2874|2875|}
{2010006001|XXGobject_psameas_object|4785|0|7660|0|{metadata|out_metadata|1|0|}2875|2874|}
{2010212001|XXGvertex_oport_oport|4786|0|7661|0|{1|deselect|}2874|2876|}
{2010006001|XXGobject_psameas_object|4787|0|7663|0|{metadata|deselect_metadata|1|0|}2876|2874|}
{2010212001|XXGvertex_oport_oport|4788|0|7664|0|{2|reject|}2874|2877|}
{2010006001|XXGobject_psameas_object|4789|0|7666|0|{metadata|reject_metadata|1|0|}2877|2874|}
{2010212001|XXGvertex_oport_oport|4790|0|7667|0|{3|error|}2874|2878|}
{2010006001|XXGobject_psameas_object|4791|0|7669|0|{metadata|error_metadata|1|0|}2878|2874|}
{2010212001|XXGvertex_oport_oport|4792|0|7670|0|{4|log|}2874|2879|}
{2010006001|XXGobject_psameas_object|4793|0|7672|0|{metadata|log_metadata|1|0|}2879|2874|}
{2010211001|XXGvertex_iport_iport|4794|0|7673|0|{0|in|}2874|2880|}
{2010006001|XXGobject_psameas_object|4795|0|7675|0|{metadata|in_metadata|1|0|}2880|2874|}
{2010601001|XXGgraph_vertex_vertex|4796|0|7676|0|{Merge|}2844|2881|}
{2010212001|XXGvertex_oport_oport|4797|0|7678|0|{0|out|}2881|2882|}
{2010211001|XXGvertex_iport_iport|4798|0|7680|0|{0|in|}2881|2883|}
{2010214001|XXGiport_src_flow|4799|0|7682|0|{0|}2883|2849|}
{2010214001|XXGiport_src_flow|4800|0|7683|0|{1|}2883|2851|}
{2010007001|XXGobject_proto_object|4801|0|7684|0|{}2881|2884|}
{2010212001|XXGvertex_oport_oport|4802|0|7686|0|{0|out|}2884|2885|}
{2010006001|XXGobject_psameas_object|4803|0|7688|0|{metadata|out_metadata|1|0|}2885|2884|}
{2010211001|XXGvertex_iport_iport|4804|0|7689|0|{0|in|}2884|2886|}
{2010006001|XXGobject_psameas_object|4805|0|7691|0|{metadata|in_metadata|1|0|}2886|2884|}
{2010601001|XXGgraph_vertex_vertex|4806|0|7692|0|{No_Match_Record_In_Second_Pass|}2844|2887|}
{2010211001|XXGvertex_iport_iport|4807|0|7694|0|{0|in|}2887|2888|}
{2010214001|XXGiport_src_flow|4808|0|7696|0|{0|}2888|2852|}
{2010007001|XXGobject_proto_object|4809|0|7697|0|{}2887|2889|}
{2010211001|XXGvertex_iport_iport|4810|0|7699|0|{0|in|}2889|2890|}
{2010006001|XXGobject_psameas_object|4811|0|7701|0|{metadata|in_metadata|1|0|}2890|2889|}
{2010601001|XXGgraph_vertex_vertex|4812|0|7702|0|{RFMT_Lookup_with_IDS_Archive_|}2844|2891|}
{2010212001|XXGvertex_oport_oport|4813|0|7704|0|{0|out0|}2891|2892|}
{2010213001|XXGoport_dst_flow|4814|0|7706|0|{0|}2892|2850|}
{2010212001|XXGvertex_oport_oport|4815|0|7707|0|{1|reject0|}2891|2893|}
{2010212001|XXGvertex_oport_oport|4816|0|7709|0|{2|error0|}2891|2894|}
{2010212001|XXGvertex_oport_oport|4817|0|7711|0|{3|log|}2891|2895|}
{2010211001|XXGvertex_iport_iport|4818|0|7713|0|{0|in|}2891|2896|}
{2010214001|XXGiport_src_flow|4819|0|7715|0|{0|}2896|2848|}
{2010007001|XXGobject_proto_object|4820|0|7716|0|{}2891|2897|}
{2010212001|XXGvertex_oport_oport|4821|0|7718|0|{0|out0|}2897|2898|}
{2010006001|XXGobject_psameas_object|4822|0|7720|0|{metadata|out0_metadata|1|0|}2898|2897|}
{2010006001|XXGobject_psameas_object|4823|0|7721|0|{transform0|transform0|1|0|}2898|2897|}
{2010212001|XXGvertex_oport_oport|4824|0|7722|0|{1|reject0|}2897|2899|}
{2010006001|XXGobject_psameas_object|4825|0|7724|0|{metadata|reject0_metadata|1|0|}2899|2897|}
{2010212001|XXGvertex_oport_oport|4826|0|7725|0|{2|error0|}2897|2900|}
{2010006001|XXGobject_psameas_object|4827|0|7727|0|{metadata|error0_metadata|1|0|}2900|2897|}
{2010212001|XXGvertex_oport_oport|4828|0|7728|0|{3|log|}2897|2901|}
{2010006001|XXGobject_psameas_object|4829|0|7730|0|{metadata|log_metadata|1|0|}2901|2897|}
{2010211001|XXGvertex_iport_iport|4830|0|7731|0|{0|in|}2897|2902|}
{2010006001|XXGobject_psameas_object|4831|0|7733|0|{metadata|in_metadata|1|0|}2902|2897|}
{2010601001|XXGgraph_vertex_vertex|4832|0|7734|0|{RFMT_Pass_only_Hash_Keys|}2844|2903|}
{2010212001|XXGvertex_oport_oport|4833|0|7736|0|{0|out0|}2903|2904|}
{2010213001|XXGoport_dst_flow|4834|0|7738|0|{0|}2904|2848|}
{2010212001|XXGvertex_oport_oport|4835|0|7739|0|{1|reject0|}2903|2905|}
{2010212001|XXGvertex_oport_oport|4836|0|7741|0|{2|error0|}2903|2906|}
{2010212001|XXGvertex_oport_oport|4837|0|7743|0|{3|log|}2903|2907|}
{2010211001|XXGvertex_iport_iport|4838|0|7745|0|{0|in|}2903|2908|}
{2010214001|XXGiport_src_flow|4839|0|7747|0|{0|}2908|2847|}
{2010007001|XXGobject_proto_object|4840|0|7748|0|{}2903|2909|}
{2010212001|XXGvertex_oport_oport|4841|0|7750|0|{0|out0|}2909|2910|}
{2010006001|XXGobject_psameas_object|4842|0|7752|0|{metadata|out0_metadata|1|0|}2910|2909|}
{2010006001|XXGobject_psameas_object|4843|0|7753|0|{transform0|transform0|1|0|}2910|2909|}
{2010212001|XXGvertex_oport_oport|4844|0|7754|0|{1|reject0|}2909|2911|}
{2010006001|XXGobject_psameas_object|4845|0|7756|0|{metadata|reject0_metadata|1|0|}2911|2909|}
{2010212001|XXGvertex_oport_oport|4846|0|7757|0|{2|error0|}2909|2912|}
{2010006001|XXGobject_psameas_object|4847|0|7759|0|{metadata|error0_metadata|1|0|}2912|2909|}
{2010212001|XXGvertex_oport_oport|4848|0|7760|0|{3|log|}2909|2913|}
{2010006001|XXGobject_psameas_object|4849|0|7762|0|{metadata|log_metadata|1|0|}2913|2909|}
{2010211001|XXGvertex_iport_iport|4850|0|7763|0|{0|in|}2909|2914|}
{2010006001|XXGobject_psameas_object|4851|0|7765|0|{metadata|in_metadata|1|0|}2914|2909|}
{2010212001|XXGvertex_oport_oport|4852|0|7766|0|{0|out0|}2844|2915|}
{2010216002|XXGoport_binding_oport|4853|0|7768|0|{.5|.5|{0|}15500|}2915|2882|}
{2010213001|XXGoport_dst_flow|4854|0|7769|0|{0|}2915|2716|}
{2010211001|XXGvertex_iport_iport|4855|0|7770|0|{0|in0|}2844|2916|}
{2010215002|XXGiport_binding_iport|4856|0|7772|0|{.5|.5|{0|}15499|}2916|2873|}
{2010214001|XXGiport_src_flow|4857|0|7773|0|{0|}2916|2715|}
{2010212001|XXGvertex_oport_oport|4858|0|7774|0|{0|out0|}2703|2917|}
{2010216002|XXGoport_binding_oport|4859|0|7776|0|{.5|.5|{0|}15515|}2917|2722|}
{2010213001|XXGoport_dst_flow|4860|0|7777|0|{0|}2917|2523|}
{2010211001|XXGvertex_iport_iport|4861|0|7778|0|{0|in1|}2703|2918|}
{2010215002|XXGiport_binding_iport|4862|0|7780|0|{.5|.5|{0|}15514|}2918|2754|}
{2010214001|XXGiport_src_flow|4863|0|7781|0|{0|}2918|2521|}
{2010601001|XXGgraph_vertex_vertex|4864|0|7782|0|{Merge|}2515|2919|}
{2010212001|XXGvertex_oport_oport|4865|0|7784|0|{0|out|}2919|2920|}
{2010211001|XXGvertex_iport_iport|4866|0|7786|0|{0|in|}2919|2921|}
{2010214001|XXGiport_src_flow|4867|0|7788|0|{0|}2921|2524|}
{2010007001|XXGobject_proto_object|4868|0|7789|0|{}2919|2922|}
{2010212001|XXGvertex_oport_oport|4869|0|7791|0|{0|out|}2922|2923|}
{2010006001|XXGobject_psameas_object|4870|0|7793|0|{metadata|out_metadata|1|0|}2923|2922|}
{2010211001|XXGvertex_iport_iport|4871|0|7794|0|{0|in|}2922|2924|}
{2010006001|XXGobject_psameas_object|4872|0|7796|0|{metadata|in_metadata|1|0|}2924|2922|}
{2010601001|XXGgraph_vertex_vertex|4873|0|7797|0|{Replicate|}2515|2925|}
{2010212001|XXGvertex_oport_oport|4874|0|7799|0|{0|out|}2925|2926|}
{2010213001|XXGoport_dst_flow|4875|0|7801|0|{0|}2926|2520|}
{2010213001|XXGoport_dst_flow|4876|0|7802|0|{1|}2926|2521|}
{2010211001|XXGvertex_iport_iport|4877|0|7803|0|{0|in|}2925|2927|}
{2010007001|XXGobject_proto_object|4878|0|7805|0|{}2925|2928|}
{2010212001|XXGvertex_oport_oport|4879|0|7807|0|{0|out|}2928|2929|}
{2010006001|XXGobject_psameas_object|4880|0|7809|0|{metadata|out_metadata|1|0|}2929|2928|}
{2010211001|XXGvertex_iport_iport|4881|0|7810|0|{0|in|}2928|2930|}
{2010006001|XXGobject_psameas_object|4882|0|7812|0|{metadata|in_metadata|1|0|}2930|2928|}
{2010601001|XXGgraph_vertex_vertex|4883|0|7813|0|{Replicate_1|}2515|2931|}
{2010212001|XXGvertex_oport_oport|4884|0|7815|0|{0|out|}2931|2932|}
{2010213001|XXGoport_dst_flow|4885|0|7817|0|{0|}2932|2524|}
{2010211001|XXGvertex_iport_iport|4886|0|7818|0|{0|in|}2931|2933|}
{2010214001|XXGiport_src_flow|4887|0|7820|0|{0|}2933|2522|}
{2010214001|XXGiport_src_flow|4888|0|7821|0|{1|}2933|2523|}
{2010007001|XXGobject_proto_object|4889|0|7822|0|{}2931|2934|}
{2010212001|XXGvertex_oport_oport|4890|0|7824|0|{0|out|}2934|2935|}
{2010006001|XXGobject_psameas_object|4891|0|7826|0|{metadata|out_metadata|1|0|}2935|2934|}
{2010211001|XXGvertex_iport_iport|4892|0|7827|0|{0|in|}2934|2936|}
{2010006001|XXGobject_psameas_object|4893|0|7829|0|{metadata|in_metadata|1|0|}2936|2934|}
{2010212001|XXGvertex_oport_oport|4894|0|7830|0|{0|out0|}2515|2937|}
{2010216002|XXGoport_binding_oport|4895|0|7832|0|{.5|.5|{0|}7797|}2937|2920|}
{2010211001|XXGvertex_iport_iport|4896|0|7833|0|{0|in0|}2515|2938|}
{2010215002|XXGiport_binding_iport|4897|0|7835|0|{.5|.5|{0|}7796|}2938|2927|}
{2010601001|XXGgraph_vertex_vertex|4898|0|7836|0|{ids_lookup_5|}143|2939|}
{2010605001|XXGgraph_legend_legend|4899|0|7838|0|{0|}2939|2940|}
{2010241001|XXGlegend_face_face|4900|0|7840|0|{}2940|2941|}
{2010605001|XXGgraph_legend_legend|4901|0|7842|0|{1|}2939|2942|}
{2010241001|XXGlegend_face_face|4902|0|7844|0|{}2942|2943|}
{2010604001|XXGgraph_flow_flow|4903|0|7846|0|{Flow_1|}2939|2944|}
{2010604001|XXGgraph_flow_flow|4904|0|7848|0|{Flow_2|}2939|2945|}
{2010604001|XXGgraph_flow_flow|4905|0|7850|0|{Flow_3|}2939|2946|}
{2010604001|XXGgraph_flow_flow|4906|0|7852|0|{Flow_4|}2939|2947|}
{2010604001|XXGgraph_flow_flow|4907|0|7854|0|{Flow_5|}2939|2948|}
{2010601001|XXGgraph_vertex_vertex|4908|0|7856|0|{Get_All_LookUp_Record|}2939|2949|}
{2010605001|XXGgraph_legend_legend|4909|0|7858|0|{0|}2949|2950|}
{2010241001|XXGlegend_face_face|4910|0|7860|0|{}2950|2951|}
{2010605001|XXGgraph_legend_legend|4911|0|7862|0|{1|}2949|2952|}
{2010241001|XXGlegend_face_face|4912|0|7864|0|{}2952|2953|}
{2010605001|XXGgraph_legend_legend|4913|0|7866|0|{2|}2949|2954|}
{2010241001|XXGlegend_face_face|4914|0|7868|0|{}2954|2955|}
{2010605001|XXGgraph_legend_legend|4915|0|7870|0|{3|}2949|2956|}
{2010241001|XXGlegend_face_face|4916|0|7872|0|{}2956|2957|}
{2010605001|XXGgraph_legend_legend|4917|0|7874|0|{4|}2949|2958|}
{2010241001|XXGlegend_face_face|4918|0|7876|0|{}2958|2959|}
{2010604001|XXGgraph_flow_flow|4919|0|7878|0|{Flow_1|}2949|2960|}
{2010604001|XXGgraph_flow_flow|4920|0|7880|0|{Flow_10|}2949|2961|}
{2010604001|XXGgraph_flow_flow|4921|0|7882|0|{Flow_11|}2949|2962|}
{2010604001|XXGgraph_flow_flow|4922|0|7884|0|{Flow_12|}2949|2963|}
{2010604001|XXGgraph_flow_flow|4923|0|7886|0|{Flow_18|}2949|2964|}
{2010604001|XXGgraph_flow_flow|4924|0|7888|0|{Flow_2|}2949|2965|}
{2010604001|XXGgraph_flow_flow|4925|0|7890|0|{Flow_3|}2949|2966|}
{2010604001|XXGgraph_flow_flow|4926|0|7892|0|{Flow_4|}2949|2967|}
{2010604001|XXGgraph_flow_flow|4927|0|7894|0|{Flow_5|}2949|2968|}
{2010604001|XXGgraph_flow_flow|4928|0|7896|0|{Flow_6|}2949|2969|}
{2010604001|XXGgraph_flow_flow|4929|0|7898|0|{Flow_7|}2949|2970|}
{2010604001|XXGgraph_flow_flow|4930|0|7900|0|{Flow_8|}2949|2971|}
{2010604001|XXGgraph_flow_flow|4931|0|7902|0|{Flow_9|}2949|2972|}
{2010601001|XXGgraph_vertex_vertex|4932|0|7904|0|{Dedup_Sorted|}2949|2973|}
{2010212001|XXGvertex_oport_oport|4933|0|7906|0|{0|out|}2973|2974|}
{2010213001|XXGoport_dst_flow|4934|0|7908|0|{0|}2974|2965|}
{2010212001|XXGvertex_oport_oport|4935|0|7909|0|{1|dup|}2973|2975|}
{2010213001|XXGoport_dst_flow|4936|0|7911|0|{0|}2975|2969|}
{2010212001|XXGvertex_oport_oport|4937|0|7912|0|{2|reject|}2973|2976|}
{2010212001|XXGvertex_oport_oport|4938|0|7914|0|{3|error|}2973|2977|}
{2010212001|XXGvertex_oport_oport|4939|0|7916|0|{4|log|}2973|2978|}
{2010211001|XXGvertex_iport_iport|4940|0|7918|0|{0|in|}2973|2979|}
{2010214001|XXGiport_src_flow|4941|0|7920|0|{0|}2979|2960|}
{2010006001|XXGobject_psameas_object|4942|0|7921|0|{Layout|Layout|0|0|}2973|2980|}
{2010212001|XXGvertex_oport_oport|4943|0|7923|0|{0|out|}2980|2981|}
{2010213001|XXGoport_dst_flow|4944|0|7925|0|{0|}2981|2963|}
{2010212001|XXGvertex_oport_oport|4945|0|7926|0|{1|reject|}2980|2982|}
{2010212001|XXGvertex_oport_oport|4946|0|7928|0|{2|error|}2980|2983|}
{2010212001|XXGvertex_oport_oport|4947|0|7930|0|{3|log|}2980|2984|}
{2010211001|XXGvertex_iport_iport|4948|0|7932|0|{0|in|}2980|2985|}
{2010214001|XXGiport_src_flow|4949|0|7934|0|{0|}2985|2961|}
{2010006001|XXGobject_psameas_object|4950|0|7935|0|{in_metadata|out0_metadata|0|0|}2980|2986|}
{2010212001|XXGvertex_oport_oport|4951|0|7937|0|{0|out0|}2986|2987|}
{2010213001|XXGoport_dst_flow|4952|0|7939|0|{0|}2987|2964|}
{2010212001|XXGvertex_oport_oport|4953|0|7940|0|{1|reject0|}2986|2988|}
{2010212001|XXGvertex_oport_oport|4954|0|7942|0|{2|error0|}2986|2989|}
{2010212001|XXGvertex_oport_oport|4955|0|7944|0|{3|log|}2986|2990|}
{2010211001|XXGvertex_iport_iport|4956|0|7946|0|{0|in|}2986|2991|}
{2010006001|XXGobject_psameas_object|4957|0|7948|0|{Layout|Layout|0|0|}2986|242|}
{2010006001|XXGobject_psameas_object|4958|0|7949|0|{in_metadata|out4_metadata|0|0|}2986|242|}
{2010006001|XXGobject_psameas_object|4959|0|7950|0|{reject0_metadata|out4_metadata|0|0|}2986|242|}
{2010006001|XXGobject_psameas_object|4960|0|7951|0|{reject_metadata|out0_metadata|0|0|}2980|2986|}
{2010006001|XXGobject_psameas_object|4961|0|7952|0|{dup_metadata|out_metadata|0|0|}2973|2992|}
{2010212001|XXGvertex_oport_oport|4962|0|7954|0|{0|out|}2992|2993|}
{2010213001|XXGoport_dst_flow|4963|0|7956|0|{0|}2993|2962|}
{2010212001|XXGvertex_oport_oport|4964|0|7957|0|{1|deselect|}2992|2994|}
{2010213001|XXGoport_dst_flow|4965|0|7959|0|{0|}2994|2970|}
{2010212001|XXGvertex_oport_oport|4966|0|7960|0|{2|reject|}2992|2995|}
{2010212001|XXGvertex_oport_oport|4967|0|7962|0|{3|error|}2992|2996|}
{2010212001|XXGvertex_oport_oport|4968|0|7964|0|{4|log|}2992|2997|}
{2010211001|XXGvertex_iport_iport|4969|0|7966|0|{0|in|}2992|2998|}
{2010214001|XXGiport_src_flow|4970|0|7968|0|{0|}2998|2971|}
{2010006001|XXGobject_psameas_object|4971|0|7969|0|{Layout|Layout|0|0|}2992|2980|}
{2010006001|XXGobject_psameas_object|4972|0|7970|0|{deselect_metadata|out_metadata|0|0|}2992|2992|}
{2010006001|XXGobject_psameas_object|4973|0|7971|0|{in_metadata|out_metadata|0|0|}2992|2980|}
{2010006001|XXGobject_psameas_object|4974|0|7972|0|{reject_metadata|out_metadata|0|0|}2992|2980|}
{2010006001|XXGobject_psameas_object|4975|0|7973|0|{in_metadata|out_metadata|0|0|}2973|2992|}
{2010006001|XXGobject_psameas_object|4976|0|7974|0|{out_metadata|out_metadata|0|0|}2973|2992|}
{2010006001|XXGobject_psameas_object|4977|0|7975|0|{reject_metadata|out_metadata|0|0|}2973|2992|}
{2010601001|XXGgraph_vertex_vertex|4978|0|7976|0|{FBE_Filter_match_records|}2949|2992|}
{2010601001|XXGgraph_vertex_vertex|4979|0|7977|0|{Get_Hash_on_SRC_NK|}2949|2986|}
{2010601001|XXGgraph_vertex_vertex|4980|0|7978|0|{Merge|}2949|2999|}
{2010212001|XXGvertex_oport_oport|4981|0|7980|0|{0|out|}2999|3000|}
{2010213001|XXGoport_dst_flow|4982|0|7982|0|{0|}3000|2971|}
{2010211001|XXGvertex_iport_iport|4983|0|7983|0|{0|in|}2999|3001|}
{2010214001|XXGiport_src_flow|4984|0|7985|0|{0|}3001|2966|}
{2010214001|XXGiport_src_flow|4985|0|7986|0|{1|}3001|2963|}
{2010006001|XXGobject_psameas_object|4986|0|7987|0|{Layout|Layout|0|0|}2999|2980|}
{2010006001|XXGobject_psameas_object|4987|0|7988|0|{in_metadata|out_metadata|0|0|}2999|2980|}
{2010006001|XXGobject_psameas_object|4988|0|7989|0|{out_metadata|out_metadata|0|0|}2999|2980|}
{2010601001|XXGgraph_vertex_vertex|4989|0|7990|0|{Normalize_Get_all_records_from_Archive_Lkp|}2949|2980|}
{2010601001|XXGgraph_vertex_vertex|4990|0|7991|0|{Normalize_Get_all_records_from_lkp|}2949|3002|}
{2010212001|XXGvertex_oport_oport|4991|0|7993|0|{0|out|}3002|3003|}
{2010213001|XXGoport_dst_flow|4992|0|7995|0|{0|}3003|2966|}
{2010212001|XXGvertex_oport_oport|4993|0|7996|0|{1|reject|}3002|3004|}
{2010212001|XXGvertex_oport_oport|4994|0|7998|0|{2|error|}3002|3005|}
{2010212001|XXGvertex_oport_oport|4995|0|8000|0|{3|log|}3002|3006|}
{2010211001|XXGvertex_iport_iport|4996|0|8002|0|{0|in|}3002|3007|}
{2010214001|XXGiport_src_flow|4997|0|8004|0|{0|}3007|2968|}
{2010006001|XXGobject_psameas_object|4998|0|8005|0|{in_metadata|out0_metadata|0|0|}3002|2986|}
{2010006001|XXGobject_psameas_object|4999|0|8006|0|{reject_metadata|out0_metadata|0|0|}3002|2986|}
{2010601001|XXGgraph_vertex_vertex|5000|0|8007|0|{Replicate|}2949|3008|}
{2010212001|XXGvertex_oport_oport|5001|0|8009|0|{0|out|}3008|3009|}
{2010211001|XXGvertex_iport_iport|5002|0|8011|0|{0|in|}3008|3010|}
{2010214001|XXGiport_src_flow|5003|0|8013|0|{0|}3010|2965|}
{2010006001|XXGobject_psameas_object|5004|0|8014|0|{Layout|Layout|0|0|}3008|2980|}
{2010006001|XXGobject_psameas_object|5005|0|8015|0|{in_metadata|out_metadata|0|0|}3008|2992|}
{2010006001|XXGobject_psameas_object|5006|0|8016|0|{out_metadata|out_metadata|0|0|}3008|2992|}
{2010601001|XXGgraph_vertex_vertex|5007|0|8017|0|{Replicate_1|}2949|3011|}
{2010212001|XXGvertex_oport_oport|5008|0|8019|0|{0|out|}3011|3012|}
{2010213001|XXGoport_dst_flow|5009|0|8021|0|{0|}3012|2968|}
{2010213001|XXGoport_dst_flow|5010|0|8022|0|{1|}3012|2961|}
{2010211001|XXGvertex_iport_iport|5011|0|8023|0|{0|in|}3011|3013|}
{2010214001|XXGiport_src_flow|5012|0|8025|0|{0|}3013|2967|}
{2010006001|XXGobject_psameas_object|5013|0|8026|0|{Layout|Layout|0|0|}3011|2980|}
{2010006001|XXGobject_psameas_object|5014|0|8027|0|{in_metadata|out0_metadata|0|0|}3011|2986|}
{2010006001|XXGobject_psameas_object|5015|0|8028|0|{out_metadata|out0_metadata|0|0|}3011|2986|}
{2010601001|XXGgraph_vertex_vertex|5016|0|8029|0|{Sort_Remove_Dup_On_Hash|}2949|3014|}
{2010604001|XXGgraph_flow_flow|5017|0|8031|0|{Flow_3|}3014|3015|}
{2010604001|XXGgraph_flow_flow|5018|0|8033|0|{Flow_5|}3014|3016|}
{2010601001|XXGgraph_vertex_vertex|5019|0|8035|0|{Dedup_Sorted_1|}3014|3017|}
{2010212001|XXGvertex_oport_oport|5020|0|8037|0|{0|out|}3017|3018|}
{2010212001|XXGvertex_oport_oport|5021|0|8039|0|{1|dup|}3017|3019|}
{2010212001|XXGvertex_oport_oport|5022|0|8041|0|{2|reject|}3017|3020|}
{2010212001|XXGvertex_oport_oport|5023|0|8043|0|{3|error|}3017|3021|}
{2010212001|XXGvertex_oport_oport|5024|0|8045|0|{4|log|}3017|3022|}
{2010211001|XXGvertex_iport_iport|5025|0|8047|0|{0|in|}3017|3023|}
{2010214001|XXGiport_src_flow|5026|0|8049|0|{0|}3023|3016|}
{2010006001|XXGobject_psameas_object|5027|0|8050|0|{Layout|Layout|0|0|}3017|2980|}
{2010006001|XXGobject_psameas_object|5028|0|8051|0|{dup_metadata|out0_metadata|0|0|}3017|2986|}
{2010006001|XXGobject_psameas_object|5029|0|8052|0|{in_metadata|out0_metadata|0|0|}3017|2986|}
{2010006001|XXGobject_psameas_object|5030|0|8053|0|{out_metadata|out0_metadata|0|0|}3017|2986|}
{2010006001|XXGobject_psameas_object|5031|0|8054|0|{reject_metadata|out0_metadata|0|0|}3017|2986|}
{2010601001|XXGgraph_vertex_vertex|5032|0|8055|0|{PBKS_dxf_hk_part1_|}3014|3024|}
{2010604001|XXGgraph_flow_flow|5033|0|8057|0|{Flow_1|}3024|3025|}
{2010601001|XXGgraph_vertex_vertex|5034|0|8059|0|{Partition_by_Key|}3024|3026|}
{2010212001|XXGvertex_oport_oport|5035|0|8061|0|{0|out|}3026|3027|}
{2010213001|XXGoport_dst_flow|5036|0|8063|0|{0|}3027|3025|}
{2010211001|XXGvertex_iport_iport|5037|0|8064|0|{0|in|}3026|3028|}
{2010006001|XXGobject_psameas_object|5038|0|8066|0|{in_metadata|out0_metadata|0|0|}3026|2986|}
{2010006001|XXGobject_psameas_object|5039|0|8067|0|{out_metadata|out0_metadata|0|0|}3026|2986|}
{2010601001|XXGgraph_vertex_vertex|5040|0|8068|0|{Sort|}3024|3029|}
{2010212001|XXGvertex_oport_oport|5041|0|8070|0|{0|out|}3029|3030|}
{2010211001|XXGvertex_iport_iport|5042|0|8072|0|{0|in|}3029|3031|}
{2010214001|XXGiport_src_flow|5043|0|8074|0|{0|}3031|3025|}
{2010006001|XXGobject_psameas_object|5044|0|8075|0|{in_metadata|out0_metadata|0|0|}3029|2986|}
{2010006001|XXGobject_psameas_object|5045|0|8076|0|{out_metadata|out0_metadata|0|0|}3029|2986|}
{2010212001|XXGvertex_oport_oport|5046|0|8077|0|{0|out0|}3024|3032|}
{2010216002|XXGoport_binding_oport|5047|0|8079|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}3032|3030|}
{2010213001|XXGoport_dst_flow|5048|0|8080|0|{0|}3032|3015|}
{2010211001|XXGvertex_iport_iport|5049|0|8081|0|{0|in0|}3024|3033|}
{2010215002|XXGiport_binding_iport|5050|0|8083|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}3033|3028|}
{2010006001|XXGobject_psameas_object|5051|0|8084|0|{OutputLayout|Layout|0|0|}3024|2980|}
{2010601001|XXGgraph_vertex_vertex|5052|0|8085|0|{Sort_within_Groups|}3014|3034|}
{2010212001|XXGvertex_oport_oport|5053|0|8087|0|{0|out|}3034|3035|}
{2010213001|XXGoport_dst_flow|5054|0|8089|0|{0|}3035|3016|}
{2010211001|XXGvertex_iport_iport|5055|0|8090|0|{0|in|}3034|3036|}
{2010214001|XXGiport_src_flow|5056|0|8092|0|{0|}3036|3015|}
{2010006001|XXGobject_psameas_object|5057|0|8093|0|{Layout|Layout|0|0|}3034|2980|}
{2010006001|XXGobject_psameas_object|5058|0|8094|0|{in_metadata|out0_metadata|0|0|}3034|2986|}
{2010006001|XXGobject_psameas_object|5059|0|8095|0|{out_metadata|out0_metadata|0|0|}3034|2986|}
{2010212001|XXGvertex_oport_oport|5060|0|8096|0|{0|out0|}3014|3037|}
{2010216002|XXGoport_binding_oport|5061|0|8098|0|{.5|.5|{0|}14672|}3037|3018|}
{2010213001|XXGoport_dst_flow|5062|0|8099|0|{0|}3037|2967|}
{2010212001|XXGvertex_oport_oport|5063|0|8100|0|{1|out1|}3014|3038|}
{2010216002|XXGoport_binding_oport|5064|0|8102|0|{.5|.5|{0|}14673|}3038|3019|}
{2010213001|XXGoport_dst_flow|5065|0|8103|0|{0|}3038|2972|}
{2010211001|XXGvertex_iport_iport|5066|0|8104|0|{0|in0|}3014|3039|}
{2010215002|XXGiport_binding_iport|5067|0|8106|0|{.5|.5|{0|}14671|}3039|3033|}
{2010214001|XXGiport_src_flow|5068|0|8107|0|{0|}3039|2964|}
{2010601001|XXGgraph_vertex_vertex|5069|0|8108|0|{Sort_on_Adjusted_Natural_Keys|}2949|3040|}
{2010212001|XXGvertex_oport_oport|5070|0|8110|0|{0|out|}3040|3041|}
{2010213001|XXGoport_dst_flow|5071|0|8112|0|{0|}3041|2960|}
{2010211001|XXGvertex_iport_iport|5072|0|8113|0|{0|in|}3040|3042|}
{2010214001|XXGiport_src_flow|5073|0|8115|0|{0|}3042|2962|}
{2010006001|XXGobject_psameas_object|5074|0|8116|0|{Layout|Layout|0|0|}3040|2980|}
{2010006001|XXGobject_psameas_object|5075|0|8117|0|{in_metadata|out_metadata|0|0|}3040|2992|}
{2010006001|XXGobject_psameas_object|5076|0|8118|0|{out_metadata|out_metadata|0|0|}3040|2992|}
{2010601001|XXGgraph_vertex_vertex|5077|0|8119|0|{Trash_1|}2949|3043|}
{2010211001|XXGvertex_iport_iport|5078|0|8121|0|{0|in|}3043|3044|}
{2010214001|XXGiport_src_flow|5079|0|8123|0|{0|}3044|2970|}
{2010006001|XXGobject_psameas_object|5080|0|8124|0|{Layout|Layout|0|0|}3043|2980|}
{2010006001|XXGobject_psameas_object|5081|0|8125|0|{in_metadata|out_metadata|0|0|}3043|2992|}
{2010601001|XXGgraph_vertex_vertex|5082|0|8126|0|{Trash_2|}2949|3045|}
{2010211001|XXGvertex_iport_iport|5083|0|8128|0|{0|in|}3045|3046|}
{2010214001|XXGiport_src_flow|5084|0|8130|0|{0|}3046|2969|}
{2010006001|XXGobject_psameas_object|5085|0|8131|0|{Layout|Layout|0|0|}3045|2980|}
{2010006001|XXGobject_psameas_object|5086|0|8132|0|{in_metadata|out_metadata|0|0|}3045|2992|}
{2010601001|XXGgraph_vertex_vertex|5087|0|8133|0|{Trash_3|}2949|3047|}
{2010211001|XXGvertex_iport_iport|5088|0|8135|0|{0|in|}3047|3048|}
{2010214001|XXGiport_src_flow|5089|0|8137|0|{0|}3048|2972|}
{2010006001|XXGobject_psameas_object|5090|0|8138|0|{Layout|Layout|0|0|}3047|2980|}
{2010006001|XXGobject_psameas_object|5091|0|8139|0|{in_metadata|out0_metadata|0|0|}3047|2986|}
{2010212001|XXGvertex_oport_oport|5092|0|8140|0|{0|out0|}2949|3049|}
{2010216002|XXGoport_binding_oport|5093|0|8142|0|{.5|.5|{0|}14919|}3049|3009|}
{2010213001|XXGoport_dst_flow|5094|0|8143|0|{0|}3049|2946|}
{2010211001|XXGvertex_iport_iport|5095|0|8144|0|{0|in0|}2949|3050|}
{2010215002|XXGiport_binding_iport|5096|0|8146|0|{.5|.5|{0|}14918|}3050|2991|}
{2010214001|XXGiport_src_flow|5097|0|8147|0|{0|}3050|2944|}
{2010601001|XXGgraph_vertex_vertex|5098|0|8148|0|{Get_Last_Lookup_Record|}2939|3051|}
{2010605001|XXGgraph_legend_legend|5099|0|8150|0|{0|}3051|3052|}
{2010241001|XXGlegend_face_face|5100|0|8152|0|{}3052|3053|}
{2010605001|XXGgraph_legend_legend|5101|0|8154|0|{1|}3051|3054|}
{2010241001|XXGlegend_face_face|5102|0|8156|0|{}3054|3055|}
{2010605001|XXGgraph_legend_legend|5103|0|8158|0|{2|}3051|3056|}
{2010241001|XXGlegend_face_face|5104|0|8160|0|{}3056|3057|}
{2010605001|XXGgraph_legend_legend|5105|0|8162|0|{3|}3051|3058|}
{2010241001|XXGlegend_face_face|5106|0|8164|0|{}3058|3059|}
{2010604001|XXGgraph_flow_flow|5107|0|8166|0|{Flow_1|}3051|3060|}
{2010604001|XXGgraph_flow_flow|5108|0|8168|0|{Flow_2|}3051|3061|}
{2010604001|XXGgraph_flow_flow|5109|0|8170|0|{Flow_3|}3051|3062|}
{2010604001|XXGgraph_flow_flow|5110|0|8172|0|{Flow_4|}3051|3063|}
{2010604001|XXGgraph_flow_flow|5111|0|8174|0|{Flow_5|}3051|3064|}
{2010604001|XXGgraph_flow_flow|5112|0|8176|0|{Flow_6|}3051|3065|}
{2010604001|XXGgraph_flow_flow|5113|0|8178|0|{Flow_7|}3051|3066|}
{2010604001|XXGgraph_flow_flow|5114|0|8180|0|{Flow_8|}3051|3067|}
{2010604001|XXGgraph_flow_flow|5115|0|8182|0|{Flow_9|}3051|3068|}
{2010601001|XXGgraph_vertex_vertex|5116|0|8184|0|{Dedup_Sorted|}3051|3069|}
{2010212001|XXGvertex_oport_oport|5117|0|8186|0|{0|out|}3069|3070|}
{2010212001|XXGvertex_oport_oport|5118|0|8188|0|{1|dup|}3069|3071|}
{2010213001|XXGoport_dst_flow|5119|0|8190|0|{0|}3071|3067|}
{2010212001|XXGvertex_oport_oport|5120|0|8191|0|{2|reject|}3069|3072|}
{2010212001|XXGvertex_oport_oport|5121|0|8193|0|{3|error|}3069|3073|}
{2010212001|XXGvertex_oport_oport|5122|0|8195|0|{4|log|}3069|3074|}
{2010211001|XXGvertex_iport_iport|5123|0|8197|0|{0|in|}3069|3075|}
{2010214001|XXGiport_src_flow|5124|0|8199|0|{0|}3075|3062|}
{2010006001|XXGobject_psameas_object|5125|0|8200|0|{Layout|Layout|0|0|}3069|2980|}
{2010006001|XXGobject_psameas_object|5126|0|8201|0|{dup_metadata|out_metadata|0|0|}3069|3076|}
{2010212001|XXGvertex_oport_oport|5127|0|8203|0|{0|out|}3076|3077|}
{2010213001|XXGoport_dst_flow|5128|0|8205|0|{0|}3077|3061|}
{2010212001|XXGvertex_oport_oport|5129|0|8206|0|{1|deselect|}3076|3078|}
{2010213001|XXGoport_dst_flow|5130|0|8208|0|{0|}3078|3068|}
{2010212001|XXGvertex_oport_oport|5131|0|8209|0|{2|reject|}3076|3079|}
{2010212001|XXGvertex_oport_oport|5132|0|8211|0|{3|error|}3076|3080|}
{2010212001|XXGvertex_oport_oport|5133|0|8213|0|{4|log|}3076|3081|}
{2010211001|XXGvertex_iport_iport|5134|0|8215|0|{0|in|}3076|3082|}
{2010214001|XXGiport_src_flow|5135|0|8217|0|{0|}3082|3064|}
{2010006001|XXGobject_psameas_object|5136|0|8218|0|{Layout|Layout|0|0|}3076|2980|}
{2010006001|XXGobject_psameas_object|5137|0|8219|0|{deselect_metadata|out_metadata|0|0|}3076|3076|}
{2010006001|XXGobject_psameas_object|5138|0|8220|0|{in_metadata|out_metadata|0|0|}3076|3083|}
{2010212001|XXGvertex_oport_oport|5139|0|8222|0|{0|out|}3083|3084|}
{2010213001|XXGoport_dst_flow|5140|0|8224|0|{0|}3084|3085|}
{2010212001|XXGvertex_oport_oport|5141|0|8226|0|{1|deselect|}3083|3086|}
{2010213001|XXGoport_dst_flow|5142|0|8228|0|{0|}3086|3087|}
{2010212001|XXGvertex_oport_oport|5143|0|8230|0|{2|reject|}3083|3088|}
{2010212001|XXGvertex_oport_oport|5144|0|8232|0|{3|error|}3083|3089|}
{2010212001|XXGvertex_oport_oport|5145|0|8234|0|{4|log|}3083|3090|}
{2010211001|XXGvertex_iport_iport|5146|0|8236|0|{0|in|}3083|3091|}
{2010006001|XXGobject_psameas_object|5147|0|8238|0|{Layout|Layout|0|0|}3083|2980|}
{2010006001|XXGobject_psameas_object|5148|0|8239|0|{in_metadata|out0_metadata|0|0|}3083|3092|}
{2010212001|XXGvertex_oport_oport|5149|0|8241|0|{0|out0|}3092|3093|}
{2010213001|XXGoport_dst_flow|5150|0|8243|0|{0|}3093|3063|}
{2010212001|XXGvertex_oport_oport|5151|0|8244|0|{1|reject0|}3092|3094|}
{2010212001|XXGvertex_oport_oport|5152|0|8246|0|{2|error0|}3092|3095|}
{2010212001|XXGvertex_oport_oport|5153|0|8248|0|{3|log|}3092|3096|}
{2010211001|XXGvertex_iport_iport|5154|0|8250|0|{0|in|}3092|3097|}
{2010214001|XXGiport_src_flow|5155|0|8252|0|{0|}3097|3065|}
{2010006001|XXGobject_psameas_object|5156|0|8253|0|{Layout|Layout|0|0|}3092|2980|}
{2010006001|XXGobject_psameas_object|5157|0|8254|0|{in_metadata|out0_metadata|0|0|}3092|3098|}
{2010212001|XXGvertex_oport_oport|5158|0|8256|0|{0|out0|}3098|3099|}
{2010213001|XXGoport_dst_flow|5159|0|8258|0|{0|}3099|3060|}
{2010212001|XXGvertex_oport_oport|5160|0|8259|0|{1|reject0|}3098|3100|}
{2010212001|XXGvertex_oport_oport|5161|0|8261|0|{2|error0|}3098|3101|}
{2010212001|XXGvertex_oport_oport|5162|0|8263|0|{3|log|}3098|3102|}
{2010211001|XXGvertex_iport_iport|5163|0|8265|0|{0|in|}3098|3103|}
{2010006001|XXGobject_psameas_object|5164|0|8267|0|{Layout|Layout|0|0|}3098|242|}
{2010006001|XXGobject_psameas_object|5165|0|8268|0|{in_metadata|out4_metadata|0|0|}3098|242|}
{2010006001|XXGobject_psameas_object|5166|0|8269|0|{reject0_metadata|out4_metadata|0|0|}3098|242|}
{2010006001|XXGobject_psameas_object|5167|0|8270|0|{reject0_metadata|out0_metadata|0|0|}3092|3098|}
{2010006001|XXGobject_psameas_object|5168|0|8271|0|{reject_metadata|out0_metadata|0|0|}3083|3092|}
{2010006001|XXGobject_psameas_object|5169|0|8272|0|{reject_metadata|out_metadata|0|0|}3076|3083|}
{2010006001|XXGobject_psameas_object|5170|0|8273|0|{in_metadata|out_metadata|0|0|}3069|3076|}
{2010006001|XXGobject_psameas_object|5171|0|8274|0|{out_metadata|out_metadata|0|0|}3069|3076|}
{2010006001|XXGobject_psameas_object|5172|0|8275|0|{reject_metadata|out_metadata|0|0|}3069|3076|}
{2010601001|XXGgraph_vertex_vertex|5173|0|8276|0|{FBE_filter_matching_lkp_record|}3051|3076|}
{2010601001|XXGgraph_vertex_vertex|5174|0|8277|0|{RFMT_Get_Hash_On_NK|}3051|3098|}
{2010601001|XXGgraph_vertex_vertex|5175|0|8278|0|{RFMT_Lookup_with_IDS|}3051|3092|}
{2010601001|XXGgraph_vertex_vertex|5176|0|8279|0|{Sort_De_dup|}3051|3104|}
{2010604001|XXGgraph_flow_flow|5177|0|8281|0|{Flow_10|}3104|3105|}
{2010604001|XXGgraph_flow_flow|5178|0|8283|0|{Flow_4|}3104|3106|}
{2010244001|XXGflow_watcher_watcher|5179|0|8285|0|{}3106|3107|}
{2010601001|XXGgraph_vertex_vertex|5180|0|8287|0|{Dedup_Sorted_1|}3104|3108|}
{2010212001|XXGvertex_oport_oport|5181|0|8289|0|{0|out|}3108|3109|}
{2010212001|XXGvertex_oport_oport|5182|0|8291|0|{1|dup|}3108|3110|}
{2010212001|XXGvertex_oport_oport|5183|0|8293|0|{2|reject|}3108|3111|}
{2010212001|XXGvertex_oport_oport|5184|0|8295|0|{3|error|}3108|3112|}
{2010212001|XXGvertex_oport_oport|5185|0|8297|0|{4|log|}3108|3113|}
{2010211001|XXGvertex_iport_iport|5186|0|8299|0|{0|in|}3108|3114|}
{2010214001|XXGiport_src_flow|5187|0|8301|0|{0|}3114|3105|}
{2010006001|XXGobject_psameas_object|5188|0|8302|0|{Layout|Layout|0|0|}3108|2980|}
{2010006001|XXGobject_psameas_object|5189|0|8303|0|{dup_metadata|out0_metadata|0|0|}3108|3098|}
{2010006001|XXGobject_psameas_object|5190|0|8304|0|{in_metadata|out0_metadata|0|0|}3108|3098|}
{2010006001|XXGobject_psameas_object|5191|0|8305|0|{out_metadata|out0_metadata|0|0|}3108|3098|}
{2010006001|XXGobject_psameas_object|5192|0|8306|0|{reject_metadata|out0_metadata|0|0|}3108|3098|}
{2010601001|XXGgraph_vertex_vertex|5193|0|8307|0|{PBKS_dxf_hk_part1_|}3104|3115|}
{2010604001|XXGgraph_flow_flow|5194|0|8309|0|{Flow_1|}3115|3116|}
{2010601001|XXGgraph_vertex_vertex|5195|0|8311|0|{Partition_by_Key|}3115|3117|}
{2010212001|XXGvertex_oport_oport|5196|0|8313|0|{0|out|}3117|3118|}
{2010213001|XXGoport_dst_flow|5197|0|8315|0|{0|}3118|3116|}
{2010211001|XXGvertex_iport_iport|5198|0|8316|0|{0|in|}3117|3119|}
{2010006001|XXGobject_psameas_object|5199|0|8318|0|{in_metadata|out0_metadata|0|0|}3117|3098|}
{2010006001|XXGobject_psameas_object|5200|0|8319|0|{out_metadata|out0_metadata|0|0|}3117|3098|}
{2010601001|XXGgraph_vertex_vertex|5201|0|8320|0|{Sort|}3115|3120|}
{2010212001|XXGvertex_oport_oport|5202|0|8322|0|{0|out|}3120|3121|}
{2010211001|XXGvertex_iport_iport|5203|0|8324|0|{0|in|}3120|3122|}
{2010214001|XXGiport_src_flow|5204|0|8326|0|{0|}3122|3116|}
{2010006001|XXGobject_psameas_object|5205|0|8327|0|{in_metadata|out0_metadata|0|0|}3120|3098|}
{2010006001|XXGobject_psameas_object|5206|0|8328|0|{out_metadata|out0_metadata|0|0|}3120|3098|}
{2010212001|XXGvertex_oport_oport|5207|0|8329|0|{0|out0|}3115|3123|}
{2010216002|XXGoport_binding_oport|5208|0|8331|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}3123|3121|}
{2010213001|XXGoport_dst_flow|5209|0|8332|0|{0|}3123|3106|}
{2010211001|XXGvertex_iport_iport|5210|0|8333|0|{0|in0|}3115|3124|}
{2010215002|XXGiport_binding_iport|5211|0|8335|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}3124|3119|}
{2010006001|XXGobject_psameas_object|5212|0|8336|0|{InputLayout|Layout|0|0|}3115|242|}
{2010006001|XXGobject_psameas_object|5213|0|8337|0|{OutputLayout|Layout|0|0|}3115|2980|}
{2010601001|XXGgraph_vertex_vertex|5214|0|8338|0|{Sort_within_Groups_1|}3104|3125|}
{2010212001|XXGvertex_oport_oport|5215|0|8340|0|{0|out|}3125|3126|}
{2010213001|XXGoport_dst_flow|5216|0|8342|0|{0|}3126|3105|}
{2010211001|XXGvertex_iport_iport|5217|0|8343|0|{0|in|}3125|3127|}
{2010214001|XXGiport_src_flow|5218|0|8345|0|{0|}3127|3106|}
{2010006001|XXGobject_psameas_object|5219|0|8346|0|{Layout|Layout|0|0|}3125|2980|}
{2010006001|XXGobject_psameas_object|5220|0|8347|0|{in_metadata|out0_metadata|0|0|}3125|3098|}
{2010006001|XXGobject_psameas_object|5221|0|8348|0|{out_metadata|out0_metadata|0|0|}3125|3098|}
{2010212001|XXGvertex_oport_oport|5222|0|8349|0|{0|out0|}3104|3128|}
{2010216002|XXGoport_binding_oport|5223|0|8351|0|{.5|.5|{0|}7792|}3128|3109|}
{2010213001|XXGoport_dst_flow|5224|0|8352|0|{0|}3128|3065|}
{2010212001|XXGvertex_oport_oport|5225|0|8353|0|{1|out1|}3104|3129|}
{2010216002|XXGoport_binding_oport|5226|0|8355|0|{.5|.5|{0|}7793|}3129|3110|}
{2010213001|XXGoport_dst_flow|5227|0|8356|0|{0|}3129|3066|}
{2010211001|XXGvertex_iport_iport|5228|0|8357|0|{0|in0|}3104|3130|}
{2010215002|XXGiport_binding_iport|5229|0|8359|0|{.5|.5|{0|}7791|}3130|3124|}
{2010214001|XXGiport_src_flow|5230|0|8360|0|{0|}3130|3060|}
{2010601001|XXGgraph_vertex_vertex|5231|0|8361|0|{Sort_within_Groups|}3051|3131|}
{2010212001|XXGvertex_oport_oport|5232|0|8363|0|{0|out|}3131|3132|}
{2010213001|XXGoport_dst_flow|5233|0|8365|0|{0|}3132|3062|}
{2010211001|XXGvertex_iport_iport|5234|0|8366|0|{0|in|}3131|3133|}
{2010214001|XXGiport_src_flow|5235|0|8368|0|{0|}3133|3061|}
{2010006001|XXGobject_psameas_object|5236|0|8369|0|{Layout|Layout|0|0|}3131|2980|}
{2010006001|XXGobject_psameas_object|5237|0|8370|0|{in_metadata|out_metadata|0|0|}3131|3076|}
{2010006001|XXGobject_psameas_object|5238|0|8371|0|{out_metadata|out_metadata|0|0|}3131|3076|}
{2010601001|XXGgraph_vertex_vertex|5239|0|8372|0|{Trash|}3051|3134|}
{2010211001|XXGvertex_iport_iport|5240|0|8374|0|{0|in|}3134|3135|}
{2010214001|XXGiport_src_flow|5241|0|8376|0|{0|}3135|3066|}
{2010006001|XXGobject_psameas_object|5242|0|8377|0|{Layout|Layout|0|0|}3134|2980|}
{2010006001|XXGobject_psameas_object|5243|0|8378|0|{in_metadata|out0_metadata|0|0|}3134|3098|}
{2010601001|XXGgraph_vertex_vertex|5244|0|8379|0|{Trash_1|}3051|3136|}
{2010211001|XXGvertex_iport_iport|5245|0|8381|0|{0|in|}3136|3137|}
{2010214001|XXGiport_src_flow|5246|0|8383|0|{0|}3137|3067|}
{2010006001|XXGobject_psameas_object|5247|0|8384|0|{Layout|Layout|0|0|}3136|2980|}
{2010006001|XXGobject_psameas_object|5248|0|8385|0|{in_metadata|out_metadata|0|0|}3136|3076|}
{2010601001|XXGgraph_vertex_vertex|5249|0|8386|0|{Trash_2|}3051|3138|}
{2010211001|XXGvertex_iport_iport|5250|0|8388|0|{0|in|}3138|3139|}
{2010214001|XXGiport_src_flow|5251|0|8390|0|{0|}3139|3068|}
{2010006001|XXGobject_psameas_object|5252|0|8391|0|{Layout|Layout|0|0|}3138|2980|}
{2010006001|XXGobject_psameas_object|5253|0|8392|0|{in_metadata|out_metadata|0|0|}3138|3076|}
{2010601001|XXGgraph_vertex_vertex|5254|0|8393|0|{Two_Step_Lookup|}3051|3140|}
{2010605001|XXGgraph_legend_legend|5255|0|8395|0|{0|}3140|3141|}
{2010241001|XXGlegend_face_face|5256|0|8397|0|{}3141|3142|}
{2010604001|XXGgraph_flow_flow|5257|0|8399|0|{Flow_1|}3140|3087|}
{2010604001|XXGgraph_flow_flow|5258|0|8400|0|{Flow_2|}3140|3143|}
{2010604001|XXGgraph_flow_flow|5259|0|8402|0|{Flow_3|}3140|3085|}
{2010604001|XXGgraph_flow_flow|5260|0|8403|0|{Flow_4|}3140|3144|}
{2010604001|XXGgraph_flow_flow|5261|0|8405|0|{Flow_5|}3140|3145|}
{2010604001|XXGgraph_flow_flow|5262|0|8407|0|{Flow_6|}3140|3146|}
{2010601001|XXGgraph_vertex_vertex|5263|0|8409|0|{FBE_Pass_Only_Matching_Rec|}3140|3147|}
{2010212001|XXGvertex_oport_oport|5264|0|8411|0|{0|out|}3147|3148|}
{2010213001|XXGoport_dst_flow|5265|0|8413|0|{0|}3148|3145|}
{2010212001|XXGvertex_oport_oport|5266|0|8414|0|{1|deselect|}3147|3149|}
{2010213001|XXGoport_dst_flow|5267|0|8416|0|{0|}3149|3146|}
{2010212001|XXGvertex_oport_oport|5268|0|8417|0|{2|reject|}3147|3150|}
{2010212001|XXGvertex_oport_oport|5269|0|8419|0|{3|error|}3147|3151|}
{2010212001|XXGvertex_oport_oport|5270|0|8421|0|{4|log|}3147|3152|}
{2010211001|XXGvertex_iport_iport|5271|0|8423|0|{0|in|}3147|3153|}
{2010214001|XXGiport_src_flow|5272|0|8425|0|{0|}3153|3144|}
{2010006001|XXGobject_psameas_object|5273|0|8426|0|{Layout|Layout|0|0|}3147|2980|}
{2010006001|XXGobject_psameas_object|5274|0|8427|0|{deselect_metadata|out_metadata|0|0|}3147|3083|}
{2010006001|XXGobject_psameas_object|5275|0|8428|0|{in_metadata|out0_metadata|0|0|}3147|3154|}
{2010212001|XXGvertex_oport_oport|5276|0|8430|0|{0|out0|}3154|3155|}
{2010213001|XXGoport_dst_flow|5277|0|8432|0|{0|}3155|3144|}
{2010212001|XXGvertex_oport_oport|5278|0|8433|0|{1|reject0|}3154|3156|}
{2010212001|XXGvertex_oport_oport|5279|0|8435|0|{2|error0|}3154|3157|}
{2010212001|XXGvertex_oport_oport|5280|0|8437|0|{3|log|}3154|3158|}
{2010211001|XXGvertex_iport_iport|5281|0|8439|0|{0|in|}3154|3159|}
{2010214001|XXGiport_src_flow|5282|0|8441|0|{0|}3159|3143|}
{2010006001|XXGobject_psameas_object|5283|0|8442|0|{Layout|Layout|0|0|}3154|2980|}
{2010006001|XXGobject_psameas_object|5284|0|8443|0|{in_metadata|out0_metadata|0|0|}3154|3160|}
{2010212001|XXGvertex_oport_oport|5285|0|8445|0|{0|out0|}3160|3161|}
{2010213001|XXGoport_dst_flow|5286|0|8447|0|{0|}3161|3143|}
{2010212001|XXGvertex_oport_oport|5287|0|8448|0|{1|reject0|}3160|3162|}
{2010212001|XXGvertex_oport_oport|5288|0|8450|0|{2|error0|}3160|3163|}
{2010212001|XXGvertex_oport_oport|5289|0|8452|0|{3|log|}3160|3164|}
{2010211001|XXGvertex_iport_iport|5290|0|8454|0|{0|in|}3160|3165|}
{2010214001|XXGiport_src_flow|5291|0|8456|0|{0|}3165|3087|}
{2010006001|XXGobject_psameas_object|5292|0|8457|0|{Layout|Layout|0|0|}3160|2980|}
{2010006001|XXGobject_psameas_object|5293|0|8458|0|{in_metadata|deselect_metadata|0|0|}3160|3083|}
{2010006001|XXGobject_psameas_object|5294|0|8459|0|{reject0_metadata|deselect_metadata|0|0|}3160|3083|}
{2010006001|XXGobject_psameas_object|5295|0|8460|0|{reject0_metadata|out0_metadata|0|0|}3154|3160|}
{2010006001|XXGobject_psameas_object|5296|0|8461|0|{out_metadata|out_metadata|0|0|}3147|3083|}
{2010006001|XXGobject_psameas_object|5297|0|8462|0|{reject_metadata|out0_metadata|0|0|}3147|3154|}
{2010601001|XXGgraph_vertex_vertex|5298|0|8463|0|{FBE_filter_matching_lkp_record|}3140|3083|}
{2010601001|XXGgraph_vertex_vertex|5299|0|8464|0|{Merge|}3140|3166|}
{2010212001|XXGvertex_oport_oport|5300|0|8466|0|{0|out|}3166|3167|}
{2010211001|XXGvertex_iport_iport|5301|0|8468|0|{0|in|}3166|3168|}
{2010214001|XXGiport_src_flow|5302|0|8470|0|{0|}3168|3085|}
{2010214001|XXGiport_src_flow|5303|0|8471|0|{1|}3168|3145|}
{2010006001|XXGobject_psameas_object|5304|0|8472|0|{Layout|Layout|0|0|}3166|2980|}
{2010006001|XXGobject_psameas_object|5305|0|8473|0|{in_metadata|out_metadata|0|0|}3166|3083|}
{2010006001|XXGobject_psameas_object|5306|0|8474|0|{out_metadata|out_metadata|0|0|}3166|3083|}
{2010601001|XXGgraph_vertex_vertex|5307|0|8475|0|{No_Match_Record_In_Second_Pass|}3140|3169|}
{2010211001|XXGvertex_iport_iport|5308|0|8477|0|{0|in|}3169|3170|}
{2010214001|XXGiport_src_flow|5309|0|8479|0|{0|}3170|3146|}
{2010006001|XXGobject_psameas_object|5310|0|8480|0|{Layout|Layout|0|0|}3169|2980|}
{2010006001|XXGobject_psameas_object|5311|0|8481|0|{in_metadata|out_metadata|0|0|}3169|3083|}
{2010601001|XXGgraph_vertex_vertex|5312|0|8482|0|{RFMT_Lookup_with_IDS_Archive_|}3140|3154|}
{2010601001|XXGgraph_vertex_vertex|5313|0|8483|0|{RFMT_Pass_only_Hash_Keys|}3140|3160|}
{2010212001|XXGvertex_oport_oport|5314|0|8484|0|{0|out0|}3140|3171|}
{2010216002|XXGoport_binding_oport|5315|0|8486|0|{.5|.5|{0|}15500|}3171|3167|}
{2010213001|XXGoport_dst_flow|5316|0|8487|0|{0|}3171|3064|}
{2010211001|XXGvertex_iport_iport|5317|0|8488|0|{0|in0|}3140|3172|}
{2010215002|XXGiport_binding_iport|5318|0|8490|0|{.5|.5|{0|}15499|}3172|3091|}
{2010214001|XXGiport_src_flow|5319|0|8491|0|{0|}3172|3063|}
{2010212001|XXGvertex_oport_oport|5320|0|8492|0|{0|out0|}3051|3173|}
{2010216002|XXGoport_binding_oport|5321|0|8494|0|{.5|.5|{0|}15515|}3173|3070|}
{2010213001|XXGoport_dst_flow|5322|0|8495|0|{0|}3173|2947|}
{2010211001|XXGvertex_iport_iport|5323|0|8496|0|{0|in1|}3051|3174|}
{2010215002|XXGiport_binding_iport|5324|0|8498|0|{.5|.5|{0|}15514|}3174|3103|}
{2010214001|XXGiport_src_flow|5325|0|8499|0|{0|}3174|2945|}
{2010601001|XXGgraph_vertex_vertex|5326|0|8500|0|{Merge|}2939|3175|}
{2010212001|XXGvertex_oport_oport|5327|0|8502|0|{0|out|}3175|3176|}
{2010211001|XXGvertex_iport_iport|5328|0|8504|0|{0|in|}3175|3177|}
{2010214001|XXGiport_src_flow|5329|0|8506|0|{0|}3177|2948|}
{2010006001|XXGobject_psameas_object|5330|0|8507|0|{Layout|Layout|0|0|}3175|169|}
{2010006001|XXGobject_psameas_object|5331|0|8508|0|{in_metadata|write_metadata|0|0|}3175|169|}
{2010006001|XXGobject_psameas_object|5332|0|8509|0|{out_metadata|write_metadata|0|0|}3175|169|}
{2010601001|XXGgraph_vertex_vertex|5333|0|8510|0|{Replicate|}2939|3178|}
{2010212001|XXGvertex_oport_oport|5334|0|8512|0|{0|out|}3178|3179|}
{2010213001|XXGoport_dst_flow|5335|0|8514|0|{0|}3179|2944|}
{2010213001|XXGoport_dst_flow|5336|0|8515|0|{1|}3179|2945|}
{2010211001|XXGvertex_iport_iport|5337|0|8516|0|{0|in|}3178|3180|}
{2010006001|XXGobject_psameas_object|5338|0|8518|0|{Layout|Layout|0|0|}3178|242|}
{2010006001|XXGobject_psameas_object|5339|0|8519|0|{in_metadata|out4_metadata|0|0|}3178|242|}
{2010006001|XXGobject_psameas_object|5340|0|8520|0|{out_metadata|out4_metadata|0|0|}3178|242|}
{2010601001|XXGgraph_vertex_vertex|5341|0|8521|0|{Replicate_1|}2939|3181|}
{2010212001|XXGvertex_oport_oport|5342|0|8523|0|{0|out|}3181|3182|}
{2010213001|XXGoport_dst_flow|5343|0|8525|0|{0|}3182|2948|}
{2010211001|XXGvertex_iport_iport|5344|0|8526|0|{0|in|}3181|3183|}
{2010214001|XXGiport_src_flow|5345|0|8528|0|{0|}3183|2946|}
{2010214001|XXGiport_src_flow|5346|0|8529|0|{1|}3183|2947|}
{2010006001|XXGobject_psameas_object|5347|0|8530|0|{Layout|Layout|0|0|}3181|2980|}
{2010006001|XXGobject_psameas_object|5348|0|8531|0|{in_metadata|out_metadata|0|0|}3181|3076|}
{2010006001|XXGobject_psameas_object|5349|0|8532|0|{out_metadata|out_metadata|0|0|}3181|3076|}
{2010212001|XXGvertex_oport_oport|5350|0|8533|0|{0|out0|}2939|3184|}
{2010216002|XXGoport_binding_oport|5351|0|8535|0|{.5|.5|{0|}7802|}3184|3176|}
{2010213001|XXGoport_dst_flow|5352|0|8536|0|{0|}3184|144|}
{2010211001|XXGvertex_iport_iport|5353|0|8537|0|{0|in0|}2939|3185|}
{2010215002|XXGiport_binding_iport|5354|0|8539|0|{.5|.5|{0|}7801|}3185|3180|}
{2010007001|XXGobject_proto_object|5355|0|8540|0|{}2939|3186|}
{2010605001|XXGgraph_legend_legend|5356|0|8542|0|{0|}3186|3187|}
{2010241001|XXGlegend_face_face|5357|0|8544|0|{}3187|3188|}
{2010605001|XXGgraph_legend_legend|5358|0|8546|0|{1|}3186|3189|}
{2010241001|XXGlegend_face_face|5359|0|8548|0|{}3189|3190|}
{2010604001|XXGgraph_flow_flow|5360|0|8550|0|{Flow_1|}3186|3191|}
{2010604001|XXGgraph_flow_flow|5361|0|8552|0|{Flow_2|}3186|3192|}
{2010604001|XXGgraph_flow_flow|5362|0|8554|0|{Flow_3|}3186|3193|}
{2010604001|XXGgraph_flow_flow|5363|0|8556|0|{Flow_4|}3186|3194|}
{2010604001|XXGgraph_flow_flow|5364|0|8558|0|{Flow_5|}3186|3195|}
{2010601001|XXGgraph_vertex_vertex|5365|0|8560|0|{Get_All_LookUp_Record|}3186|3196|}
{2010605001|XXGgraph_legend_legend|5366|0|8562|0|{0|}3196|3197|}
{2010241001|XXGlegend_face_face|5367|0|8564|0|{}3197|3198|}
{2010605001|XXGgraph_legend_legend|5368|0|8566|0|{1|}3196|3199|}
{2010241001|XXGlegend_face_face|5369|0|8568|0|{}3199|3200|}
{2010605001|XXGgraph_legend_legend|5370|0|8570|0|{2|}3196|3201|}
{2010241001|XXGlegend_face_face|5371|0|8572|0|{}3201|3202|}
{2010605001|XXGgraph_legend_legend|5372|0|8574|0|{3|}3196|3203|}
{2010241001|XXGlegend_face_face|5373|0|8576|0|{}3203|3204|}
{2010605001|XXGgraph_legend_legend|5374|0|8578|0|{4|}3196|3205|}
{2010241001|XXGlegend_face_face|5375|0|8580|0|{}3205|3206|}
{2010604001|XXGgraph_flow_flow|5376|0|8582|0|{Flow_1|}3196|3207|}
{2010604001|XXGgraph_flow_flow|5377|0|8584|0|{Flow_10|}3196|3208|}
{2010604001|XXGgraph_flow_flow|5378|0|8586|0|{Flow_11|}3196|3209|}
{2010604001|XXGgraph_flow_flow|5379|0|8588|0|{Flow_12|}3196|3210|}
{2010604001|XXGgraph_flow_flow|5380|0|8590|0|{Flow_18|}3196|3211|}
{2010604001|XXGgraph_flow_flow|5381|0|8592|0|{Flow_2|}3196|3212|}
{2010604001|XXGgraph_flow_flow|5382|0|8594|0|{Flow_3|}3196|3213|}
{2010604001|XXGgraph_flow_flow|5383|0|8596|0|{Flow_4|}3196|3214|}
{2010604001|XXGgraph_flow_flow|5384|0|8598|0|{Flow_5|}3196|3215|}
{2010604001|XXGgraph_flow_flow|5385|0|8600|0|{Flow_6|}3196|3216|}
{2010604001|XXGgraph_flow_flow|5386|0|8602|0|{Flow_7|}3196|3217|}
{2010604001|XXGgraph_flow_flow|5387|0|8604|0|{Flow_8|}3196|3218|}
{2010604001|XXGgraph_flow_flow|5388|0|8606|0|{Flow_9|}3196|3219|}
{2010601001|XXGgraph_vertex_vertex|5389|0|8608|0|{Dedup_Sorted|}3196|3220|}
{2010212001|XXGvertex_oport_oport|5390|0|8610|0|{0|out|}3220|3221|}
{2010213001|XXGoport_dst_flow|5391|0|8612|0|{0|}3221|3212|}
{2010212001|XXGvertex_oport_oport|5392|0|8613|0|{1|dup|}3220|3222|}
{2010213001|XXGoport_dst_flow|5393|0|8615|0|{0|}3222|3216|}
{2010212001|XXGvertex_oport_oport|5394|0|8616|0|{2|reject|}3220|3223|}
{2010212001|XXGvertex_oport_oport|5395|0|8618|0|{3|error|}3220|3224|}
{2010212001|XXGvertex_oport_oport|5396|0|8620|0|{4|log|}3220|3225|}
{2010211001|XXGvertex_iport_iport|5397|0|8622|0|{0|in|}3220|3226|}
{2010214001|XXGiport_src_flow|5398|0|8624|0|{0|}3226|3207|}
{2010007001|XXGobject_proto_object|5399|0|8625|0|{}3220|3227|}
{2010212001|XXGvertex_oport_oport|5400|0|8627|0|{0|out|}3227|3228|}
{2010006001|XXGobject_psameas_object|5401|0|8629|0|{metadata|out_metadata|1|0|}3228|3227|}
{2010212001|XXGvertex_oport_oport|5402|0|8630|0|{1|dup|}3227|3229|}
{2010006001|XXGobject_psameas_object|5403|0|8632|0|{metadata|dup_metadata|1|0|}3229|3227|}
{2010212001|XXGvertex_oport_oport|5404|0|8633|0|{2|reject|}3227|3230|}
{2010006001|XXGobject_psameas_object|5405|0|8635|0|{metadata|reject_metadata|1|0|}3230|3227|}
{2010212001|XXGvertex_oport_oport|5406|0|8636|0|{3|error|}3227|3231|}
{2010006001|XXGobject_psameas_object|5407|0|8638|0|{metadata|error_metadata|1|0|}3231|3227|}
{2010212001|XXGvertex_oport_oport|5408|0|8639|0|{4|log|}3227|3232|}
{2010006001|XXGobject_psameas_object|5409|0|8641|0|{metadata|log_metadata|1|0|}3232|3227|}
{2010211001|XXGvertex_iport_iport|5410|0|8642|0|{0|in|}3227|3233|}
{2010006001|XXGobject_psameas_object|5411|0|8644|0|{metadata|in_metadata|1|0|}3233|3227|}
{2010601001|XXGgraph_vertex_vertex|5412|0|8645|0|{FBE_Filter_match_records|}3196|3234|}
{2010212001|XXGvertex_oport_oport|5413|0|8647|0|{0|out|}3234|3235|}
{2010213001|XXGoport_dst_flow|5414|0|8649|0|{0|}3235|3209|}
{2010212001|XXGvertex_oport_oport|5415|0|8650|0|{1|deselect|}3234|3236|}
{2010213001|XXGoport_dst_flow|5416|0|8652|0|{0|}3236|3217|}
{2010212001|XXGvertex_oport_oport|5417|0|8653|0|{2|reject|}3234|3237|}
{2010212001|XXGvertex_oport_oport|5418|0|8655|0|{3|error|}3234|3238|}
{2010212001|XXGvertex_oport_oport|5419|0|8657|0|{4|log|}3234|3239|}
{2010211001|XXGvertex_iport_iport|5420|0|8659|0|{0|in|}3234|3240|}
{2010214001|XXGiport_src_flow|5421|0|8661|0|{0|}3240|3218|}
{2010007001|XXGobject_proto_object|5422|0|8662|0|{}3234|3241|}
{2010212001|XXGvertex_oport_oport|5423|0|8664|0|{0|out|}3241|3242|}
{2010006001|XXGobject_psameas_object|5424|0|8666|0|{metadata|out_metadata|1|0|}3242|3241|}
{2010212001|XXGvertex_oport_oport|5425|0|8667|0|{1|deselect|}3241|3243|}
{2010006001|XXGobject_psameas_object|5426|0|8669|0|{metadata|deselect_metadata|1|0|}3243|3241|}
{2010212001|XXGvertex_oport_oport|5427|0|8670|0|{2|reject|}3241|3244|}
{2010006001|XXGobject_psameas_object|5428|0|8672|0|{metadata|reject_metadata|1|0|}3244|3241|}
{2010212001|XXGvertex_oport_oport|5429|0|8673|0|{3|error|}3241|3245|}
{2010006001|XXGobject_psameas_object|5430|0|8675|0|{metadata|error_metadata|1|0|}3245|3241|}
{2010212001|XXGvertex_oport_oport|5431|0|8676|0|{4|log|}3241|3246|}
{2010006001|XXGobject_psameas_object|5432|0|8678|0|{metadata|log_metadata|1|0|}3246|3241|}
{2010211001|XXGvertex_iport_iport|5433|0|8679|0|{0|in|}3241|3247|}
{2010006001|XXGobject_psameas_object|5434|0|8681|0|{metadata|in_metadata|1|0|}3247|3241|}
{2010601001|XXGgraph_vertex_vertex|5435|0|8682|0|{Get_Hash_on_SRC_NK|}3196|3248|}
{2010212001|XXGvertex_oport_oport|5436|0|8684|0|{0|out0|}3248|3249|}
{2010213001|XXGoport_dst_flow|5437|0|8686|0|{0|}3249|3211|}
{2010212001|XXGvertex_oport_oport|5438|0|8687|0|{1|reject0|}3248|3250|}
{2010212001|XXGvertex_oport_oport|5439|0|8689|0|{2|error0|}3248|3251|}
{2010212001|XXGvertex_oport_oport|5440|0|8691|0|{3|log|}3248|3252|}
{2010211001|XXGvertex_iport_iport|5441|0|8693|0|{0|in|}3248|3253|}
{2010007001|XXGobject_proto_object|5442|0|8695|0|{}3248|3254|}
{2010212001|XXGvertex_oport_oport|5443|0|8697|0|{0|out0|}3254|3255|}
{2010006001|XXGobject_psameas_object|5444|0|8699|0|{metadata|out0_metadata|1|0|}3255|3254|}
{2010006001|XXGobject_psameas_object|5445|0|8700|0|{transform0|transform0|1|0|}3255|3254|}
{2010212001|XXGvertex_oport_oport|5446|0|8701|0|{1|reject0|}3254|3256|}
{2010006001|XXGobject_psameas_object|5447|0|8703|0|{metadata|reject0_metadata|1|0|}3256|3254|}
{2010212001|XXGvertex_oport_oport|5448|0|8704|0|{2|error0|}3254|3257|}
{2010006001|XXGobject_psameas_object|5449|0|8706|0|{metadata|error0_metadata|1|0|}3257|3254|}
{2010212001|XXGvertex_oport_oport|5450|0|8707|0|{3|log|}3254|3258|}
{2010006001|XXGobject_psameas_object|5451|0|8709|0|{metadata|log_metadata|1|0|}3258|3254|}
{2010211001|XXGvertex_iport_iport|5452|0|8710|0|{0|in|}3254|3259|}
{2010006001|XXGobject_psameas_object|5453|0|8712|0|{metadata|in_metadata|1|0|}3259|3254|}
{2010601001|XXGgraph_vertex_vertex|5454|0|8713|0|{Merge|}3196|3260|}
{2010212001|XXGvertex_oport_oport|5455|0|8715|0|{0|out|}3260|3261|}
{2010213001|XXGoport_dst_flow|5456|0|8717|0|{0|}3261|3218|}
{2010211001|XXGvertex_iport_iport|5457|0|8718|0|{0|in|}3260|3262|}
{2010214001|XXGiport_src_flow|5458|0|8720|0|{0|}3262|3213|}
{2010214001|XXGiport_src_flow|5459|0|8721|0|{1|}3262|3210|}
{2010007001|XXGobject_proto_object|5460|0|8722|0|{}3260|3263|}
{2010212001|XXGvertex_oport_oport|5461|0|8724|0|{0|out|}3263|3264|}
{2010006001|XXGobject_psameas_object|5462|0|8726|0|{metadata|out_metadata|1|0|}3264|3263|}
{2010211001|XXGvertex_iport_iport|5463|0|8727|0|{0|in|}3263|3265|}
{2010006001|XXGobject_psameas_object|5464|0|8729|0|{metadata|in_metadata|1|0|}3265|3263|}
{2010601001|XXGgraph_vertex_vertex|5465|0|8730|0|{Normalize_Get_all_records_from_Archive_Lkp|}3196|3266|}
{2010212001|XXGvertex_oport_oport|5466|0|8732|0|{0|out|}3266|3267|}
{2010213001|XXGoport_dst_flow|5467|0|8734|0|{0|}3267|3210|}
{2010212001|XXGvertex_oport_oport|5468|0|8735|0|{1|reject|}3266|3268|}
{2010212001|XXGvertex_oport_oport|5469|0|8737|0|{2|error|}3266|3269|}
{2010212001|XXGvertex_oport_oport|5470|0|8739|0|{3|log|}3266|3270|}
{2010211001|XXGvertex_iport_iport|5471|0|8741|0|{0|in|}3266|3271|}
{2010214001|XXGiport_src_flow|5472|0|8743|0|{0|}3271|3208|}
{2010007001|XXGobject_proto_object|5473|0|8744|0|{}3266|3272|}
{2010212001|XXGvertex_oport_oport|5474|0|8746|0|{0|out|}3272|3273|}
{2010006001|XXGobject_psameas_object|5475|0|8748|0|{metadata|out_metadata|1|0|}3273|3272|}
{2010212001|XXGvertex_oport_oport|5476|0|8749|0|{1|reject|}3272|3274|}
{2010006001|XXGobject_psameas_object|5477|0|8751|0|{metadata|reject_metadata|1|0|}3274|3272|}
{2010212001|XXGvertex_oport_oport|5478|0|8752|0|{2|error|}3272|3275|}
{2010006001|XXGobject_psameas_object|5479|0|8754|0|{metadata|error_metadata|1|0|}3275|3272|}
{2010212001|XXGvertex_oport_oport|5480|0|8755|0|{3|log|}3272|3276|}
{2010006001|XXGobject_psameas_object|5481|0|8757|0|{metadata|log_metadata|1|0|}3276|3272|}
{2010211001|XXGvertex_iport_iport|5482|0|8758|0|{0|in|}3272|3277|}
{2010006001|XXGobject_psameas_object|5483|0|8760|0|{metadata|in_metadata|1|0|}3277|3272|}
{2010601001|XXGgraph_vertex_vertex|5484|0|8761|0|{Normalize_Get_all_records_from_lkp|}3196|3278|}
{2010212001|XXGvertex_oport_oport|5485|0|8763|0|{0|out|}3278|3279|}
{2010213001|XXGoport_dst_flow|5486|0|8765|0|{0|}3279|3213|}
{2010212001|XXGvertex_oport_oport|5487|0|8766|0|{1|reject|}3278|3280|}
{2010212001|XXGvertex_oport_oport|5488|0|8768|0|{2|error|}3278|3281|}
{2010212001|XXGvertex_oport_oport|5489|0|8770|0|{3|log|}3278|3282|}
{2010211001|XXGvertex_iport_iport|5490|0|8772|0|{0|in|}3278|3283|}
{2010214001|XXGiport_src_flow|5491|0|8774|0|{0|}3283|3215|}
{2010007001|XXGobject_proto_object|5492|0|8775|0|{}3278|3284|}
{2010212001|XXGvertex_oport_oport|5493|0|8777|0|{0|out|}3284|3285|}
{2010006001|XXGobject_psameas_object|5494|0|8779|0|{metadata|out_metadata|1|0|}3285|3284|}
{2010212001|XXGvertex_oport_oport|5495|0|8780|0|{1|reject|}3284|3286|}
{2010006001|XXGobject_psameas_object|5496|0|8782|0|{metadata|reject_metadata|1|0|}3286|3284|}
{2010212001|XXGvertex_oport_oport|5497|0|8783|0|{2|error|}3284|3287|}
{2010006001|XXGobject_psameas_object|5498|0|8785|0|{metadata|error_metadata|1|0|}3287|3284|}
{2010212001|XXGvertex_oport_oport|5499|0|8786|0|{3|log|}3284|3288|}
{2010006001|XXGobject_psameas_object|5500|0|8788|0|{metadata|log_metadata|1|0|}3288|3284|}
{2010211001|XXGvertex_iport_iport|5501|0|8789|0|{0|in|}3284|3289|}
{2010006001|XXGobject_psameas_object|5502|0|8791|0|{metadata|in_metadata|1|0|}3289|3284|}
{2010601001|XXGgraph_vertex_vertex|5503|0|8792|0|{Replicate|}3196|3290|}
{2010212001|XXGvertex_oport_oport|5504|0|8794|0|{0|out|}3290|3291|}
{2010211001|XXGvertex_iport_iport|5505|0|8796|0|{0|in|}3290|3292|}
{2010214001|XXGiport_src_flow|5506|0|8798|0|{0|}3292|3212|}
{2010007001|XXGobject_proto_object|5507|0|8799|0|{}3290|3293|}
{2010212001|XXGvertex_oport_oport|5508|0|8801|0|{0|out|}3293|3294|}
{2010006001|XXGobject_psameas_object|5509|0|8803|0|{metadata|out_metadata|1|0|}3294|3293|}
{2010211001|XXGvertex_iport_iport|5510|0|8804|0|{0|in|}3293|3295|}
{2010006001|XXGobject_psameas_object|5511|0|8806|0|{metadata|in_metadata|1|0|}3295|3293|}
{2010601001|XXGgraph_vertex_vertex|5512|0|8807|0|{Replicate_1|}3196|3296|}
{2010212001|XXGvertex_oport_oport|5513|0|8809|0|{0|out|}3296|3297|}
{2010213001|XXGoport_dst_flow|5514|0|8811|0|{0|}3297|3215|}
{2010213001|XXGoport_dst_flow|5515|0|8812|0|{1|}3297|3208|}
{2010211001|XXGvertex_iport_iport|5516|0|8813|0|{0|in|}3296|3298|}
{2010214001|XXGiport_src_flow|5517|0|8815|0|{0|}3298|3214|}
{2010007001|XXGobject_proto_object|5518|0|8816|0|{}3296|3299|}
{2010212001|XXGvertex_oport_oport|5519|0|8818|0|{0|out|}3299|3300|}
{2010006001|XXGobject_psameas_object|5520|0|8820|0|{metadata|out_metadata|1|0|}3300|3299|}
{2010211001|XXGvertex_iport_iport|5521|0|8821|0|{0|in|}3299|3301|}
{2010006001|XXGobject_psameas_object|5522|0|8823|0|{metadata|in_metadata|1|0|}3301|3299|}
{2010601001|XXGgraph_vertex_vertex|5523|0|8824|0|{Sort_Remove_Dup_On_Hash|}3196|3302|}
{2010604001|XXGgraph_flow_flow|5524|0|8826|0|{Flow_3|}3302|3303|}
{2010604001|XXGgraph_flow_flow|5525|0|8828|0|{Flow_5|}3302|3304|}
{2010601001|XXGgraph_vertex_vertex|5526|0|8830|0|{Dedup_Sorted_1|}3302|3305|}
{2010212001|XXGvertex_oport_oport|5527|0|8832|0|{0|out|}3305|3306|}
{2010212001|XXGvertex_oport_oport|5528|0|8834|0|{1|dup|}3305|3307|}
{2010212001|XXGvertex_oport_oport|5529|0|8836|0|{2|reject|}3305|3308|}
{2010212001|XXGvertex_oport_oport|5530|0|8838|0|{3|error|}3305|3309|}
{2010212001|XXGvertex_oport_oport|5531|0|8840|0|{4|log|}3305|3310|}
{2010211001|XXGvertex_iport_iport|5532|0|8842|0|{0|in|}3305|3311|}
{2010214001|XXGiport_src_flow|5533|0|8844|0|{0|}3311|3304|}
{2010007001|XXGobject_proto_object|5534|0|8845|0|{}3305|3312|}
{2010212001|XXGvertex_oport_oport|5535|0|8847|0|{0|out|}3312|3313|}
{2010006001|XXGobject_psameas_object|5536|0|8849|0|{metadata|out_metadata|1|0|}3313|3312|}
{2010212001|XXGvertex_oport_oport|5537|0|8850|0|{1|dup|}3312|3314|}
{2010006001|XXGobject_psameas_object|5538|0|8852|0|{metadata|dup_metadata|1|0|}3314|3312|}
{2010212001|XXGvertex_oport_oport|5539|0|8853|0|{2|reject|}3312|3315|}
{2010006001|XXGobject_psameas_object|5540|0|8855|0|{metadata|reject_metadata|1|0|}3315|3312|}
{2010212001|XXGvertex_oport_oport|5541|0|8856|0|{3|error|}3312|3316|}
{2010006001|XXGobject_psameas_object|5542|0|8858|0|{metadata|error_metadata|1|0|}3316|3312|}
{2010212001|XXGvertex_oport_oport|5543|0|8859|0|{4|log|}3312|3317|}
{2010006001|XXGobject_psameas_object|5544|0|8861|0|{metadata|log_metadata|1|0|}3317|3312|}
{2010211001|XXGvertex_iport_iport|5545|0|8862|0|{0|in|}3312|3318|}
{2010006001|XXGobject_psameas_object|5546|0|8864|0|{metadata|in_metadata|1|0|}3318|3312|}
{2010601001|XXGgraph_vertex_vertex|5547|0|8865|0|{PBKS_dxf_hk_part1_|}3302|3319|}
{2010604001|XXGgraph_flow_flow|5548|0|8867|0|{Flow_1|}3319|3320|}
{2010601001|XXGgraph_vertex_vertex|5549|0|8869|0|{Partition_by_Key|}3319|3321|}
{2010212001|XXGvertex_oport_oport|5550|0|8871|0|{0|out|}3321|3322|}
{2010213001|XXGoport_dst_flow|5551|0|8873|0|{0|}3322|3320|}
{2010211001|XXGvertex_iport_iport|5552|0|8874|0|{0|in|}3321|3323|}
{2010601001|XXGgraph_vertex_vertex|5553|0|8876|0|{Sort|}3319|3324|}
{2010212001|XXGvertex_oport_oport|5554|0|8878|0|{0|out|}3324|3325|}
{2010211001|XXGvertex_iport_iport|5555|0|8880|0|{0|in|}3324|3326|}
{2010214001|XXGiport_src_flow|5556|0|8882|0|{0|}3326|3320|}
{2010212001|XXGvertex_oport_oport|5557|0|8883|0|{0|out0|}3319|3327|}
{2010216002|XXGoport_binding_oport|5558|0|8885|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}3327|3325|}
{2010213001|XXGoport_dst_flow|5559|0|8886|0|{0|}3327|3303|}
{2010211001|XXGvertex_iport_iport|5560|0|8887|0|{0|in0|}3319|3328|}
{2010215002|XXGiport_binding_iport|5561|0|8889|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}3328|3323|}
{2010007001|XXGobject_proto_object|5562|0|8890|0|{}3319|3329|}
{2010604001|XXGgraph_flow_flow|5563|0|8892|0|{Flow_1|}3329|3330|}
{2010601001|XXGgraph_vertex_vertex|5564|0|8894|0|{Partition_by_Key|}3329|3331|}
{2010212001|XXGvertex_oport_oport|5565|0|8896|0|{0|out|}3331|3332|}
{2010213001|XXGoport_dst_flow|5566|0|8898|0|{0|}3332|3330|}
{2010211001|XXGvertex_iport_iport|5567|0|8899|0|{0|in|}3331|3333|}
{2010007001|XXGobject_proto_object|5568|0|8901|0|{}3331|3334|}
{2010212001|XXGvertex_oport_oport|5569|0|8903|0|{0|out|}3334|3335|}
{2010006001|XXGobject_psameas_object|5570|0|8905|0|{metadata|out_metadata|1|0|}3335|3334|}
{2010211001|XXGvertex_iport_iport|5571|0|8906|0|{0|in|}3334|3336|}
{2010006001|XXGobject_psameas_object|5572|0|8908|0|{metadata|in_metadata|1|0|}3336|3334|}
{2010006001|XXGobject_psameas_object|5573|0|8909|0|{Layout|InputLayout|1|0|}3331|3329|}
{2010006001|XXGobject_psameas_object|5574|0|8910|0|{key|Key|1|0|}3331|3329|}
{2010601001|XXGgraph_vertex_vertex|5575|0|8911|0|{Sort|}3329|3337|}
{2010212001|XXGvertex_oport_oport|5576|0|8913|0|{0|out|}3337|3338|}
{2010211001|XXGvertex_iport_iport|5577|0|8915|0|{0|in|}3337|3339|}
{2010214001|XXGiport_src_flow|5578|0|8917|0|{0|}3339|3330|}
{2010007001|XXGobject_proto_object|5579|0|8918|0|{}3337|3340|}
{2010212001|XXGvertex_oport_oport|5580|0|8920|0|{0|out|}3340|3341|}
{2010006001|XXGobject_psameas_object|5581|0|8922|0|{metadata|out_metadata|1|0|}3341|3340|}
{2010211001|XXGvertex_iport_iport|5582|0|8923|0|{0|in|}3340|3342|}
{2010006001|XXGobject_psameas_object|5583|0|8925|0|{metadata|in_metadata|1|0|}3342|3340|}
{2010006001|XXGobject_psameas_object|5584|0|8926|0|{Layout|OutputLayout|1|0|}3337|3329|}
{2010006001|XXGobject_psameas_object|5585|0|8927|0|{key|Key|1|0|}3337|3329|}
{2010006001|XXGobject_psameas_object|5586|0|8928|0|{max_core|Max_core|1|0|}3337|3329|}
{2010212001|XXGvertex_oport_oport|5587|0|8929|0|{0|out0|}3329|3343|}
{2010216002|XXGoport_binding_oport|5588|0|8931|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}3343|3338|}
{2010211001|XXGvertex_iport_iport|5589|0|8932|0|{0|in0|}3329|3344|}
{2010215002|XXGiport_binding_iport|5590|0|8934|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}3344|3333|}
{2010006001|XXGobject_psameas_object|5591|0|8935|0|{InputLayout|Layout|0|0|}3319|3248|}
{2010601001|XXGgraph_vertex_vertex|5592|0|8936|0|{Sort_within_Groups|}3302|3345|}
{2010212001|XXGvertex_oport_oport|5593|0|8938|0|{0|out|}3345|3346|}
{2010213001|XXGoport_dst_flow|5594|0|8940|0|{0|}3346|3304|}
{2010211001|XXGvertex_iport_iport|5595|0|8941|0|{0|in|}3345|3347|}
{2010214001|XXGiport_src_flow|5596|0|8943|0|{0|}3347|3303|}
{2010007001|XXGobject_proto_object|5597|0|8944|0|{}3345|3348|}
{2010212001|XXGvertex_oport_oport|5598|0|8946|0|{0|out|}3348|3349|}
{2010006001|XXGobject_psameas_object|5599|0|8948|0|{metadata|out_metadata|1|0|}3349|3348|}
{2010211001|XXGvertex_iport_iport|5600|0|8949|0|{0|in|}3348|3350|}
{2010006001|XXGobject_psameas_object|5601|0|8951|0|{metadata|in_metadata|1|0|}3350|3348|}
{2010212001|XXGvertex_oport_oport|5602|0|8952|0|{0|out0|}3302|3351|}
{2010216002|XXGoport_binding_oport|5603|0|8954|0|{.5|.5|{0|}14672|}3351|3306|}
{2010213001|XXGoport_dst_flow|5604|0|8955|0|{0|}3351|3214|}
{2010212001|XXGvertex_oport_oport|5605|0|8956|0|{1|out1|}3302|3352|}
{2010216002|XXGoport_binding_oport|5606|0|8958|0|{.5|.5|{0|}14673|}3352|3307|}
{2010213001|XXGoport_dst_flow|5607|0|8959|0|{0|}3352|3219|}
{2010211001|XXGvertex_iport_iport|5608|0|8960|0|{0|in0|}3302|3353|}
{2010215002|XXGiport_binding_iport|5609|0|8962|0|{.5|.5|{0|}14671|}3353|3328|}
{2010214001|XXGiport_src_flow|5610|0|8963|0|{0|}3353|3211|}
{2010601001|XXGgraph_vertex_vertex|5611|0|8964|0|{Sort_on_Adjusted_Natural_Keys|}3196|3354|}
{2010212001|XXGvertex_oport_oport|5612|0|8966|0|{0|out|}3354|3355|}
{2010213001|XXGoport_dst_flow|5613|0|8968|0|{0|}3355|3207|}
{2010211001|XXGvertex_iport_iport|5614|0|8969|0|{0|in|}3354|3356|}
{2010214001|XXGiport_src_flow|5615|0|8971|0|{0|}3356|3209|}
{2010007001|XXGobject_proto_object|5616|0|8972|0|{}3354|3357|}
{2010212001|XXGvertex_oport_oport|5617|0|8974|0|{0|out|}3357|3358|}
{2010006001|XXGobject_psameas_object|5618|0|8976|0|{metadata|out_metadata|1|0|}3358|3357|}
{2010211001|XXGvertex_iport_iport|5619|0|8977|0|{0|in|}3357|3359|}
{2010006001|XXGobject_psameas_object|5620|0|8979|0|{metadata|in_metadata|1|0|}3359|3357|}
{2010601001|XXGgraph_vertex_vertex|5621|0|8980|0|{Trash_1|}3196|3360|}
{2010211001|XXGvertex_iport_iport|5622|0|8982|0|{0|in|}3360|3361|}
{2010214001|XXGiport_src_flow|5623|0|8984|0|{0|}3361|3217|}
{2010007001|XXGobject_proto_object|5624|0|8985|0|{}3360|3362|}
{2010211001|XXGvertex_iport_iport|5625|0|8987|0|{0|in|}3362|3363|}
{2010006001|XXGobject_psameas_object|5626|0|8989|0|{metadata|in_metadata|1|0|}3363|3362|}
{2010601001|XXGgraph_vertex_vertex|5627|0|8990|0|{Trash_2|}3196|3364|}
{2010211001|XXGvertex_iport_iport|5628|0|8992|0|{0|in|}3364|3365|}
{2010214001|XXGiport_src_flow|5629|0|8994|0|{0|}3365|3216|}
{2010007001|XXGobject_proto_object|5630|0|8995|0|{}3364|3366|}
{2010211001|XXGvertex_iport_iport|5631|0|8997|0|{0|in|}3366|3367|}
{2010006001|XXGobject_psameas_object|5632|0|8999|0|{metadata|in_metadata|1|0|}3367|3366|}
{2010601001|XXGgraph_vertex_vertex|5633|0|9000|0|{Trash_3|}3196|3368|}
{2010211001|XXGvertex_iport_iport|5634|0|9002|0|{0|in|}3368|3369|}
{2010214001|XXGiport_src_flow|5635|0|9004|0|{0|}3369|3219|}
{2010007001|XXGobject_proto_object|5636|0|9005|0|{}3368|3370|}
{2010211001|XXGvertex_iport_iport|5637|0|9007|0|{0|in|}3370|3371|}
{2010006001|XXGobject_psameas_object|5638|0|9009|0|{metadata|in_metadata|1|0|}3371|3370|}
{2010212001|XXGvertex_oport_oport|5639|0|9010|0|{0|out0|}3196|3372|}
{2010216002|XXGoport_binding_oport|5640|0|9012|0|{.5|.5|{0|}14899|}3372|3291|}
{2010213001|XXGoport_dst_flow|5641|0|9013|0|{0|}3372|3193|}
{2010211001|XXGvertex_iport_iport|5642|0|9014|0|{0|in0|}3196|3373|}
{2010215002|XXGiport_binding_iport|5643|0|9016|0|{.5|.5|{0|}14898|}3373|3253|}
{2010214001|XXGiport_src_flow|5644|0|9017|0|{0|}3373|3191|}
{2010601001|XXGgraph_vertex_vertex|5645|0|9018|0|{Get_Last_Lookup_Record|}3186|3374|}
{2010605001|XXGgraph_legend_legend|5646|0|9020|0|{0|}3374|3375|}
{2010241001|XXGlegend_face_face|5647|0|9022|0|{}3375|3376|}
{2010605001|XXGgraph_legend_legend|5648|0|9024|0|{1|}3374|3377|}
{2010241001|XXGlegend_face_face|5649|0|9026|0|{}3377|3378|}
{2010605001|XXGgraph_legend_legend|5650|0|9028|0|{2|}3374|3379|}
{2010241001|XXGlegend_face_face|5651|0|9030|0|{}3379|3380|}
{2010605001|XXGgraph_legend_legend|5652|0|9032|0|{3|}3374|3381|}
{2010241001|XXGlegend_face_face|5653|0|9034|0|{}3381|3382|}
{2010604001|XXGgraph_flow_flow|5654|0|9036|0|{Flow_1|}3374|3383|}
{2010604001|XXGgraph_flow_flow|5655|0|9038|0|{Flow_2|}3374|3384|}
{2010604001|XXGgraph_flow_flow|5656|0|9040|0|{Flow_3|}3374|3385|}
{2010604001|XXGgraph_flow_flow|5657|0|9042|0|{Flow_4|}3374|3386|}
{2010604001|XXGgraph_flow_flow|5658|0|9044|0|{Flow_5|}3374|3387|}
{2010604001|XXGgraph_flow_flow|5659|0|9046|0|{Flow_6|}3374|3388|}
{2010604001|XXGgraph_flow_flow|5660|0|9048|0|{Flow_7|}3374|3389|}
{2010604001|XXGgraph_flow_flow|5661|0|9050|0|{Flow_8|}3374|3390|}
{2010604001|XXGgraph_flow_flow|5662|0|9052|0|{Flow_9|}3374|3391|}
{2010601001|XXGgraph_vertex_vertex|5663|0|9054|0|{Dedup_Sorted|}3374|3392|}
{2010212001|XXGvertex_oport_oport|5664|0|9056|0|{0|out|}3392|3393|}
{2010212001|XXGvertex_oport_oport|5665|0|9058|0|{1|dup|}3392|3394|}
{2010213001|XXGoport_dst_flow|5666|0|9060|0|{0|}3394|3390|}
{2010212001|XXGvertex_oport_oport|5667|0|9061|0|{2|reject|}3392|3395|}
{2010212001|XXGvertex_oport_oport|5668|0|9063|0|{3|error|}3392|3396|}
{2010212001|XXGvertex_oport_oport|5669|0|9065|0|{4|log|}3392|3397|}
{2010211001|XXGvertex_iport_iport|5670|0|9067|0|{0|in|}3392|3398|}
{2010214001|XXGiport_src_flow|5671|0|9069|0|{0|}3398|3385|}
{2010007001|XXGobject_proto_object|5672|0|9070|0|{}3392|3399|}
{2010212001|XXGvertex_oport_oport|5673|0|9072|0|{0|out|}3399|3400|}
{2010006001|XXGobject_psameas_object|5674|0|9074|0|{metadata|out_metadata|1|0|}3400|3399|}
{2010212001|XXGvertex_oport_oport|5675|0|9075|0|{1|dup|}3399|3401|}
{2010006001|XXGobject_psameas_object|5676|0|9077|0|{metadata|dup_metadata|1|0|}3401|3399|}
{2010212001|XXGvertex_oport_oport|5677|0|9078|0|{2|reject|}3399|3402|}
{2010006001|XXGobject_psameas_object|5678|0|9080|0|{metadata|reject_metadata|1|0|}3402|3399|}
{2010212001|XXGvertex_oport_oport|5679|0|9081|0|{3|error|}3399|3403|}
{2010006001|XXGobject_psameas_object|5680|0|9083|0|{metadata|error_metadata|1|0|}3403|3399|}
{2010212001|XXGvertex_oport_oport|5681|0|9084|0|{4|log|}3399|3404|}
{2010006001|XXGobject_psameas_object|5682|0|9086|0|{metadata|log_metadata|1|0|}3404|3399|}
{2010211001|XXGvertex_iport_iport|5683|0|9087|0|{0|in|}3399|3405|}
{2010006001|XXGobject_psameas_object|5684|0|9089|0|{metadata|in_metadata|1|0|}3405|3399|}
{2010601001|XXGgraph_vertex_vertex|5685|0|9090|0|{FBE_filter_matching_lkp_record|}3374|3406|}
{2010212001|XXGvertex_oport_oport|5686|0|9092|0|{0|out|}3406|3407|}
{2010213001|XXGoport_dst_flow|5687|0|9094|0|{0|}3407|3384|}
{2010212001|XXGvertex_oport_oport|5688|0|9095|0|{1|deselect|}3406|3408|}
{2010213001|XXGoport_dst_flow|5689|0|9097|0|{0|}3408|3391|}
{2010212001|XXGvertex_oport_oport|5690|0|9098|0|{2|reject|}3406|3409|}
{2010212001|XXGvertex_oport_oport|5691|0|9100|0|{3|error|}3406|3410|}
{2010212001|XXGvertex_oport_oport|5692|0|9102|0|{4|log|}3406|3411|}
{2010211001|XXGvertex_iport_iport|5693|0|9104|0|{0|in|}3406|3412|}
{2010214001|XXGiport_src_flow|5694|0|9106|0|{0|}3412|3387|}
{2010007001|XXGobject_proto_object|5695|0|9107|0|{}3406|3413|}
{2010212001|XXGvertex_oport_oport|5696|0|9109|0|{0|out|}3413|3414|}
{2010006001|XXGobject_psameas_object|5697|0|9111|0|{metadata|out_metadata|1|0|}3414|3413|}
{2010212001|XXGvertex_oport_oport|5698|0|9112|0|{1|deselect|}3413|3415|}
{2010006001|XXGobject_psameas_object|5699|0|9114|0|{metadata|deselect_metadata|1|0|}3415|3413|}
{2010212001|XXGvertex_oport_oport|5700|0|9115|0|{2|reject|}3413|3416|}
{2010006001|XXGobject_psameas_object|5701|0|9117|0|{metadata|reject_metadata|1|0|}3416|3413|}
{2010212001|XXGvertex_oport_oport|5702|0|9118|0|{3|error|}3413|3417|}
{2010006001|XXGobject_psameas_object|5703|0|9120|0|{metadata|error_metadata|1|0|}3417|3413|}
{2010212001|XXGvertex_oport_oport|5704|0|9121|0|{4|log|}3413|3418|}
{2010006001|XXGobject_psameas_object|5705|0|9123|0|{metadata|log_metadata|1|0|}3418|3413|}
{2010211001|XXGvertex_iport_iport|5706|0|9124|0|{0|in|}3413|3419|}
{2010006001|XXGobject_psameas_object|5707|0|9126|0|{metadata|in_metadata|1|0|}3419|3413|}
{2010601001|XXGgraph_vertex_vertex|5708|0|9127|0|{RFMT_Get_Hash_On_NK|}3374|3420|}
{2010212001|XXGvertex_oport_oport|5709|0|9129|0|{0|out0|}3420|3421|}
{2010213001|XXGoport_dst_flow|5710|0|9131|0|{0|}3421|3383|}
{2010212001|XXGvertex_oport_oport|5711|0|9132|0|{1|reject0|}3420|3422|}
{2010212001|XXGvertex_oport_oport|5712|0|9134|0|{2|error0|}3420|3423|}
{2010212001|XXGvertex_oport_oport|5713|0|9136|0|{3|log|}3420|3424|}
{2010211001|XXGvertex_iport_iport|5714|0|9138|0|{0|in|}3420|3425|}
{2010007001|XXGobject_proto_object|5715|0|9140|0|{}3420|3426|}
{2010212001|XXGvertex_oport_oport|5716|0|9142|0|{0|out0|}3426|3427|}
{2010006001|XXGobject_psameas_object|5717|0|9144|0|{metadata|out0_metadata|1|0|}3427|3426|}
{2010006001|XXGobject_psameas_object|5718|0|9145|0|{transform0|transform0|1|0|}3427|3426|}
{2010212001|XXGvertex_oport_oport|5719|0|9146|0|{1|reject0|}3426|3428|}
{2010006001|XXGobject_psameas_object|5720|0|9148|0|{metadata|reject0_metadata|1|0|}3428|3426|}
{2010212001|XXGvertex_oport_oport|5721|0|9149|0|{2|error0|}3426|3429|}
{2010006001|XXGobject_psameas_object|5722|0|9151|0|{metadata|error0_metadata|1|0|}3429|3426|}
{2010212001|XXGvertex_oport_oport|5723|0|9152|0|{3|log|}3426|3430|}
{2010006001|XXGobject_psameas_object|5724|0|9154|0|{metadata|log_metadata|1|0|}3430|3426|}
{2010211001|XXGvertex_iport_iport|5725|0|9155|0|{0|in|}3426|3431|}
{2010006001|XXGobject_psameas_object|5726|0|9157|0|{metadata|in_metadata|1|0|}3431|3426|}
{2010601001|XXGgraph_vertex_vertex|5727|0|9158|0|{RFMT_Lookup_with_IDS|}3374|3432|}
{2010212001|XXGvertex_oport_oport|5728|0|9160|0|{0|out0|}3432|3433|}
{2010213001|XXGoport_dst_flow|5729|0|9162|0|{0|}3433|3386|}
{2010212001|XXGvertex_oport_oport|5730|0|9163|0|{1|reject0|}3432|3434|}
{2010212001|XXGvertex_oport_oport|5731|0|9165|0|{2|error0|}3432|3435|}
{2010212001|XXGvertex_oport_oport|5732|0|9167|0|{3|log|}3432|3436|}
{2010211001|XXGvertex_iport_iport|5733|0|9169|0|{0|in|}3432|3437|}
{2010214001|XXGiport_src_flow|5734|0|9171|0|{0|}3437|3388|}
{2010007001|XXGobject_proto_object|5735|0|9172|0|{}3432|3438|}
{2010212001|XXGvertex_oport_oport|5736|0|9174|0|{0|out0|}3438|3439|}
{2010006001|XXGobject_psameas_object|5737|0|9176|0|{metadata|out0_metadata|1|0|}3439|3438|}
{2010006001|XXGobject_psameas_object|5738|0|9177|0|{transform0|transform0|1|0|}3439|3438|}
{2010212001|XXGvertex_oport_oport|5739|0|9178|0|{1|reject0|}3438|3440|}
{2010006001|XXGobject_psameas_object|5740|0|9180|0|{metadata|reject0_metadata|1|0|}3440|3438|}
{2010212001|XXGvertex_oport_oport|5741|0|9181|0|{2|error0|}3438|3441|}
{2010006001|XXGobject_psameas_object|5742|0|9183|0|{metadata|error0_metadata|1|0|}3441|3438|}
{2010212001|XXGvertex_oport_oport|5743|0|9184|0|{3|log|}3438|3442|}
{2010006001|XXGobject_psameas_object|5744|0|9186|0|{metadata|log_metadata|1|0|}3442|3438|}
{2010211001|XXGvertex_iport_iport|5745|0|9187|0|{0|in|}3438|3443|}
{2010006001|XXGobject_psameas_object|5746|0|9189|0|{metadata|in_metadata|1|0|}3443|3438|}
{2010601001|XXGgraph_vertex_vertex|5747|0|9190|0|{Sort_De_dup|}3374|3444|}
{2010604001|XXGgraph_flow_flow|5748|0|9192|0|{Flow_10|}3444|3445|}
{2010604001|XXGgraph_flow_flow|5749|0|9194|0|{Flow_4|}3444|3446|}
{2010244001|XXGflow_watcher_watcher|5750|0|9196|0|{}3446|3447|}
{2010601001|XXGgraph_vertex_vertex|5751|0|9198|0|{Dedup_Sorted_1|}3444|3448|}
{2010212001|XXGvertex_oport_oport|5752|0|9200|0|{0|out|}3448|3449|}
{2010212001|XXGvertex_oport_oport|5753|0|9202|0|{1|dup|}3448|3450|}
{2010212001|XXGvertex_oport_oport|5754|0|9204|0|{2|reject|}3448|3451|}
{2010212001|XXGvertex_oport_oport|5755|0|9206|0|{3|error|}3448|3452|}
{2010212001|XXGvertex_oport_oport|5756|0|9208|0|{4|log|}3448|3453|}
{2010211001|XXGvertex_iport_iport|5757|0|9210|0|{0|in|}3448|3454|}
{2010214001|XXGiport_src_flow|5758|0|9212|0|{0|}3454|3445|}
{2010007001|XXGobject_proto_object|5759|0|9213|0|{}3448|3455|}
{2010212001|XXGvertex_oport_oport|5760|0|9215|0|{0|out|}3455|3456|}
{2010006001|XXGobject_psameas_object|5761|0|9217|0|{metadata|out_metadata|1|0|}3456|3455|}
{2010212001|XXGvertex_oport_oport|5762|0|9218|0|{1|dup|}3455|3457|}
{2010006001|XXGobject_psameas_object|5763|0|9220|0|{metadata|dup_metadata|1|0|}3457|3455|}
{2010212001|XXGvertex_oport_oport|5764|0|9221|0|{2|reject|}3455|3458|}
{2010006001|XXGobject_psameas_object|5765|0|9223|0|{metadata|reject_metadata|1|0|}3458|3455|}
{2010212001|XXGvertex_oport_oport|5766|0|9224|0|{3|error|}3455|3459|}
{2010006001|XXGobject_psameas_object|5767|0|9226|0|{metadata|error_metadata|1|0|}3459|3455|}
{2010212001|XXGvertex_oport_oport|5768|0|9227|0|{4|log|}3455|3460|}
{2010006001|XXGobject_psameas_object|5769|0|9229|0|{metadata|log_metadata|1|0|}3460|3455|}
{2010211001|XXGvertex_iport_iport|5770|0|9230|0|{0|in|}3455|3461|}
{2010006001|XXGobject_psameas_object|5771|0|9232|0|{metadata|in_metadata|1|0|}3461|3455|}
{2010601001|XXGgraph_vertex_vertex|5772|0|9233|0|{PBKS_dxf_hk_part1_|}3444|3462|}
{2010604001|XXGgraph_flow_flow|5773|0|9235|0|{Flow_1|}3462|3463|}
{2010601001|XXGgraph_vertex_vertex|5774|0|9237|0|{Partition_by_Key|}3462|3464|}
{2010212001|XXGvertex_oport_oport|5775|0|9239|0|{0|out|}3464|3465|}
{2010213001|XXGoport_dst_flow|5776|0|9241|0|{0|}3465|3463|}
{2010211001|XXGvertex_iport_iport|5777|0|9242|0|{0|in|}3464|3466|}
{2010601001|XXGgraph_vertex_vertex|5778|0|9244|0|{Sort|}3462|3467|}
{2010212001|XXGvertex_oport_oport|5779|0|9246|0|{0|out|}3467|3468|}
{2010211001|XXGvertex_iport_iport|5780|0|9248|0|{0|in|}3467|3469|}
{2010214001|XXGiport_src_flow|5781|0|9250|0|{0|}3469|3463|}
{2010212001|XXGvertex_oport_oport|5782|0|9251|0|{0|out0|}3462|3470|}
{2010216002|XXGoport_binding_oport|5783|0|9253|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}3470|3468|}
{2010213001|XXGoport_dst_flow|5784|0|9254|0|{0|}3470|3446|}
{2010211001|XXGvertex_iport_iport|5785|0|9255|0|{0|in0|}3462|3471|}
{2010215002|XXGiport_binding_iport|5786|0|9257|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}3471|3466|}
{2010007001|XXGobject_proto_object|5787|0|9258|0|{}3462|3472|}
{2010604001|XXGgraph_flow_flow|5788|0|9260|0|{Flow_1|}3472|3473|}
{2010601001|XXGgraph_vertex_vertex|5789|0|9262|0|{Partition_by_Key|}3472|3474|}
{2010212001|XXGvertex_oport_oport|5790|0|9264|0|{0|out|}3474|3475|}
{2010213001|XXGoport_dst_flow|5791|0|9266|0|{0|}3475|3473|}
{2010211001|XXGvertex_iport_iport|5792|0|9267|0|{0|in|}3474|3476|}
{2010007001|XXGobject_proto_object|5793|0|9269|0|{}3474|3477|}
{2010212001|XXGvertex_oport_oport|5794|0|9271|0|{0|out|}3477|3478|}
{2010006001|XXGobject_psameas_object|5795|0|9273|0|{metadata|out_metadata|1|0|}3478|3477|}
{2010211001|XXGvertex_iport_iport|5796|0|9274|0|{0|in|}3477|3479|}
{2010006001|XXGobject_psameas_object|5797|0|9276|0|{metadata|in_metadata|1|0|}3479|3477|}
{2010006001|XXGobject_psameas_object|5798|0|9277|0|{Layout|InputLayout|1|0|}3474|3472|}
{2010006001|XXGobject_psameas_object|5799|0|9278|0|{key|Key|1|0|}3474|3472|}
{2010601001|XXGgraph_vertex_vertex|5800|0|9279|0|{Sort|}3472|3480|}
{2010212001|XXGvertex_oport_oport|5801|0|9281|0|{0|out|}3480|3481|}
{2010211001|XXGvertex_iport_iport|5802|0|9283|0|{0|in|}3480|3482|}
{2010214001|XXGiport_src_flow|5803|0|9285|0|{0|}3482|3473|}
{2010007001|XXGobject_proto_object|5804|0|9286|0|{}3480|3483|}
{2010212001|XXGvertex_oport_oport|5805|0|9288|0|{0|out|}3483|3484|}
{2010006001|XXGobject_psameas_object|5806|0|9290|0|{metadata|out_metadata|1|0|}3484|3483|}
{2010211001|XXGvertex_iport_iport|5807|0|9291|0|{0|in|}3483|3485|}
{2010006001|XXGobject_psameas_object|5808|0|9293|0|{metadata|in_metadata|1|0|}3485|3483|}
{2010006001|XXGobject_psameas_object|5809|0|9294|0|{Layout|OutputLayout|1|0|}3480|3472|}
{2010006001|XXGobject_psameas_object|5810|0|9295|0|{key|Key|1|0|}3480|3472|}
{2010006001|XXGobject_psameas_object|5811|0|9296|0|{max_core|Max_core|1|0|}3480|3472|}
{2010212001|XXGvertex_oport_oport|5812|0|9297|0|{0|out0|}3472|3486|}
{2010216002|XXGoport_binding_oport|5813|0|9299|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}3486|3481|}
{2010211001|XXGvertex_iport_iport|5814|0|9300|0|{0|in0|}3472|3487|}
{2010215002|XXGiport_binding_iport|5815|0|9302|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}3487|3476|}
{2010601001|XXGgraph_vertex_vertex|5816|0|9303|0|{Sort_within_Groups_1|}3444|3488|}
{2010212001|XXGvertex_oport_oport|5817|0|9305|0|{0|out|}3488|3489|}
{2010213001|XXGoport_dst_flow|5818|0|9307|0|{0|}3489|3445|}
{2010211001|XXGvertex_iport_iport|5819|0|9308|0|{0|in|}3488|3490|}
{2010214001|XXGiport_src_flow|5820|0|9310|0|{0|}3490|3446|}
{2010007001|XXGobject_proto_object|5821|0|9311|0|{}3488|3491|}
{2010212001|XXGvertex_oport_oport|5822|0|9313|0|{0|out|}3491|3492|}
{2010006001|XXGobject_psameas_object|5823|0|9315|0|{metadata|out_metadata|1|0|}3492|3491|}
{2010211001|XXGvertex_iport_iport|5824|0|9316|0|{0|in|}3491|3493|}
{2010006001|XXGobject_psameas_object|5825|0|9318|0|{metadata|in_metadata|1|0|}3493|3491|}
{2010212001|XXGvertex_oport_oport|5826|0|9319|0|{0|out0|}3444|3494|}
{2010216002|XXGoport_binding_oport|5827|0|9321|0|{.5|.5|{0|}7792|}3494|3449|}
{2010213001|XXGoport_dst_flow|5828|0|9322|0|{0|}3494|3388|}
{2010212001|XXGvertex_oport_oport|5829|0|9323|0|{1|out1|}3444|3495|}
{2010216002|XXGoport_binding_oport|5830|0|9325|0|{.5|.5|{0|}7793|}3495|3450|}
{2010213001|XXGoport_dst_flow|5831|0|9326|0|{0|}3495|3389|}
{2010211001|XXGvertex_iport_iport|5832|0|9327|0|{0|in0|}3444|3496|}
{2010215002|XXGiport_binding_iport|5833|0|9329|0|{.5|.5|{0|}7791|}3496|3471|}
{2010214001|XXGiport_src_flow|5834|0|9330|0|{0|}3496|3383|}
{2010601001|XXGgraph_vertex_vertex|5835|0|9331|0|{Sort_within_Groups|}3374|3497|}
{2010212001|XXGvertex_oport_oport|5836|0|9333|0|{0|out|}3497|3498|}
{2010213001|XXGoport_dst_flow|5837|0|9335|0|{0|}3498|3385|}
{2010211001|XXGvertex_iport_iport|5838|0|9336|0|{0|in|}3497|3499|}
{2010214001|XXGiport_src_flow|5839|0|9338|0|{0|}3499|3384|}
{2010007001|XXGobject_proto_object|5840|0|9339|0|{}3497|3500|}
{2010212001|XXGvertex_oport_oport|5841|0|9341|0|{0|out|}3500|3501|}
{2010006001|XXGobject_psameas_object|5842|0|9343|0|{metadata|out_metadata|1|0|}3501|3500|}
{2010211001|XXGvertex_iport_iport|5843|0|9344|0|{0|in|}3500|3502|}
{2010006001|XXGobject_psameas_object|5844|0|9346|0|{metadata|in_metadata|1|0|}3502|3500|}
{2010601001|XXGgraph_vertex_vertex|5845|0|9347|0|{Trash|}3374|3503|}
{2010211001|XXGvertex_iport_iport|5846|0|9349|0|{0|in|}3503|3504|}
{2010214001|XXGiport_src_flow|5847|0|9351|0|{0|}3504|3389|}
{2010007001|XXGobject_proto_object|5848|0|9352|0|{}3503|3505|}
{2010211001|XXGvertex_iport_iport|5849|0|9354|0|{0|in|}3505|3506|}
{2010006001|XXGobject_psameas_object|5850|0|9356|0|{metadata|in_metadata|1|0|}3506|3505|}
{2010601001|XXGgraph_vertex_vertex|5851|0|9357|0|{Trash_1|}3374|3507|}
{2010211001|XXGvertex_iport_iport|5852|0|9359|0|{0|in|}3507|3508|}
{2010214001|XXGiport_src_flow|5853|0|9361|0|{0|}3508|3390|}
{2010007001|XXGobject_proto_object|5854|0|9362|0|{}3507|3509|}
{2010211001|XXGvertex_iport_iport|5855|0|9364|0|{0|in|}3509|3510|}
{2010006001|XXGobject_psameas_object|5856|0|9366|0|{metadata|in_metadata|1|0|}3510|3509|}
{2010601001|XXGgraph_vertex_vertex|5857|0|9367|0|{Trash_2|}3374|3511|}
{2010211001|XXGvertex_iport_iport|5858|0|9369|0|{0|in|}3511|3512|}
{2010214001|XXGiport_src_flow|5859|0|9371|0|{0|}3512|3391|}
{2010007001|XXGobject_proto_object|5860|0|9372|0|{}3511|3513|}
{2010211001|XXGvertex_iport_iport|5861|0|9374|0|{0|in|}3513|3514|}
{2010006001|XXGobject_psameas_object|5862|0|9376|0|{metadata|in_metadata|1|0|}3514|3513|}
{2010601001|XXGgraph_vertex_vertex|5863|0|9377|0|{Two_Step_Lookup|}3374|3515|}
{2010605001|XXGgraph_legend_legend|5864|0|9379|0|{0|}3515|3516|}
{2010241001|XXGlegend_face_face|5865|0|9381|0|{}3516|3517|}
{2010604001|XXGgraph_flow_flow|5866|0|9383|0|{Flow_1|}3515|3518|}
{2010604001|XXGgraph_flow_flow|5867|0|9385|0|{Flow_2|}3515|3519|}
{2010604001|XXGgraph_flow_flow|5868|0|9387|0|{Flow_3|}3515|3520|}
{2010604001|XXGgraph_flow_flow|5869|0|9389|0|{Flow_4|}3515|3521|}
{2010604001|XXGgraph_flow_flow|5870|0|9391|0|{Flow_5|}3515|3522|}
{2010604001|XXGgraph_flow_flow|5871|0|9393|0|{Flow_6|}3515|3523|}
{2010601001|XXGgraph_vertex_vertex|5872|0|9395|0|{FBE_Pass_Only_Matching_Rec|}3515|3524|}
{2010212001|XXGvertex_oport_oport|5873|0|9397|0|{0|out|}3524|3525|}
{2010213001|XXGoport_dst_flow|5874|0|9399|0|{0|}3525|3522|}
{2010212001|XXGvertex_oport_oport|5875|0|9400|0|{1|deselect|}3524|3526|}
{2010213001|XXGoport_dst_flow|5876|0|9402|0|{0|}3526|3523|}
{2010212001|XXGvertex_oport_oport|5877|0|9403|0|{2|reject|}3524|3527|}
{2010212001|XXGvertex_oport_oport|5878|0|9405|0|{3|error|}3524|3528|}
{2010212001|XXGvertex_oport_oport|5879|0|9407|0|{4|log|}3524|3529|}
{2010211001|XXGvertex_iport_iport|5880|0|9409|0|{0|in|}3524|3530|}
{2010214001|XXGiport_src_flow|5881|0|9411|0|{0|}3530|3521|}
{2010007001|XXGobject_proto_object|5882|0|9412|0|{}3524|3531|}
{2010212001|XXGvertex_oport_oport|5883|0|9414|0|{0|out|}3531|3532|}
{2010006001|XXGobject_psameas_object|5884|0|9416|0|{metadata|out_metadata|1|0|}3532|3531|}
{2010212001|XXGvertex_oport_oport|5885|0|9417|0|{1|deselect|}3531|3533|}
{2010006001|XXGobject_psameas_object|5886|0|9419|0|{metadata|deselect_metadata|1|0|}3533|3531|}
{2010212001|XXGvertex_oport_oport|5887|0|9420|0|{2|reject|}3531|3534|}
{2010006001|XXGobject_psameas_object|5888|0|9422|0|{metadata|reject_metadata|1|0|}3534|3531|}
{2010212001|XXGvertex_oport_oport|5889|0|9423|0|{3|error|}3531|3535|}
{2010006001|XXGobject_psameas_object|5890|0|9425|0|{metadata|error_metadata|1|0|}3535|3531|}
{2010212001|XXGvertex_oport_oport|5891|0|9426|0|{4|log|}3531|3536|}
{2010006001|XXGobject_psameas_object|5892|0|9428|0|{metadata|log_metadata|1|0|}3536|3531|}
{2010211001|XXGvertex_iport_iport|5893|0|9429|0|{0|in|}3531|3537|}
{2010006001|XXGobject_psameas_object|5894|0|9431|0|{metadata|in_metadata|1|0|}3537|3531|}
{2010601001|XXGgraph_vertex_vertex|5895|0|9432|0|{FBE_filter_matching_lkp_record|}3515|3538|}
{2010212001|XXGvertex_oport_oport|5896|0|9434|0|{0|out|}3538|3539|}
{2010213001|XXGoport_dst_flow|5897|0|9436|0|{0|}3539|3520|}
{2010212001|XXGvertex_oport_oport|5898|0|9437|0|{1|deselect|}3538|3540|}
{2010213001|XXGoport_dst_flow|5899|0|9439|0|{0|}3540|3518|}
{2010212001|XXGvertex_oport_oport|5900|0|9440|0|{2|reject|}3538|3541|}
{2010212001|XXGvertex_oport_oport|5901|0|9442|0|{3|error|}3538|3542|}
{2010212001|XXGvertex_oport_oport|5902|0|9444|0|{4|log|}3538|3543|}
{2010211001|XXGvertex_iport_iport|5903|0|9446|0|{0|in|}3538|3544|}
{2010007001|XXGobject_proto_object|5904|0|9448|0|{}3538|3545|}
{2010212001|XXGvertex_oport_oport|5905|0|9450|0|{0|out|}3545|3546|}
{2010006001|XXGobject_psameas_object|5906|0|9452|0|{metadata|out_metadata|1|0|}3546|3545|}
{2010212001|XXGvertex_oport_oport|5907|0|9453|0|{1|deselect|}3545|3547|}
{2010006001|XXGobject_psameas_object|5908|0|9455|0|{metadata|deselect_metadata|1|0|}3547|3545|}
{2010212001|XXGvertex_oport_oport|5909|0|9456|0|{2|reject|}3545|3548|}
{2010006001|XXGobject_psameas_object|5910|0|9458|0|{metadata|reject_metadata|1|0|}3548|3545|}
{2010212001|XXGvertex_oport_oport|5911|0|9459|0|{3|error|}3545|3549|}
{2010006001|XXGobject_psameas_object|5912|0|9461|0|{metadata|error_metadata|1|0|}3549|3545|}
{2010212001|XXGvertex_oport_oport|5913|0|9462|0|{4|log|}3545|3550|}
{2010006001|XXGobject_psameas_object|5914|0|9464|0|{metadata|log_metadata|1|0|}3550|3545|}
{2010211001|XXGvertex_iport_iport|5915|0|9465|0|{0|in|}3545|3551|}
{2010006001|XXGobject_psameas_object|5916|0|9467|0|{metadata|in_metadata|1|0|}3551|3545|}
{2010601001|XXGgraph_vertex_vertex|5917|0|9468|0|{Merge|}3515|3552|}
{2010212001|XXGvertex_oport_oport|5918|0|9470|0|{0|out|}3552|3553|}
{2010211001|XXGvertex_iport_iport|5919|0|9472|0|{0|in|}3552|3554|}
{2010214001|XXGiport_src_flow|5920|0|9474|0|{0|}3554|3520|}
{2010214001|XXGiport_src_flow|5921|0|9475|0|{1|}3554|3522|}
{2010007001|XXGobject_proto_object|5922|0|9476|0|{}3552|3555|}
{2010212001|XXGvertex_oport_oport|5923|0|9478|0|{0|out|}3555|3556|}
{2010006001|XXGobject_psameas_object|5924|0|9480|0|{metadata|out_metadata|1|0|}3556|3555|}
{2010211001|XXGvertex_iport_iport|5925|0|9481|0|{0|in|}3555|3557|}
{2010006001|XXGobject_psameas_object|5926|0|9483|0|{metadata|in_metadata|1|0|}3557|3555|}
{2010601001|XXGgraph_vertex_vertex|5927|0|9484|0|{No_Match_Record_In_Second_Pass|}3515|3558|}
{2010211001|XXGvertex_iport_iport|5928|0|9486|0|{0|in|}3558|3559|}
{2010214001|XXGiport_src_flow|5929|0|9488|0|{0|}3559|3523|}
{2010007001|XXGobject_proto_object|5930|0|9489|0|{}3558|3560|}
{2010211001|XXGvertex_iport_iport|5931|0|9491|0|{0|in|}3560|3561|}
{2010006001|XXGobject_psameas_object|5932|0|9493|0|{metadata|in_metadata|1|0|}3561|3560|}
{2010601001|XXGgraph_vertex_vertex|5933|0|9494|0|{RFMT_Lookup_with_IDS_Archive_|}3515|3562|}
{2010212001|XXGvertex_oport_oport|5934|0|9496|0|{0|out0|}3562|3563|}
{2010213001|XXGoport_dst_flow|5935|0|9498|0|{0|}3563|3521|}
{2010212001|XXGvertex_oport_oport|5936|0|9499|0|{1|reject0|}3562|3564|}
{2010212001|XXGvertex_oport_oport|5937|0|9501|0|{2|error0|}3562|3565|}
{2010212001|XXGvertex_oport_oport|5938|0|9503|0|{3|log|}3562|3566|}
{2010211001|XXGvertex_iport_iport|5939|0|9505|0|{0|in|}3562|3567|}
{2010214001|XXGiport_src_flow|5940|0|9507|0|{0|}3567|3519|}
{2010007001|XXGobject_proto_object|5941|0|9508|0|{}3562|3568|}
{2010212001|XXGvertex_oport_oport|5942|0|9510|0|{0|out0|}3568|3569|}
{2010006001|XXGobject_psameas_object|5943|0|9512|0|{metadata|out0_metadata|1|0|}3569|3568|}
{2010006001|XXGobject_psameas_object|5944|0|9513|0|{transform0|transform0|1|0|}3569|3568|}
{2010212001|XXGvertex_oport_oport|5945|0|9514|0|{1|reject0|}3568|3570|}
{2010006001|XXGobject_psameas_object|5946|0|9516|0|{metadata|reject0_metadata|1|0|}3570|3568|}
{2010212001|XXGvertex_oport_oport|5947|0|9517|0|{2|error0|}3568|3571|}
{2010006001|XXGobject_psameas_object|5948|0|9519|0|{metadata|error0_metadata|1|0|}3571|3568|}
{2010212001|XXGvertex_oport_oport|5949|0|9520|0|{3|log|}3568|3572|}
{2010006001|XXGobject_psameas_object|5950|0|9522|0|{metadata|log_metadata|1|0|}3572|3568|}
{2010211001|XXGvertex_iport_iport|5951|0|9523|0|{0|in|}3568|3573|}
{2010006001|XXGobject_psameas_object|5952|0|9525|0|{metadata|in_metadata|1|0|}3573|3568|}
{2010601001|XXGgraph_vertex_vertex|5953|0|9526|0|{RFMT_Pass_only_Hash_Keys|}3515|3574|}
{2010212001|XXGvertex_oport_oport|5954|0|9528|0|{0|out0|}3574|3575|}
{2010213001|XXGoport_dst_flow|5955|0|9530|0|{0|}3575|3519|}
{2010212001|XXGvertex_oport_oport|5956|0|9531|0|{1|reject0|}3574|3576|}
{2010212001|XXGvertex_oport_oport|5957|0|9533|0|{2|error0|}3574|3577|}
{2010212001|XXGvertex_oport_oport|5958|0|9535|0|{3|log|}3574|3578|}
{2010211001|XXGvertex_iport_iport|5959|0|9537|0|{0|in|}3574|3579|}
{2010214001|XXGiport_src_flow|5960|0|9539|0|{0|}3579|3518|}
{2010007001|XXGobject_proto_object|5961|0|9540|0|{}3574|3580|}
{2010212001|XXGvertex_oport_oport|5962|0|9542|0|{0|out0|}3580|3581|}
{2010006001|XXGobject_psameas_object|5963|0|9544|0|{metadata|out0_metadata|1|0|}3581|3580|}
{2010006001|XXGobject_psameas_object|5964|0|9545|0|{transform0|transform0|1|0|}3581|3580|}
{2010212001|XXGvertex_oport_oport|5965|0|9546|0|{1|reject0|}3580|3582|}
{2010006001|XXGobject_psameas_object|5966|0|9548|0|{metadata|reject0_metadata|1|0|}3582|3580|}
{2010212001|XXGvertex_oport_oport|5967|0|9549|0|{2|error0|}3580|3583|}
{2010006001|XXGobject_psameas_object|5968|0|9551|0|{metadata|error0_metadata|1|0|}3583|3580|}
{2010212001|XXGvertex_oport_oport|5969|0|9552|0|{3|log|}3580|3584|}
{2010006001|XXGobject_psameas_object|5970|0|9554|0|{metadata|log_metadata|1|0|}3584|3580|}
{2010211001|XXGvertex_iport_iport|5971|0|9555|0|{0|in|}3580|3585|}
{2010006001|XXGobject_psameas_object|5972|0|9557|0|{metadata|in_metadata|1|0|}3585|3580|}
{2010212001|XXGvertex_oport_oport|5973|0|9558|0|{0|out0|}3515|3586|}
{2010216002|XXGoport_binding_oport|5974|0|9560|0|{.5|.5|{0|}15500|}3586|3553|}
{2010213001|XXGoport_dst_flow|5975|0|9561|0|{0|}3586|3387|}
{2010211001|XXGvertex_iport_iport|5976|0|9562|0|{0|in0|}3515|3587|}
{2010215002|XXGiport_binding_iport|5977|0|9564|0|{.5|.5|{0|}15499|}3587|3544|}
{2010214001|XXGiport_src_flow|5978|0|9565|0|{0|}3587|3386|}
{2010212001|XXGvertex_oport_oport|5979|0|9566|0|{0|out0|}3374|3588|}
{2010216002|XXGoport_binding_oport|5980|0|9568|0|{.5|.5|{0|}15515|}3588|3393|}
{2010213001|XXGoport_dst_flow|5981|0|9569|0|{0|}3588|3194|}
{2010211001|XXGvertex_iport_iport|5982|0|9570|0|{0|in1|}3374|3589|}
{2010215002|XXGiport_binding_iport|5983|0|9572|0|{.5|.5|{0|}15514|}3589|3425|}
{2010214001|XXGiport_src_flow|5984|0|9573|0|{0|}3589|3192|}
{2010601001|XXGgraph_vertex_vertex|5985|0|9574|0|{Merge|}3186|3590|}
{2010212001|XXGvertex_oport_oport|5986|0|9576|0|{0|out|}3590|3591|}
{2010211001|XXGvertex_iport_iport|5987|0|9578|0|{0|in|}3590|3592|}
{2010214001|XXGiport_src_flow|5988|0|9580|0|{0|}3592|3195|}
{2010007001|XXGobject_proto_object|5989|0|9581|0|{}3590|3593|}
{2010212001|XXGvertex_oport_oport|5990|0|9583|0|{0|out|}3593|3594|}
{2010006001|XXGobject_psameas_object|5991|0|9585|0|{metadata|out_metadata|1|0|}3594|3593|}
{2010211001|XXGvertex_iport_iport|5992|0|9586|0|{0|in|}3593|3595|}
{2010006001|XXGobject_psameas_object|5993|0|9588|0|{metadata|in_metadata|1|0|}3595|3593|}
{2010601001|XXGgraph_vertex_vertex|5994|0|9589|0|{Replicate|}3186|3596|}
{2010212001|XXGvertex_oport_oport|5995|0|9591|0|{0|out|}3596|3597|}
{2010213001|XXGoport_dst_flow|5996|0|9593|0|{0|}3597|3191|}
{2010213001|XXGoport_dst_flow|5997|0|9594|0|{1|}3597|3192|}
{2010211001|XXGvertex_iport_iport|5998|0|9595|0|{0|in|}3596|3598|}
{2010007001|XXGobject_proto_object|5999|0|9597|0|{}3596|3599|}
{2010212001|XXGvertex_oport_oport|6000|0|9599|0|{0|out|}3599|3600|}
{2010006001|XXGobject_psameas_object|6001|0|9601|0|{metadata|out_metadata|1|0|}3600|3599|}
{2010211001|XXGvertex_iport_iport|6002|0|9602|0|{0|in|}3599|3601|}
{2010006001|XXGobject_psameas_object|6003|0|9604|0|{metadata|in_metadata|1|0|}3601|3599|}
{2010601001|XXGgraph_vertex_vertex|6004|0|9605|0|{Replicate_1|}3186|3602|}
{2010212001|XXGvertex_oport_oport|6005|0|9607|0|{0|out|}3602|3603|}
{2010213001|XXGoport_dst_flow|6006|0|9609|0|{0|}3603|3195|}
{2010211001|XXGvertex_iport_iport|6007|0|9610|0|{0|in|}3602|3604|}
{2010214001|XXGiport_src_flow|6008|0|9612|0|{0|}3604|3193|}
{2010214001|XXGiport_src_flow|6009|0|9613|0|{1|}3604|3194|}
{2010007001|XXGobject_proto_object|6010|0|9614|0|{}3602|3605|}
{2010212001|XXGvertex_oport_oport|6011|0|9616|0|{0|out|}3605|3606|}
{2010006001|XXGobject_psameas_object|6012|0|9618|0|{metadata|out_metadata|1|0|}3606|3605|}
{2010211001|XXGvertex_iport_iport|6013|0|9619|0|{0|in|}3605|3607|}
{2010006001|XXGobject_psameas_object|6014|0|9621|0|{metadata|in_metadata|1|0|}3607|3605|}
{2010212001|XXGvertex_oport_oport|6015|0|9622|0|{0|out0|}3186|3608|}
{2010216002|XXGoport_binding_oport|6016|0|9624|0|{.5|.5|{0|}7797|}3608|3591|}
{2010211001|XXGvertex_iport_iport|6017|0|9625|0|{0|in0|}3186|3609|}
{2010215002|XXGiport_binding_iport|6018|0|9627|0|{.5|.5|{0|}7796|}3609|3598|}
{2010601001|XXGgraph_vertex_vertex|6019|0|9628|0|{ids_lookup_6|}143|3610|}
{2010605001|XXGgraph_legend_legend|6020|0|9630|0|{0|}3610|3611|}
{2010241001|XXGlegend_face_face|6021|0|9632|0|{}3611|3612|}
{2010605001|XXGgraph_legend_legend|6022|0|9634|0|{1|}3610|3613|}
{2010241001|XXGlegend_face_face|6023|0|9636|0|{}3613|3614|}
{2010604001|XXGgraph_flow_flow|6024|0|9638|0|{Flow_1|}3610|3615|}
{2010604001|XXGgraph_flow_flow|6025|0|9640|0|{Flow_2|}3610|3616|}
{2010604001|XXGgraph_flow_flow|6026|0|9642|0|{Flow_3|}3610|3617|}
{2010604001|XXGgraph_flow_flow|6027|0|9644|0|{Flow_4|}3610|3618|}
{2010604001|XXGgraph_flow_flow|6028|0|9646|0|{Flow_5|}3610|3619|}
{2010601001|XXGgraph_vertex_vertex|6029|0|9648|0|{Get_All_LookUp_Record|}3610|3620|}
{2010605001|XXGgraph_legend_legend|6030|0|9650|0|{0|}3620|3621|}
{2010241001|XXGlegend_face_face|6031|0|9652|0|{}3621|3622|}
{2010605001|XXGgraph_legend_legend|6032|0|9654|0|{1|}3620|3623|}
{2010241001|XXGlegend_face_face|6033|0|9656|0|{}3623|3624|}
{2010605001|XXGgraph_legend_legend|6034|0|9658|0|{2|}3620|3625|}
{2010241001|XXGlegend_face_face|6035|0|9660|0|{}3625|3626|}
{2010605001|XXGgraph_legend_legend|6036|0|9662|0|{3|}3620|3627|}
{2010241001|XXGlegend_face_face|6037|0|9664|0|{}3627|3628|}
{2010605001|XXGgraph_legend_legend|6038|0|9666|0|{4|}3620|3629|}
{2010241001|XXGlegend_face_face|6039|0|9668|0|{}3629|3630|}
{2010604001|XXGgraph_flow_flow|6040|0|9670|0|{Flow_1|}3620|3631|}
{2010604001|XXGgraph_flow_flow|6041|0|9672|0|{Flow_10|}3620|3632|}
{2010604001|XXGgraph_flow_flow|6042|0|9674|0|{Flow_11|}3620|3633|}
{2010604001|XXGgraph_flow_flow|6043|0|9676|0|{Flow_12|}3620|3634|}
{2010604001|XXGgraph_flow_flow|6044|0|9678|0|{Flow_18|}3620|3635|}
{2010604001|XXGgraph_flow_flow|6045|0|9680|0|{Flow_2|}3620|3636|}
{2010604001|XXGgraph_flow_flow|6046|0|9682|0|{Flow_3|}3620|3637|}
{2010604001|XXGgraph_flow_flow|6047|0|9684|0|{Flow_4|}3620|3638|}
{2010604001|XXGgraph_flow_flow|6048|0|9686|0|{Flow_5|}3620|3639|}
{2010604001|XXGgraph_flow_flow|6049|0|9688|0|{Flow_6|}3620|3640|}
{2010604001|XXGgraph_flow_flow|6050|0|9690|0|{Flow_7|}3620|3641|}
{2010604001|XXGgraph_flow_flow|6051|0|9692|0|{Flow_8|}3620|3642|}
{2010604001|XXGgraph_flow_flow|6052|0|9694|0|{Flow_9|}3620|3643|}
{2010601001|XXGgraph_vertex_vertex|6053|0|9696|0|{Dedup_Sorted|}3620|3644|}
{2010212001|XXGvertex_oport_oport|6054|0|9698|0|{0|out|}3644|3645|}
{2010213001|XXGoport_dst_flow|6055|0|9700|0|{0|}3645|3636|}
{2010212001|XXGvertex_oport_oport|6056|0|9701|0|{1|dup|}3644|3646|}
{2010213001|XXGoport_dst_flow|6057|0|9703|0|{0|}3646|3640|}
{2010212001|XXGvertex_oport_oport|6058|0|9704|0|{2|reject|}3644|3647|}
{2010212001|XXGvertex_oport_oport|6059|0|9706|0|{3|error|}3644|3648|}
{2010212001|XXGvertex_oport_oport|6060|0|9708|0|{4|log|}3644|3649|}
{2010211001|XXGvertex_iport_iport|6061|0|9710|0|{0|in|}3644|3650|}
{2010214001|XXGiport_src_flow|6062|0|9712|0|{0|}3650|3631|}
{2010006001|XXGobject_psameas_object|6063|0|9713|0|{Layout|Layout|0|0|}3644|3651|}
{2010212001|XXGvertex_oport_oport|6064|0|9715|0|{0|out|}3651|3652|}
{2010213001|XXGoport_dst_flow|6065|0|9717|0|{0|}3652|3634|}
{2010212001|XXGvertex_oport_oport|6066|0|9718|0|{1|reject|}3651|3653|}
{2010212001|XXGvertex_oport_oport|6067|0|9720|0|{2|error|}3651|3654|}
{2010212001|XXGvertex_oport_oport|6068|0|9722|0|{3|log|}3651|3655|}
{2010211001|XXGvertex_iport_iport|6069|0|9724|0|{0|in|}3651|3656|}
{2010214001|XXGiport_src_flow|6070|0|9726|0|{0|}3656|3632|}
{2010006001|XXGobject_psameas_object|6071|0|9727|0|{in_metadata|out0_metadata|0|0|}3651|3657|}
{2010212001|XXGvertex_oport_oport|6072|0|9729|0|{0|out0|}3657|3658|}
{2010213001|XXGoport_dst_flow|6073|0|9731|0|{0|}3658|3635|}
{2010212001|XXGvertex_oport_oport|6074|0|9732|0|{1|reject0|}3657|3659|}
{2010212001|XXGvertex_oport_oport|6075|0|9734|0|{2|error0|}3657|3660|}
{2010212001|XXGvertex_oport_oport|6076|0|9736|0|{3|log|}3657|3661|}
{2010211001|XXGvertex_iport_iport|6077|0|9738|0|{0|in|}3657|3662|}
{2010006001|XXGobject_psameas_object|6078|0|9740|0|{Layout|Layout|0|0|}3657|242|}
{2010006001|XXGobject_psameas_object|6079|0|9741|0|{in_metadata|out5_metadata|0|0|}3657|242|}
{2010006001|XXGobject_psameas_object|6080|0|9742|0|{reject0_metadata|out5_metadata|0|0|}3657|242|}
{2010006001|XXGobject_psameas_object|6081|0|9743|0|{reject_metadata|out0_metadata|0|0|}3651|3657|}
{2010006001|XXGobject_psameas_object|6082|0|9744|0|{dup_metadata|out_metadata|0|0|}3644|3663|}
{2010212001|XXGvertex_oport_oport|6083|0|9746|0|{0|out|}3663|3664|}
{2010213001|XXGoport_dst_flow|6084|0|9748|0|{0|}3664|3633|}
{2010212001|XXGvertex_oport_oport|6085|0|9749|0|{1|deselect|}3663|3665|}
{2010213001|XXGoport_dst_flow|6086|0|9751|0|{0|}3665|3641|}
{2010212001|XXGvertex_oport_oport|6087|0|9752|0|{2|reject|}3663|3666|}
{2010212001|XXGvertex_oport_oport|6088|0|9754|0|{3|error|}3663|3667|}
{2010212001|XXGvertex_oport_oport|6089|0|9756|0|{4|log|}3663|3668|}
{2010211001|XXGvertex_iport_iport|6090|0|9758|0|{0|in|}3663|3669|}
{2010214001|XXGiport_src_flow|6091|0|9760|0|{0|}3669|3642|}
{2010006001|XXGobject_psameas_object|6092|0|9761|0|{Layout|Layout|0|0|}3663|3651|}
{2010006001|XXGobject_psameas_object|6093|0|9762|0|{deselect_metadata|out_metadata|0|0|}3663|3663|}
{2010006001|XXGobject_psameas_object|6094|0|9763|0|{in_metadata|out_metadata|0|0|}3663|3670|}
{2010212001|XXGvertex_oport_oport|6095|0|9765|0|{0|out|}3670|3671|}
{2010213001|XXGoport_dst_flow|6096|0|9767|0|{0|}3671|3637|}
{2010212001|XXGvertex_oport_oport|6097|0|9768|0|{1|reject|}3670|3672|}
{2010212001|XXGvertex_oport_oport|6098|0|9770|0|{2|error|}3670|3673|}
{2010212001|XXGvertex_oport_oport|6099|0|9772|0|{3|log|}3670|3674|}
{2010211001|XXGvertex_iport_iport|6100|0|9774|0|{0|in|}3670|3675|}
{2010214001|XXGiport_src_flow|6101|0|9776|0|{0|}3675|3639|}
{2010006001|XXGobject_psameas_object|6102|0|9777|0|{in_metadata|out0_metadata|0|0|}3670|3657|}
{2010006001|XXGobject_psameas_object|6103|0|9778|0|{reject_metadata|out0_metadata|0|0|}3670|3657|}
{2010006001|XXGobject_psameas_object|6104|0|9779|0|{reject_metadata|out_metadata|0|0|}3663|3670|}
{2010006001|XXGobject_psameas_object|6105|0|9780|0|{in_metadata|out_metadata|0|0|}3644|3663|}
{2010006001|XXGobject_psameas_object|6106|0|9781|0|{out_metadata|out_metadata|0|0|}3644|3663|}
{2010006001|XXGobject_psameas_object|6107|0|9782|0|{reject_metadata|out_metadata|0|0|}3644|3663|}
{2010601001|XXGgraph_vertex_vertex|6108|0|9783|0|{FBE_Filter_match_records|}3620|3663|}
{2010601001|XXGgraph_vertex_vertex|6109|0|9784|0|{Get_Hash_on_SRC_NK|}3620|3657|}
{2010601001|XXGgraph_vertex_vertex|6110|0|9785|0|{Merge|}3620|3676|}
{2010212001|XXGvertex_oport_oport|6111|0|9787|0|{0|out|}3676|3677|}
{2010213001|XXGoport_dst_flow|6112|0|9789|0|{0|}3677|3642|}
{2010211001|XXGvertex_iport_iport|6113|0|9790|0|{0|in|}3676|3678|}
{2010214001|XXGiport_src_flow|6114|0|9792|0|{0|}3678|3637|}
{2010214001|XXGiport_src_flow|6115|0|9793|0|{1|}3678|3634|}
{2010006001|XXGobject_psameas_object|6116|0|9794|0|{Layout|Layout|0|0|}3676|3651|}
{2010006001|XXGobject_psameas_object|6117|0|9795|0|{in_metadata|out_metadata|0|0|}3676|3670|}
{2010006001|XXGobject_psameas_object|6118|0|9796|0|{out_metadata|out_metadata|0|0|}3676|3670|}
{2010601001|XXGgraph_vertex_vertex|6119|0|9797|0|{Normalize_Get_all_records_from_Archive_Lkp|}3620|3651|}
{2010601001|XXGgraph_vertex_vertex|6120|0|9798|0|{Normalize_Get_all_records_from_lkp|}3620|3670|}
{2010601001|XXGgraph_vertex_vertex|6121|0|9799|0|{Replicate|}3620|3679|}
{2010212001|XXGvertex_oport_oport|6122|0|9801|0|{0|out|}3679|3680|}
{2010211001|XXGvertex_iport_iport|6123|0|9803|0|{0|in|}3679|3681|}
{2010214001|XXGiport_src_flow|6124|0|9805|0|{0|}3681|3636|}
{2010006001|XXGobject_psameas_object|6125|0|9806|0|{Layout|Layout|0|0|}3679|3651|}
{2010006001|XXGobject_psameas_object|6126|0|9807|0|{in_metadata|out_metadata|0|0|}3679|3663|}
{2010006001|XXGobject_psameas_object|6127|0|9808|0|{out_metadata|out_metadata|0|0|}3679|3663|}
{2010601001|XXGgraph_vertex_vertex|6128|0|9809|0|{Replicate_1|}3620|3682|}
{2010212001|XXGvertex_oport_oport|6129|0|9811|0|{0|out|}3682|3683|}
{2010213001|XXGoport_dst_flow|6130|0|9813|0|{0|}3683|3639|}
{2010213001|XXGoport_dst_flow|6131|0|9814|0|{1|}3683|3632|}
{2010211001|XXGvertex_iport_iport|6132|0|9815|0|{0|in|}3682|3684|}
{2010214001|XXGiport_src_flow|6133|0|9817|0|{0|}3684|3638|}
{2010006001|XXGobject_psameas_object|6134|0|9818|0|{Layout|Layout|0|0|}3682|3651|}
{2010006001|XXGobject_psameas_object|6135|0|9819|0|{in_metadata|out0_metadata|0|0|}3682|3657|}
{2010006001|XXGobject_psameas_object|6136|0|9820|0|{out_metadata|out0_metadata|0|0|}3682|3657|}
{2010601001|XXGgraph_vertex_vertex|6137|0|9821|0|{Sort_Remove_Dup_On_Hash|}3620|3685|}
{2010604001|XXGgraph_flow_flow|6138|0|9823|0|{Flow_3|}3685|3686|}
{2010604001|XXGgraph_flow_flow|6139|0|9825|0|{Flow_5|}3685|3687|}
{2010601001|XXGgraph_vertex_vertex|6140|0|9827|0|{Dedup_Sorted_1|}3685|3688|}
{2010212001|XXGvertex_oport_oport|6141|0|9829|0|{0|out|}3688|3689|}
{2010212001|XXGvertex_oport_oport|6142|0|9831|0|{1|dup|}3688|3690|}
{2010212001|XXGvertex_oport_oport|6143|0|9833|0|{2|reject|}3688|3691|}
{2010212001|XXGvertex_oport_oport|6144|0|9835|0|{3|error|}3688|3692|}
{2010212001|XXGvertex_oport_oport|6145|0|9837|0|{4|log|}3688|3693|}
{2010211001|XXGvertex_iport_iport|6146|0|9839|0|{0|in|}3688|3694|}
{2010214001|XXGiport_src_flow|6147|0|9841|0|{0|}3694|3687|}
{2010006001|XXGobject_psameas_object|6148|0|9842|0|{Layout|Layout|0|0|}3688|3651|}
{2010006001|XXGobject_psameas_object|6149|0|9843|0|{dup_metadata|out0_metadata|0|0|}3688|3657|}
{2010006001|XXGobject_psameas_object|6150|0|9844|0|{in_metadata|out0_metadata|0|0|}3688|3657|}
{2010006001|XXGobject_psameas_object|6151|0|9845|0|{out_metadata|out0_metadata|0|0|}3688|3657|}
{2010006001|XXGobject_psameas_object|6152|0|9846|0|{reject_metadata|out0_metadata|0|0|}3688|3657|}
{2010601001|XXGgraph_vertex_vertex|6153|0|9847|0|{PBKS_dxf_hk_part1_|}3685|3695|}
{2010604001|XXGgraph_flow_flow|6154|0|9849|0|{Flow_1|}3695|3696|}
{2010601001|XXGgraph_vertex_vertex|6155|0|9851|0|{Partition_by_Key|}3695|3697|}
{2010212001|XXGvertex_oport_oport|6156|0|9853|0|{0|out|}3697|3698|}
{2010213001|XXGoport_dst_flow|6157|0|9855|0|{0|}3698|3696|}
{2010211001|XXGvertex_iport_iport|6158|0|9856|0|{0|in|}3697|3699|}
{2010006001|XXGobject_psameas_object|6159|0|9858|0|{in_metadata|out0_metadata|0|0|}3697|3657|}
{2010006001|XXGobject_psameas_object|6160|0|9859|0|{out_metadata|out0_metadata|0|0|}3697|3657|}
{2010601001|XXGgraph_vertex_vertex|6161|0|9860|0|{Sort|}3695|3700|}
{2010212001|XXGvertex_oport_oport|6162|0|9862|0|{0|out|}3700|3701|}
{2010211001|XXGvertex_iport_iport|6163|0|9864|0|{0|in|}3700|3702|}
{2010214001|XXGiport_src_flow|6164|0|9866|0|{0|}3702|3696|}
{2010006001|XXGobject_psameas_object|6165|0|9867|0|{in_metadata|out0_metadata|0|0|}3700|3657|}
{2010006001|XXGobject_psameas_object|6166|0|9868|0|{out_metadata|out0_metadata|0|0|}3700|3657|}
{2010212001|XXGvertex_oport_oport|6167|0|9869|0|{0|out0|}3695|3703|}
{2010216002|XXGoport_binding_oport|6168|0|9871|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}3703|3701|}
{2010213001|XXGoport_dst_flow|6169|0|9872|0|{0|}3703|3686|}
{2010211001|XXGvertex_iport_iport|6170|0|9873|0|{0|in0|}3695|3704|}
{2010215002|XXGiport_binding_iport|6171|0|9875|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}3704|3699|}
{2010006001|XXGobject_psameas_object|6172|0|9876|0|{OutputLayout|Layout|0|0|}3695|3651|}
{2010601001|XXGgraph_vertex_vertex|6173|0|9877|0|{Sort_within_Groups|}3685|3705|}
{2010212001|XXGvertex_oport_oport|6174|0|9879|0|{0|out|}3705|3706|}
{2010213001|XXGoport_dst_flow|6175|0|9881|0|{0|}3706|3687|}
{2010211001|XXGvertex_iport_iport|6176|0|9882|0|{0|in|}3705|3707|}
{2010214001|XXGiport_src_flow|6177|0|9884|0|{0|}3707|3686|}
{2010006001|XXGobject_psameas_object|6178|0|9885|0|{Layout|Layout|0|0|}3705|3651|}
{2010006001|XXGobject_psameas_object|6179|0|9886|0|{in_metadata|out0_metadata|0|0|}3705|3657|}
{2010006001|XXGobject_psameas_object|6180|0|9887|0|{out_metadata|out0_metadata|0|0|}3705|3657|}
{2010212001|XXGvertex_oport_oport|6181|0|9888|0|{0|out0|}3685|3708|}
{2010216002|XXGoport_binding_oport|6182|0|9890|0|{.5|.5|{0|}14672|}3708|3689|}
{2010213001|XXGoport_dst_flow|6183|0|9891|0|{0|}3708|3638|}
{2010212001|XXGvertex_oport_oport|6184|0|9892|0|{1|out1|}3685|3709|}
{2010216002|XXGoport_binding_oport|6185|0|9894|0|{.5|.5|{0|}14673|}3709|3690|}
{2010213001|XXGoport_dst_flow|6186|0|9895|0|{0|}3709|3643|}
{2010211001|XXGvertex_iport_iport|6187|0|9896|0|{0|in0|}3685|3710|}
{2010215002|XXGiport_binding_iport|6188|0|9898|0|{.5|.5|{0|}14671|}3710|3704|}
{2010214001|XXGiport_src_flow|6189|0|9899|0|{0|}3710|3635|}
{2010601001|XXGgraph_vertex_vertex|6190|0|9900|0|{Sort_on_Adjusted_Natural_Keys|}3620|3711|}
{2010212001|XXGvertex_oport_oport|6191|0|9902|0|{0|out|}3711|3712|}
{2010213001|XXGoport_dst_flow|6192|0|9904|0|{0|}3712|3631|}
{2010211001|XXGvertex_iport_iport|6193|0|9905|0|{0|in|}3711|3713|}
{2010214001|XXGiport_src_flow|6194|0|9907|0|{0|}3713|3633|}
{2010006001|XXGobject_psameas_object|6195|0|9908|0|{Layout|Layout|0|0|}3711|3651|}
{2010006001|XXGobject_psameas_object|6196|0|9909|0|{in_metadata|out_metadata|0|0|}3711|3663|}
{2010006001|XXGobject_psameas_object|6197|0|9910|0|{out_metadata|out_metadata|0|0|}3711|3663|}
{2010601001|XXGgraph_vertex_vertex|6198|0|9911|0|{Trash_1|}3620|3714|}
{2010211001|XXGvertex_iport_iport|6199|0|9913|0|{0|in|}3714|3715|}
{2010214001|XXGiport_src_flow|6200|0|9915|0|{0|}3715|3641|}
{2010006001|XXGobject_psameas_object|6201|0|9916|0|{Layout|Layout|0|0|}3714|3651|}
{2010006001|XXGobject_psameas_object|6202|0|9917|0|{in_metadata|out_metadata|0|0|}3714|3663|}
{2010601001|XXGgraph_vertex_vertex|6203|0|9918|0|{Trash_2|}3620|3716|}
{2010211001|XXGvertex_iport_iport|6204|0|9920|0|{0|in|}3716|3717|}
{2010214001|XXGiport_src_flow|6205|0|9922|0|{0|}3717|3640|}
{2010006001|XXGobject_psameas_object|6206|0|9923|0|{Layout|Layout|0|0|}3716|3651|}
{2010006001|XXGobject_psameas_object|6207|0|9924|0|{in_metadata|out_metadata|0|0|}3716|3663|}
{2010601001|XXGgraph_vertex_vertex|6208|0|9925|0|{Trash_3|}3620|3718|}
{2010211001|XXGvertex_iport_iport|6209|0|9927|0|{0|in|}3718|3719|}
{2010214001|XXGiport_src_flow|6210|0|9929|0|{0|}3719|3643|}
{2010006001|XXGobject_psameas_object|6211|0|9930|0|{Layout|Layout|0|0|}3718|3651|}
{2010006001|XXGobject_psameas_object|6212|0|9931|0|{in_metadata|out0_metadata|0|0|}3718|3657|}
{2010212001|XXGvertex_oport_oport|6213|0|9932|0|{0|out0|}3620|3720|}
{2010216002|XXGoport_binding_oport|6214|0|9934|0|{.5|.5|{0|}14924|}3720|3680|}
{2010213001|XXGoport_dst_flow|6215|0|9935|0|{0|}3720|3617|}
{2010211001|XXGvertex_iport_iport|6216|0|9936|0|{0|in0|}3620|3721|}
{2010215002|XXGiport_binding_iport|6217|0|9938|0|{.5|.5|{0|}14923|}3721|3662|}
{2010214001|XXGiport_src_flow|6218|0|9939|0|{0|}3721|3615|}
{2010601001|XXGgraph_vertex_vertex|6219|0|9940|0|{Get_Last_Lookup_Record|}3610|3722|}
{2010605001|XXGgraph_legend_legend|6220|0|9942|0|{0|}3722|3723|}
{2010241001|XXGlegend_face_face|6221|0|9944|0|{}3723|3724|}
{2010605001|XXGgraph_legend_legend|6222|0|9946|0|{1|}3722|3725|}
{2010241001|XXGlegend_face_face|6223|0|9948|0|{}3725|3726|}
{2010605001|XXGgraph_legend_legend|6224|0|9950|0|{2|}3722|3727|}
{2010241001|XXGlegend_face_face|6225|0|9952|0|{}3727|3728|}
{2010605001|XXGgraph_legend_legend|6226|0|9954|0|{3|}3722|3729|}
{2010241001|XXGlegend_face_face|6227|0|9956|0|{}3729|3730|}
{2010604001|XXGgraph_flow_flow|6228|0|9958|0|{Flow_1|}3722|3731|}
{2010604001|XXGgraph_flow_flow|6229|0|9960|0|{Flow_2|}3722|3732|}
{2010604001|XXGgraph_flow_flow|6230|0|9962|0|{Flow_3|}3722|3733|}
{2010604001|XXGgraph_flow_flow|6231|0|9964|0|{Flow_4|}3722|3734|}
{2010604001|XXGgraph_flow_flow|6232|0|9966|0|{Flow_5|}3722|3735|}
{2010604001|XXGgraph_flow_flow|6233|0|9968|0|{Flow_6|}3722|3736|}
{2010604001|XXGgraph_flow_flow|6234|0|9970|0|{Flow_7|}3722|3737|}
{2010604001|XXGgraph_flow_flow|6235|0|9972|0|{Flow_8|}3722|3738|}
{2010604001|XXGgraph_flow_flow|6236|0|9974|0|{Flow_9|}3722|3739|}
{2010601001|XXGgraph_vertex_vertex|6237|0|9976|0|{Dedup_Sorted|}3722|3740|}
{2010212001|XXGvertex_oport_oport|6238|0|9978|0|{0|out|}3740|3741|}
{2010212001|XXGvertex_oport_oport|6239|0|9980|0|{1|dup|}3740|3742|}
{2010213001|XXGoport_dst_flow|6240|0|9982|0|{0|}3742|3738|}
{2010212001|XXGvertex_oport_oport|6241|0|9983|0|{2|reject|}3740|3743|}
{2010212001|XXGvertex_oport_oport|6242|0|9985|0|{3|error|}3740|3744|}
{2010212001|XXGvertex_oport_oport|6243|0|9987|0|{4|log|}3740|3745|}
{2010211001|XXGvertex_iport_iport|6244|0|9989|0|{0|in|}3740|3746|}
{2010214001|XXGiport_src_flow|6245|0|9991|0|{0|}3746|3733|}
{2010006001|XXGobject_psameas_object|6246|0|9992|0|{Layout|Layout|0|0|}3740|3651|}
{2010006001|XXGobject_psameas_object|6247|0|9993|0|{dup_metadata|out_metadata|0|0|}3740|3747|}
{2010212001|XXGvertex_oport_oport|6248|0|9995|0|{0|out|}3747|3748|}
{2010213001|XXGoport_dst_flow|6249|0|9997|0|{0|}3748|3732|}
{2010212001|XXGvertex_oport_oport|6250|0|9998|0|{1|deselect|}3747|3749|}
{2010213001|XXGoport_dst_flow|6251|0|10000|0|{0|}3749|3739|}
{2010212001|XXGvertex_oport_oport|6252|0|10001|0|{2|reject|}3747|3750|}
{2010212001|XXGvertex_oport_oport|6253|0|10003|0|{3|error|}3747|3751|}
{2010212001|XXGvertex_oport_oport|6254|0|10005|0|{4|log|}3747|3752|}
{2010211001|XXGvertex_iport_iport|6255|0|10007|0|{0|in|}3747|3753|}
{2010214001|XXGiport_src_flow|6256|0|10009|0|{0|}3753|3735|}
{2010006001|XXGobject_psameas_object|6257|0|10010|0|{Layout|Layout|0|0|}3747|3651|}
{2010006001|XXGobject_psameas_object|6258|0|10011|0|{deselect_metadata|out_metadata|0|0|}3747|3747|}
{2010006001|XXGobject_psameas_object|6259|0|10012|0|{in_metadata|out_metadata|0|0|}3747|3754|}
{2010212001|XXGvertex_oport_oport|6260|0|10014|0|{0|out|}3754|3755|}
{2010213001|XXGoport_dst_flow|6261|0|10016|0|{0|}3755|3756|}
{2010212001|XXGvertex_oport_oport|6262|0|10018|0|{1|deselect|}3754|3757|}
{2010213001|XXGoport_dst_flow|6263|0|10020|0|{0|}3757|3758|}
{2010212001|XXGvertex_oport_oport|6264|0|10022|0|{2|reject|}3754|3759|}
{2010212001|XXGvertex_oport_oport|6265|0|10024|0|{3|error|}3754|3760|}
{2010212001|XXGvertex_oport_oport|6266|0|10026|0|{4|log|}3754|3761|}
{2010211001|XXGvertex_iport_iport|6267|0|10028|0|{0|in|}3754|3762|}
{2010006001|XXGobject_psameas_object|6268|0|10030|0|{Layout|Layout|0|0|}3754|3651|}
{2010006001|XXGobject_psameas_object|6269|0|10031|0|{in_metadata|out0_metadata|0|0|}3754|3763|}
{2010212001|XXGvertex_oport_oport|6270|0|10033|0|{0|out0|}3763|3764|}
{2010213001|XXGoport_dst_flow|6271|0|10035|0|{0|}3764|3734|}
{2010212001|XXGvertex_oport_oport|6272|0|10036|0|{1|reject0|}3763|3765|}
{2010212001|XXGvertex_oport_oport|6273|0|10038|0|{2|error0|}3763|3766|}
{2010212001|XXGvertex_oport_oport|6274|0|10040|0|{3|log|}3763|3767|}
{2010211001|XXGvertex_iport_iport|6275|0|10042|0|{0|in|}3763|3768|}
{2010214001|XXGiport_src_flow|6276|0|10044|0|{0|}3768|3736|}
{2010006001|XXGobject_psameas_object|6277|0|10045|0|{Layout|Layout|0|0|}3763|3651|}
{2010006001|XXGobject_psameas_object|6278|0|10046|0|{in_metadata|out0_metadata|0|0|}3763|3769|}
{2010212001|XXGvertex_oport_oport|6279|0|10048|0|{0|out0|}3769|3770|}
{2010213001|XXGoport_dst_flow|6280|0|10050|0|{0|}3770|3731|}
{2010212001|XXGvertex_oport_oport|6281|0|10051|0|{1|reject0|}3769|3771|}
{2010212001|XXGvertex_oport_oport|6282|0|10053|0|{2|error0|}3769|3772|}
{2010212001|XXGvertex_oport_oport|6283|0|10055|0|{3|log|}3769|3773|}
{2010211001|XXGvertex_iport_iport|6284|0|10057|0|{0|in|}3769|3774|}
{2010006001|XXGobject_psameas_object|6285|0|10059|0|{Layout|Layout|0|0|}3769|242|}
{2010006001|XXGobject_psameas_object|6286|0|10060|0|{in_metadata|out5_metadata|0|0|}3769|242|}
{2010006001|XXGobject_psameas_object|6287|0|10061|0|{reject0_metadata|out5_metadata|0|0|}3769|242|}
{2010006001|XXGobject_psameas_object|6288|0|10062|0|{reject0_metadata|out0_metadata|0|0|}3763|3769|}
{2010006001|XXGobject_psameas_object|6289|0|10063|0|{reject_metadata|out0_metadata|0|0|}3754|3763|}
{2010006001|XXGobject_psameas_object|6290|0|10064|0|{reject_metadata|out_metadata|0|0|}3747|3754|}
{2010006001|XXGobject_psameas_object|6291|0|10065|0|{in_metadata|out_metadata|0|0|}3740|3747|}
{2010006001|XXGobject_psameas_object|6292|0|10066|0|{out_metadata|out_metadata|0|0|}3740|3747|}
{2010006001|XXGobject_psameas_object|6293|0|10067|0|{reject_metadata|out_metadata|0|0|}3740|3747|}
{2010601001|XXGgraph_vertex_vertex|6294|0|10068|0|{FBE_filter_matching_lkp_record|}3722|3747|}
{2010601001|XXGgraph_vertex_vertex|6295|0|10069|0|{RFMT_Get_Hash_On_NK|}3722|3769|}
{2010601001|XXGgraph_vertex_vertex|6296|0|10070|0|{RFMT_Lookup_with_IDS|}3722|3763|}
{2010601001|XXGgraph_vertex_vertex|6297|0|10071|0|{Sort_De_dup|}3722|3775|}
{2010604001|XXGgraph_flow_flow|6298|0|10073|0|{Flow_10|}3775|3776|}
{2010604001|XXGgraph_flow_flow|6299|0|10075|0|{Flow_4|}3775|3777|}
{2010244001|XXGflow_watcher_watcher|6300|0|10077|0|{}3777|3778|}
{2010601001|XXGgraph_vertex_vertex|6301|0|10079|0|{Dedup_Sorted_1|}3775|3779|}
{2010212001|XXGvertex_oport_oport|6302|0|10081|0|{0|out|}3779|3780|}
{2010212001|XXGvertex_oport_oport|6303|0|10083|0|{1|dup|}3779|3781|}
{2010212001|XXGvertex_oport_oport|6304|0|10085|0|{2|reject|}3779|3782|}
{2010212001|XXGvertex_oport_oport|6305|0|10087|0|{3|error|}3779|3783|}
{2010212001|XXGvertex_oport_oport|6306|0|10089|0|{4|log|}3779|3784|}
{2010211001|XXGvertex_iport_iport|6307|0|10091|0|{0|in|}3779|3785|}
{2010214001|XXGiport_src_flow|6308|0|10093|0|{0|}3785|3776|}
{2010006001|XXGobject_psameas_object|6309|0|10094|0|{Layout|Layout|0|0|}3779|3651|}
{2010006001|XXGobject_psameas_object|6310|0|10095|0|{dup_metadata|out0_metadata|0|0|}3779|3769|}
{2010006001|XXGobject_psameas_object|6311|0|10096|0|{in_metadata|out0_metadata|0|0|}3779|3769|}
{2010006001|XXGobject_psameas_object|6312|0|10097|0|{out_metadata|out0_metadata|0|0|}3779|3769|}
{2010006001|XXGobject_psameas_object|6313|0|10098|0|{reject_metadata|out0_metadata|0|0|}3779|3769|}
{2010601001|XXGgraph_vertex_vertex|6314|0|10099|0|{PBKS_dxf_hk_part1_|}3775|3786|}
{2010604001|XXGgraph_flow_flow|6315|0|10101|0|{Flow_1|}3786|3787|}
{2010601001|XXGgraph_vertex_vertex|6316|0|10103|0|{Partition_by_Key|}3786|3788|}
{2010212001|XXGvertex_oport_oport|6317|0|10105|0|{0|out|}3788|3789|}
{2010213001|XXGoport_dst_flow|6318|0|10107|0|{0|}3789|3787|}
{2010211001|XXGvertex_iport_iport|6319|0|10108|0|{0|in|}3788|3790|}
{2010006001|XXGobject_psameas_object|6320|0|10110|0|{in_metadata|out0_metadata|0|0|}3788|3769|}
{2010006001|XXGobject_psameas_object|6321|0|10111|0|{out_metadata|out0_metadata|0|0|}3788|3769|}
{2010601001|XXGgraph_vertex_vertex|6322|0|10112|0|{Sort|}3786|3791|}
{2010212001|XXGvertex_oport_oport|6323|0|10114|0|{0|out|}3791|3792|}
{2010211001|XXGvertex_iport_iport|6324|0|10116|0|{0|in|}3791|3793|}
{2010214001|XXGiport_src_flow|6325|0|10118|0|{0|}3793|3787|}
{2010006001|XXGobject_psameas_object|6326|0|10119|0|{in_metadata|out0_metadata|0|0|}3791|3769|}
{2010006001|XXGobject_psameas_object|6327|0|10120|0|{out_metadata|out0_metadata|0|0|}3791|3769|}
{2010212001|XXGvertex_oport_oport|6328|0|10121|0|{0|out0|}3786|3794|}
{2010216002|XXGoport_binding_oport|6329|0|10123|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}3794|3792|}
{2010213001|XXGoport_dst_flow|6330|0|10124|0|{0|}3794|3777|}
{2010211001|XXGvertex_iport_iport|6331|0|10125|0|{0|in0|}3786|3795|}
{2010215002|XXGiport_binding_iport|6332|0|10127|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}3795|3790|}
{2010006001|XXGobject_psameas_object|6333|0|10128|0|{InputLayout|Layout|0|0|}3786|242|}
{2010006001|XXGobject_psameas_object|6334|0|10129|0|{OutputLayout|Layout|0|0|}3786|3651|}
{2010601001|XXGgraph_vertex_vertex|6335|0|10130|0|{Sort_within_Groups_1|}3775|3796|}
{2010212001|XXGvertex_oport_oport|6336|0|10132|0|{0|out|}3796|3797|}
{2010213001|XXGoport_dst_flow|6337|0|10134|0|{0|}3797|3776|}
{2010211001|XXGvertex_iport_iport|6338|0|10135|0|{0|in|}3796|3798|}
{2010214001|XXGiport_src_flow|6339|0|10137|0|{0|}3798|3777|}
{2010006001|XXGobject_psameas_object|6340|0|10138|0|{Layout|Layout|0|0|}3796|3651|}
{2010006001|XXGobject_psameas_object|6341|0|10139|0|{in_metadata|out0_metadata|0|0|}3796|3769|}
{2010006001|XXGobject_psameas_object|6342|0|10140|0|{out_metadata|out0_metadata|0|0|}3796|3769|}
{2010212001|XXGvertex_oport_oport|6343|0|10141|0|{0|out0|}3775|3799|}
{2010216002|XXGoport_binding_oport|6344|0|10143|0|{.5|.5|{0|}7792|}3799|3780|}
{2010213001|XXGoport_dst_flow|6345|0|10144|0|{0|}3799|3736|}
{2010212001|XXGvertex_oport_oport|6346|0|10145|0|{1|out1|}3775|3800|}
{2010216002|XXGoport_binding_oport|6347|0|10147|0|{.5|.5|{0|}7793|}3800|3781|}
{2010213001|XXGoport_dst_flow|6348|0|10148|0|{0|}3800|3737|}
{2010211001|XXGvertex_iport_iport|6349|0|10149|0|{0|in0|}3775|3801|}
{2010215002|XXGiport_binding_iport|6350|0|10151|0|{.5|.5|{0|}7791|}3801|3795|}
{2010214001|XXGiport_src_flow|6351|0|10152|0|{0|}3801|3731|}
{2010601001|XXGgraph_vertex_vertex|6352|0|10153|0|{Sort_within_Groups|}3722|3802|}
{2010212001|XXGvertex_oport_oport|6353|0|10155|0|{0|out|}3802|3803|}
{2010213001|XXGoport_dst_flow|6354|0|10157|0|{0|}3803|3733|}
{2010211001|XXGvertex_iport_iport|6355|0|10158|0|{0|in|}3802|3804|}
{2010214001|XXGiport_src_flow|6356|0|10160|0|{0|}3804|3732|}
{2010006001|XXGobject_psameas_object|6357|0|10161|0|{Layout|Layout|0|0|}3802|3651|}
{2010006001|XXGobject_psameas_object|6358|0|10162|0|{in_metadata|out_metadata|0|0|}3802|3747|}
{2010006001|XXGobject_psameas_object|6359|0|10163|0|{out_metadata|out_metadata|0|0|}3802|3747|}
{2010601001|XXGgraph_vertex_vertex|6360|0|10164|0|{Trash|}3722|3805|}
{2010211001|XXGvertex_iport_iport|6361|0|10166|0|{0|in|}3805|3806|}
{2010214001|XXGiport_src_flow|6362|0|10168|0|{0|}3806|3737|}
{2010006001|XXGobject_psameas_object|6363|0|10169|0|{Layout|Layout|0|0|}3805|3651|}
{2010006001|XXGobject_psameas_object|6364|0|10170|0|{in_metadata|out0_metadata|0|0|}3805|3769|}
{2010601001|XXGgraph_vertex_vertex|6365|0|10171|0|{Trash_1|}3722|3807|}
{2010211001|XXGvertex_iport_iport|6366|0|10173|0|{0|in|}3807|3808|}
{2010214001|XXGiport_src_flow|6367|0|10175|0|{0|}3808|3738|}
{2010006001|XXGobject_psameas_object|6368|0|10176|0|{Layout|Layout|0|0|}3807|3651|}
{2010006001|XXGobject_psameas_object|6369|0|10177|0|{in_metadata|out_metadata|0|0|}3807|3747|}
{2010601001|XXGgraph_vertex_vertex|6370|0|10178|0|{Trash_2|}3722|3809|}
{2010211001|XXGvertex_iport_iport|6371|0|10180|0|{0|in|}3809|3810|}
{2010214001|XXGiport_src_flow|6372|0|10182|0|{0|}3810|3739|}
{2010006001|XXGobject_psameas_object|6373|0|10183|0|{Layout|Layout|0|0|}3809|3651|}
{2010006001|XXGobject_psameas_object|6374|0|10184|0|{in_metadata|out_metadata|0|0|}3809|3747|}
{2010601001|XXGgraph_vertex_vertex|6375|0|10185|0|{Two_Step_Lookup|}3722|3811|}
{2010605001|XXGgraph_legend_legend|6376|0|10187|0|{0|}3811|3812|}
{2010241001|XXGlegend_face_face|6377|0|10189|0|{}3812|3813|}
{2010604001|XXGgraph_flow_flow|6378|0|10191|0|{Flow_1|}3811|3758|}
{2010604001|XXGgraph_flow_flow|6379|0|10192|0|{Flow_2|}3811|3814|}
{2010604001|XXGgraph_flow_flow|6380|0|10194|0|{Flow_3|}3811|3756|}
{2010604001|XXGgraph_flow_flow|6381|0|10195|0|{Flow_4|}3811|3815|}
{2010604001|XXGgraph_flow_flow|6382|0|10197|0|{Flow_5|}3811|3816|}
{2010604001|XXGgraph_flow_flow|6383|0|10199|0|{Flow_6|}3811|3817|}
{2010601001|XXGgraph_vertex_vertex|6384|0|10201|0|{FBE_Pass_Only_Matching_Rec|}3811|3818|}
{2010212001|XXGvertex_oport_oport|6385|0|10203|0|{0|out|}3818|3819|}
{2010213001|XXGoport_dst_flow|6386|0|10205|0|{0|}3819|3816|}
{2010212001|XXGvertex_oport_oport|6387|0|10206|0|{1|deselect|}3818|3820|}
{2010213001|XXGoport_dst_flow|6388|0|10208|0|{0|}3820|3817|}
{2010212001|XXGvertex_oport_oport|6389|0|10209|0|{2|reject|}3818|3821|}
{2010212001|XXGvertex_oport_oport|6390|0|10211|0|{3|error|}3818|3822|}
{2010212001|XXGvertex_oport_oport|6391|0|10213|0|{4|log|}3818|3823|}
{2010211001|XXGvertex_iport_iport|6392|0|10215|0|{0|in|}3818|3824|}
{2010214001|XXGiport_src_flow|6393|0|10217|0|{0|}3824|3815|}
{2010006001|XXGobject_psameas_object|6394|0|10218|0|{Layout|Layout|0|0|}3818|3651|}
{2010006001|XXGobject_psameas_object|6395|0|10219|0|{deselect_metadata|out_metadata|0|0|}3818|3754|}
{2010006001|XXGobject_psameas_object|6396|0|10220|0|{in_metadata|out0_metadata|0|0|}3818|3825|}
{2010212001|XXGvertex_oport_oport|6397|0|10222|0|{0|out0|}3825|3826|}
{2010213001|XXGoport_dst_flow|6398|0|10224|0|{0|}3826|3815|}
{2010212001|XXGvertex_oport_oport|6399|0|10225|0|{1|reject0|}3825|3827|}
{2010212001|XXGvertex_oport_oport|6400|0|10227|0|{2|error0|}3825|3828|}
{2010212001|XXGvertex_oport_oport|6401|0|10229|0|{3|log|}3825|3829|}
{2010211001|XXGvertex_iport_iport|6402|0|10231|0|{0|in|}3825|3830|}
{2010214001|XXGiport_src_flow|6403|0|10233|0|{0|}3830|3814|}
{2010006001|XXGobject_psameas_object|6404|0|10234|0|{Layout|Layout|0|0|}3825|3651|}
{2010006001|XXGobject_psameas_object|6405|0|10235|0|{in_metadata|out0_metadata|0|0|}3825|3831|}
{2010212001|XXGvertex_oport_oport|6406|0|10237|0|{0|out0|}3831|3832|}
{2010213001|XXGoport_dst_flow|6407|0|10239|0|{0|}3832|3814|}
{2010212001|XXGvertex_oport_oport|6408|0|10240|0|{1|reject0|}3831|3833|}
{2010212001|XXGvertex_oport_oport|6409|0|10242|0|{2|error0|}3831|3834|}
{2010212001|XXGvertex_oport_oport|6410|0|10244|0|{3|log|}3831|3835|}
{2010211001|XXGvertex_iport_iport|6411|0|10246|0|{0|in|}3831|3836|}
{2010214001|XXGiport_src_flow|6412|0|10248|0|{0|}3836|3758|}
{2010006001|XXGobject_psameas_object|6413|0|10249|0|{Layout|Layout|0|0|}3831|3651|}
{2010006001|XXGobject_psameas_object|6414|0|10250|0|{in_metadata|deselect_metadata|0|0|}3831|3754|}
{2010006001|XXGobject_psameas_object|6415|0|10251|0|{reject0_metadata|deselect_metadata|0|0|}3831|3754|}
{2010006001|XXGobject_psameas_object|6416|0|10252|0|{reject0_metadata|out0_metadata|0|0|}3825|3831|}
{2010006001|XXGobject_psameas_object|6417|0|10253|0|{out_metadata|out_metadata|0|0|}3818|3754|}
{2010006001|XXGobject_psameas_object|6418|0|10254|0|{reject_metadata|out0_metadata|0|0|}3818|3825|}
{2010601001|XXGgraph_vertex_vertex|6419|0|10255|0|{FBE_filter_matching_lkp_record|}3811|3754|}
{2010601001|XXGgraph_vertex_vertex|6420|0|10256|0|{Merge|}3811|3837|}
{2010212001|XXGvertex_oport_oport|6421|0|10258|0|{0|out|}3837|3838|}
{2010211001|XXGvertex_iport_iport|6422|0|10260|0|{0|in|}3837|3839|}
{2010214001|XXGiport_src_flow|6423|0|10262|0|{0|}3839|3756|}
{2010214001|XXGiport_src_flow|6424|0|10263|0|{1|}3839|3816|}
{2010006001|XXGobject_psameas_object|6425|0|10264|0|{Layout|Layout|0|0|}3837|3651|}
{2010006001|XXGobject_psameas_object|6426|0|10265|0|{in_metadata|out_metadata|0|0|}3837|3754|}
{2010006001|XXGobject_psameas_object|6427|0|10266|0|{out_metadata|out_metadata|0|0|}3837|3754|}
{2010601001|XXGgraph_vertex_vertex|6428|0|10267|0|{No_Match_Record_In_Second_Pass|}3811|3840|}
{2010211001|XXGvertex_iport_iport|6429|0|10269|0|{0|in|}3840|3841|}
{2010214001|XXGiport_src_flow|6430|0|10271|0|{0|}3841|3817|}
{2010006001|XXGobject_psameas_object|6431|0|10272|0|{Layout|Layout|0|0|}3840|3651|}
{2010006001|XXGobject_psameas_object|6432|0|10273|0|{in_metadata|out_metadata|0|0|}3840|3754|}
{2010601001|XXGgraph_vertex_vertex|6433|0|10274|0|{RFMT_Lookup_with_IDS_Archive_|}3811|3825|}
{2010601001|XXGgraph_vertex_vertex|6434|0|10275|0|{RFMT_Pass_only_Hash_Keys|}3811|3831|}
{2010212001|XXGvertex_oport_oport|6435|0|10276|0|{0|out0|}3811|3842|}
{2010216002|XXGoport_binding_oport|6436|0|10278|0|{.5|.5|{0|}15500|}3842|3838|}
{2010213001|XXGoport_dst_flow|6437|0|10279|0|{0|}3842|3735|}
{2010211001|XXGvertex_iport_iport|6438|0|10280|0|{0|in0|}3811|3843|}
{2010215002|XXGiport_binding_iport|6439|0|10282|0|{.5|.5|{0|}15499|}3843|3762|}
{2010214001|XXGiport_src_flow|6440|0|10283|0|{0|}3843|3734|}
{2010212001|XXGvertex_oport_oport|6441|0|10284|0|{0|out0|}3722|3844|}
{2010216002|XXGoport_binding_oport|6442|0|10286|0|{.5|.5|{0|}15515|}3844|3741|}
{2010213001|XXGoport_dst_flow|6443|0|10287|0|{0|}3844|3618|}
{2010211001|XXGvertex_iport_iport|6444|0|10288|0|{0|in1|}3722|3845|}
{2010215002|XXGiport_binding_iport|6445|0|10290|0|{.5|.5|{0|}15514|}3845|3774|}
{2010214001|XXGiport_src_flow|6446|0|10291|0|{0|}3845|3616|}
{2010601001|XXGgraph_vertex_vertex|6447|0|10292|0|{Merge|}3610|3846|}
{2010212001|XXGvertex_oport_oport|6448|0|10294|0|{0|out|}3846|3847|}
{2010211001|XXGvertex_iport_iport|6449|0|10296|0|{0|in|}3846|3848|}
{2010214001|XXGiport_src_flow|6450|0|10298|0|{0|}3848|3619|}
{2010006001|XXGobject_psameas_object|6451|0|10299|0|{Layout|Layout|0|0|}3846|173|}
{2010006001|XXGobject_psameas_object|6452|0|10300|0|{in_metadata|write_metadata|0|0|}3846|173|}
{2010006001|XXGobject_psameas_object|6453|0|10301|0|{out_metadata|write_metadata|0|0|}3846|173|}
{2010601001|XXGgraph_vertex_vertex|6454|0|10302|0|{Replicate|}3610|3849|}
{2010212001|XXGvertex_oport_oport|6455|0|10304|0|{0|out|}3849|3850|}
{2010213001|XXGoport_dst_flow|6456|0|10306|0|{0|}3850|3615|}
{2010213001|XXGoport_dst_flow|6457|0|10307|0|{1|}3850|3616|}
{2010211001|XXGvertex_iport_iport|6458|0|10308|0|{0|in|}3849|3851|}
{2010006001|XXGobject_psameas_object|6459|0|10310|0|{Layout|Layout|0|0|}3849|242|}
{2010006001|XXGobject_psameas_object|6460|0|10311|0|{in_metadata|out5_metadata|0|0|}3849|242|}
{2010006001|XXGobject_psameas_object|6461|0|10312|0|{out_metadata|out5_metadata|0|0|}3849|242|}
{2010601001|XXGgraph_vertex_vertex|6462|0|10313|0|{Replicate_1|}3610|3852|}
{2010212001|XXGvertex_oport_oport|6463|0|10315|0|{0|out|}3852|3853|}
{2010213001|XXGoport_dst_flow|6464|0|10317|0|{0|}3853|3619|}
{2010211001|XXGvertex_iport_iport|6465|0|10318|0|{0|in|}3852|3854|}
{2010214001|XXGiport_src_flow|6466|0|10320|0|{0|}3854|3617|}
{2010214001|XXGiport_src_flow|6467|0|10321|0|{1|}3854|3618|}
{2010006001|XXGobject_psameas_object|6468|0|10322|0|{Layout|Layout|0|0|}3852|3651|}
{2010006001|XXGobject_psameas_object|6469|0|10323|0|{in_metadata|out_metadata|0|0|}3852|3747|}
{2010006001|XXGobject_psameas_object|6470|0|10324|0|{out_metadata|out_metadata|0|0|}3852|3747|}
{2010212001|XXGvertex_oport_oport|6471|0|10325|0|{0|out0|}3610|3855|}
{2010216002|XXGoport_binding_oport|6472|0|10327|0|{.5|.5|{0|}7807|}3855|3847|}
{2010213001|XXGoport_dst_flow|6473|0|10328|0|{0|}3855|145|}
{2010211001|XXGvertex_iport_iport|6474|0|10329|0|{0|in0|}3610|3856|}
{2010215002|XXGiport_binding_iport|6475|0|10331|0|{.5|.5|{0|}7806|}3856|3851|}
{2010007001|XXGobject_proto_object|6476|0|10332|0|{}3610|3857|}
{2010605001|XXGgraph_legend_legend|6477|0|10334|0|{0|}3857|3858|}
{2010241001|XXGlegend_face_face|6478|0|10336|0|{}3858|3859|}
{2010605001|XXGgraph_legend_legend|6479|0|10338|0|{1|}3857|3860|}
{2010241001|XXGlegend_face_face|6480|0|10340|0|{}3860|3861|}
{2010604001|XXGgraph_flow_flow|6481|0|10342|0|{Flow_1|}3857|3862|}
{2010604001|XXGgraph_flow_flow|6482|0|10344|0|{Flow_2|}3857|3863|}
{2010604001|XXGgraph_flow_flow|6483|0|10346|0|{Flow_3|}3857|3864|}
{2010604001|XXGgraph_flow_flow|6484|0|10348|0|{Flow_4|}3857|3865|}
{2010604001|XXGgraph_flow_flow|6485|0|10350|0|{Flow_5|}3857|3866|}
{2010601001|XXGgraph_vertex_vertex|6486|0|10352|0|{Get_All_LookUp_Record|}3857|3867|}
{2010605001|XXGgraph_legend_legend|6487|0|10354|0|{0|}3867|3868|}
{2010241001|XXGlegend_face_face|6488|0|10356|0|{}3868|3869|}
{2010605001|XXGgraph_legend_legend|6489|0|10358|0|{1|}3867|3870|}
{2010241001|XXGlegend_face_face|6490|0|10360|0|{}3870|3871|}
{2010605001|XXGgraph_legend_legend|6491|0|10362|0|{2|}3867|3872|}
{2010241001|XXGlegend_face_face|6492|0|10364|0|{}3872|3873|}
{2010605001|XXGgraph_legend_legend|6493|0|10366|0|{3|}3867|3874|}
{2010241001|XXGlegend_face_face|6494|0|10368|0|{}3874|3875|}
{2010605001|XXGgraph_legend_legend|6495|0|10370|0|{4|}3867|3876|}
{2010241001|XXGlegend_face_face|6496|0|10372|0|{}3876|3877|}
{2010604001|XXGgraph_flow_flow|6497|0|10374|0|{Flow_1|}3867|3878|}
{2010604001|XXGgraph_flow_flow|6498|0|10376|0|{Flow_10|}3867|3879|}
{2010604001|XXGgraph_flow_flow|6499|0|10378|0|{Flow_11|}3867|3880|}
{2010604001|XXGgraph_flow_flow|6500|0|10380|0|{Flow_12|}3867|3881|}
{2010604001|XXGgraph_flow_flow|6501|0|10382|0|{Flow_18|}3867|3882|}
{2010604001|XXGgraph_flow_flow|6502|0|10384|0|{Flow_2|}3867|3883|}
{2010604001|XXGgraph_flow_flow|6503|0|10386|0|{Flow_3|}3867|3884|}
{2010604001|XXGgraph_flow_flow|6504|0|10388|0|{Flow_4|}3867|3885|}
{2010604001|XXGgraph_flow_flow|6505|0|10390|0|{Flow_5|}3867|3886|}
{2010604001|XXGgraph_flow_flow|6506|0|10392|0|{Flow_6|}3867|3887|}
{2010604001|XXGgraph_flow_flow|6507|0|10394|0|{Flow_7|}3867|3888|}
{2010604001|XXGgraph_flow_flow|6508|0|10396|0|{Flow_8|}3867|3889|}
{2010604001|XXGgraph_flow_flow|6509|0|10398|0|{Flow_9|}3867|3890|}
{2010601001|XXGgraph_vertex_vertex|6510|0|10400|0|{Dedup_Sorted|}3867|3891|}
{2010212001|XXGvertex_oport_oport|6511|0|10402|0|{0|out|}3891|3892|}
{2010213001|XXGoport_dst_flow|6512|0|10404|0|{0|}3892|3883|}
{2010212001|XXGvertex_oport_oport|6513|0|10405|0|{1|dup|}3891|3893|}
{2010213001|XXGoport_dst_flow|6514|0|10407|0|{0|}3893|3887|}
{2010212001|XXGvertex_oport_oport|6515|0|10408|0|{2|reject|}3891|3894|}
{2010212001|XXGvertex_oport_oport|6516|0|10410|0|{3|error|}3891|3895|}
{2010212001|XXGvertex_oport_oport|6517|0|10412|0|{4|log|}3891|3896|}
{2010211001|XXGvertex_iport_iport|6518|0|10414|0|{0|in|}3891|3897|}
{2010214001|XXGiport_src_flow|6519|0|10416|0|{0|}3897|3878|}
{2010007001|XXGobject_proto_object|6520|0|10417|0|{}3891|3898|}
{2010212001|XXGvertex_oport_oport|6521|0|10419|0|{0|out|}3898|3899|}
{2010006001|XXGobject_psameas_object|6522|0|10421|0|{metadata|out_metadata|1|0|}3899|3898|}
{2010212001|XXGvertex_oport_oport|6523|0|10422|0|{1|dup|}3898|3900|}
{2010006001|XXGobject_psameas_object|6524|0|10424|0|{metadata|dup_metadata|1|0|}3900|3898|}
{2010212001|XXGvertex_oport_oport|6525|0|10425|0|{2|reject|}3898|3901|}
{2010006001|XXGobject_psameas_object|6526|0|10427|0|{metadata|reject_metadata|1|0|}3901|3898|}
{2010212001|XXGvertex_oport_oport|6527|0|10428|0|{3|error|}3898|3902|}
{2010006001|XXGobject_psameas_object|6528|0|10430|0|{metadata|error_metadata|1|0|}3902|3898|}
{2010212001|XXGvertex_oport_oport|6529|0|10431|0|{4|log|}3898|3903|}
{2010006001|XXGobject_psameas_object|6530|0|10433|0|{metadata|log_metadata|1|0|}3903|3898|}
{2010211001|XXGvertex_iport_iport|6531|0|10434|0|{0|in|}3898|3904|}
{2010006001|XXGobject_psameas_object|6532|0|10436|0|{metadata|in_metadata|1|0|}3904|3898|}
{2010601001|XXGgraph_vertex_vertex|6533|0|10437|0|{FBE_Filter_match_records|}3867|3905|}
{2010212001|XXGvertex_oport_oport|6534|0|10439|0|{0|out|}3905|3906|}
{2010213001|XXGoport_dst_flow|6535|0|10441|0|{0|}3906|3880|}
{2010212001|XXGvertex_oport_oport|6536|0|10442|0|{1|deselect|}3905|3907|}
{2010213001|XXGoport_dst_flow|6537|0|10444|0|{0|}3907|3888|}
{2010212001|XXGvertex_oport_oport|6538|0|10445|0|{2|reject|}3905|3908|}
{2010212001|XXGvertex_oport_oport|6539|0|10447|0|{3|error|}3905|3909|}
{2010212001|XXGvertex_oport_oport|6540|0|10449|0|{4|log|}3905|3910|}
{2010211001|XXGvertex_iport_iport|6541|0|10451|0|{0|in|}3905|3911|}
{2010214001|XXGiport_src_flow|6542|0|10453|0|{0|}3911|3889|}
{2010007001|XXGobject_proto_object|6543|0|10454|0|{}3905|3912|}
{2010212001|XXGvertex_oport_oport|6544|0|10456|0|{0|out|}3912|3913|}
{2010006001|XXGobject_psameas_object|6545|0|10458|0|{metadata|out_metadata|1|0|}3913|3912|}
{2010212001|XXGvertex_oport_oport|6546|0|10459|0|{1|deselect|}3912|3914|}
{2010006001|XXGobject_psameas_object|6547|0|10461|0|{metadata|deselect_metadata|1|0|}3914|3912|}
{2010212001|XXGvertex_oport_oport|6548|0|10462|0|{2|reject|}3912|3915|}
{2010006001|XXGobject_psameas_object|6549|0|10464|0|{metadata|reject_metadata|1|0|}3915|3912|}
{2010212001|XXGvertex_oport_oport|6550|0|10465|0|{3|error|}3912|3916|}
{2010006001|XXGobject_psameas_object|6551|0|10467|0|{metadata|error_metadata|1|0|}3916|3912|}
{2010212001|XXGvertex_oport_oport|6552|0|10468|0|{4|log|}3912|3917|}
{2010006001|XXGobject_psameas_object|6553|0|10470|0|{metadata|log_metadata|1|0|}3917|3912|}
{2010211001|XXGvertex_iport_iport|6554|0|10471|0|{0|in|}3912|3918|}
{2010006001|XXGobject_psameas_object|6555|0|10473|0|{metadata|in_metadata|1|0|}3918|3912|}
{2010601001|XXGgraph_vertex_vertex|6556|0|10474|0|{Get_Hash_on_SRC_NK|}3867|3919|}
{2010212001|XXGvertex_oport_oport|6557|0|10476|0|{0|out0|}3919|3920|}
{2010213001|XXGoport_dst_flow|6558|0|10478|0|{0|}3920|3882|}
{2010212001|XXGvertex_oport_oport|6559|0|10479|0|{1|reject0|}3919|3921|}
{2010212001|XXGvertex_oport_oport|6560|0|10481|0|{2|error0|}3919|3922|}
{2010212001|XXGvertex_oport_oport|6561|0|10483|0|{3|log|}3919|3923|}
{2010211001|XXGvertex_iport_iport|6562|0|10485|0|{0|in|}3919|3924|}
{2010007001|XXGobject_proto_object|6563|0|10487|0|{}3919|3925|}
{2010212001|XXGvertex_oport_oport|6564|0|10489|0|{0|out0|}3925|3926|}
{2010006001|XXGobject_psameas_object|6565|0|10491|0|{metadata|out0_metadata|1|0|}3926|3925|}
{2010006001|XXGobject_psameas_object|6566|0|10492|0|{transform0|transform0|1|0|}3926|3925|}
{2010212001|XXGvertex_oport_oport|6567|0|10493|0|{1|reject0|}3925|3927|}
{2010006001|XXGobject_psameas_object|6568|0|10495|0|{metadata|reject0_metadata|1|0|}3927|3925|}
{2010212001|XXGvertex_oport_oport|6569|0|10496|0|{2|error0|}3925|3928|}
{2010006001|XXGobject_psameas_object|6570|0|10498|0|{metadata|error0_metadata|1|0|}3928|3925|}
{2010212001|XXGvertex_oport_oport|6571|0|10499|0|{3|log|}3925|3929|}
{2010006001|XXGobject_psameas_object|6572|0|10501|0|{metadata|log_metadata|1|0|}3929|3925|}
{2010211001|XXGvertex_iport_iport|6573|0|10502|0|{0|in|}3925|3930|}
{2010006001|XXGobject_psameas_object|6574|0|10504|0|{metadata|in_metadata|1|0|}3930|3925|}
{2010601001|XXGgraph_vertex_vertex|6575|0|10505|0|{Merge|}3867|3931|}
{2010212001|XXGvertex_oport_oport|6576|0|10507|0|{0|out|}3931|3932|}
{2010213001|XXGoport_dst_flow|6577|0|10509|0|{0|}3932|3889|}
{2010211001|XXGvertex_iport_iport|6578|0|10510|0|{0|in|}3931|3933|}
{2010214001|XXGiport_src_flow|6579|0|10512|0|{0|}3933|3884|}
{2010214001|XXGiport_src_flow|6580|0|10513|0|{1|}3933|3881|}
{2010007001|XXGobject_proto_object|6581|0|10514|0|{}3931|3934|}
{2010212001|XXGvertex_oport_oport|6582|0|10516|0|{0|out|}3934|3935|}
{2010006001|XXGobject_psameas_object|6583|0|10518|0|{metadata|out_metadata|1|0|}3935|3934|}
{2010211001|XXGvertex_iport_iport|6584|0|10519|0|{0|in|}3934|3936|}
{2010006001|XXGobject_psameas_object|6585|0|10521|0|{metadata|in_metadata|1|0|}3936|3934|}
{2010601001|XXGgraph_vertex_vertex|6586|0|10522|0|{Normalize_Get_all_records_from_Archive_Lkp|}3867|3937|}
{2010212001|XXGvertex_oport_oport|6587|0|10524|0|{0|out|}3937|3938|}
{2010213001|XXGoport_dst_flow|6588|0|10526|0|{0|}3938|3881|}
{2010212001|XXGvertex_oport_oport|6589|0|10527|0|{1|reject|}3937|3939|}
{2010212001|XXGvertex_oport_oport|6590|0|10529|0|{2|error|}3937|3940|}
{2010212001|XXGvertex_oport_oport|6591|0|10531|0|{3|log|}3937|3941|}
{2010211001|XXGvertex_iport_iport|6592|0|10533|0|{0|in|}3937|3942|}
{2010214001|XXGiport_src_flow|6593|0|10535|0|{0|}3942|3879|}
{2010007001|XXGobject_proto_object|6594|0|10536|0|{}3937|3943|}
{2010212001|XXGvertex_oport_oport|6595|0|10538|0|{0|out|}3943|3944|}
{2010006001|XXGobject_psameas_object|6596|0|10540|0|{metadata|out_metadata|1|0|}3944|3943|}
{2010212001|XXGvertex_oport_oport|6597|0|10541|0|{1|reject|}3943|3945|}
{2010006001|XXGobject_psameas_object|6598|0|10543|0|{metadata|reject_metadata|1|0|}3945|3943|}
{2010212001|XXGvertex_oport_oport|6599|0|10544|0|{2|error|}3943|3946|}
{2010006001|XXGobject_psameas_object|6600|0|10546|0|{metadata|error_metadata|1|0|}3946|3943|}
{2010212001|XXGvertex_oport_oport|6601|0|10547|0|{3|log|}3943|3947|}
{2010006001|XXGobject_psameas_object|6602|0|10549|0|{metadata|log_metadata|1|0|}3947|3943|}
{2010211001|XXGvertex_iport_iport|6603|0|10550|0|{0|in|}3943|3948|}
{2010006001|XXGobject_psameas_object|6604|0|10552|0|{metadata|in_metadata|1|0|}3948|3943|}
{2010601001|XXGgraph_vertex_vertex|6605|0|10553|0|{Normalize_Get_all_records_from_lkp|}3867|3949|}
{2010212001|XXGvertex_oport_oport|6606|0|10555|0|{0|out|}3949|3950|}
{2010213001|XXGoport_dst_flow|6607|0|10557|0|{0|}3950|3884|}
{2010212001|XXGvertex_oport_oport|6608|0|10558|0|{1|reject|}3949|3951|}
{2010212001|XXGvertex_oport_oport|6609|0|10560|0|{2|error|}3949|3952|}
{2010212001|XXGvertex_oport_oport|6610|0|10562|0|{3|log|}3949|3953|}
{2010211001|XXGvertex_iport_iport|6611|0|10564|0|{0|in|}3949|3954|}
{2010214001|XXGiport_src_flow|6612|0|10566|0|{0|}3954|3886|}
{2010007001|XXGobject_proto_object|6613|0|10567|0|{}3949|3955|}
{2010212001|XXGvertex_oport_oport|6614|0|10569|0|{0|out|}3955|3956|}
{2010006001|XXGobject_psameas_object|6615|0|10571|0|{metadata|out_metadata|1|0|}3956|3955|}
{2010212001|XXGvertex_oport_oport|6616|0|10572|0|{1|reject|}3955|3957|}
{2010006001|XXGobject_psameas_object|6617|0|10574|0|{metadata|reject_metadata|1|0|}3957|3955|}
{2010212001|XXGvertex_oport_oport|6618|0|10575|0|{2|error|}3955|3958|}
{2010006001|XXGobject_psameas_object|6619|0|10577|0|{metadata|error_metadata|1|0|}3958|3955|}
{2010212001|XXGvertex_oport_oport|6620|0|10578|0|{3|log|}3955|3959|}
{2010006001|XXGobject_psameas_object|6621|0|10580|0|{metadata|log_metadata|1|0|}3959|3955|}
{2010211001|XXGvertex_iport_iport|6622|0|10581|0|{0|in|}3955|3960|}
{2010006001|XXGobject_psameas_object|6623|0|10583|0|{metadata|in_metadata|1|0|}3960|3955|}
{2010601001|XXGgraph_vertex_vertex|6624|0|10584|0|{Replicate|}3867|3961|}
{2010212001|XXGvertex_oport_oport|6625|0|10586|0|{0|out|}3961|3962|}
{2010211001|XXGvertex_iport_iport|6626|0|10588|0|{0|in|}3961|3963|}
{2010214001|XXGiport_src_flow|6627|0|10590|0|{0|}3963|3883|}
{2010007001|XXGobject_proto_object|6628|0|10591|0|{}3961|3964|}
{2010212001|XXGvertex_oport_oport|6629|0|10593|0|{0|out|}3964|3965|}
{2010006001|XXGobject_psameas_object|6630|0|10595|0|{metadata|out_metadata|1|0|}3965|3964|}
{2010211001|XXGvertex_iport_iport|6631|0|10596|0|{0|in|}3964|3966|}
{2010006001|XXGobject_psameas_object|6632|0|10598|0|{metadata|in_metadata|1|0|}3966|3964|}
{2010601001|XXGgraph_vertex_vertex|6633|0|10599|0|{Replicate_1|}3867|3967|}
{2010212001|XXGvertex_oport_oport|6634|0|10601|0|{0|out|}3967|3968|}
{2010213001|XXGoport_dst_flow|6635|0|10603|0|{0|}3968|3886|}
{2010213001|XXGoport_dst_flow|6636|0|10604|0|{1|}3968|3879|}
{2010211001|XXGvertex_iport_iport|6637|0|10605|0|{0|in|}3967|3969|}
{2010214001|XXGiport_src_flow|6638|0|10607|0|{0|}3969|3885|}
{2010007001|XXGobject_proto_object|6639|0|10608|0|{}3967|3970|}
{2010212001|XXGvertex_oport_oport|6640|0|10610|0|{0|out|}3970|3971|}
{2010006001|XXGobject_psameas_object|6641|0|10612|0|{metadata|out_metadata|1|0|}3971|3970|}
{2010211001|XXGvertex_iport_iport|6642|0|10613|0|{0|in|}3970|3972|}
{2010006001|XXGobject_psameas_object|6643|0|10615|0|{metadata|in_metadata|1|0|}3972|3970|}
{2010601001|XXGgraph_vertex_vertex|6644|0|10616|0|{Sort_Remove_Dup_On_Hash|}3867|3973|}
{2010604001|XXGgraph_flow_flow|6645|0|10618|0|{Flow_3|}3973|3974|}
{2010604001|XXGgraph_flow_flow|6646|0|10620|0|{Flow_5|}3973|3975|}
{2010601001|XXGgraph_vertex_vertex|6647|0|10622|0|{Dedup_Sorted_1|}3973|3976|}
{2010212001|XXGvertex_oport_oport|6648|0|10624|0|{0|out|}3976|3977|}
{2010212001|XXGvertex_oport_oport|6649|0|10626|0|{1|dup|}3976|3978|}
{2010212001|XXGvertex_oport_oport|6650|0|10628|0|{2|reject|}3976|3979|}
{2010212001|XXGvertex_oport_oport|6651|0|10630|0|{3|error|}3976|3980|}
{2010212001|XXGvertex_oport_oport|6652|0|10632|0|{4|log|}3976|3981|}
{2010211001|XXGvertex_iport_iport|6653|0|10634|0|{0|in|}3976|3982|}
{2010214001|XXGiport_src_flow|6654|0|10636|0|{0|}3982|3975|}
{2010007001|XXGobject_proto_object|6655|0|10637|0|{}3976|3983|}
{2010212001|XXGvertex_oport_oport|6656|0|10639|0|{0|out|}3983|3984|}
{2010006001|XXGobject_psameas_object|6657|0|10641|0|{metadata|out_metadata|1|0|}3984|3983|}
{2010212001|XXGvertex_oport_oport|6658|0|10642|0|{1|dup|}3983|3985|}
{2010006001|XXGobject_psameas_object|6659|0|10644|0|{metadata|dup_metadata|1|0|}3985|3983|}
{2010212001|XXGvertex_oport_oport|6660|0|10645|0|{2|reject|}3983|3986|}
{2010006001|XXGobject_psameas_object|6661|0|10647|0|{metadata|reject_metadata|1|0|}3986|3983|}
{2010212001|XXGvertex_oport_oport|6662|0|10648|0|{3|error|}3983|3987|}
{2010006001|XXGobject_psameas_object|6663|0|10650|0|{metadata|error_metadata|1|0|}3987|3983|}
{2010212001|XXGvertex_oport_oport|6664|0|10651|0|{4|log|}3983|3988|}
{2010006001|XXGobject_psameas_object|6665|0|10653|0|{metadata|log_metadata|1|0|}3988|3983|}
{2010211001|XXGvertex_iport_iport|6666|0|10654|0|{0|in|}3983|3989|}
{2010006001|XXGobject_psameas_object|6667|0|10656|0|{metadata|in_metadata|1|0|}3989|3983|}
{2010601001|XXGgraph_vertex_vertex|6668|0|10657|0|{PBKS_dxf_hk_part1_|}3973|3990|}
{2010604001|XXGgraph_flow_flow|6669|0|10659|0|{Flow_1|}3990|3991|}
{2010601001|XXGgraph_vertex_vertex|6670|0|10661|0|{Partition_by_Key|}3990|3992|}
{2010212001|XXGvertex_oport_oport|6671|0|10663|0|{0|out|}3992|3993|}
{2010213001|XXGoport_dst_flow|6672|0|10665|0|{0|}3993|3991|}
{2010211001|XXGvertex_iport_iport|6673|0|10666|0|{0|in|}3992|3994|}
{2010601001|XXGgraph_vertex_vertex|6674|0|10668|0|{Sort|}3990|3995|}
{2010212001|XXGvertex_oport_oport|6675|0|10670|0|{0|out|}3995|3996|}
{2010211001|XXGvertex_iport_iport|6676|0|10672|0|{0|in|}3995|3997|}
{2010214001|XXGiport_src_flow|6677|0|10674|0|{0|}3997|3991|}
{2010212001|XXGvertex_oport_oport|6678|0|10675|0|{0|out0|}3990|3998|}
{2010216002|XXGoport_binding_oport|6679|0|10677|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}3998|3996|}
{2010213001|XXGoport_dst_flow|6680|0|10678|0|{0|}3998|3974|}
{2010211001|XXGvertex_iport_iport|6681|0|10679|0|{0|in0|}3990|3999|}
{2010215002|XXGiport_binding_iport|6682|0|10681|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}3999|3994|}
{2010007001|XXGobject_proto_object|6683|0|10682|0|{}3990|4000|}
{2010604001|XXGgraph_flow_flow|6684|0|10684|0|{Flow_1|}4000|4001|}
{2010601001|XXGgraph_vertex_vertex|6685|0|10686|0|{Partition_by_Key|}4000|4002|}
{2010212001|XXGvertex_oport_oport|6686|0|10688|0|{0|out|}4002|4003|}
{2010213001|XXGoport_dst_flow|6687|0|10690|0|{0|}4003|4001|}
{2010211001|XXGvertex_iport_iport|6688|0|10691|0|{0|in|}4002|4004|}
{2010007001|XXGobject_proto_object|6689|0|10693|0|{}4002|4005|}
{2010212001|XXGvertex_oport_oport|6690|0|10695|0|{0|out|}4005|4006|}
{2010006001|XXGobject_psameas_object|6691|0|10697|0|{metadata|out_metadata|1|0|}4006|4005|}
{2010211001|XXGvertex_iport_iport|6692|0|10698|0|{0|in|}4005|4007|}
{2010006001|XXGobject_psameas_object|6693|0|10700|0|{metadata|in_metadata|1|0|}4007|4005|}
{2010006001|XXGobject_psameas_object|6694|0|10701|0|{Layout|InputLayout|1|0|}4002|4000|}
{2010006001|XXGobject_psameas_object|6695|0|10702|0|{key|Key|1|0|}4002|4000|}
{2010601001|XXGgraph_vertex_vertex|6696|0|10703|0|{Sort|}4000|4008|}
{2010212001|XXGvertex_oport_oport|6697|0|10705|0|{0|out|}4008|4009|}
{2010211001|XXGvertex_iport_iport|6698|0|10707|0|{0|in|}4008|4010|}
{2010214001|XXGiport_src_flow|6699|0|10709|0|{0|}4010|4001|}
{2010007001|XXGobject_proto_object|6700|0|10710|0|{}4008|4011|}
{2010212001|XXGvertex_oport_oport|6701|0|10712|0|{0|out|}4011|4012|}
{2010006001|XXGobject_psameas_object|6702|0|10714|0|{metadata|out_metadata|1|0|}4012|4011|}
{2010211001|XXGvertex_iport_iport|6703|0|10715|0|{0|in|}4011|4013|}
{2010006001|XXGobject_psameas_object|6704|0|10717|0|{metadata|in_metadata|1|0|}4013|4011|}
{2010006001|XXGobject_psameas_object|6705|0|10718|0|{Layout|OutputLayout|1|0|}4008|4000|}
{2010006001|XXGobject_psameas_object|6706|0|10719|0|{key|Key|1|0|}4008|4000|}
{2010006001|XXGobject_psameas_object|6707|0|10720|0|{max_core|Max_core|1|0|}4008|4000|}
{2010212001|XXGvertex_oport_oport|6708|0|10721|0|{0|out0|}4000|4014|}
{2010216002|XXGoport_binding_oport|6709|0|10723|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}4014|4009|}
{2010211001|XXGvertex_iport_iport|6710|0|10724|0|{0|in0|}4000|4015|}
{2010215002|XXGiport_binding_iport|6711|0|10726|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}4015|4004|}
{2010006001|XXGobject_psameas_object|6712|0|10727|0|{InputLayout|Layout|0|0|}3990|3919|}
{2010601001|XXGgraph_vertex_vertex|6713|0|10728|0|{Sort_within_Groups|}3973|4016|}
{2010212001|XXGvertex_oport_oport|6714|0|10730|0|{0|out|}4016|4017|}
{2010213001|XXGoport_dst_flow|6715|0|10732|0|{0|}4017|3975|}
{2010211001|XXGvertex_iport_iport|6716|0|10733|0|{0|in|}4016|4018|}
{2010214001|XXGiport_src_flow|6717|0|10735|0|{0|}4018|3974|}
{2010007001|XXGobject_proto_object|6718|0|10736|0|{}4016|4019|}
{2010212001|XXGvertex_oport_oport|6719|0|10738|0|{0|out|}4019|4020|}
{2010006001|XXGobject_psameas_object|6720|0|10740|0|{metadata|out_metadata|1|0|}4020|4019|}
{2010211001|XXGvertex_iport_iport|6721|0|10741|0|{0|in|}4019|4021|}
{2010006001|XXGobject_psameas_object|6722|0|10743|0|{metadata|in_metadata|1|0|}4021|4019|}
{2010212001|XXGvertex_oport_oport|6723|0|10744|0|{0|out0|}3973|4022|}
{2010216002|XXGoport_binding_oport|6724|0|10746|0|{.5|.5|{0|}14672|}4022|3977|}
{2010213001|XXGoport_dst_flow|6725|0|10747|0|{0|}4022|3885|}
{2010212001|XXGvertex_oport_oport|6726|0|10748|0|{1|out1|}3973|4023|}
{2010216002|XXGoport_binding_oport|6727|0|10750|0|{.5|.5|{0|}14673|}4023|3978|}
{2010213001|XXGoport_dst_flow|6728|0|10751|0|{0|}4023|3890|}
{2010211001|XXGvertex_iport_iport|6729|0|10752|0|{0|in0|}3973|4024|}
{2010215002|XXGiport_binding_iport|6730|0|10754|0|{.5|.5|{0|}14671|}4024|3999|}
{2010214001|XXGiport_src_flow|6731|0|10755|0|{0|}4024|3882|}
{2010601001|XXGgraph_vertex_vertex|6732|0|10756|0|{Sort_on_Adjusted_Natural_Keys|}3867|4025|}
{2010212001|XXGvertex_oport_oport|6733|0|10758|0|{0|out|}4025|4026|}
{2010213001|XXGoport_dst_flow|6734|0|10760|0|{0|}4026|3878|}
{2010211001|XXGvertex_iport_iport|6735|0|10761|0|{0|in|}4025|4027|}
{2010214001|XXGiport_src_flow|6736|0|10763|0|{0|}4027|3880|}
{2010007001|XXGobject_proto_object|6737|0|10764|0|{}4025|4028|}
{2010212001|XXGvertex_oport_oport|6738|0|10766|0|{0|out|}4028|4029|}
{2010006001|XXGobject_psameas_object|6739|0|10768|0|{metadata|out_metadata|1|0|}4029|4028|}
{2010211001|XXGvertex_iport_iport|6740|0|10769|0|{0|in|}4028|4030|}
{2010006001|XXGobject_psameas_object|6741|0|10771|0|{metadata|in_metadata|1|0|}4030|4028|}
{2010601001|XXGgraph_vertex_vertex|6742|0|10772|0|{Trash_1|}3867|4031|}
{2010211001|XXGvertex_iport_iport|6743|0|10774|0|{0|in|}4031|4032|}
{2010214001|XXGiport_src_flow|6744|0|10776|0|{0|}4032|3888|}
{2010007001|XXGobject_proto_object|6745|0|10777|0|{}4031|4033|}
{2010211001|XXGvertex_iport_iport|6746|0|10779|0|{0|in|}4033|4034|}
{2010006001|XXGobject_psameas_object|6747|0|10781|0|{metadata|in_metadata|1|0|}4034|4033|}
{2010601001|XXGgraph_vertex_vertex|6748|0|10782|0|{Trash_2|}3867|4035|}
{2010211001|XXGvertex_iport_iport|6749|0|10784|0|{0|in|}4035|4036|}
{2010214001|XXGiport_src_flow|6750|0|10786|0|{0|}4036|3887|}
{2010007001|XXGobject_proto_object|6751|0|10787|0|{}4035|4037|}
{2010211001|XXGvertex_iport_iport|6752|0|10789|0|{0|in|}4037|4038|}
{2010006001|XXGobject_psameas_object|6753|0|10791|0|{metadata|in_metadata|1|0|}4038|4037|}
{2010601001|XXGgraph_vertex_vertex|6754|0|10792|0|{Trash_3|}3867|4039|}
{2010211001|XXGvertex_iport_iport|6755|0|10794|0|{0|in|}4039|4040|}
{2010214001|XXGiport_src_flow|6756|0|10796|0|{0|}4040|3890|}
{2010007001|XXGobject_proto_object|6757|0|10797|0|{}4039|4041|}
{2010211001|XXGvertex_iport_iport|6758|0|10799|0|{0|in|}4041|4042|}
{2010006001|XXGobject_psameas_object|6759|0|10801|0|{metadata|in_metadata|1|0|}4042|4041|}
{2010212001|XXGvertex_oport_oport|6760|0|10802|0|{0|out0|}3867|4043|}
{2010216002|XXGoport_binding_oport|6761|0|10804|0|{.5|.5|{0|}14899|}4043|3962|}
{2010213001|XXGoport_dst_flow|6762|0|10805|0|{0|}4043|3864|}
{2010211001|XXGvertex_iport_iport|6763|0|10806|0|{0|in0|}3867|4044|}
{2010215002|XXGiport_binding_iport|6764|0|10808|0|{.5|.5|{0|}14898|}4044|3924|}
{2010214001|XXGiport_src_flow|6765|0|10809|0|{0|}4044|3862|}
{2010601001|XXGgraph_vertex_vertex|6766|0|10810|0|{Get_Last_Lookup_Record|}3857|4045|}
{2010605001|XXGgraph_legend_legend|6767|0|10812|0|{0|}4045|4046|}
{2010241001|XXGlegend_face_face|6768|0|10814|0|{}4046|4047|}
{2010605001|XXGgraph_legend_legend|6769|0|10816|0|{1|}4045|4048|}
{2010241001|XXGlegend_face_face|6770|0|10818|0|{}4048|4049|}
{2010605001|XXGgraph_legend_legend|6771|0|10820|0|{2|}4045|4050|}
{2010241001|XXGlegend_face_face|6772|0|10822|0|{}4050|4051|}
{2010605001|XXGgraph_legend_legend|6773|0|10824|0|{3|}4045|4052|}
{2010241001|XXGlegend_face_face|6774|0|10826|0|{}4052|4053|}
{2010604001|XXGgraph_flow_flow|6775|0|10828|0|{Flow_1|}4045|4054|}
{2010604001|XXGgraph_flow_flow|6776|0|10830|0|{Flow_2|}4045|4055|}
{2010604001|XXGgraph_flow_flow|6777|0|10832|0|{Flow_3|}4045|4056|}
{2010604001|XXGgraph_flow_flow|6778|0|10834|0|{Flow_4|}4045|4057|}
{2010604001|XXGgraph_flow_flow|6779|0|10836|0|{Flow_5|}4045|4058|}
{2010604001|XXGgraph_flow_flow|6780|0|10838|0|{Flow_6|}4045|4059|}
{2010604001|XXGgraph_flow_flow|6781|0|10840|0|{Flow_7|}4045|4060|}
{2010604001|XXGgraph_flow_flow|6782|0|10842|0|{Flow_8|}4045|4061|}
{2010604001|XXGgraph_flow_flow|6783|0|10844|0|{Flow_9|}4045|4062|}
{2010601001|XXGgraph_vertex_vertex|6784|0|10846|0|{Dedup_Sorted|}4045|4063|}
{2010212001|XXGvertex_oport_oport|6785|0|10848|0|{0|out|}4063|4064|}
{2010212001|XXGvertex_oport_oport|6786|0|10850|0|{1|dup|}4063|4065|}
{2010213001|XXGoport_dst_flow|6787|0|10852|0|{0|}4065|4061|}
{2010212001|XXGvertex_oport_oport|6788|0|10853|0|{2|reject|}4063|4066|}
{2010212001|XXGvertex_oport_oport|6789|0|10855|0|{3|error|}4063|4067|}
{2010212001|XXGvertex_oport_oport|6790|0|10857|0|{4|log|}4063|4068|}
{2010211001|XXGvertex_iport_iport|6791|0|10859|0|{0|in|}4063|4069|}
{2010214001|XXGiport_src_flow|6792|0|10861|0|{0|}4069|4056|}
{2010007001|XXGobject_proto_object|6793|0|10862|0|{}4063|4070|}
{2010212001|XXGvertex_oport_oport|6794|0|10864|0|{0|out|}4070|4071|}
{2010006001|XXGobject_psameas_object|6795|0|10866|0|{metadata|out_metadata|1|0|}4071|4070|}
{2010212001|XXGvertex_oport_oport|6796|0|10867|0|{1|dup|}4070|4072|}
{2010006001|XXGobject_psameas_object|6797|0|10869|0|{metadata|dup_metadata|1|0|}4072|4070|}
{2010212001|XXGvertex_oport_oport|6798|0|10870|0|{2|reject|}4070|4073|}
{2010006001|XXGobject_psameas_object|6799|0|10872|0|{metadata|reject_metadata|1|0|}4073|4070|}
{2010212001|XXGvertex_oport_oport|6800|0|10873|0|{3|error|}4070|4074|}
{2010006001|XXGobject_psameas_object|6801|0|10875|0|{metadata|error_metadata|1|0|}4074|4070|}
{2010212001|XXGvertex_oport_oport|6802|0|10876|0|{4|log|}4070|4075|}
{2010006001|XXGobject_psameas_object|6803|0|10878|0|{metadata|log_metadata|1|0|}4075|4070|}
{2010211001|XXGvertex_iport_iport|6804|0|10879|0|{0|in|}4070|4076|}
{2010006001|XXGobject_psameas_object|6805|0|10881|0|{metadata|in_metadata|1|0|}4076|4070|}
{2010601001|XXGgraph_vertex_vertex|6806|0|10882|0|{FBE_filter_matching_lkp_record|}4045|4077|}
{2010212001|XXGvertex_oport_oport|6807|0|10884|0|{0|out|}4077|4078|}
{2010213001|XXGoport_dst_flow|6808|0|10886|0|{0|}4078|4055|}
{2010212001|XXGvertex_oport_oport|6809|0|10887|0|{1|deselect|}4077|4079|}
{2010213001|XXGoport_dst_flow|6810|0|10889|0|{0|}4079|4062|}
{2010212001|XXGvertex_oport_oport|6811|0|10890|0|{2|reject|}4077|4080|}
{2010212001|XXGvertex_oport_oport|6812|0|10892|0|{3|error|}4077|4081|}
{2010212001|XXGvertex_oport_oport|6813|0|10894|0|{4|log|}4077|4082|}
{2010211001|XXGvertex_iport_iport|6814|0|10896|0|{0|in|}4077|4083|}
{2010214001|XXGiport_src_flow|6815|0|10898|0|{0|}4083|4058|}
{2010007001|XXGobject_proto_object|6816|0|10899|0|{}4077|4084|}
{2010212001|XXGvertex_oport_oport|6817|0|10901|0|{0|out|}4084|4085|}
{2010006001|XXGobject_psameas_object|6818|0|10903|0|{metadata|out_metadata|1|0|}4085|4084|}
{2010212001|XXGvertex_oport_oport|6819|0|10904|0|{1|deselect|}4084|4086|}
{2010006001|XXGobject_psameas_object|6820|0|10906|0|{metadata|deselect_metadata|1|0|}4086|4084|}
{2010212001|XXGvertex_oport_oport|6821|0|10907|0|{2|reject|}4084|4087|}
{2010006001|XXGobject_psameas_object|6822|0|10909|0|{metadata|reject_metadata|1|0|}4087|4084|}
{2010212001|XXGvertex_oport_oport|6823|0|10910|0|{3|error|}4084|4088|}
{2010006001|XXGobject_psameas_object|6824|0|10912|0|{metadata|error_metadata|1|0|}4088|4084|}
{2010212001|XXGvertex_oport_oport|6825|0|10913|0|{4|log|}4084|4089|}
{2010006001|XXGobject_psameas_object|6826|0|10915|0|{metadata|log_metadata|1|0|}4089|4084|}
{2010211001|XXGvertex_iport_iport|6827|0|10916|0|{0|in|}4084|4090|}
{2010006001|XXGobject_psameas_object|6828|0|10918|0|{metadata|in_metadata|1|0|}4090|4084|}
{2010601001|XXGgraph_vertex_vertex|6829|0|10919|0|{RFMT_Get_Hash_On_NK|}4045|4091|}
{2010212001|XXGvertex_oport_oport|6830|0|10921|0|{0|out0|}4091|4092|}
{2010213001|XXGoport_dst_flow|6831|0|10923|0|{0|}4092|4054|}
{2010212001|XXGvertex_oport_oport|6832|0|10924|0|{1|reject0|}4091|4093|}
{2010212001|XXGvertex_oport_oport|6833|0|10926|0|{2|error0|}4091|4094|}
{2010212001|XXGvertex_oport_oport|6834|0|10928|0|{3|log|}4091|4095|}
{2010211001|XXGvertex_iport_iport|6835|0|10930|0|{0|in|}4091|4096|}
{2010007001|XXGobject_proto_object|6836|0|10932|0|{}4091|4097|}
{2010212001|XXGvertex_oport_oport|6837|0|10934|0|{0|out0|}4097|4098|}
{2010006001|XXGobject_psameas_object|6838|0|10936|0|{metadata|out0_metadata|1|0|}4098|4097|}
{2010006001|XXGobject_psameas_object|6839|0|10937|0|{transform0|transform0|1|0|}4098|4097|}
{2010212001|XXGvertex_oport_oport|6840|0|10938|0|{1|reject0|}4097|4099|}
{2010006001|XXGobject_psameas_object|6841|0|10940|0|{metadata|reject0_metadata|1|0|}4099|4097|}
{2010212001|XXGvertex_oport_oport|6842|0|10941|0|{2|error0|}4097|4100|}
{2010006001|XXGobject_psameas_object|6843|0|10943|0|{metadata|error0_metadata|1|0|}4100|4097|}
{2010212001|XXGvertex_oport_oport|6844|0|10944|0|{3|log|}4097|4101|}
{2010006001|XXGobject_psameas_object|6845|0|10946|0|{metadata|log_metadata|1|0|}4101|4097|}
{2010211001|XXGvertex_iport_iport|6846|0|10947|0|{0|in|}4097|4102|}
{2010006001|XXGobject_psameas_object|6847|0|10949|0|{metadata|in_metadata|1|0|}4102|4097|}
{2010601001|XXGgraph_vertex_vertex|6848|0|10950|0|{RFMT_Lookup_with_IDS|}4045|4103|}
{2010212001|XXGvertex_oport_oport|6849|0|10952|0|{0|out0|}4103|4104|}
{2010213001|XXGoport_dst_flow|6850|0|10954|0|{0|}4104|4057|}
{2010212001|XXGvertex_oport_oport|6851|0|10955|0|{1|reject0|}4103|4105|}
{2010212001|XXGvertex_oport_oport|6852|0|10957|0|{2|error0|}4103|4106|}
{2010212001|XXGvertex_oport_oport|6853|0|10959|0|{3|log|}4103|4107|}
{2010211001|XXGvertex_iport_iport|6854|0|10961|0|{0|in|}4103|4108|}
{2010214001|XXGiport_src_flow|6855|0|10963|0|{0|}4108|4059|}
{2010007001|XXGobject_proto_object|6856|0|10964|0|{}4103|4109|}
{2010212001|XXGvertex_oport_oport|6857|0|10966|0|{0|out0|}4109|4110|}
{2010006001|XXGobject_psameas_object|6858|0|10968|0|{metadata|out0_metadata|1|0|}4110|4109|}
{2010006001|XXGobject_psameas_object|6859|0|10969|0|{transform0|transform0|1|0|}4110|4109|}
{2010212001|XXGvertex_oport_oport|6860|0|10970|0|{1|reject0|}4109|4111|}
{2010006001|XXGobject_psameas_object|6861|0|10972|0|{metadata|reject0_metadata|1|0|}4111|4109|}
{2010212001|XXGvertex_oport_oport|6862|0|10973|0|{2|error0|}4109|4112|}
{2010006001|XXGobject_psameas_object|6863|0|10975|0|{metadata|error0_metadata|1|0|}4112|4109|}
{2010212001|XXGvertex_oport_oport|6864|0|10976|0|{3|log|}4109|4113|}
{2010006001|XXGobject_psameas_object|6865|0|10978|0|{metadata|log_metadata|1|0|}4113|4109|}
{2010211001|XXGvertex_iport_iport|6866|0|10979|0|{0|in|}4109|4114|}
{2010006001|XXGobject_psameas_object|6867|0|10981|0|{metadata|in_metadata|1|0|}4114|4109|}
{2010601001|XXGgraph_vertex_vertex|6868|0|10982|0|{Sort_De_dup|}4045|4115|}
{2010604001|XXGgraph_flow_flow|6869|0|10984|0|{Flow_10|}4115|4116|}
{2010604001|XXGgraph_flow_flow|6870|0|10986|0|{Flow_4|}4115|4117|}
{2010244001|XXGflow_watcher_watcher|6871|0|10988|0|{}4117|4118|}
{2010601001|XXGgraph_vertex_vertex|6872|0|10990|0|{Dedup_Sorted_1|}4115|4119|}
{2010212001|XXGvertex_oport_oport|6873|0|10992|0|{0|out|}4119|4120|}
{2010212001|XXGvertex_oport_oport|6874|0|10994|0|{1|dup|}4119|4121|}
{2010212001|XXGvertex_oport_oport|6875|0|10996|0|{2|reject|}4119|4122|}
{2010212001|XXGvertex_oport_oport|6876|0|10998|0|{3|error|}4119|4123|}
{2010212001|XXGvertex_oport_oport|6877|0|11000|0|{4|log|}4119|4124|}
{2010211001|XXGvertex_iport_iport|6878|0|11002|0|{0|in|}4119|4125|}
{2010214001|XXGiport_src_flow|6879|0|11004|0|{0|}4125|4116|}
{2010007001|XXGobject_proto_object|6880|0|11005|0|{}4119|4126|}
{2010212001|XXGvertex_oport_oport|6881|0|11007|0|{0|out|}4126|4127|}
{2010006001|XXGobject_psameas_object|6882|0|11009|0|{metadata|out_metadata|1|0|}4127|4126|}
{2010212001|XXGvertex_oport_oport|6883|0|11010|0|{1|dup|}4126|4128|}
{2010006001|XXGobject_psameas_object|6884|0|11012|0|{metadata|dup_metadata|1|0|}4128|4126|}
{2010212001|XXGvertex_oport_oport|6885|0|11013|0|{2|reject|}4126|4129|}
{2010006001|XXGobject_psameas_object|6886|0|11015|0|{metadata|reject_metadata|1|0|}4129|4126|}
{2010212001|XXGvertex_oport_oport|6887|0|11016|0|{3|error|}4126|4130|}
{2010006001|XXGobject_psameas_object|6888|0|11018|0|{metadata|error_metadata|1|0|}4130|4126|}
{2010212001|XXGvertex_oport_oport|6889|0|11019|0|{4|log|}4126|4131|}
{2010006001|XXGobject_psameas_object|6890|0|11021|0|{metadata|log_metadata|1|0|}4131|4126|}
{2010211001|XXGvertex_iport_iport|6891|0|11022|0|{0|in|}4126|4132|}
{2010006001|XXGobject_psameas_object|6892|0|11024|0|{metadata|in_metadata|1|0|}4132|4126|}
{2010601001|XXGgraph_vertex_vertex|6893|0|11025|0|{PBKS_dxf_hk_part1_|}4115|4133|}
{2010604001|XXGgraph_flow_flow|6894|0|11027|0|{Flow_1|}4133|4134|}
{2010601001|XXGgraph_vertex_vertex|6895|0|11029|0|{Partition_by_Key|}4133|4135|}
{2010212001|XXGvertex_oport_oport|6896|0|11031|0|{0|out|}4135|4136|}
{2010213001|XXGoport_dst_flow|6897|0|11033|0|{0|}4136|4134|}
{2010211001|XXGvertex_iport_iport|6898|0|11034|0|{0|in|}4135|4137|}
{2010601001|XXGgraph_vertex_vertex|6899|0|11036|0|{Sort|}4133|4138|}
{2010212001|XXGvertex_oport_oport|6900|0|11038|0|{0|out|}4138|4139|}
{2010211001|XXGvertex_iport_iport|6901|0|11040|0|{0|in|}4138|4140|}
{2010214001|XXGiport_src_flow|6902|0|11042|0|{0|}4140|4134|}
{2010212001|XXGvertex_oport_oport|6903|0|11043|0|{0|out0|}4133|4141|}
{2010216002|XXGoport_binding_oport|6904|0|11045|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}4141|4139|}
{2010213001|XXGoport_dst_flow|6905|0|11046|0|{0|}4141|4117|}
{2010211001|XXGvertex_iport_iport|6906|0|11047|0|{0|in0|}4133|4142|}
{2010215002|XXGiport_binding_iport|6907|0|11049|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}4142|4137|}
{2010007001|XXGobject_proto_object|6908|0|11050|0|{}4133|4143|}
{2010604001|XXGgraph_flow_flow|6909|0|11052|0|{Flow_1|}4143|4144|}
{2010601001|XXGgraph_vertex_vertex|6910|0|11054|0|{Partition_by_Key|}4143|4145|}
{2010212001|XXGvertex_oport_oport|6911|0|11056|0|{0|out|}4145|4146|}
{2010213001|XXGoport_dst_flow|6912|0|11058|0|{0|}4146|4144|}
{2010211001|XXGvertex_iport_iport|6913|0|11059|0|{0|in|}4145|4147|}
{2010007001|XXGobject_proto_object|6914|0|11061|0|{}4145|4148|}
{2010212001|XXGvertex_oport_oport|6915|0|11063|0|{0|out|}4148|4149|}
{2010006001|XXGobject_psameas_object|6916|0|11065|0|{metadata|out_metadata|1|0|}4149|4148|}
{2010211001|XXGvertex_iport_iport|6917|0|11066|0|{0|in|}4148|4150|}
{2010006001|XXGobject_psameas_object|6918|0|11068|0|{metadata|in_metadata|1|0|}4150|4148|}
{2010006001|XXGobject_psameas_object|6919|0|11069|0|{Layout|InputLayout|1|0|}4145|4143|}
{2010006001|XXGobject_psameas_object|6920|0|11070|0|{key|Key|1|0|}4145|4143|}
{2010601001|XXGgraph_vertex_vertex|6921|0|11071|0|{Sort|}4143|4151|}
{2010212001|XXGvertex_oport_oport|6922|0|11073|0|{0|out|}4151|4152|}
{2010211001|XXGvertex_iport_iport|6923|0|11075|0|{0|in|}4151|4153|}
{2010214001|XXGiport_src_flow|6924|0|11077|0|{0|}4153|4144|}
{2010007001|XXGobject_proto_object|6925|0|11078|0|{}4151|4154|}
{2010212001|XXGvertex_oport_oport|6926|0|11080|0|{0|out|}4154|4155|}
{2010006001|XXGobject_psameas_object|6927|0|11082|0|{metadata|out_metadata|1|0|}4155|4154|}
{2010211001|XXGvertex_iport_iport|6928|0|11083|0|{0|in|}4154|4156|}
{2010006001|XXGobject_psameas_object|6929|0|11085|0|{metadata|in_metadata|1|0|}4156|4154|}
{2010006001|XXGobject_psameas_object|6930|0|11086|0|{Layout|OutputLayout|1|0|}4151|4143|}
{2010006001|XXGobject_psameas_object|6931|0|11087|0|{key|Key|1|0|}4151|4143|}
{2010006001|XXGobject_psameas_object|6932|0|11088|0|{max_core|Max_core|1|0|}4151|4143|}
{2010212001|XXGvertex_oport_oport|6933|0|11089|0|{0|out0|}4143|4157|}
{2010216002|XXGoport_binding_oport|6934|0|11091|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}4157|4152|}
{2010211001|XXGvertex_iport_iport|6935|0|11092|0|{0|in0|}4143|4158|}
{2010215002|XXGiport_binding_iport|6936|0|11094|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}4158|4147|}
{2010601001|XXGgraph_vertex_vertex|6937|0|11095|0|{Sort_within_Groups_1|}4115|4159|}
{2010212001|XXGvertex_oport_oport|6938|0|11097|0|{0|out|}4159|4160|}
{2010213001|XXGoport_dst_flow|6939|0|11099|0|{0|}4160|4116|}
{2010211001|XXGvertex_iport_iport|6940|0|11100|0|{0|in|}4159|4161|}
{2010214001|XXGiport_src_flow|6941|0|11102|0|{0|}4161|4117|}
{2010007001|XXGobject_proto_object|6942|0|11103|0|{}4159|4162|}
{2010212001|XXGvertex_oport_oport|6943|0|11105|0|{0|out|}4162|4163|}
{2010006001|XXGobject_psameas_object|6944|0|11107|0|{metadata|out_metadata|1|0|}4163|4162|}
{2010211001|XXGvertex_iport_iport|6945|0|11108|0|{0|in|}4162|4164|}
{2010006001|XXGobject_psameas_object|6946|0|11110|0|{metadata|in_metadata|1|0|}4164|4162|}
{2010212001|XXGvertex_oport_oport|6947|0|11111|0|{0|out0|}4115|4165|}
{2010216002|XXGoport_binding_oport|6948|0|11113|0|{.5|.5|{0|}7792|}4165|4120|}
{2010213001|XXGoport_dst_flow|6949|0|11114|0|{0|}4165|4059|}
{2010212001|XXGvertex_oport_oport|6950|0|11115|0|{1|out1|}4115|4166|}
{2010216002|XXGoport_binding_oport|6951|0|11117|0|{.5|.5|{0|}7793|}4166|4121|}
{2010213001|XXGoport_dst_flow|6952|0|11118|0|{0|}4166|4060|}
{2010211001|XXGvertex_iport_iport|6953|0|11119|0|{0|in0|}4115|4167|}
{2010215002|XXGiport_binding_iport|6954|0|11121|0|{.5|.5|{0|}7791|}4167|4142|}
{2010214001|XXGiport_src_flow|6955|0|11122|0|{0|}4167|4054|}
{2010601001|XXGgraph_vertex_vertex|6956|0|11123|0|{Sort_within_Groups|}4045|4168|}
{2010212001|XXGvertex_oport_oport|6957|0|11125|0|{0|out|}4168|4169|}
{2010213001|XXGoport_dst_flow|6958|0|11127|0|{0|}4169|4056|}
{2010211001|XXGvertex_iport_iport|6959|0|11128|0|{0|in|}4168|4170|}
{2010214001|XXGiport_src_flow|6960|0|11130|0|{0|}4170|4055|}
{2010007001|XXGobject_proto_object|6961|0|11131|0|{}4168|4171|}
{2010212001|XXGvertex_oport_oport|6962|0|11133|0|{0|out|}4171|4172|}
{2010006001|XXGobject_psameas_object|6963|0|11135|0|{metadata|out_metadata|1|0|}4172|4171|}
{2010211001|XXGvertex_iport_iport|6964|0|11136|0|{0|in|}4171|4173|}
{2010006001|XXGobject_psameas_object|6965|0|11138|0|{metadata|in_metadata|1|0|}4173|4171|}
{2010601001|XXGgraph_vertex_vertex|6966|0|11139|0|{Trash|}4045|4174|}
{2010211001|XXGvertex_iport_iport|6967|0|11141|0|{0|in|}4174|4175|}
{2010214001|XXGiport_src_flow|6968|0|11143|0|{0|}4175|4060|}
{2010007001|XXGobject_proto_object|6969|0|11144|0|{}4174|4176|}
{2010211001|XXGvertex_iport_iport|6970|0|11146|0|{0|in|}4176|4177|}
{2010006001|XXGobject_psameas_object|6971|0|11148|0|{metadata|in_metadata|1|0|}4177|4176|}
{2010601001|XXGgraph_vertex_vertex|6972|0|11149|0|{Trash_1|}4045|4178|}
{2010211001|XXGvertex_iport_iport|6973|0|11151|0|{0|in|}4178|4179|}
{2010214001|XXGiport_src_flow|6974|0|11153|0|{0|}4179|4061|}
{2010007001|XXGobject_proto_object|6975|0|11154|0|{}4178|4180|}
{2010211001|XXGvertex_iport_iport|6976|0|11156|0|{0|in|}4180|4181|}
{2010006001|XXGobject_psameas_object|6977|0|11158|0|{metadata|in_metadata|1|0|}4181|4180|}
{2010601001|XXGgraph_vertex_vertex|6978|0|11159|0|{Trash_2|}4045|4182|}
{2010211001|XXGvertex_iport_iport|6979|0|11161|0|{0|in|}4182|4183|}
{2010214001|XXGiport_src_flow|6980|0|11163|0|{0|}4183|4062|}
{2010007001|XXGobject_proto_object|6981|0|11164|0|{}4182|4184|}
{2010211001|XXGvertex_iport_iport|6982|0|11166|0|{0|in|}4184|4185|}
{2010006001|XXGobject_psameas_object|6983|0|11168|0|{metadata|in_metadata|1|0|}4185|4184|}
{2010601001|XXGgraph_vertex_vertex|6984|0|11169|0|{Two_Step_Lookup|}4045|4186|}
{2010605001|XXGgraph_legend_legend|6985|0|11171|0|{0|}4186|4187|}
{2010241001|XXGlegend_face_face|6986|0|11173|0|{}4187|4188|}
{2010604001|XXGgraph_flow_flow|6987|0|11175|0|{Flow_1|}4186|4189|}
{2010604001|XXGgraph_flow_flow|6988|0|11177|0|{Flow_2|}4186|4190|}
{2010604001|XXGgraph_flow_flow|6989|0|11179|0|{Flow_3|}4186|4191|}
{2010604001|XXGgraph_flow_flow|6990|0|11181|0|{Flow_4|}4186|4192|}
{2010604001|XXGgraph_flow_flow|6991|0|11183|0|{Flow_5|}4186|4193|}
{2010604001|XXGgraph_flow_flow|6992|0|11185|0|{Flow_6|}4186|4194|}
{2010601001|XXGgraph_vertex_vertex|6993|0|11187|0|{FBE_Pass_Only_Matching_Rec|}4186|4195|}
{2010212001|XXGvertex_oport_oport|6994|0|11189|0|{0|out|}4195|4196|}
{2010213001|XXGoport_dst_flow|6995|0|11191|0|{0|}4196|4193|}
{2010212001|XXGvertex_oport_oport|6996|0|11192|0|{1|deselect|}4195|4197|}
{2010213001|XXGoport_dst_flow|6997|0|11194|0|{0|}4197|4194|}
{2010212001|XXGvertex_oport_oport|6998|0|11195|0|{2|reject|}4195|4198|}
{2010212001|XXGvertex_oport_oport|6999|0|11197|0|{3|error|}4195|4199|}
{2010212001|XXGvertex_oport_oport|7000|0|11199|0|{4|log|}4195|4200|}
{2010211001|XXGvertex_iport_iport|7001|0|11201|0|{0|in|}4195|4201|}
{2010214001|XXGiport_src_flow|7002|0|11203|0|{0|}4201|4192|}
{2010007001|XXGobject_proto_object|7003|0|11204|0|{}4195|4202|}
{2010212001|XXGvertex_oport_oport|7004|0|11206|0|{0|out|}4202|4203|}
{2010006001|XXGobject_psameas_object|7005|0|11208|0|{metadata|out_metadata|1|0|}4203|4202|}
{2010212001|XXGvertex_oport_oport|7006|0|11209|0|{1|deselect|}4202|4204|}
{2010006001|XXGobject_psameas_object|7007|0|11211|0|{metadata|deselect_metadata|1|0|}4204|4202|}
{2010212001|XXGvertex_oport_oport|7008|0|11212|0|{2|reject|}4202|4205|}
{2010006001|XXGobject_psameas_object|7009|0|11214|0|{metadata|reject_metadata|1|0|}4205|4202|}
{2010212001|XXGvertex_oport_oport|7010|0|11215|0|{3|error|}4202|4206|}
{2010006001|XXGobject_psameas_object|7011|0|11217|0|{metadata|error_metadata|1|0|}4206|4202|}
{2010212001|XXGvertex_oport_oport|7012|0|11218|0|{4|log|}4202|4207|}
{2010006001|XXGobject_psameas_object|7013|0|11220|0|{metadata|log_metadata|1|0|}4207|4202|}
{2010211001|XXGvertex_iport_iport|7014|0|11221|0|{0|in|}4202|4208|}
{2010006001|XXGobject_psameas_object|7015|0|11223|0|{metadata|in_metadata|1|0|}4208|4202|}
{2010601001|XXGgraph_vertex_vertex|7016|0|11224|0|{FBE_filter_matching_lkp_record|}4186|4209|}
{2010212001|XXGvertex_oport_oport|7017|0|11226|0|{0|out|}4209|4210|}
{2010213001|XXGoport_dst_flow|7018|0|11228|0|{0|}4210|4191|}
{2010212001|XXGvertex_oport_oport|7019|0|11229|0|{1|deselect|}4209|4211|}
{2010213001|XXGoport_dst_flow|7020|0|11231|0|{0|}4211|4189|}
{2010212001|XXGvertex_oport_oport|7021|0|11232|0|{2|reject|}4209|4212|}
{2010212001|XXGvertex_oport_oport|7022|0|11234|0|{3|error|}4209|4213|}
{2010212001|XXGvertex_oport_oport|7023|0|11236|0|{4|log|}4209|4214|}
{2010211001|XXGvertex_iport_iport|7024|0|11238|0|{0|in|}4209|4215|}
{2010007001|XXGobject_proto_object|7025|0|11240|0|{}4209|4216|}
{2010212001|XXGvertex_oport_oport|7026|0|11242|0|{0|out|}4216|4217|}
{2010006001|XXGobject_psameas_object|7027|0|11244|0|{metadata|out_metadata|1|0|}4217|4216|}
{2010212001|XXGvertex_oport_oport|7028|0|11245|0|{1|deselect|}4216|4218|}
{2010006001|XXGobject_psameas_object|7029|0|11247|0|{metadata|deselect_metadata|1|0|}4218|4216|}
{2010212001|XXGvertex_oport_oport|7030|0|11248|0|{2|reject|}4216|4219|}
{2010006001|XXGobject_psameas_object|7031|0|11250|0|{metadata|reject_metadata|1|0|}4219|4216|}
{2010212001|XXGvertex_oport_oport|7032|0|11251|0|{3|error|}4216|4220|}
{2010006001|XXGobject_psameas_object|7033|0|11253|0|{metadata|error_metadata|1|0|}4220|4216|}
{2010212001|XXGvertex_oport_oport|7034|0|11254|0|{4|log|}4216|4221|}
{2010006001|XXGobject_psameas_object|7035|0|11256|0|{metadata|log_metadata|1|0|}4221|4216|}
{2010211001|XXGvertex_iport_iport|7036|0|11257|0|{0|in|}4216|4222|}
{2010006001|XXGobject_psameas_object|7037|0|11259|0|{metadata|in_metadata|1|0|}4222|4216|}
{2010601001|XXGgraph_vertex_vertex|7038|0|11260|0|{Merge|}4186|4223|}
{2010212001|XXGvertex_oport_oport|7039|0|11262|0|{0|out|}4223|4224|}
{2010211001|XXGvertex_iport_iport|7040|0|11264|0|{0|in|}4223|4225|}
{2010214001|XXGiport_src_flow|7041|0|11266|0|{0|}4225|4191|}
{2010214001|XXGiport_src_flow|7042|0|11267|0|{1|}4225|4193|}
{2010007001|XXGobject_proto_object|7043|0|11268|0|{}4223|4226|}
{2010212001|XXGvertex_oport_oport|7044|0|11270|0|{0|out|}4226|4227|}
{2010006001|XXGobject_psameas_object|7045|0|11272|0|{metadata|out_metadata|1|0|}4227|4226|}
{2010211001|XXGvertex_iport_iport|7046|0|11273|0|{0|in|}4226|4228|}
{2010006001|XXGobject_psameas_object|7047|0|11275|0|{metadata|in_metadata|1|0|}4228|4226|}
{2010601001|XXGgraph_vertex_vertex|7048|0|11276|0|{No_Match_Record_In_Second_Pass|}4186|4229|}
{2010211001|XXGvertex_iport_iport|7049|0|11278|0|{0|in|}4229|4230|}
{2010214001|XXGiport_src_flow|7050|0|11280|0|{0|}4230|4194|}
{2010007001|XXGobject_proto_object|7051|0|11281|0|{}4229|4231|}
{2010211001|XXGvertex_iport_iport|7052|0|11283|0|{0|in|}4231|4232|}
{2010006001|XXGobject_psameas_object|7053|0|11285|0|{metadata|in_metadata|1|0|}4232|4231|}
{2010601001|XXGgraph_vertex_vertex|7054|0|11286|0|{RFMT_Lookup_with_IDS_Archive_|}4186|4233|}
{2010212001|XXGvertex_oport_oport|7055|0|11288|0|{0|out0|}4233|4234|}
{2010213001|XXGoport_dst_flow|7056|0|11290|0|{0|}4234|4192|}
{2010212001|XXGvertex_oport_oport|7057|0|11291|0|{1|reject0|}4233|4235|}
{2010212001|XXGvertex_oport_oport|7058|0|11293|0|{2|error0|}4233|4236|}
{2010212001|XXGvertex_oport_oport|7059|0|11295|0|{3|log|}4233|4237|}
{2010211001|XXGvertex_iport_iport|7060|0|11297|0|{0|in|}4233|4238|}
{2010214001|XXGiport_src_flow|7061|0|11299|0|{0|}4238|4190|}
{2010007001|XXGobject_proto_object|7062|0|11300|0|{}4233|4239|}
{2010212001|XXGvertex_oport_oport|7063|0|11302|0|{0|out0|}4239|4240|}
{2010006001|XXGobject_psameas_object|7064|0|11304|0|{metadata|out0_metadata|1|0|}4240|4239|}
{2010006001|XXGobject_psameas_object|7065|0|11305|0|{transform0|transform0|1|0|}4240|4239|}
{2010212001|XXGvertex_oport_oport|7066|0|11306|0|{1|reject0|}4239|4241|}
{2010006001|XXGobject_psameas_object|7067|0|11308|0|{metadata|reject0_metadata|1|0|}4241|4239|}
{2010212001|XXGvertex_oport_oport|7068|0|11309|0|{2|error0|}4239|4242|}
{2010006001|XXGobject_psameas_object|7069|0|11311|0|{metadata|error0_metadata|1|0|}4242|4239|}
{2010212001|XXGvertex_oport_oport|7070|0|11312|0|{3|log|}4239|4243|}
{2010006001|XXGobject_psameas_object|7071|0|11314|0|{metadata|log_metadata|1|0|}4243|4239|}
{2010211001|XXGvertex_iport_iport|7072|0|11315|0|{0|in|}4239|4244|}
{2010006001|XXGobject_psameas_object|7073|0|11317|0|{metadata|in_metadata|1|0|}4244|4239|}
{2010601001|XXGgraph_vertex_vertex|7074|0|11318|0|{RFMT_Pass_only_Hash_Keys|}4186|4245|}
{2010212001|XXGvertex_oport_oport|7075|0|11320|0|{0|out0|}4245|4246|}
{2010213001|XXGoport_dst_flow|7076|0|11322|0|{0|}4246|4190|}
{2010212001|XXGvertex_oport_oport|7077|0|11323|0|{1|reject0|}4245|4247|}
{2010212001|XXGvertex_oport_oport|7078|0|11325|0|{2|error0|}4245|4248|}
{2010212001|XXGvertex_oport_oport|7079|0|11327|0|{3|log|}4245|4249|}
{2010211001|XXGvertex_iport_iport|7080|0|11329|0|{0|in|}4245|4250|}
{2010214001|XXGiport_src_flow|7081|0|11331|0|{0|}4250|4189|}
{2010007001|XXGobject_proto_object|7082|0|11332|0|{}4245|4251|}
{2010212001|XXGvertex_oport_oport|7083|0|11334|0|{0|out0|}4251|4252|}
{2010006001|XXGobject_psameas_object|7084|0|11336|0|{metadata|out0_metadata|1|0|}4252|4251|}
{2010006001|XXGobject_psameas_object|7085|0|11337|0|{transform0|transform0|1|0|}4252|4251|}
{2010212001|XXGvertex_oport_oport|7086|0|11338|0|{1|reject0|}4251|4253|}
{2010006001|XXGobject_psameas_object|7087|0|11340|0|{metadata|reject0_metadata|1|0|}4253|4251|}
{2010212001|XXGvertex_oport_oport|7088|0|11341|0|{2|error0|}4251|4254|}
{2010006001|XXGobject_psameas_object|7089|0|11343|0|{metadata|error0_metadata|1|0|}4254|4251|}
{2010212001|XXGvertex_oport_oport|7090|0|11344|0|{3|log|}4251|4255|}
{2010006001|XXGobject_psameas_object|7091|0|11346|0|{metadata|log_metadata|1|0|}4255|4251|}
{2010211001|XXGvertex_iport_iport|7092|0|11347|0|{0|in|}4251|4256|}
{2010006001|XXGobject_psameas_object|7093|0|11349|0|{metadata|in_metadata|1|0|}4256|4251|}
{2010212001|XXGvertex_oport_oport|7094|0|11350|0|{0|out0|}4186|4257|}
{2010216002|XXGoport_binding_oport|7095|0|11352|0|{.5|.5|{0|}15500|}4257|4224|}
{2010213001|XXGoport_dst_flow|7096|0|11353|0|{0|}4257|4058|}
{2010211001|XXGvertex_iport_iport|7097|0|11354|0|{0|in0|}4186|4258|}
{2010215002|XXGiport_binding_iport|7098|0|11356|0|{.5|.5|{0|}15499|}4258|4215|}
{2010214001|XXGiport_src_flow|7099|0|11357|0|{0|}4258|4057|}
{2010212001|XXGvertex_oport_oport|7100|0|11358|0|{0|out0|}4045|4259|}
{2010216002|XXGoport_binding_oport|7101|0|11360|0|{.5|.5|{0|}15515|}4259|4064|}
{2010213001|XXGoport_dst_flow|7102|0|11361|0|{0|}4259|3865|}
{2010211001|XXGvertex_iport_iport|7103|0|11362|0|{0|in1|}4045|4260|}
{2010215002|XXGiport_binding_iport|7104|0|11364|0|{.5|.5|{0|}15514|}4260|4096|}
{2010214001|XXGiport_src_flow|7105|0|11365|0|{0|}4260|3863|}
{2010601001|XXGgraph_vertex_vertex|7106|0|11366|0|{Merge|}3857|4261|}
{2010212001|XXGvertex_oport_oport|7107|0|11368|0|{0|out|}4261|4262|}
{2010211001|XXGvertex_iport_iport|7108|0|11370|0|{0|in|}4261|4263|}
{2010214001|XXGiport_src_flow|7109|0|11372|0|{0|}4263|3866|}
{2010007001|XXGobject_proto_object|7110|0|11373|0|{}4261|4264|}
{2010212001|XXGvertex_oport_oport|7111|0|11375|0|{0|out|}4264|4265|}
{2010006001|XXGobject_psameas_object|7112|0|11377|0|{metadata|out_metadata|1|0|}4265|4264|}
{2010211001|XXGvertex_iport_iport|7113|0|11378|0|{0|in|}4264|4266|}
{2010006001|XXGobject_psameas_object|7114|0|11380|0|{metadata|in_metadata|1|0|}4266|4264|}
{2010601001|XXGgraph_vertex_vertex|7115|0|11381|0|{Replicate|}3857|4267|}
{2010212001|XXGvertex_oport_oport|7116|0|11383|0|{0|out|}4267|4268|}
{2010213001|XXGoport_dst_flow|7117|0|11385|0|{0|}4268|3862|}
{2010213001|XXGoport_dst_flow|7118|0|11386|0|{1|}4268|3863|}
{2010211001|XXGvertex_iport_iport|7119|0|11387|0|{0|in|}4267|4269|}
{2010007001|XXGobject_proto_object|7120|0|11389|0|{}4267|4270|}
{2010212001|XXGvertex_oport_oport|7121|0|11391|0|{0|out|}4270|4271|}
{2010006001|XXGobject_psameas_object|7122|0|11393|0|{metadata|out_metadata|1|0|}4271|4270|}
{2010211001|XXGvertex_iport_iport|7123|0|11394|0|{0|in|}4270|4272|}
{2010006001|XXGobject_psameas_object|7124|0|11396|0|{metadata|in_metadata|1|0|}4272|4270|}
{2010601001|XXGgraph_vertex_vertex|7125|0|11397|0|{Replicate_1|}3857|4273|}
{2010212001|XXGvertex_oport_oport|7126|0|11399|0|{0|out|}4273|4274|}
{2010213001|XXGoport_dst_flow|7127|0|11401|0|{0|}4274|3866|}
{2010211001|XXGvertex_iport_iport|7128|0|11402|0|{0|in|}4273|4275|}
{2010214001|XXGiport_src_flow|7129|0|11404|0|{0|}4275|3864|}
{2010214001|XXGiport_src_flow|7130|0|11405|0|{1|}4275|3865|}
{2010007001|XXGobject_proto_object|7131|0|11406|0|{}4273|4276|}
{2010212001|XXGvertex_oport_oport|7132|0|11408|0|{0|out|}4276|4277|}
{2010006001|XXGobject_psameas_object|7133|0|11410|0|{metadata|out_metadata|1|0|}4277|4276|}
{2010211001|XXGvertex_iport_iport|7134|0|11411|0|{0|in|}4276|4278|}
{2010006001|XXGobject_psameas_object|7135|0|11413|0|{metadata|in_metadata|1|0|}4278|4276|}
{2010212001|XXGvertex_oport_oport|7136|0|11414|0|{0|out0|}3857|4279|}
{2010216002|XXGoport_binding_oport|7137|0|11416|0|{.5|.5|{0|}7797|}4279|4262|}
{2010211001|XXGvertex_iport_iport|7138|0|11417|0|{0|in0|}3857|4280|}
{2010215002|XXGiport_binding_iport|7139|0|11419|0|{.5|.5|{0|}7796|}4280|4269|}
{2010601001|XXGgraph_vertex_vertex|7140|0|11420|0|{ids_lookup_7|}143|4281|}
{2010605001|XXGgraph_legend_legend|7141|0|11422|0|{0|}4281|4282|}
{2010241001|XXGlegend_face_face|7142|0|11424|0|{}4282|4283|}
{2010605001|XXGgraph_legend_legend|7143|0|11426|0|{1|}4281|4284|}
{2010241001|XXGlegend_face_face|7144|0|11428|0|{}4284|4285|}
{2010604001|XXGgraph_flow_flow|7145|0|11430|0|{Flow_1|}4281|4286|}
{2010604001|XXGgraph_flow_flow|7146|0|11432|0|{Flow_2|}4281|4287|}
{2010604001|XXGgraph_flow_flow|7147|0|11434|0|{Flow_3|}4281|4288|}
{2010604001|XXGgraph_flow_flow|7148|0|11436|0|{Flow_4|}4281|4289|}
{2010604001|XXGgraph_flow_flow|7149|0|11438|0|{Flow_5|}4281|4290|}
{2010601001|XXGgraph_vertex_vertex|7150|0|11440|0|{Get_All_LookUp_Record|}4281|4291|}
{2010605001|XXGgraph_legend_legend|7151|0|11442|0|{0|}4291|4292|}
{2010241001|XXGlegend_face_face|7152|0|11444|0|{}4292|4293|}
{2010605001|XXGgraph_legend_legend|7153|0|11446|0|{1|}4291|4294|}
{2010241001|XXGlegend_face_face|7154|0|11448|0|{}4294|4295|}
{2010605001|XXGgraph_legend_legend|7155|0|11450|0|{2|}4291|4296|}
{2010241001|XXGlegend_face_face|7156|0|11452|0|{}4296|4297|}
{2010605001|XXGgraph_legend_legend|7157|0|11454|0|{3|}4291|4298|}
{2010241001|XXGlegend_face_face|7158|0|11456|0|{}4298|4299|}
{2010605001|XXGgraph_legend_legend|7159|0|11458|0|{4|}4291|4300|}
{2010241001|XXGlegend_face_face|7160|0|11460|0|{}4300|4301|}
{2010604001|XXGgraph_flow_flow|7161|0|11462|0|{Flow_1|}4291|4302|}
{2010604001|XXGgraph_flow_flow|7162|0|11464|0|{Flow_10|}4291|4303|}
{2010604001|XXGgraph_flow_flow|7163|0|11466|0|{Flow_11|}4291|4304|}
{2010604001|XXGgraph_flow_flow|7164|0|11468|0|{Flow_12|}4291|4305|}
{2010604001|XXGgraph_flow_flow|7165|0|11470|0|{Flow_18|}4291|4306|}
{2010604001|XXGgraph_flow_flow|7166|0|11472|0|{Flow_2|}4291|4307|}
{2010604001|XXGgraph_flow_flow|7167|0|11474|0|{Flow_3|}4291|4308|}
{2010604001|XXGgraph_flow_flow|7168|0|11476|0|{Flow_4|}4291|4309|}
{2010604001|XXGgraph_flow_flow|7169|0|11478|0|{Flow_5|}4291|4310|}
{2010604001|XXGgraph_flow_flow|7170|0|11480|0|{Flow_6|}4291|4311|}
{2010604001|XXGgraph_flow_flow|7171|0|11482|0|{Flow_7|}4291|4312|}
{2010604001|XXGgraph_flow_flow|7172|0|11484|0|{Flow_8|}4291|4313|}
{2010604001|XXGgraph_flow_flow|7173|0|11486|0|{Flow_9|}4291|4314|}
{2010601001|XXGgraph_vertex_vertex|7174|0|11488|0|{Dedup_Sorted|}4291|4315|}
{2010212001|XXGvertex_oport_oport|7175|0|11490|0|{0|out|}4315|4316|}
{2010213001|XXGoport_dst_flow|7176|0|11492|0|{0|}4316|4307|}
{2010212001|XXGvertex_oport_oport|7177|0|11493|0|{1|dup|}4315|4317|}
{2010213001|XXGoport_dst_flow|7178|0|11495|0|{0|}4317|4311|}
{2010212001|XXGvertex_oport_oport|7179|0|11496|0|{2|reject|}4315|4318|}
{2010212001|XXGvertex_oport_oport|7180|0|11498|0|{3|error|}4315|4319|}
{2010212001|XXGvertex_oport_oport|7181|0|11500|0|{4|log|}4315|4320|}
{2010211001|XXGvertex_iport_iport|7182|0|11502|0|{0|in|}4315|4321|}
{2010214001|XXGiport_src_flow|7183|0|11504|0|{0|}4321|4302|}
{2010006001|XXGobject_psameas_object|7184|0|11505|0|{Layout|Layout|0|0|}4315|4322|}
{2010212001|XXGvertex_oport_oport|7185|0|11507|0|{0|out|}4322|4323|}
{2010213001|XXGoport_dst_flow|7186|0|11509|0|{0|}4323|4305|}
{2010212001|XXGvertex_oport_oport|7187|0|11510|0|{1|reject|}4322|4324|}
{2010212001|XXGvertex_oport_oport|7188|0|11512|0|{2|error|}4322|4325|}
{2010212001|XXGvertex_oport_oport|7189|0|11514|0|{3|log|}4322|4326|}
{2010211001|XXGvertex_iport_iport|7190|0|11516|0|{0|in|}4322|4327|}
{2010214001|XXGiport_src_flow|7191|0|11518|0|{0|}4327|4303|}
{2010006001|XXGobject_psameas_object|7192|0|11519|0|{in_metadata|out0_metadata|0|0|}4322|4328|}
{2010212001|XXGvertex_oport_oport|7193|0|11521|0|{0|out0|}4328|4329|}
{2010213001|XXGoport_dst_flow|7194|0|11523|0|{0|}4329|4306|}
{2010212001|XXGvertex_oport_oport|7195|0|11524|0|{1|reject0|}4328|4330|}
{2010212001|XXGvertex_oport_oport|7196|0|11526|0|{2|error0|}4328|4331|}
{2010212001|XXGvertex_oport_oport|7197|0|11528|0|{3|log|}4328|4332|}
{2010211001|XXGvertex_iport_iport|7198|0|11530|0|{0|in|}4328|4333|}
{2010006001|XXGobject_psameas_object|7199|0|11532|0|{Layout|Layout|0|0|}4328|242|}
{2010006001|XXGobject_psameas_object|7200|0|11533|0|{in_metadata|out6_metadata|0|0|}4328|242|}
{2010006001|XXGobject_psameas_object|7201|0|11534|0|{reject0_metadata|out6_metadata|0|0|}4328|242|}
{2010006001|XXGobject_psameas_object|7202|0|11535|0|{reject_metadata|out0_metadata|0|0|}4322|4328|}
{2010006001|XXGobject_psameas_object|7203|0|11536|0|{dup_metadata|out_metadata|0|0|}4315|4334|}
{2010212001|XXGvertex_oport_oport|7204|0|11538|0|{0|out|}4334|4335|}
{2010213001|XXGoport_dst_flow|7205|0|11540|0|{0|}4335|4304|}
{2010212001|XXGvertex_oport_oport|7206|0|11541|0|{1|deselect|}4334|4336|}
{2010213001|XXGoport_dst_flow|7207|0|11543|0|{0|}4336|4312|}
{2010212001|XXGvertex_oport_oport|7208|0|11544|0|{2|reject|}4334|4337|}
{2010212001|XXGvertex_oport_oport|7209|0|11546|0|{3|error|}4334|4338|}
{2010212001|XXGvertex_oport_oport|7210|0|11548|0|{4|log|}4334|4339|}
{2010211001|XXGvertex_iport_iport|7211|0|11550|0|{0|in|}4334|4340|}
{2010214001|XXGiport_src_flow|7212|0|11552|0|{0|}4340|4313|}
{2010006001|XXGobject_psameas_object|7213|0|11553|0|{Layout|Layout|0|0|}4334|4322|}
{2010006001|XXGobject_psameas_object|7214|0|11554|0|{deselect_metadata|out_metadata|0|0|}4334|4334|}
{2010006001|XXGobject_psameas_object|7215|0|11555|0|{in_metadata|out_metadata|0|0|}4334|4322|}
{2010006001|XXGobject_psameas_object|7216|0|11556|0|{reject_metadata|out_metadata|0|0|}4334|4322|}
{2010006001|XXGobject_psameas_object|7217|0|11557|0|{in_metadata|out_metadata|0|0|}4315|4334|}
{2010006001|XXGobject_psameas_object|7218|0|11558|0|{out_metadata|out_metadata|0|0|}4315|4334|}
{2010006001|XXGobject_psameas_object|7219|0|11559|0|{reject_metadata|out_metadata|0|0|}4315|4334|}
{2010601001|XXGgraph_vertex_vertex|7220|0|11560|0|{FBE_Filter_match_records|}4291|4334|}
{2010601001|XXGgraph_vertex_vertex|7221|0|11561|0|{Get_Hash_on_SRC_NK|}4291|4328|}
{2010601001|XXGgraph_vertex_vertex|7222|0|11562|0|{Merge|}4291|4341|}
{2010212001|XXGvertex_oport_oport|7223|0|11564|0|{0|out|}4341|4342|}
{2010213001|XXGoport_dst_flow|7224|0|11566|0|{0|}4342|4313|}
{2010211001|XXGvertex_iport_iport|7225|0|11567|0|{0|in|}4341|4343|}
{2010214001|XXGiport_src_flow|7226|0|11569|0|{0|}4343|4308|}
{2010214001|XXGiport_src_flow|7227|0|11570|0|{1|}4343|4305|}
{2010006001|XXGobject_psameas_object|7228|0|11571|0|{Layout|Layout|0|0|}4341|4322|}
{2010006001|XXGobject_psameas_object|7229|0|11572|0|{in_metadata|out_metadata|0|0|}4341|4322|}
{2010006001|XXGobject_psameas_object|7230|0|11573|0|{out_metadata|out_metadata|0|0|}4341|4322|}
{2010601001|XXGgraph_vertex_vertex|7231|0|11574|0|{Normalize_Get_all_records_from_Archive_Lkp|}4291|4322|}
{2010601001|XXGgraph_vertex_vertex|7232|0|11575|0|{Normalize_Get_all_records_from_lkp|}4291|4344|}
{2010212001|XXGvertex_oport_oport|7233|0|11577|0|{0|out|}4344|4345|}
{2010213001|XXGoport_dst_flow|7234|0|11579|0|{0|}4345|4308|}
{2010212001|XXGvertex_oport_oport|7235|0|11580|0|{1|reject|}4344|4346|}
{2010212001|XXGvertex_oport_oport|7236|0|11582|0|{2|error|}4344|4347|}
{2010212001|XXGvertex_oport_oport|7237|0|11584|0|{3|log|}4344|4348|}
{2010211001|XXGvertex_iport_iport|7238|0|11586|0|{0|in|}4344|4349|}
{2010214001|XXGiport_src_flow|7239|0|11588|0|{0|}4349|4310|}
{2010006001|XXGobject_psameas_object|7240|0|11589|0|{in_metadata|out0_metadata|0|0|}4344|4328|}
{2010006001|XXGobject_psameas_object|7241|0|11590|0|{reject_metadata|out0_metadata|0|0|}4344|4328|}
{2010601001|XXGgraph_vertex_vertex|7242|0|11591|0|{Replicate|}4291|4350|}
{2010212001|XXGvertex_oport_oport|7243|0|11593|0|{0|out|}4350|4351|}
{2010211001|XXGvertex_iport_iport|7244|0|11595|0|{0|in|}4350|4352|}
{2010214001|XXGiport_src_flow|7245|0|11597|0|{0|}4352|4307|}
{2010006001|XXGobject_psameas_object|7246|0|11598|0|{Layout|Layout|0|0|}4350|4322|}
{2010006001|XXGobject_psameas_object|7247|0|11599|0|{in_metadata|out_metadata|0|0|}4350|4334|}
{2010006001|XXGobject_psameas_object|7248|0|11600|0|{out_metadata|out_metadata|0|0|}4350|4334|}
{2010601001|XXGgraph_vertex_vertex|7249|0|11601|0|{Replicate_1|}4291|4353|}
{2010212001|XXGvertex_oport_oport|7250|0|11603|0|{0|out|}4353|4354|}
{2010213001|XXGoport_dst_flow|7251|0|11605|0|{0|}4354|4310|}
{2010213001|XXGoport_dst_flow|7252|0|11606|0|{1|}4354|4303|}
{2010211001|XXGvertex_iport_iport|7253|0|11607|0|{0|in|}4353|4355|}
{2010214001|XXGiport_src_flow|7254|0|11609|0|{0|}4355|4309|}
{2010006001|XXGobject_psameas_object|7255|0|11610|0|{Layout|Layout|0|0|}4353|4322|}
{2010006001|XXGobject_psameas_object|7256|0|11611|0|{in_metadata|out0_metadata|0|0|}4353|4328|}
{2010006001|XXGobject_psameas_object|7257|0|11612|0|{out_metadata|out0_metadata|0|0|}4353|4328|}
{2010601001|XXGgraph_vertex_vertex|7258|0|11613|0|{Sort_Remove_Dup_On_Hash|}4291|4356|}
{2010604001|XXGgraph_flow_flow|7259|0|11615|0|{Flow_3|}4356|4357|}
{2010604001|XXGgraph_flow_flow|7260|0|11617|0|{Flow_5|}4356|4358|}
{2010601001|XXGgraph_vertex_vertex|7261|0|11619|0|{Dedup_Sorted_1|}4356|4359|}
{2010212001|XXGvertex_oport_oport|7262|0|11621|0|{0|out|}4359|4360|}
{2010212001|XXGvertex_oport_oport|7263|0|11623|0|{1|dup|}4359|4361|}
{2010212001|XXGvertex_oport_oport|7264|0|11625|0|{2|reject|}4359|4362|}
{2010212001|XXGvertex_oport_oport|7265|0|11627|0|{3|error|}4359|4363|}
{2010212001|XXGvertex_oport_oport|7266|0|11629|0|{4|log|}4359|4364|}
{2010211001|XXGvertex_iport_iport|7267|0|11631|0|{0|in|}4359|4365|}
{2010214001|XXGiport_src_flow|7268|0|11633|0|{0|}4365|4358|}
{2010006001|XXGobject_psameas_object|7269|0|11634|0|{Layout|Layout|0|0|}4359|4322|}
{2010006001|XXGobject_psameas_object|7270|0|11635|0|{dup_metadata|out0_metadata|0|0|}4359|4328|}
{2010006001|XXGobject_psameas_object|7271|0|11636|0|{in_metadata|out0_metadata|0|0|}4359|4328|}
{2010006001|XXGobject_psameas_object|7272|0|11637|0|{out_metadata|out0_metadata|0|0|}4359|4328|}
{2010006001|XXGobject_psameas_object|7273|0|11638|0|{reject_metadata|out0_metadata|0|0|}4359|4328|}
{2010601001|XXGgraph_vertex_vertex|7274|0|11639|0|{PBKS_dxf_hk_part1_|}4356|4366|}
{2010604001|XXGgraph_flow_flow|7275|0|11641|0|{Flow_1|}4366|4367|}
{2010601001|XXGgraph_vertex_vertex|7276|0|11643|0|{Partition_by_Key|}4366|4368|}
{2010212001|XXGvertex_oport_oport|7277|0|11645|0|{0|out|}4368|4369|}
{2010213001|XXGoport_dst_flow|7278|0|11647|0|{0|}4369|4367|}
{2010211001|XXGvertex_iport_iport|7279|0|11648|0|{0|in|}4368|4370|}
{2010006001|XXGobject_psameas_object|7280|0|11650|0|{in_metadata|out0_metadata|0|0|}4368|4328|}
{2010006001|XXGobject_psameas_object|7281|0|11651|0|{out_metadata|out0_metadata|0|0|}4368|4328|}
{2010601001|XXGgraph_vertex_vertex|7282|0|11652|0|{Sort|}4366|4371|}
{2010212001|XXGvertex_oport_oport|7283|0|11654|0|{0|out|}4371|4372|}
{2010211001|XXGvertex_iport_iport|7284|0|11656|0|{0|in|}4371|4373|}
{2010214001|XXGiport_src_flow|7285|0|11658|0|{0|}4373|4367|}
{2010006001|XXGobject_psameas_object|7286|0|11659|0|{in_metadata|out0_metadata|0|0|}4371|4328|}
{2010006001|XXGobject_psameas_object|7287|0|11660|0|{out_metadata|out0_metadata|0|0|}4371|4328|}
{2010212001|XXGvertex_oport_oport|7288|0|11661|0|{0|out0|}4366|4374|}
{2010216002|XXGoport_binding_oport|7289|0|11663|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}4374|4372|}
{2010213001|XXGoport_dst_flow|7290|0|11664|0|{0|}4374|4357|}
{2010211001|XXGvertex_iport_iport|7291|0|11665|0|{0|in0|}4366|4375|}
{2010215002|XXGiport_binding_iport|7292|0|11667|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}4375|4370|}
{2010006001|XXGobject_psameas_object|7293|0|11668|0|{OutputLayout|Layout|0|0|}4366|4322|}
{2010601001|XXGgraph_vertex_vertex|7294|0|11669|0|{Sort_within_Groups|}4356|4376|}
{2010212001|XXGvertex_oport_oport|7295|0|11671|0|{0|out|}4376|4377|}
{2010213001|XXGoport_dst_flow|7296|0|11673|0|{0|}4377|4358|}
{2010211001|XXGvertex_iport_iport|7297|0|11674|0|{0|in|}4376|4378|}
{2010214001|XXGiport_src_flow|7298|0|11676|0|{0|}4378|4357|}
{2010006001|XXGobject_psameas_object|7299|0|11677|0|{Layout|Layout|0|0|}4376|4322|}
{2010006001|XXGobject_psameas_object|7300|0|11678|0|{in_metadata|out0_metadata|0|0|}4376|4328|}
{2010006001|XXGobject_psameas_object|7301|0|11679|0|{out_metadata|out0_metadata|0|0|}4376|4328|}
{2010212001|XXGvertex_oport_oport|7302|0|11680|0|{0|out0|}4356|4379|}
{2010216002|XXGoport_binding_oport|7303|0|11682|0|{.5|.5|{0|}14672|}4379|4360|}
{2010213001|XXGoport_dst_flow|7304|0|11683|0|{0|}4379|4309|}
{2010212001|XXGvertex_oport_oport|7305|0|11684|0|{1|out1|}4356|4380|}
{2010216002|XXGoport_binding_oport|7306|0|11686|0|{.5|.5|{0|}14673|}4380|4361|}
{2010213001|XXGoport_dst_flow|7307|0|11687|0|{0|}4380|4314|}
{2010211001|XXGvertex_iport_iport|7308|0|11688|0|{0|in0|}4356|4381|}
{2010215002|XXGiport_binding_iport|7309|0|11690|0|{.5|.5|{0|}14671|}4381|4375|}
{2010214001|XXGiport_src_flow|7310|0|11691|0|{0|}4381|4306|}
{2010601001|XXGgraph_vertex_vertex|7311|0|11692|0|{Sort_on_Adjusted_Natural_Keys|}4291|4382|}
{2010212001|XXGvertex_oport_oport|7312|0|11694|0|{0|out|}4382|4383|}
{2010213001|XXGoport_dst_flow|7313|0|11696|0|{0|}4383|4302|}
{2010211001|XXGvertex_iport_iport|7314|0|11697|0|{0|in|}4382|4384|}
{2010214001|XXGiport_src_flow|7315|0|11699|0|{0|}4384|4304|}
{2010006001|XXGobject_psameas_object|7316|0|11700|0|{Layout|Layout|0|0|}4382|4322|}
{2010006001|XXGobject_psameas_object|7317|0|11701|0|{in_metadata|out_metadata|0|0|}4382|4334|}
{2010006001|XXGobject_psameas_object|7318|0|11702|0|{out_metadata|out_metadata|0|0|}4382|4334|}
{2010601001|XXGgraph_vertex_vertex|7319|0|11703|0|{Trash_1|}4291|4385|}
{2010211001|XXGvertex_iport_iport|7320|0|11705|0|{0|in|}4385|4386|}
{2010214001|XXGiport_src_flow|7321|0|11707|0|{0|}4386|4312|}
{2010006001|XXGobject_psameas_object|7322|0|11708|0|{Layout|Layout|0|0|}4385|4322|}
{2010006001|XXGobject_psameas_object|7323|0|11709|0|{in_metadata|out_metadata|0|0|}4385|4334|}
{2010601001|XXGgraph_vertex_vertex|7324|0|11710|0|{Trash_2|}4291|4387|}
{2010211001|XXGvertex_iport_iport|7325|0|11712|0|{0|in|}4387|4388|}
{2010214001|XXGiport_src_flow|7326|0|11714|0|{0|}4388|4311|}
{2010006001|XXGobject_psameas_object|7327|0|11715|0|{Layout|Layout|0|0|}4387|4322|}
{2010006001|XXGobject_psameas_object|7328|0|11716|0|{in_metadata|out_metadata|0|0|}4387|4334|}
{2010601001|XXGgraph_vertex_vertex|7329|0|11717|0|{Trash_3|}4291|4389|}
{2010211001|XXGvertex_iport_iport|7330|0|11719|0|{0|in|}4389|4390|}
{2010214001|XXGiport_src_flow|7331|0|11721|0|{0|}4390|4314|}
{2010006001|XXGobject_psameas_object|7332|0|11722|0|{Layout|Layout|0|0|}4389|4322|}
{2010006001|XXGobject_psameas_object|7333|0|11723|0|{in_metadata|out0_metadata|0|0|}4389|4328|}
{2010212001|XXGvertex_oport_oport|7334|0|11724|0|{0|out0|}4291|4391|}
{2010216002|XXGoport_binding_oport|7335|0|11726|0|{.5|.5|{0|}14919|}4391|4351|}
{2010213001|XXGoport_dst_flow|7336|0|11727|0|{0|}4391|4288|}
{2010211001|XXGvertex_iport_iport|7337|0|11728|0|{0|in0|}4291|4392|}
{2010215002|XXGiport_binding_iport|7338|0|11730|0|{.5|.5|{0|}14918|}4392|4333|}
{2010214001|XXGiport_src_flow|7339|0|11731|0|{0|}4392|4286|}
{2010601001|XXGgraph_vertex_vertex|7340|0|11732|0|{Get_Last_Lookup_Record|}4281|4393|}
{2010605001|XXGgraph_legend_legend|7341|0|11734|0|{0|}4393|4394|}
{2010241001|XXGlegend_face_face|7342|0|11736|0|{}4394|4395|}
{2010605001|XXGgraph_legend_legend|7343|0|11738|0|{1|}4393|4396|}
{2010241001|XXGlegend_face_face|7344|0|11740|0|{}4396|4397|}
{2010605001|XXGgraph_legend_legend|7345|0|11742|0|{2|}4393|4398|}
{2010241001|XXGlegend_face_face|7346|0|11744|0|{}4398|4399|}
{2010605001|XXGgraph_legend_legend|7347|0|11746|0|{3|}4393|4400|}
{2010241001|XXGlegend_face_face|7348|0|11748|0|{}4400|4401|}
{2010604001|XXGgraph_flow_flow|7349|0|11750|0|{Flow_1|}4393|4402|}
{2010604001|XXGgraph_flow_flow|7350|0|11752|0|{Flow_2|}4393|4403|}
{2010604001|XXGgraph_flow_flow|7351|0|11754|0|{Flow_3|}4393|4404|}
{2010604001|XXGgraph_flow_flow|7352|0|11756|0|{Flow_4|}4393|4405|}
{2010604001|XXGgraph_flow_flow|7353|0|11758|0|{Flow_5|}4393|4406|}
{2010604001|XXGgraph_flow_flow|7354|0|11760|0|{Flow_6|}4393|4407|}
{2010604001|XXGgraph_flow_flow|7355|0|11762|0|{Flow_7|}4393|4408|}
{2010604001|XXGgraph_flow_flow|7356|0|11764|0|{Flow_8|}4393|4409|}
{2010604001|XXGgraph_flow_flow|7357|0|11766|0|{Flow_9|}4393|4410|}
{2010601001|XXGgraph_vertex_vertex|7358|0|11768|0|{Dedup_Sorted|}4393|4411|}
{2010212001|XXGvertex_oport_oport|7359|0|11770|0|{0|out|}4411|4412|}
{2010212001|XXGvertex_oport_oport|7360|0|11772|0|{1|dup|}4411|4413|}
{2010213001|XXGoport_dst_flow|7361|0|11774|0|{0|}4413|4409|}
{2010212001|XXGvertex_oport_oport|7362|0|11775|0|{2|reject|}4411|4414|}
{2010212001|XXGvertex_oport_oport|7363|0|11777|0|{3|error|}4411|4415|}
{2010212001|XXGvertex_oport_oport|7364|0|11779|0|{4|log|}4411|4416|}
{2010211001|XXGvertex_iport_iport|7365|0|11781|0|{0|in|}4411|4417|}
{2010214001|XXGiport_src_flow|7366|0|11783|0|{0|}4417|4404|}
{2010006001|XXGobject_psameas_object|7367|0|11784|0|{Layout|Layout|0|0|}4411|4322|}
{2010006001|XXGobject_psameas_object|7368|0|11785|0|{dup_metadata|out_metadata|0|0|}4411|4418|}
{2010212001|XXGvertex_oport_oport|7369|0|11787|0|{0|out|}4418|4419|}
{2010213001|XXGoport_dst_flow|7370|0|11789|0|{0|}4419|4403|}
{2010212001|XXGvertex_oport_oport|7371|0|11790|0|{1|deselect|}4418|4420|}
{2010213001|XXGoport_dst_flow|7372|0|11792|0|{0|}4420|4410|}
{2010212001|XXGvertex_oport_oport|7373|0|11793|0|{2|reject|}4418|4421|}
{2010212001|XXGvertex_oport_oport|7374|0|11795|0|{3|error|}4418|4422|}
{2010212001|XXGvertex_oport_oport|7375|0|11797|0|{4|log|}4418|4423|}
{2010211001|XXGvertex_iport_iport|7376|0|11799|0|{0|in|}4418|4424|}
{2010214001|XXGiport_src_flow|7377|0|11801|0|{0|}4424|4406|}
{2010006001|XXGobject_psameas_object|7378|0|11802|0|{Layout|Layout|0|0|}4418|4322|}
{2010006001|XXGobject_psameas_object|7379|0|11803|0|{deselect_metadata|out_metadata|0|0|}4418|4418|}
{2010006001|XXGobject_psameas_object|7380|0|11804|0|{in_metadata|out_metadata|0|0|}4418|4425|}
{2010212001|XXGvertex_oport_oport|7381|0|11806|0|{0|out|}4425|4426|}
{2010213001|XXGoport_dst_flow|7382|0|11808|0|{0|}4426|4427|}
{2010212001|XXGvertex_oport_oport|7383|0|11810|0|{1|deselect|}4425|4428|}
{2010213001|XXGoport_dst_flow|7384|0|11812|0|{0|}4428|4429|}
{2010212001|XXGvertex_oport_oport|7385|0|11814|0|{2|reject|}4425|4430|}
{2010212001|XXGvertex_oport_oport|7386|0|11816|0|{3|error|}4425|4431|}
{2010212001|XXGvertex_oport_oport|7387|0|11818|0|{4|log|}4425|4432|}
{2010211001|XXGvertex_iport_iport|7388|0|11820|0|{0|in|}4425|4433|}
{2010006001|XXGobject_psameas_object|7389|0|11822|0|{Layout|Layout|0|0|}4425|4322|}
{2010006001|XXGobject_psameas_object|7390|0|11823|0|{in_metadata|out0_metadata|0|0|}4425|4434|}
{2010212001|XXGvertex_oport_oport|7391|0|11825|0|{0|out0|}4434|4435|}
{2010213001|XXGoport_dst_flow|7392|0|11827|0|{0|}4435|4405|}
{2010212001|XXGvertex_oport_oport|7393|0|11828|0|{1|reject0|}4434|4436|}
{2010212001|XXGvertex_oport_oport|7394|0|11830|0|{2|error0|}4434|4437|}
{2010212001|XXGvertex_oport_oport|7395|0|11832|0|{3|log|}4434|4438|}
{2010211001|XXGvertex_iport_iport|7396|0|11834|0|{0|in|}4434|4439|}
{2010214001|XXGiport_src_flow|7397|0|11836|0|{0|}4439|4407|}
{2010006001|XXGobject_psameas_object|7398|0|11837|0|{Layout|Layout|0|0|}4434|4322|}
{2010006001|XXGobject_psameas_object|7399|0|11838|0|{in_metadata|out0_metadata|0|0|}4434|4440|}
{2010212001|XXGvertex_oport_oport|7400|0|11840|0|{0|out0|}4440|4441|}
{2010213001|XXGoport_dst_flow|7401|0|11842|0|{0|}4441|4402|}
{2010212001|XXGvertex_oport_oport|7402|0|11843|0|{1|reject0|}4440|4442|}
{2010212001|XXGvertex_oport_oport|7403|0|11845|0|{2|error0|}4440|4443|}
{2010212001|XXGvertex_oport_oport|7404|0|11847|0|{3|log|}4440|4444|}
{2010211001|XXGvertex_iport_iport|7405|0|11849|0|{0|in|}4440|4445|}
{2010006001|XXGobject_psameas_object|7406|0|11851|0|{Layout|Layout|0|0|}4440|242|}
{2010006001|XXGobject_psameas_object|7407|0|11852|0|{in_metadata|out6_metadata|0|0|}4440|242|}
{2010006001|XXGobject_psameas_object|7408|0|11853|0|{reject0_metadata|out6_metadata|0|0|}4440|242|}
{2010006001|XXGobject_psameas_object|7409|0|11854|0|{reject0_metadata|out0_metadata|0|0|}4434|4440|}
{2010006001|XXGobject_psameas_object|7410|0|11855|0|{reject_metadata|out0_metadata|0|0|}4425|4434|}
{2010006001|XXGobject_psameas_object|7411|0|11856|0|{reject_metadata|out_metadata|0|0|}4418|4425|}
{2010006001|XXGobject_psameas_object|7412|0|11857|0|{in_metadata|out_metadata|0|0|}4411|4418|}
{2010006001|XXGobject_psameas_object|7413|0|11858|0|{out_metadata|out_metadata|0|0|}4411|4418|}
{2010006001|XXGobject_psameas_object|7414|0|11859|0|{reject_metadata|out_metadata|0|0|}4411|4418|}
{2010601001|XXGgraph_vertex_vertex|7415|0|11860|0|{FBE_filter_matching_lkp_record|}4393|4418|}
{2010601001|XXGgraph_vertex_vertex|7416|0|11861|0|{RFMT_Get_Hash_On_NK|}4393|4440|}
{2010601001|XXGgraph_vertex_vertex|7417|0|11862|0|{RFMT_Lookup_with_IDS|}4393|4434|}
{2010601001|XXGgraph_vertex_vertex|7418|0|11863|0|{Sort_De_dup|}4393|4446|}
{2010604001|XXGgraph_flow_flow|7419|0|11865|0|{Flow_10|}4446|4447|}
{2010604001|XXGgraph_flow_flow|7420|0|11867|0|{Flow_4|}4446|4448|}
{2010244001|XXGflow_watcher_watcher|7421|0|11869|0|{}4448|4449|}
{2010601001|XXGgraph_vertex_vertex|7422|0|11871|0|{Dedup_Sorted_1|}4446|4450|}
{2010212001|XXGvertex_oport_oport|7423|0|11873|0|{0|out|}4450|4451|}
{2010212001|XXGvertex_oport_oport|7424|0|11875|0|{1|dup|}4450|4452|}
{2010212001|XXGvertex_oport_oport|7425|0|11877|0|{2|reject|}4450|4453|}
{2010212001|XXGvertex_oport_oport|7426|0|11879|0|{3|error|}4450|4454|}
{2010212001|XXGvertex_oport_oport|7427|0|11881|0|{4|log|}4450|4455|}
{2010211001|XXGvertex_iport_iport|7428|0|11883|0|{0|in|}4450|4456|}
{2010214001|XXGiport_src_flow|7429|0|11885|0|{0|}4456|4447|}
{2010006001|XXGobject_psameas_object|7430|0|11886|0|{Layout|Layout|0|0|}4450|4322|}
{2010006001|XXGobject_psameas_object|7431|0|11887|0|{dup_metadata|out0_metadata|0|0|}4450|4440|}
{2010006001|XXGobject_psameas_object|7432|0|11888|0|{in_metadata|out0_metadata|0|0|}4450|4440|}
{2010006001|XXGobject_psameas_object|7433|0|11889|0|{out_metadata|out0_metadata|0|0|}4450|4440|}
{2010006001|XXGobject_psameas_object|7434|0|11890|0|{reject_metadata|out0_metadata|0|0|}4450|4440|}
{2010601001|XXGgraph_vertex_vertex|7435|0|11891|0|{PBKS_dxf_hk_part1_|}4446|4457|}
{2010604001|XXGgraph_flow_flow|7436|0|11893|0|{Flow_1|}4457|4458|}
{2010601001|XXGgraph_vertex_vertex|7437|0|11895|0|{Partition_by_Key|}4457|4459|}
{2010212001|XXGvertex_oport_oport|7438|0|11897|0|{0|out|}4459|4460|}
{2010213001|XXGoport_dst_flow|7439|0|11899|0|{0|}4460|4458|}
{2010211001|XXGvertex_iport_iport|7440|0|11900|0|{0|in|}4459|4461|}
{2010006001|XXGobject_psameas_object|7441|0|11902|0|{in_metadata|out0_metadata|0|0|}4459|4440|}
{2010006001|XXGobject_psameas_object|7442|0|11903|0|{out_metadata|out0_metadata|0|0|}4459|4440|}
{2010601001|XXGgraph_vertex_vertex|7443|0|11904|0|{Sort|}4457|4462|}
{2010212001|XXGvertex_oport_oport|7444|0|11906|0|{0|out|}4462|4463|}
{2010211001|XXGvertex_iport_iport|7445|0|11908|0|{0|in|}4462|4464|}
{2010214001|XXGiport_src_flow|7446|0|11910|0|{0|}4464|4458|}
{2010006001|XXGobject_psameas_object|7447|0|11911|0|{in_metadata|out0_metadata|0|0|}4462|4440|}
{2010006001|XXGobject_psameas_object|7448|0|11912|0|{out_metadata|out0_metadata|0|0|}4462|4440|}
{2010212001|XXGvertex_oport_oport|7449|0|11913|0|{0|out0|}4457|4465|}
{2010216002|XXGoport_binding_oport|7450|0|11915|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}4465|4463|}
{2010213001|XXGoport_dst_flow|7451|0|11916|0|{0|}4465|4448|}
{2010211001|XXGvertex_iport_iport|7452|0|11917|0|{0|in0|}4457|4466|}
{2010215002|XXGiport_binding_iport|7453|0|11919|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}4466|4461|}
{2010006001|XXGobject_psameas_object|7454|0|11920|0|{InputLayout|Layout|0|0|}4457|242|}
{2010006001|XXGobject_psameas_object|7455|0|11921|0|{OutputLayout|Layout|0|0|}4457|4322|}
{2010601001|XXGgraph_vertex_vertex|7456|0|11922|0|{Sort_within_Groups_1|}4446|4467|}
{2010212001|XXGvertex_oport_oport|7457|0|11924|0|{0|out|}4467|4468|}
{2010213001|XXGoport_dst_flow|7458|0|11926|0|{0|}4468|4447|}
{2010211001|XXGvertex_iport_iport|7459|0|11927|0|{0|in|}4467|4469|}
{2010214001|XXGiport_src_flow|7460|0|11929|0|{0|}4469|4448|}
{2010006001|XXGobject_psameas_object|7461|0|11930|0|{Layout|Layout|0|0|}4467|4322|}
{2010006001|XXGobject_psameas_object|7462|0|11931|0|{in_metadata|out0_metadata|0|0|}4467|4440|}
{2010006001|XXGobject_psameas_object|7463|0|11932|0|{out_metadata|out0_metadata|0|0|}4467|4440|}
{2010212001|XXGvertex_oport_oport|7464|0|11933|0|{0|out0|}4446|4470|}
{2010216002|XXGoport_binding_oport|7465|0|11935|0|{.5|.5|{0|}7792|}4470|4451|}
{2010213001|XXGoport_dst_flow|7466|0|11936|0|{0|}4470|4407|}
{2010212001|XXGvertex_oport_oport|7467|0|11937|0|{1|out1|}4446|4471|}
{2010216002|XXGoport_binding_oport|7468|0|11939|0|{.5|.5|{0|}7793|}4471|4452|}
{2010213001|XXGoport_dst_flow|7469|0|11940|0|{0|}4471|4408|}
{2010211001|XXGvertex_iport_iport|7470|0|11941|0|{0|in0|}4446|4472|}
{2010215002|XXGiport_binding_iport|7471|0|11943|0|{.5|.5|{0|}7791|}4472|4466|}
{2010214001|XXGiport_src_flow|7472|0|11944|0|{0|}4472|4402|}
{2010601001|XXGgraph_vertex_vertex|7473|0|11945|0|{Sort_within_Groups|}4393|4473|}
{2010212001|XXGvertex_oport_oport|7474|0|11947|0|{0|out|}4473|4474|}
{2010213001|XXGoport_dst_flow|7475|0|11949|0|{0|}4474|4404|}
{2010211001|XXGvertex_iport_iport|7476|0|11950|0|{0|in|}4473|4475|}
{2010214001|XXGiport_src_flow|7477|0|11952|0|{0|}4475|4403|}
{2010006001|XXGobject_psameas_object|7478|0|11953|0|{Layout|Layout|0|0|}4473|4322|}
{2010006001|XXGobject_psameas_object|7479|0|11954|0|{in_metadata|out_metadata|0|0|}4473|4418|}
{2010006001|XXGobject_psameas_object|7480|0|11955|0|{out_metadata|out_metadata|0|0|}4473|4418|}
{2010601001|XXGgraph_vertex_vertex|7481|0|11956|0|{Trash|}4393|4476|}
{2010211001|XXGvertex_iport_iport|7482|0|11958|0|{0|in|}4476|4477|}
{2010214001|XXGiport_src_flow|7483|0|11960|0|{0|}4477|4408|}
{2010006001|XXGobject_psameas_object|7484|0|11961|0|{Layout|Layout|0|0|}4476|4322|}
{2010006001|XXGobject_psameas_object|7485|0|11962|0|{in_metadata|out0_metadata|0|0|}4476|4440|}
{2010601001|XXGgraph_vertex_vertex|7486|0|11963|0|{Trash_1|}4393|4478|}
{2010211001|XXGvertex_iport_iport|7487|0|11965|0|{0|in|}4478|4479|}
{2010214001|XXGiport_src_flow|7488|0|11967|0|{0|}4479|4409|}
{2010006001|XXGobject_psameas_object|7489|0|11968|0|{Layout|Layout|0|0|}4478|4322|}
{2010006001|XXGobject_psameas_object|7490|0|11969|0|{in_metadata|out_metadata|0|0|}4478|4418|}
{2010601001|XXGgraph_vertex_vertex|7491|0|11970|0|{Trash_2|}4393|4480|}
{2010211001|XXGvertex_iport_iport|7492|0|11972|0|{0|in|}4480|4481|}
{2010214001|XXGiport_src_flow|7493|0|11974|0|{0|}4481|4410|}
{2010006001|XXGobject_psameas_object|7494|0|11975|0|{Layout|Layout|0|0|}4480|4322|}
{2010006001|XXGobject_psameas_object|7495|0|11976|0|{in_metadata|out_metadata|0|0|}4480|4418|}
{2010601001|XXGgraph_vertex_vertex|7496|0|11977|0|{Two_Step_Lookup|}4393|4482|}
{2010605001|XXGgraph_legend_legend|7497|0|11979|0|{0|}4482|4483|}
{2010241001|XXGlegend_face_face|7498|0|11981|0|{}4483|4484|}
{2010604001|XXGgraph_flow_flow|7499|0|11983|0|{Flow_1|}4482|4429|}
{2010604001|XXGgraph_flow_flow|7500|0|11984|0|{Flow_2|}4482|4485|}
{2010604001|XXGgraph_flow_flow|7501|0|11986|0|{Flow_3|}4482|4427|}
{2010604001|XXGgraph_flow_flow|7502|0|11987|0|{Flow_4|}4482|4486|}
{2010604001|XXGgraph_flow_flow|7503|0|11989|0|{Flow_5|}4482|4487|}
{2010604001|XXGgraph_flow_flow|7504|0|11991|0|{Flow_6|}4482|4488|}
{2010601001|XXGgraph_vertex_vertex|7505|0|11993|0|{FBE_Pass_Only_Matching_Rec|}4482|4489|}
{2010212001|XXGvertex_oport_oport|7506|0|11995|0|{0|out|}4489|4490|}
{2010213001|XXGoport_dst_flow|7507|0|11997|0|{0|}4490|4487|}
{2010212001|XXGvertex_oport_oport|7508|0|11998|0|{1|deselect|}4489|4491|}
{2010213001|XXGoport_dst_flow|7509|0|12000|0|{0|}4491|4488|}
{2010212001|XXGvertex_oport_oport|7510|0|12001|0|{2|reject|}4489|4492|}
{2010212001|XXGvertex_oport_oport|7511|0|12003|0|{3|error|}4489|4493|}
{2010212001|XXGvertex_oport_oport|7512|0|12005|0|{4|log|}4489|4494|}
{2010211001|XXGvertex_iport_iport|7513|0|12007|0|{0|in|}4489|4495|}
{2010214001|XXGiport_src_flow|7514|0|12009|0|{0|}4495|4486|}
{2010006001|XXGobject_psameas_object|7515|0|12010|0|{Layout|Layout|0|0|}4489|4322|}
{2010006001|XXGobject_psameas_object|7516|0|12011|0|{deselect_metadata|out_metadata|0|0|}4489|4425|}
{2010006001|XXGobject_psameas_object|7517|0|12012|0|{in_metadata|out0_metadata|0|0|}4489|4496|}
{2010212001|XXGvertex_oport_oport|7518|0|12014|0|{0|out0|}4496|4497|}
{2010213001|XXGoport_dst_flow|7519|0|12016|0|{0|}4497|4486|}
{2010212001|XXGvertex_oport_oport|7520|0|12017|0|{1|reject0|}4496|4498|}
{2010212001|XXGvertex_oport_oport|7521|0|12019|0|{2|error0|}4496|4499|}
{2010212001|XXGvertex_oport_oport|7522|0|12021|0|{3|log|}4496|4500|}
{2010211001|XXGvertex_iport_iport|7523|0|12023|0|{0|in|}4496|4501|}
{2010214001|XXGiport_src_flow|7524|0|12025|0|{0|}4501|4485|}
{2010006001|XXGobject_psameas_object|7525|0|12026|0|{Layout|Layout|0|0|}4496|4322|}
{2010006001|XXGobject_psameas_object|7526|0|12027|0|{in_metadata|out0_metadata|0|0|}4496|4502|}
{2010212001|XXGvertex_oport_oport|7527|0|12029|0|{0|out0|}4502|4503|}
{2010213001|XXGoport_dst_flow|7528|0|12031|0|{0|}4503|4485|}
{2010212001|XXGvertex_oport_oport|7529|0|12032|0|{1|reject0|}4502|4504|}
{2010212001|XXGvertex_oport_oport|7530|0|12034|0|{2|error0|}4502|4505|}
{2010212001|XXGvertex_oport_oport|7531|0|12036|0|{3|log|}4502|4506|}
{2010211001|XXGvertex_iport_iport|7532|0|12038|0|{0|in|}4502|4507|}
{2010214001|XXGiport_src_flow|7533|0|12040|0|{0|}4507|4429|}
{2010006001|XXGobject_psameas_object|7534|0|12041|0|{Layout|Layout|0|0|}4502|4322|}
{2010006001|XXGobject_psameas_object|7535|0|12042|0|{in_metadata|deselect_metadata|0|0|}4502|4425|}
{2010006001|XXGobject_psameas_object|7536|0|12043|0|{reject0_metadata|deselect_metadata|0|0|}4502|4425|}
{2010006001|XXGobject_psameas_object|7537|0|12044|0|{reject0_metadata|out0_metadata|0|0|}4496|4502|}
{2010006001|XXGobject_psameas_object|7538|0|12045|0|{out_metadata|out_metadata|0|0|}4489|4425|}
{2010006001|XXGobject_psameas_object|7539|0|12046|0|{reject_metadata|out0_metadata|0|0|}4489|4496|}
{2010601001|XXGgraph_vertex_vertex|7540|0|12047|0|{FBE_filter_matching_lkp_record|}4482|4425|}
{2010601001|XXGgraph_vertex_vertex|7541|0|12048|0|{Merge|}4482|4508|}
{2010212001|XXGvertex_oport_oport|7542|0|12050|0|{0|out|}4508|4509|}
{2010211001|XXGvertex_iport_iport|7543|0|12052|0|{0|in|}4508|4510|}
{2010214001|XXGiport_src_flow|7544|0|12054|0|{0|}4510|4427|}
{2010214001|XXGiport_src_flow|7545|0|12055|0|{1|}4510|4487|}
{2010006001|XXGobject_psameas_object|7546|0|12056|0|{Layout|Layout|0|0|}4508|4322|}
{2010006001|XXGobject_psameas_object|7547|0|12057|0|{in_metadata|out_metadata|0|0|}4508|4425|}
{2010006001|XXGobject_psameas_object|7548|0|12058|0|{out_metadata|out_metadata|0|0|}4508|4425|}
{2010601001|XXGgraph_vertex_vertex|7549|0|12059|0|{No_Match_Record_In_Second_Pass|}4482|4511|}
{2010211001|XXGvertex_iport_iport|7550|0|12061|0|{0|in|}4511|4512|}
{2010214001|XXGiport_src_flow|7551|0|12063|0|{0|}4512|4488|}
{2010006001|XXGobject_psameas_object|7552|0|12064|0|{Layout|Layout|0|0|}4511|4322|}
{2010006001|XXGobject_psameas_object|7553|0|12065|0|{in_metadata|out_metadata|0|0|}4511|4425|}
{2010601001|XXGgraph_vertex_vertex|7554|0|12066|0|{RFMT_Lookup_with_IDS_Archive_|}4482|4496|}
{2010601001|XXGgraph_vertex_vertex|7555|0|12067|0|{RFMT_Pass_only_Hash_Keys|}4482|4502|}
{2010212001|XXGvertex_oport_oport|7556|0|12068|0|{0|out0|}4482|4513|}
{2010216002|XXGoport_binding_oport|7557|0|12070|0|{.5|.5|{0|}15500|}4513|4509|}
{2010213001|XXGoport_dst_flow|7558|0|12071|0|{0|}4513|4406|}
{2010211001|XXGvertex_iport_iport|7559|0|12072|0|{0|in0|}4482|4514|}
{2010215002|XXGiport_binding_iport|7560|0|12074|0|{.5|.5|{0|}15499|}4514|4433|}
{2010214001|XXGiport_src_flow|7561|0|12075|0|{0|}4514|4405|}
{2010212001|XXGvertex_oport_oport|7562|0|12076|0|{0|out0|}4393|4515|}
{2010216002|XXGoport_binding_oport|7563|0|12078|0|{.5|.5|{0|}15515|}4515|4412|}
{2010213001|XXGoport_dst_flow|7564|0|12079|0|{0|}4515|4289|}
{2010211001|XXGvertex_iport_iport|7565|0|12080|0|{0|in1|}4393|4516|}
{2010215002|XXGiport_binding_iport|7566|0|12082|0|{.5|.5|{0|}15514|}4516|4445|}
{2010214001|XXGiport_src_flow|7567|0|12083|0|{0|}4516|4287|}
{2010601001|XXGgraph_vertex_vertex|7568|0|12084|0|{Merge|}4281|4517|}
{2010212001|XXGvertex_oport_oport|7569|0|12086|0|{0|out|}4517|4518|}
{2010211001|XXGvertex_iport_iport|7570|0|12088|0|{0|in|}4517|4519|}
{2010214001|XXGiport_src_flow|7571|0|12090|0|{0|}4519|4290|}
{2010006001|XXGobject_psameas_object|7572|0|12091|0|{Layout|Layout|0|0|}4517|177|}
{2010006001|XXGobject_psameas_object|7573|0|12092|0|{in_metadata|write_metadata|0|0|}4517|177|}
{2010006001|XXGobject_psameas_object|7574|0|12093|0|{out_metadata|write_metadata|0|0|}4517|177|}
{2010601001|XXGgraph_vertex_vertex|7575|0|12094|0|{Replicate|}4281|4520|}
{2010212001|XXGvertex_oport_oport|7576|0|12096|0|{0|out|}4520|4521|}
{2010213001|XXGoport_dst_flow|7577|0|12098|0|{0|}4521|4286|}
{2010213001|XXGoport_dst_flow|7578|0|12099|0|{1|}4521|4287|}
{2010211001|XXGvertex_iport_iport|7579|0|12100|0|{0|in|}4520|4522|}
{2010006001|XXGobject_psameas_object|7580|0|12102|0|{Layout|Layout|0|0|}4520|242|}
{2010006001|XXGobject_psameas_object|7581|0|12103|0|{in_metadata|out6_metadata|0|0|}4520|242|}
{2010006001|XXGobject_psameas_object|7582|0|12104|0|{out_metadata|out6_metadata|0|0|}4520|242|}
{2010601001|XXGgraph_vertex_vertex|7583|0|12105|0|{Replicate_1|}4281|4523|}
{2010212001|XXGvertex_oport_oport|7584|0|12107|0|{0|out|}4523|4524|}
{2010213001|XXGoport_dst_flow|7585|0|12109|0|{0|}4524|4290|}
{2010211001|XXGvertex_iport_iport|7586|0|12110|0|{0|in|}4523|4525|}
{2010214001|XXGiport_src_flow|7587|0|12112|0|{0|}4525|4288|}
{2010214001|XXGiport_src_flow|7588|0|12113|0|{1|}4525|4289|}
{2010006001|XXGobject_psameas_object|7589|0|12114|0|{Layout|Layout|0|0|}4523|4322|}
{2010006001|XXGobject_psameas_object|7590|0|12115|0|{in_metadata|out_metadata|0|0|}4523|4418|}
{2010006001|XXGobject_psameas_object|7591|0|12116|0|{out_metadata|out_metadata|0|0|}4523|4418|}
{2010212001|XXGvertex_oport_oport|7592|0|12117|0|{0|out0|}4281|4526|}
{2010216002|XXGoport_binding_oport|7593|0|12119|0|{.5|.5|{0|}7802|}4526|4518|}
{2010213001|XXGoport_dst_flow|7594|0|12120|0|{0|}4526|146|}
{2010211001|XXGvertex_iport_iport|7595|0|12121|0|{0|in0|}4281|4527|}
{2010215002|XXGiport_binding_iport|7596|0|12123|0|{.5|.5|{0|}7801|}4527|4522|}
{2010007001|XXGobject_proto_object|7597|0|12124|0|{}4281|4528|}
{2010605001|XXGgraph_legend_legend|7598|0|12126|0|{0|}4528|4529|}
{2010241001|XXGlegend_face_face|7599|0|12128|0|{}4529|4530|}
{2010605001|XXGgraph_legend_legend|7600|0|12130|0|{1|}4528|4531|}
{2010241001|XXGlegend_face_face|7601|0|12132|0|{}4531|4532|}
{2010604001|XXGgraph_flow_flow|7602|0|12134|0|{Flow_1|}4528|4533|}
{2010604001|XXGgraph_flow_flow|7603|0|12136|0|{Flow_2|}4528|4534|}
{2010604001|XXGgraph_flow_flow|7604|0|12138|0|{Flow_3|}4528|4535|}
{2010604001|XXGgraph_flow_flow|7605|0|12140|0|{Flow_4|}4528|4536|}
{2010604001|XXGgraph_flow_flow|7606|0|12142|0|{Flow_5|}4528|4537|}
{2010601001|XXGgraph_vertex_vertex|7607|0|12144|0|{Get_All_LookUp_Record|}4528|4538|}
{2010605001|XXGgraph_legend_legend|7608|0|12146|0|{0|}4538|4539|}
{2010241001|XXGlegend_face_face|7609|0|12148|0|{}4539|4540|}
{2010605001|XXGgraph_legend_legend|7610|0|12150|0|{1|}4538|4541|}
{2010241001|XXGlegend_face_face|7611|0|12152|0|{}4541|4542|}
{2010605001|XXGgraph_legend_legend|7612|0|12154|0|{2|}4538|4543|}
{2010241001|XXGlegend_face_face|7613|0|12156|0|{}4543|4544|}
{2010605001|XXGgraph_legend_legend|7614|0|12158|0|{3|}4538|4545|}
{2010241001|XXGlegend_face_face|7615|0|12160|0|{}4545|4546|}
{2010605001|XXGgraph_legend_legend|7616|0|12162|0|{4|}4538|4547|}
{2010241001|XXGlegend_face_face|7617|0|12164|0|{}4547|4548|}
{2010604001|XXGgraph_flow_flow|7618|0|12166|0|{Flow_1|}4538|4549|}
{2010604001|XXGgraph_flow_flow|7619|0|12168|0|{Flow_10|}4538|4550|}
{2010604001|XXGgraph_flow_flow|7620|0|12170|0|{Flow_11|}4538|4551|}
{2010604001|XXGgraph_flow_flow|7621|0|12172|0|{Flow_12|}4538|4552|}
{2010604001|XXGgraph_flow_flow|7622|0|12174|0|{Flow_18|}4538|4553|}
{2010604001|XXGgraph_flow_flow|7623|0|12176|0|{Flow_2|}4538|4554|}
{2010604001|XXGgraph_flow_flow|7624|0|12178|0|{Flow_3|}4538|4555|}
{2010604001|XXGgraph_flow_flow|7625|0|12180|0|{Flow_4|}4538|4556|}
{2010604001|XXGgraph_flow_flow|7626|0|12182|0|{Flow_5|}4538|4557|}
{2010604001|XXGgraph_flow_flow|7627|0|12184|0|{Flow_6|}4538|4558|}
{2010604001|XXGgraph_flow_flow|7628|0|12186|0|{Flow_7|}4538|4559|}
{2010604001|XXGgraph_flow_flow|7629|0|12188|0|{Flow_8|}4538|4560|}
{2010604001|XXGgraph_flow_flow|7630|0|12190|0|{Flow_9|}4538|4561|}
{2010601001|XXGgraph_vertex_vertex|7631|0|12192|0|{Dedup_Sorted|}4538|4562|}
{2010212001|XXGvertex_oport_oport|7632|0|12194|0|{0|out|}4562|4563|}
{2010213001|XXGoport_dst_flow|7633|0|12196|0|{0|}4563|4554|}
{2010212001|XXGvertex_oport_oport|7634|0|12197|0|{1|dup|}4562|4564|}
{2010213001|XXGoport_dst_flow|7635|0|12199|0|{0|}4564|4558|}
{2010212001|XXGvertex_oport_oport|7636|0|12200|0|{2|reject|}4562|4565|}
{2010212001|XXGvertex_oport_oport|7637|0|12202|0|{3|error|}4562|4566|}
{2010212001|XXGvertex_oport_oport|7638|0|12204|0|{4|log|}4562|4567|}
{2010211001|XXGvertex_iport_iport|7639|0|12206|0|{0|in|}4562|4568|}
{2010214001|XXGiport_src_flow|7640|0|12208|0|{0|}4568|4549|}
{2010007001|XXGobject_proto_object|7641|0|12209|0|{}4562|4569|}
{2010212001|XXGvertex_oport_oport|7642|0|12211|0|{0|out|}4569|4570|}
{2010006001|XXGobject_psameas_object|7643|0|12213|0|{metadata|out_metadata|1|0|}4570|4569|}
{2010212001|XXGvertex_oport_oport|7644|0|12214|0|{1|dup|}4569|4571|}
{2010006001|XXGobject_psameas_object|7645|0|12216|0|{metadata|dup_metadata|1|0|}4571|4569|}
{2010212001|XXGvertex_oport_oport|7646|0|12217|0|{2|reject|}4569|4572|}
{2010006001|XXGobject_psameas_object|7647|0|12219|0|{metadata|reject_metadata|1|0|}4572|4569|}
{2010212001|XXGvertex_oport_oport|7648|0|12220|0|{3|error|}4569|4573|}
{2010006001|XXGobject_psameas_object|7649|0|12222|0|{metadata|error_metadata|1|0|}4573|4569|}
{2010212001|XXGvertex_oport_oport|7650|0|12223|0|{4|log|}4569|4574|}
{2010006001|XXGobject_psameas_object|7651|0|12225|0|{metadata|log_metadata|1|0|}4574|4569|}
{2010211001|XXGvertex_iport_iport|7652|0|12226|0|{0|in|}4569|4575|}
{2010006001|XXGobject_psameas_object|7653|0|12228|0|{metadata|in_metadata|1|0|}4575|4569|}
{2010601001|XXGgraph_vertex_vertex|7654|0|12229|0|{FBE_Filter_match_records|}4538|4576|}
{2010212001|XXGvertex_oport_oport|7655|0|12231|0|{0|out|}4576|4577|}
{2010213001|XXGoport_dst_flow|7656|0|12233|0|{0|}4577|4551|}
{2010212001|XXGvertex_oport_oport|7657|0|12234|0|{1|deselect|}4576|4578|}
{2010213001|XXGoport_dst_flow|7658|0|12236|0|{0|}4578|4559|}
{2010212001|XXGvertex_oport_oport|7659|0|12237|0|{2|reject|}4576|4579|}
{2010212001|XXGvertex_oport_oport|7660|0|12239|0|{3|error|}4576|4580|}
{2010212001|XXGvertex_oport_oport|7661|0|12241|0|{4|log|}4576|4581|}
{2010211001|XXGvertex_iport_iport|7662|0|12243|0|{0|in|}4576|4582|}
{2010214001|XXGiport_src_flow|7663|0|12245|0|{0|}4582|4560|}
{2010007001|XXGobject_proto_object|7664|0|12246|0|{}4576|4583|}
{2010212001|XXGvertex_oport_oport|7665|0|12248|0|{0|out|}4583|4584|}
{2010006001|XXGobject_psameas_object|7666|0|12250|0|{metadata|out_metadata|1|0|}4584|4583|}
{2010212001|XXGvertex_oport_oport|7667|0|12251|0|{1|deselect|}4583|4585|}
{2010006001|XXGobject_psameas_object|7668|0|12253|0|{metadata|deselect_metadata|1|0|}4585|4583|}
{2010212001|XXGvertex_oport_oport|7669|0|12254|0|{2|reject|}4583|4586|}
{2010006001|XXGobject_psameas_object|7670|0|12256|0|{metadata|reject_metadata|1|0|}4586|4583|}
{2010212001|XXGvertex_oport_oport|7671|0|12257|0|{3|error|}4583|4587|}
{2010006001|XXGobject_psameas_object|7672|0|12259|0|{metadata|error_metadata|1|0|}4587|4583|}
{2010212001|XXGvertex_oport_oport|7673|0|12260|0|{4|log|}4583|4588|}
{2010006001|XXGobject_psameas_object|7674|0|12262|0|{metadata|log_metadata|1|0|}4588|4583|}
{2010211001|XXGvertex_iport_iport|7675|0|12263|0|{0|in|}4583|4589|}
{2010006001|XXGobject_psameas_object|7676|0|12265|0|{metadata|in_metadata|1|0|}4589|4583|}
{2010601001|XXGgraph_vertex_vertex|7677|0|12266|0|{Get_Hash_on_SRC_NK|}4538|4590|}
{2010212001|XXGvertex_oport_oport|7678|0|12268|0|{0|out0|}4590|4591|}
{2010213001|XXGoport_dst_flow|7679|0|12270|0|{0|}4591|4553|}
{2010212001|XXGvertex_oport_oport|7680|0|12271|0|{1|reject0|}4590|4592|}
{2010212001|XXGvertex_oport_oport|7681|0|12273|0|{2|error0|}4590|4593|}
{2010212001|XXGvertex_oport_oport|7682|0|12275|0|{3|log|}4590|4594|}
{2010211001|XXGvertex_iport_iport|7683|0|12277|0|{0|in|}4590|4595|}
{2010007001|XXGobject_proto_object|7684|0|12279|0|{}4590|4596|}
{2010212001|XXGvertex_oport_oport|7685|0|12281|0|{0|out0|}4596|4597|}
{2010006001|XXGobject_psameas_object|7686|0|12283|0|{metadata|out0_metadata|1|0|}4597|4596|}
{2010006001|XXGobject_psameas_object|7687|0|12284|0|{transform0|transform0|1|0|}4597|4596|}
{2010212001|XXGvertex_oport_oport|7688|0|12285|0|{1|reject0|}4596|4598|}
{2010006001|XXGobject_psameas_object|7689|0|12287|0|{metadata|reject0_metadata|1|0|}4598|4596|}
{2010212001|XXGvertex_oport_oport|7690|0|12288|0|{2|error0|}4596|4599|}
{2010006001|XXGobject_psameas_object|7691|0|12290|0|{metadata|error0_metadata|1|0|}4599|4596|}
{2010212001|XXGvertex_oport_oport|7692|0|12291|0|{3|log|}4596|4600|}
{2010006001|XXGobject_psameas_object|7693|0|12293|0|{metadata|log_metadata|1|0|}4600|4596|}
{2010211001|XXGvertex_iport_iport|7694|0|12294|0|{0|in|}4596|4601|}
{2010006001|XXGobject_psameas_object|7695|0|12296|0|{metadata|in_metadata|1|0|}4601|4596|}
{2010601001|XXGgraph_vertex_vertex|7696|0|12297|0|{Merge|}4538|4602|}
{2010212001|XXGvertex_oport_oport|7697|0|12299|0|{0|out|}4602|4603|}
{2010213001|XXGoport_dst_flow|7698|0|12301|0|{0|}4603|4560|}
{2010211001|XXGvertex_iport_iport|7699|0|12302|0|{0|in|}4602|4604|}
{2010214001|XXGiport_src_flow|7700|0|12304|0|{0|}4604|4555|}
{2010214001|XXGiport_src_flow|7701|0|12305|0|{1|}4604|4552|}
{2010007001|XXGobject_proto_object|7702|0|12306|0|{}4602|4605|}
{2010212001|XXGvertex_oport_oport|7703|0|12308|0|{0|out|}4605|4606|}
{2010006001|XXGobject_psameas_object|7704|0|12310|0|{metadata|out_metadata|1|0|}4606|4605|}
{2010211001|XXGvertex_iport_iport|7705|0|12311|0|{0|in|}4605|4607|}
{2010006001|XXGobject_psameas_object|7706|0|12313|0|{metadata|in_metadata|1|0|}4607|4605|}
{2010601001|XXGgraph_vertex_vertex|7707|0|12314|0|{Normalize_Get_all_records_from_Archive_Lkp|}4538|4608|}
{2010212001|XXGvertex_oport_oport|7708|0|12316|0|{0|out|}4608|4609|}
{2010213001|XXGoport_dst_flow|7709|0|12318|0|{0|}4609|4552|}
{2010212001|XXGvertex_oport_oport|7710|0|12319|0|{1|reject|}4608|4610|}
{2010212001|XXGvertex_oport_oport|7711|0|12321|0|{2|error|}4608|4611|}
{2010212001|XXGvertex_oport_oport|7712|0|12323|0|{3|log|}4608|4612|}
{2010211001|XXGvertex_iport_iport|7713|0|12325|0|{0|in|}4608|4613|}
{2010214001|XXGiport_src_flow|7714|0|12327|0|{0|}4613|4550|}
{2010007001|XXGobject_proto_object|7715|0|12328|0|{}4608|4614|}
{2010212001|XXGvertex_oport_oport|7716|0|12330|0|{0|out|}4614|4615|}
{2010006001|XXGobject_psameas_object|7717|0|12332|0|{metadata|out_metadata|1|0|}4615|4614|}
{2010212001|XXGvertex_oport_oport|7718|0|12333|0|{1|reject|}4614|4616|}
{2010006001|XXGobject_psameas_object|7719|0|12335|0|{metadata|reject_metadata|1|0|}4616|4614|}
{2010212001|XXGvertex_oport_oport|7720|0|12336|0|{2|error|}4614|4617|}
{2010006001|XXGobject_psameas_object|7721|0|12338|0|{metadata|error_metadata|1|0|}4617|4614|}
{2010212001|XXGvertex_oport_oport|7722|0|12339|0|{3|log|}4614|4618|}
{2010006001|XXGobject_psameas_object|7723|0|12341|0|{metadata|log_metadata|1|0|}4618|4614|}
{2010211001|XXGvertex_iport_iport|7724|0|12342|0|{0|in|}4614|4619|}
{2010006001|XXGobject_psameas_object|7725|0|12344|0|{metadata|in_metadata|1|0|}4619|4614|}
{2010601001|XXGgraph_vertex_vertex|7726|0|12345|0|{Normalize_Get_all_records_from_lkp|}4538|4620|}
{2010212001|XXGvertex_oport_oport|7727|0|12347|0|{0|out|}4620|4621|}
{2010213001|XXGoport_dst_flow|7728|0|12349|0|{0|}4621|4555|}
{2010212001|XXGvertex_oport_oport|7729|0|12350|0|{1|reject|}4620|4622|}
{2010212001|XXGvertex_oport_oport|7730|0|12352|0|{2|error|}4620|4623|}
{2010212001|XXGvertex_oport_oport|7731|0|12354|0|{3|log|}4620|4624|}
{2010211001|XXGvertex_iport_iport|7732|0|12356|0|{0|in|}4620|4625|}
{2010214001|XXGiport_src_flow|7733|0|12358|0|{0|}4625|4557|}
{2010007001|XXGobject_proto_object|7734|0|12359|0|{}4620|4626|}
{2010212001|XXGvertex_oport_oport|7735|0|12361|0|{0|out|}4626|4627|}
{2010006001|XXGobject_psameas_object|7736|0|12363|0|{metadata|out_metadata|1|0|}4627|4626|}
{2010212001|XXGvertex_oport_oport|7737|0|12364|0|{1|reject|}4626|4628|}
{2010006001|XXGobject_psameas_object|7738|0|12366|0|{metadata|reject_metadata|1|0|}4628|4626|}
{2010212001|XXGvertex_oport_oport|7739|0|12367|0|{2|error|}4626|4629|}
{2010006001|XXGobject_psameas_object|7740|0|12369|0|{metadata|error_metadata|1|0|}4629|4626|}
{2010212001|XXGvertex_oport_oport|7741|0|12370|0|{3|log|}4626|4630|}
{2010006001|XXGobject_psameas_object|7742|0|12372|0|{metadata|log_metadata|1|0|}4630|4626|}
{2010211001|XXGvertex_iport_iport|7743|0|12373|0|{0|in|}4626|4631|}
{2010006001|XXGobject_psameas_object|7744|0|12375|0|{metadata|in_metadata|1|0|}4631|4626|}
{2010601001|XXGgraph_vertex_vertex|7745|0|12376|0|{Replicate|}4538|4632|}
{2010212001|XXGvertex_oport_oport|7746|0|12378|0|{0|out|}4632|4633|}
{2010211001|XXGvertex_iport_iport|7747|0|12380|0|{0|in|}4632|4634|}
{2010214001|XXGiport_src_flow|7748|0|12382|0|{0|}4634|4554|}
{2010007001|XXGobject_proto_object|7749|0|12383|0|{}4632|4635|}
{2010212001|XXGvertex_oport_oport|7750|0|12385|0|{0|out|}4635|4636|}
{2010006001|XXGobject_psameas_object|7751|0|12387|0|{metadata|out_metadata|1|0|}4636|4635|}
{2010211001|XXGvertex_iport_iport|7752|0|12388|0|{0|in|}4635|4637|}
{2010006001|XXGobject_psameas_object|7753|0|12390|0|{metadata|in_metadata|1|0|}4637|4635|}
{2010601001|XXGgraph_vertex_vertex|7754|0|12391|0|{Replicate_1|}4538|4638|}
{2010212001|XXGvertex_oport_oport|7755|0|12393|0|{0|out|}4638|4639|}
{2010213001|XXGoport_dst_flow|7756|0|12395|0|{0|}4639|4557|}
{2010213001|XXGoport_dst_flow|7757|0|12396|0|{1|}4639|4550|}
{2010211001|XXGvertex_iport_iport|7758|0|12397|0|{0|in|}4638|4640|}
{2010214001|XXGiport_src_flow|7759|0|12399|0|{0|}4640|4556|}
{2010007001|XXGobject_proto_object|7760|0|12400|0|{}4638|4641|}
{2010212001|XXGvertex_oport_oport|7761|0|12402|0|{0|out|}4641|4642|}
{2010006001|XXGobject_psameas_object|7762|0|12404|0|{metadata|out_metadata|1|0|}4642|4641|}
{2010211001|XXGvertex_iport_iport|7763|0|12405|0|{0|in|}4641|4643|}
{2010006001|XXGobject_psameas_object|7764|0|12407|0|{metadata|in_metadata|1|0|}4643|4641|}
{2010601001|XXGgraph_vertex_vertex|7765|0|12408|0|{Sort_Remove_Dup_On_Hash|}4538|4644|}
{2010604001|XXGgraph_flow_flow|7766|0|12410|0|{Flow_3|}4644|4645|}
{2010604001|XXGgraph_flow_flow|7767|0|12412|0|{Flow_5|}4644|4646|}
{2010601001|XXGgraph_vertex_vertex|7768|0|12414|0|{Dedup_Sorted_1|}4644|4647|}
{2010212001|XXGvertex_oport_oport|7769|0|12416|0|{0|out|}4647|4648|}
{2010212001|XXGvertex_oport_oport|7770|0|12418|0|{1|dup|}4647|4649|}
{2010212001|XXGvertex_oport_oport|7771|0|12420|0|{2|reject|}4647|4650|}
{2010212001|XXGvertex_oport_oport|7772|0|12422|0|{3|error|}4647|4651|}
{2010212001|XXGvertex_oport_oport|7773|0|12424|0|{4|log|}4647|4652|}
{2010211001|XXGvertex_iport_iport|7774|0|12426|0|{0|in|}4647|4653|}
{2010214001|XXGiport_src_flow|7775|0|12428|0|{0|}4653|4646|}
{2010007001|XXGobject_proto_object|7776|0|12429|0|{}4647|4654|}
{2010212001|XXGvertex_oport_oport|7777|0|12431|0|{0|out|}4654|4655|}
{2010006001|XXGobject_psameas_object|7778|0|12433|0|{metadata|out_metadata|1|0|}4655|4654|}
{2010212001|XXGvertex_oport_oport|7779|0|12434|0|{1|dup|}4654|4656|}
{2010006001|XXGobject_psameas_object|7780|0|12436|0|{metadata|dup_metadata|1|0|}4656|4654|}
{2010212001|XXGvertex_oport_oport|7781|0|12437|0|{2|reject|}4654|4657|}
{2010006001|XXGobject_psameas_object|7782|0|12439|0|{metadata|reject_metadata|1|0|}4657|4654|}
{2010212001|XXGvertex_oport_oport|7783|0|12440|0|{3|error|}4654|4658|}
{2010006001|XXGobject_psameas_object|7784|0|12442|0|{metadata|error_metadata|1|0|}4658|4654|}
{2010212001|XXGvertex_oport_oport|7785|0|12443|0|{4|log|}4654|4659|}
{2010006001|XXGobject_psameas_object|7786|0|12445|0|{metadata|log_metadata|1|0|}4659|4654|}
{2010211001|XXGvertex_iport_iport|7787|0|12446|0|{0|in|}4654|4660|}
{2010006001|XXGobject_psameas_object|7788|0|12448|0|{metadata|in_metadata|1|0|}4660|4654|}
{2010601001|XXGgraph_vertex_vertex|7789|0|12449|0|{PBKS_dxf_hk_part1_|}4644|4661|}
{2010604001|XXGgraph_flow_flow|7790|0|12451|0|{Flow_1|}4661|4662|}
{2010601001|XXGgraph_vertex_vertex|7791|0|12453|0|{Partition_by_Key|}4661|4663|}
{2010212001|XXGvertex_oport_oport|7792|0|12455|0|{0|out|}4663|4664|}
{2010213001|XXGoport_dst_flow|7793|0|12457|0|{0|}4664|4662|}
{2010211001|XXGvertex_iport_iport|7794|0|12458|0|{0|in|}4663|4665|}
{2010601001|XXGgraph_vertex_vertex|7795|0|12460|0|{Sort|}4661|4666|}
{2010212001|XXGvertex_oport_oport|7796|0|12462|0|{0|out|}4666|4667|}
{2010211001|XXGvertex_iport_iport|7797|0|12464|0|{0|in|}4666|4668|}
{2010214001|XXGiport_src_flow|7798|0|12466|0|{0|}4668|4662|}
{2010212001|XXGvertex_oport_oport|7799|0|12467|0|{0|out0|}4661|4669|}
{2010216002|XXGoport_binding_oport|7800|0|12469|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}4669|4667|}
{2010213001|XXGoport_dst_flow|7801|0|12470|0|{0|}4669|4645|}
{2010211001|XXGvertex_iport_iport|7802|0|12471|0|{0|in0|}4661|4670|}
{2010215002|XXGiport_binding_iport|7803|0|12473|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}4670|4665|}
{2010007001|XXGobject_proto_object|7804|0|12474|0|{}4661|4671|}
{2010604001|XXGgraph_flow_flow|7805|0|12476|0|{Flow_1|}4671|4672|}
{2010601001|XXGgraph_vertex_vertex|7806|0|12478|0|{Partition_by_Key|}4671|4673|}
{2010212001|XXGvertex_oport_oport|7807|0|12480|0|{0|out|}4673|4674|}
{2010213001|XXGoport_dst_flow|7808|0|12482|0|{0|}4674|4672|}
{2010211001|XXGvertex_iport_iport|7809|0|12483|0|{0|in|}4673|4675|}
{2010007001|XXGobject_proto_object|7810|0|12485|0|{}4673|4676|}
{2010212001|XXGvertex_oport_oport|7811|0|12487|0|{0|out|}4676|4677|}
{2010006001|XXGobject_psameas_object|7812|0|12489|0|{metadata|out_metadata|1|0|}4677|4676|}
{2010211001|XXGvertex_iport_iport|7813|0|12490|0|{0|in|}4676|4678|}
{2010006001|XXGobject_psameas_object|7814|0|12492|0|{metadata|in_metadata|1|0|}4678|4676|}
{2010006001|XXGobject_psameas_object|7815|0|12493|0|{Layout|InputLayout|1|0|}4673|4671|}
{2010006001|XXGobject_psameas_object|7816|0|12494|0|{key|Key|1|0|}4673|4671|}
{2010601001|XXGgraph_vertex_vertex|7817|0|12495|0|{Sort|}4671|4679|}
{2010212001|XXGvertex_oport_oport|7818|0|12497|0|{0|out|}4679|4680|}
{2010211001|XXGvertex_iport_iport|7819|0|12499|0|{0|in|}4679|4681|}
{2010214001|XXGiport_src_flow|7820|0|12501|0|{0|}4681|4672|}
{2010007001|XXGobject_proto_object|7821|0|12502|0|{}4679|4682|}
{2010212001|XXGvertex_oport_oport|7822|0|12504|0|{0|out|}4682|4683|}
{2010006001|XXGobject_psameas_object|7823|0|12506|0|{metadata|out_metadata|1|0|}4683|4682|}
{2010211001|XXGvertex_iport_iport|7824|0|12507|0|{0|in|}4682|4684|}
{2010006001|XXGobject_psameas_object|7825|0|12509|0|{metadata|in_metadata|1|0|}4684|4682|}
{2010006001|XXGobject_psameas_object|7826|0|12510|0|{Layout|OutputLayout|1|0|}4679|4671|}
{2010006001|XXGobject_psameas_object|7827|0|12511|0|{key|Key|1|0|}4679|4671|}
{2010006001|XXGobject_psameas_object|7828|0|12512|0|{max_core|Max_core|1|0|}4679|4671|}
{2010212001|XXGvertex_oport_oport|7829|0|12513|0|{0|out0|}4671|4685|}
{2010216002|XXGoport_binding_oport|7830|0|12515|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}4685|4680|}
{2010211001|XXGvertex_iport_iport|7831|0|12516|0|{0|in0|}4671|4686|}
{2010215002|XXGiport_binding_iport|7832|0|12518|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}4686|4675|}
{2010006001|XXGobject_psameas_object|7833|0|12519|0|{InputLayout|Layout|0|0|}4661|4590|}
{2010601001|XXGgraph_vertex_vertex|7834|0|12520|0|{Sort_within_Groups|}4644|4687|}
{2010212001|XXGvertex_oport_oport|7835|0|12522|0|{0|out|}4687|4688|}
{2010213001|XXGoport_dst_flow|7836|0|12524|0|{0|}4688|4646|}
{2010211001|XXGvertex_iport_iport|7837|0|12525|0|{0|in|}4687|4689|}
{2010214001|XXGiport_src_flow|7838|0|12527|0|{0|}4689|4645|}
{2010007001|XXGobject_proto_object|7839|0|12528|0|{}4687|4690|}
{2010212001|XXGvertex_oport_oport|7840|0|12530|0|{0|out|}4690|4691|}
{2010006001|XXGobject_psameas_object|7841|0|12532|0|{metadata|out_metadata|1|0|}4691|4690|}
{2010211001|XXGvertex_iport_iport|7842|0|12533|0|{0|in|}4690|4692|}
{2010006001|XXGobject_psameas_object|7843|0|12535|0|{metadata|in_metadata|1|0|}4692|4690|}
{2010212001|XXGvertex_oport_oport|7844|0|12536|0|{0|out0|}4644|4693|}
{2010216002|XXGoport_binding_oport|7845|0|12538|0|{.5|.5|{0|}14672|}4693|4648|}
{2010213001|XXGoport_dst_flow|7846|0|12539|0|{0|}4693|4556|}
{2010212001|XXGvertex_oport_oport|7847|0|12540|0|{1|out1|}4644|4694|}
{2010216002|XXGoport_binding_oport|7848|0|12542|0|{.5|.5|{0|}14673|}4694|4649|}
{2010213001|XXGoport_dst_flow|7849|0|12543|0|{0|}4694|4561|}
{2010211001|XXGvertex_iport_iport|7850|0|12544|0|{0|in0|}4644|4695|}
{2010215002|XXGiport_binding_iport|7851|0|12546|0|{.5|.5|{0|}14671|}4695|4670|}
{2010214001|XXGiport_src_flow|7852|0|12547|0|{0|}4695|4553|}
{2010601001|XXGgraph_vertex_vertex|7853|0|12548|0|{Sort_on_Adjusted_Natural_Keys|}4538|4696|}
{2010212001|XXGvertex_oport_oport|7854|0|12550|0|{0|out|}4696|4697|}
{2010213001|XXGoport_dst_flow|7855|0|12552|0|{0|}4697|4549|}
{2010211001|XXGvertex_iport_iport|7856|0|12553|0|{0|in|}4696|4698|}
{2010214001|XXGiport_src_flow|7857|0|12555|0|{0|}4698|4551|}
{2010007001|XXGobject_proto_object|7858|0|12556|0|{}4696|4699|}
{2010212001|XXGvertex_oport_oport|7859|0|12558|0|{0|out|}4699|4700|}
{2010006001|XXGobject_psameas_object|7860|0|12560|0|{metadata|out_metadata|1|0|}4700|4699|}
{2010211001|XXGvertex_iport_iport|7861|0|12561|0|{0|in|}4699|4701|}
{2010006001|XXGobject_psameas_object|7862|0|12563|0|{metadata|in_metadata|1|0|}4701|4699|}
{2010601001|XXGgraph_vertex_vertex|7863|0|12564|0|{Trash_1|}4538|4702|}
{2010211001|XXGvertex_iport_iport|7864|0|12566|0|{0|in|}4702|4703|}
{2010214001|XXGiport_src_flow|7865|0|12568|0|{0|}4703|4559|}
{2010007001|XXGobject_proto_object|7866|0|12569|0|{}4702|4704|}
{2010211001|XXGvertex_iport_iport|7867|0|12571|0|{0|in|}4704|4705|}
{2010006001|XXGobject_psameas_object|7868|0|12573|0|{metadata|in_metadata|1|0|}4705|4704|}
{2010601001|XXGgraph_vertex_vertex|7869|0|12574|0|{Trash_2|}4538|4706|}
{2010211001|XXGvertex_iport_iport|7870|0|12576|0|{0|in|}4706|4707|}
{2010214001|XXGiport_src_flow|7871|0|12578|0|{0|}4707|4558|}
{2010007001|XXGobject_proto_object|7872|0|12579|0|{}4706|4708|}
{2010211001|XXGvertex_iport_iport|7873|0|12581|0|{0|in|}4708|4709|}
{2010006001|XXGobject_psameas_object|7874|0|12583|0|{metadata|in_metadata|1|0|}4709|4708|}
{2010601001|XXGgraph_vertex_vertex|7875|0|12584|0|{Trash_3|}4538|4710|}
{2010211001|XXGvertex_iport_iport|7876|0|12586|0|{0|in|}4710|4711|}
{2010214001|XXGiport_src_flow|7877|0|12588|0|{0|}4711|4561|}
{2010007001|XXGobject_proto_object|7878|0|12589|0|{}4710|4712|}
{2010211001|XXGvertex_iport_iport|7879|0|12591|0|{0|in|}4712|4713|}
{2010006001|XXGobject_psameas_object|7880|0|12593|0|{metadata|in_metadata|1|0|}4713|4712|}
{2010212001|XXGvertex_oport_oport|7881|0|12594|0|{0|out0|}4538|4714|}
{2010216002|XXGoport_binding_oport|7882|0|12596|0|{.5|.5|{0|}14899|}4714|4633|}
{2010213001|XXGoport_dst_flow|7883|0|12597|0|{0|}4714|4535|}
{2010211001|XXGvertex_iport_iport|7884|0|12598|0|{0|in0|}4538|4715|}
{2010215002|XXGiport_binding_iport|7885|0|12600|0|{.5|.5|{0|}14898|}4715|4595|}
{2010214001|XXGiport_src_flow|7886|0|12601|0|{0|}4715|4533|}
{2010601001|XXGgraph_vertex_vertex|7887|0|12602|0|{Get_Last_Lookup_Record|}4528|4716|}
{2010605001|XXGgraph_legend_legend|7888|0|12604|0|{0|}4716|4717|}
{2010241001|XXGlegend_face_face|7889|0|12606|0|{}4717|4718|}
{2010605001|XXGgraph_legend_legend|7890|0|12608|0|{1|}4716|4719|}
{2010241001|XXGlegend_face_face|7891|0|12610|0|{}4719|4720|}
{2010605001|XXGgraph_legend_legend|7892|0|12612|0|{2|}4716|4721|}
{2010241001|XXGlegend_face_face|7893|0|12614|0|{}4721|4722|}
{2010605001|XXGgraph_legend_legend|7894|0|12616|0|{3|}4716|4723|}
{2010241001|XXGlegend_face_face|7895|0|12618|0|{}4723|4724|}
{2010604001|XXGgraph_flow_flow|7896|0|12620|0|{Flow_1|}4716|4725|}
{2010604001|XXGgraph_flow_flow|7897|0|12622|0|{Flow_2|}4716|4726|}
{2010604001|XXGgraph_flow_flow|7898|0|12624|0|{Flow_3|}4716|4727|}
{2010604001|XXGgraph_flow_flow|7899|0|12626|0|{Flow_4|}4716|4728|}
{2010604001|XXGgraph_flow_flow|7900|0|12628|0|{Flow_5|}4716|4729|}
{2010604001|XXGgraph_flow_flow|7901|0|12630|0|{Flow_6|}4716|4730|}
{2010604001|XXGgraph_flow_flow|7902|0|12632|0|{Flow_7|}4716|4731|}
{2010604001|XXGgraph_flow_flow|7903|0|12634|0|{Flow_8|}4716|4732|}
{2010604001|XXGgraph_flow_flow|7904|0|12636|0|{Flow_9|}4716|4733|}
{2010601001|XXGgraph_vertex_vertex|7905|0|12638|0|{Dedup_Sorted|}4716|4734|}
{2010212001|XXGvertex_oport_oport|7906|0|12640|0|{0|out|}4734|4735|}
{2010212001|XXGvertex_oport_oport|7907|0|12642|0|{1|dup|}4734|4736|}
{2010213001|XXGoport_dst_flow|7908|0|12644|0|{0|}4736|4732|}
{2010212001|XXGvertex_oport_oport|7909|0|12645|0|{2|reject|}4734|4737|}
{2010212001|XXGvertex_oport_oport|7910|0|12647|0|{3|error|}4734|4738|}
{2010212001|XXGvertex_oport_oport|7911|0|12649|0|{4|log|}4734|4739|}
{2010211001|XXGvertex_iport_iport|7912|0|12651|0|{0|in|}4734|4740|}
{2010214001|XXGiport_src_flow|7913|0|12653|0|{0|}4740|4727|}
{2010007001|XXGobject_proto_object|7914|0|12654|0|{}4734|4741|}
{2010212001|XXGvertex_oport_oport|7915|0|12656|0|{0|out|}4741|4742|}
{2010006001|XXGobject_psameas_object|7916|0|12658|0|{metadata|out_metadata|1|0|}4742|4741|}
{2010212001|XXGvertex_oport_oport|7917|0|12659|0|{1|dup|}4741|4743|}
{2010006001|XXGobject_psameas_object|7918|0|12661|0|{metadata|dup_metadata|1|0|}4743|4741|}
{2010212001|XXGvertex_oport_oport|7919|0|12662|0|{2|reject|}4741|4744|}
{2010006001|XXGobject_psameas_object|7920|0|12664|0|{metadata|reject_metadata|1|0|}4744|4741|}
{2010212001|XXGvertex_oport_oport|7921|0|12665|0|{3|error|}4741|4745|}
{2010006001|XXGobject_psameas_object|7922|0|12667|0|{metadata|error_metadata|1|0|}4745|4741|}
{2010212001|XXGvertex_oport_oport|7923|0|12668|0|{4|log|}4741|4746|}
{2010006001|XXGobject_psameas_object|7924|0|12670|0|{metadata|log_metadata|1|0|}4746|4741|}
{2010211001|XXGvertex_iport_iport|7925|0|12671|0|{0|in|}4741|4747|}
{2010006001|XXGobject_psameas_object|7926|0|12673|0|{metadata|in_metadata|1|0|}4747|4741|}
{2010601001|XXGgraph_vertex_vertex|7927|0|12674|0|{FBE_filter_matching_lkp_record|}4716|4748|}
{2010212001|XXGvertex_oport_oport|7928|0|12676|0|{0|out|}4748|4749|}
{2010213001|XXGoport_dst_flow|7929|0|12678|0|{0|}4749|4726|}
{2010212001|XXGvertex_oport_oport|7930|0|12679|0|{1|deselect|}4748|4750|}
{2010213001|XXGoport_dst_flow|7931|0|12681|0|{0|}4750|4733|}
{2010212001|XXGvertex_oport_oport|7932|0|12682|0|{2|reject|}4748|4751|}
{2010212001|XXGvertex_oport_oport|7933|0|12684|0|{3|error|}4748|4752|}
{2010212001|XXGvertex_oport_oport|7934|0|12686|0|{4|log|}4748|4753|}
{2010211001|XXGvertex_iport_iport|7935|0|12688|0|{0|in|}4748|4754|}
{2010214001|XXGiport_src_flow|7936|0|12690|0|{0|}4754|4729|}
{2010007001|XXGobject_proto_object|7937|0|12691|0|{}4748|4755|}
{2010212001|XXGvertex_oport_oport|7938|0|12693|0|{0|out|}4755|4756|}
{2010006001|XXGobject_psameas_object|7939|0|12695|0|{metadata|out_metadata|1|0|}4756|4755|}
{2010212001|XXGvertex_oport_oport|7940|0|12696|0|{1|deselect|}4755|4757|}
{2010006001|XXGobject_psameas_object|7941|0|12698|0|{metadata|deselect_metadata|1|0|}4757|4755|}
{2010212001|XXGvertex_oport_oport|7942|0|12699|0|{2|reject|}4755|4758|}
{2010006001|XXGobject_psameas_object|7943|0|12701|0|{metadata|reject_metadata|1|0|}4758|4755|}
{2010212001|XXGvertex_oport_oport|7944|0|12702|0|{3|error|}4755|4759|}
{2010006001|XXGobject_psameas_object|7945|0|12704|0|{metadata|error_metadata|1|0|}4759|4755|}
{2010212001|XXGvertex_oport_oport|7946|0|12705|0|{4|log|}4755|4760|}
{2010006001|XXGobject_psameas_object|7947|0|12707|0|{metadata|log_metadata|1|0|}4760|4755|}
{2010211001|XXGvertex_iport_iport|7948|0|12708|0|{0|in|}4755|4761|}
{2010006001|XXGobject_psameas_object|7949|0|12710|0|{metadata|in_metadata|1|0|}4761|4755|}
{2010601001|XXGgraph_vertex_vertex|7950|0|12711|0|{RFMT_Get_Hash_On_NK|}4716|4762|}
{2010212001|XXGvertex_oport_oport|7951|0|12713|0|{0|out0|}4762|4763|}
{2010213001|XXGoport_dst_flow|7952|0|12715|0|{0|}4763|4725|}
{2010212001|XXGvertex_oport_oport|7953|0|12716|0|{1|reject0|}4762|4764|}
{2010212001|XXGvertex_oport_oport|7954|0|12718|0|{2|error0|}4762|4765|}
{2010212001|XXGvertex_oport_oport|7955|0|12720|0|{3|log|}4762|4766|}
{2010211001|XXGvertex_iport_iport|7956|0|12722|0|{0|in|}4762|4767|}
{2010007001|XXGobject_proto_object|7957|0|12724|0|{}4762|4768|}
{2010212001|XXGvertex_oport_oport|7958|0|12726|0|{0|out0|}4768|4769|}
{2010006001|XXGobject_psameas_object|7959|0|12728|0|{metadata|out0_metadata|1|0|}4769|4768|}
{2010006001|XXGobject_psameas_object|7960|0|12729|0|{transform0|transform0|1|0|}4769|4768|}
{2010212001|XXGvertex_oport_oport|7961|0|12730|0|{1|reject0|}4768|4770|}
{2010006001|XXGobject_psameas_object|7962|0|12732|0|{metadata|reject0_metadata|1|0|}4770|4768|}
{2010212001|XXGvertex_oport_oport|7963|0|12733|0|{2|error0|}4768|4771|}
{2010006001|XXGobject_psameas_object|7964|0|12735|0|{metadata|error0_metadata|1|0|}4771|4768|}
{2010212001|XXGvertex_oport_oport|7965|0|12736|0|{3|log|}4768|4772|}
{2010006001|XXGobject_psameas_object|7966|0|12738|0|{metadata|log_metadata|1|0|}4772|4768|}
{2010211001|XXGvertex_iport_iport|7967|0|12739|0|{0|in|}4768|4773|}
{2010006001|XXGobject_psameas_object|7968|0|12741|0|{metadata|in_metadata|1|0|}4773|4768|}
{2010601001|XXGgraph_vertex_vertex|7969|0|12742|0|{RFMT_Lookup_with_IDS|}4716|4774|}
{2010212001|XXGvertex_oport_oport|7970|0|12744|0|{0|out0|}4774|4775|}
{2010213001|XXGoport_dst_flow|7971|0|12746|0|{0|}4775|4728|}
{2010212001|XXGvertex_oport_oport|7972|0|12747|0|{1|reject0|}4774|4776|}
{2010212001|XXGvertex_oport_oport|7973|0|12749|0|{2|error0|}4774|4777|}
{2010212001|XXGvertex_oport_oport|7974|0|12751|0|{3|log|}4774|4778|}
{2010211001|XXGvertex_iport_iport|7975|0|12753|0|{0|in|}4774|4779|}
{2010214001|XXGiport_src_flow|7976|0|12755|0|{0|}4779|4730|}
{2010007001|XXGobject_proto_object|7977|0|12756|0|{}4774|4780|}
{2010212001|XXGvertex_oport_oport|7978|0|12758|0|{0|out0|}4780|4781|}
{2010006001|XXGobject_psameas_object|7979|0|12760|0|{metadata|out0_metadata|1|0|}4781|4780|}
{2010006001|XXGobject_psameas_object|7980|0|12761|0|{transform0|transform0|1|0|}4781|4780|}
{2010212001|XXGvertex_oport_oport|7981|0|12762|0|{1|reject0|}4780|4782|}
{2010006001|XXGobject_psameas_object|7982|0|12764|0|{metadata|reject0_metadata|1|0|}4782|4780|}
{2010212001|XXGvertex_oport_oport|7983|0|12765|0|{2|error0|}4780|4783|}
{2010006001|XXGobject_psameas_object|7984|0|12767|0|{metadata|error0_metadata|1|0|}4783|4780|}
{2010212001|XXGvertex_oport_oport|7985|0|12768|0|{3|log|}4780|4784|}
{2010006001|XXGobject_psameas_object|7986|0|12770|0|{metadata|log_metadata|1|0|}4784|4780|}
{2010211001|XXGvertex_iport_iport|7987|0|12771|0|{0|in|}4780|4785|}
{2010006001|XXGobject_psameas_object|7988|0|12773|0|{metadata|in_metadata|1|0|}4785|4780|}
{2010601001|XXGgraph_vertex_vertex|7989|0|12774|0|{Sort_De_dup|}4716|4786|}
{2010604001|XXGgraph_flow_flow|7990|0|12776|0|{Flow_10|}4786|4787|}
{2010604001|XXGgraph_flow_flow|7991|0|12778|0|{Flow_4|}4786|4788|}
{2010244001|XXGflow_watcher_watcher|7992|0|12780|0|{}4788|4789|}
{2010601001|XXGgraph_vertex_vertex|7993|0|12782|0|{Dedup_Sorted_1|}4786|4790|}
{2010212001|XXGvertex_oport_oport|7994|0|12784|0|{0|out|}4790|4791|}
{2010212001|XXGvertex_oport_oport|7995|0|12786|0|{1|dup|}4790|4792|}
{2010212001|XXGvertex_oport_oport|7996|0|12788|0|{2|reject|}4790|4793|}
{2010212001|XXGvertex_oport_oport|7997|0|12790|0|{3|error|}4790|4794|}
{2010212001|XXGvertex_oport_oport|7998|0|12792|0|{4|log|}4790|4795|}
{2010211001|XXGvertex_iport_iport|7999|0|12794|0|{0|in|}4790|4796|}
{2010214001|XXGiport_src_flow|8000|0|12796|0|{0|}4796|4787|}
{2010007001|XXGobject_proto_object|8001|0|12797|0|{}4790|4797|}
{2010212001|XXGvertex_oport_oport|8002|0|12799|0|{0|out|}4797|4798|}
{2010006001|XXGobject_psameas_object|8003|0|12801|0|{metadata|out_metadata|1|0|}4798|4797|}
{2010212001|XXGvertex_oport_oport|8004|0|12802|0|{1|dup|}4797|4799|}
{2010006001|XXGobject_psameas_object|8005|0|12804|0|{metadata|dup_metadata|1|0|}4799|4797|}
{2010212001|XXGvertex_oport_oport|8006|0|12805|0|{2|reject|}4797|4800|}
{2010006001|XXGobject_psameas_object|8007|0|12807|0|{metadata|reject_metadata|1|0|}4800|4797|}
{2010212001|XXGvertex_oport_oport|8008|0|12808|0|{3|error|}4797|4801|}
{2010006001|XXGobject_psameas_object|8009|0|12810|0|{metadata|error_metadata|1|0|}4801|4797|}
{2010212001|XXGvertex_oport_oport|8010|0|12811|0|{4|log|}4797|4802|}
{2010006001|XXGobject_psameas_object|8011|0|12813|0|{metadata|log_metadata|1|0|}4802|4797|}
{2010211001|XXGvertex_iport_iport|8012|0|12814|0|{0|in|}4797|4803|}
{2010006001|XXGobject_psameas_object|8013|0|12816|0|{metadata|in_metadata|1|0|}4803|4797|}
{2010601001|XXGgraph_vertex_vertex|8014|0|12817|0|{PBKS_dxf_hk_part1_|}4786|4804|}
{2010604001|XXGgraph_flow_flow|8015|0|12819|0|{Flow_1|}4804|4805|}
{2010601001|XXGgraph_vertex_vertex|8016|0|12821|0|{Partition_by_Key|}4804|4806|}
{2010212001|XXGvertex_oport_oport|8017|0|12823|0|{0|out|}4806|4807|}
{2010213001|XXGoport_dst_flow|8018|0|12825|0|{0|}4807|4805|}
{2010211001|XXGvertex_iport_iport|8019|0|12826|0|{0|in|}4806|4808|}
{2010601001|XXGgraph_vertex_vertex|8020|0|12828|0|{Sort|}4804|4809|}
{2010212001|XXGvertex_oport_oport|8021|0|12830|0|{0|out|}4809|4810|}
{2010211001|XXGvertex_iport_iport|8022|0|12832|0|{0|in|}4809|4811|}
{2010214001|XXGiport_src_flow|8023|0|12834|0|{0|}4811|4805|}
{2010212001|XXGvertex_oport_oport|8024|0|12835|0|{0|out0|}4804|4812|}
{2010216002|XXGoport_binding_oport|8025|0|12837|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}4812|4810|}
{2010213001|XXGoport_dst_flow|8026|0|12838|0|{0|}4812|4788|}
{2010211001|XXGvertex_iport_iport|8027|0|12839|0|{0|in0|}4804|4813|}
{2010215002|XXGiport_binding_iport|8028|0|12841|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}4813|4808|}
{2010007001|XXGobject_proto_object|8029|0|12842|0|{}4804|4814|}
{2010604001|XXGgraph_flow_flow|8030|0|12844|0|{Flow_1|}4814|4815|}
{2010601001|XXGgraph_vertex_vertex|8031|0|12846|0|{Partition_by_Key|}4814|4816|}
{2010212001|XXGvertex_oport_oport|8032|0|12848|0|{0|out|}4816|4817|}
{2010213001|XXGoport_dst_flow|8033|0|12850|0|{0|}4817|4815|}
{2010211001|XXGvertex_iport_iport|8034|0|12851|0|{0|in|}4816|4818|}
{2010007001|XXGobject_proto_object|8035|0|12853|0|{}4816|4819|}
{2010212001|XXGvertex_oport_oport|8036|0|12855|0|{0|out|}4819|4820|}
{2010006001|XXGobject_psameas_object|8037|0|12857|0|{metadata|out_metadata|1|0|}4820|4819|}
{2010211001|XXGvertex_iport_iport|8038|0|12858|0|{0|in|}4819|4821|}
{2010006001|XXGobject_psameas_object|8039|0|12860|0|{metadata|in_metadata|1|0|}4821|4819|}
{2010006001|XXGobject_psameas_object|8040|0|12861|0|{Layout|InputLayout|1|0|}4816|4814|}
{2010006001|XXGobject_psameas_object|8041|0|12862|0|{key|Key|1|0|}4816|4814|}
{2010601001|XXGgraph_vertex_vertex|8042|0|12863|0|{Sort|}4814|4822|}
{2010212001|XXGvertex_oport_oport|8043|0|12865|0|{0|out|}4822|4823|}
{2010211001|XXGvertex_iport_iport|8044|0|12867|0|{0|in|}4822|4824|}
{2010214001|XXGiport_src_flow|8045|0|12869|0|{0|}4824|4815|}
{2010007001|XXGobject_proto_object|8046|0|12870|0|{}4822|4825|}
{2010212001|XXGvertex_oport_oport|8047|0|12872|0|{0|out|}4825|4826|}
{2010006001|XXGobject_psameas_object|8048|0|12874|0|{metadata|out_metadata|1|0|}4826|4825|}
{2010211001|XXGvertex_iport_iport|8049|0|12875|0|{0|in|}4825|4827|}
{2010006001|XXGobject_psameas_object|8050|0|12877|0|{metadata|in_metadata|1|0|}4827|4825|}
{2010006001|XXGobject_psameas_object|8051|0|12878|0|{Layout|OutputLayout|1|0|}4822|4814|}
{2010006001|XXGobject_psameas_object|8052|0|12879|0|{key|Key|1|0|}4822|4814|}
{2010006001|XXGobject_psameas_object|8053|0|12880|0|{max_core|Max_core|1|0|}4822|4814|}
{2010212001|XXGvertex_oport_oport|8054|0|12881|0|{0|out0|}4814|4828|}
{2010216002|XXGoport_binding_oport|8055|0|12883|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}4828|4823|}
{2010211001|XXGvertex_iport_iport|8056|0|12884|0|{0|in0|}4814|4829|}
{2010215002|XXGiport_binding_iport|8057|0|12886|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}4829|4818|}
{2010601001|XXGgraph_vertex_vertex|8058|0|12887|0|{Sort_within_Groups_1|}4786|4830|}
{2010212001|XXGvertex_oport_oport|8059|0|12889|0|{0|out|}4830|4831|}
{2010213001|XXGoport_dst_flow|8060|0|12891|0|{0|}4831|4787|}
{2010211001|XXGvertex_iport_iport|8061|0|12892|0|{0|in|}4830|4832|}
{2010214001|XXGiport_src_flow|8062|0|12894|0|{0|}4832|4788|}
{2010007001|XXGobject_proto_object|8063|0|12895|0|{}4830|4833|}
{2010212001|XXGvertex_oport_oport|8064|0|12897|0|{0|out|}4833|4834|}
{2010006001|XXGobject_psameas_object|8065|0|12899|0|{metadata|out_metadata|1|0|}4834|4833|}
{2010211001|XXGvertex_iport_iport|8066|0|12900|0|{0|in|}4833|4835|}
{2010006001|XXGobject_psameas_object|8067|0|12902|0|{metadata|in_metadata|1|0|}4835|4833|}
{2010212001|XXGvertex_oport_oport|8068|0|12903|0|{0|out0|}4786|4836|}
{2010216002|XXGoport_binding_oport|8069|0|12905|0|{.5|.5|{0|}7792|}4836|4791|}
{2010213001|XXGoport_dst_flow|8070|0|12906|0|{0|}4836|4730|}
{2010212001|XXGvertex_oport_oport|8071|0|12907|0|{1|out1|}4786|4837|}
{2010216002|XXGoport_binding_oport|8072|0|12909|0|{.5|.5|{0|}7793|}4837|4792|}
{2010213001|XXGoport_dst_flow|8073|0|12910|0|{0|}4837|4731|}
{2010211001|XXGvertex_iport_iport|8074|0|12911|0|{0|in0|}4786|4838|}
{2010215002|XXGiport_binding_iport|8075|0|12913|0|{.5|.5|{0|}7791|}4838|4813|}
{2010214001|XXGiport_src_flow|8076|0|12914|0|{0|}4838|4725|}
{2010601001|XXGgraph_vertex_vertex|8077|0|12915|0|{Sort_within_Groups|}4716|4839|}
{2010212001|XXGvertex_oport_oport|8078|0|12917|0|{0|out|}4839|4840|}
{2010213001|XXGoport_dst_flow|8079|0|12919|0|{0|}4840|4727|}
{2010211001|XXGvertex_iport_iport|8080|0|12920|0|{0|in|}4839|4841|}
{2010214001|XXGiport_src_flow|8081|0|12922|0|{0|}4841|4726|}
{2010007001|XXGobject_proto_object|8082|0|12923|0|{}4839|4842|}
{2010212001|XXGvertex_oport_oport|8083|0|12925|0|{0|out|}4842|4843|}
{2010006001|XXGobject_psameas_object|8084|0|12927|0|{metadata|out_metadata|1|0|}4843|4842|}
{2010211001|XXGvertex_iport_iport|8085|0|12928|0|{0|in|}4842|4844|}
{2010006001|XXGobject_psameas_object|8086|0|12930|0|{metadata|in_metadata|1|0|}4844|4842|}
{2010601001|XXGgraph_vertex_vertex|8087|0|12931|0|{Trash|}4716|4845|}
{2010211001|XXGvertex_iport_iport|8088|0|12933|0|{0|in|}4845|4846|}
{2010214001|XXGiport_src_flow|8089|0|12935|0|{0|}4846|4731|}
{2010007001|XXGobject_proto_object|8090|0|12936|0|{}4845|4847|}
{2010211001|XXGvertex_iport_iport|8091|0|12938|0|{0|in|}4847|4848|}
{2010006001|XXGobject_psameas_object|8092|0|12940|0|{metadata|in_metadata|1|0|}4848|4847|}
{2010601001|XXGgraph_vertex_vertex|8093|0|12941|0|{Trash_1|}4716|4849|}
{2010211001|XXGvertex_iport_iport|8094|0|12943|0|{0|in|}4849|4850|}
{2010214001|XXGiport_src_flow|8095|0|12945|0|{0|}4850|4732|}
{2010007001|XXGobject_proto_object|8096|0|12946|0|{}4849|4851|}
{2010211001|XXGvertex_iport_iport|8097|0|12948|0|{0|in|}4851|4852|}
{2010006001|XXGobject_psameas_object|8098|0|12950|0|{metadata|in_metadata|1|0|}4852|4851|}
{2010601001|XXGgraph_vertex_vertex|8099|0|12951|0|{Trash_2|}4716|4853|}
{2010211001|XXGvertex_iport_iport|8100|0|12953|0|{0|in|}4853|4854|}
{2010214001|XXGiport_src_flow|8101|0|12955|0|{0|}4854|4733|}
{2010007001|XXGobject_proto_object|8102|0|12956|0|{}4853|4855|}
{2010211001|XXGvertex_iport_iport|8103|0|12958|0|{0|in|}4855|4856|}
{2010006001|XXGobject_psameas_object|8104|0|12960|0|{metadata|in_metadata|1|0|}4856|4855|}
{2010601001|XXGgraph_vertex_vertex|8105|0|12961|0|{Two_Step_Lookup|}4716|4857|}
{2010605001|XXGgraph_legend_legend|8106|0|12963|0|{0|}4857|4858|}
{2010241001|XXGlegend_face_face|8107|0|12965|0|{}4858|4859|}
{2010604001|XXGgraph_flow_flow|8108|0|12967|0|{Flow_1|}4857|4860|}
{2010604001|XXGgraph_flow_flow|8109|0|12969|0|{Flow_2|}4857|4861|}
{2010604001|XXGgraph_flow_flow|8110|0|12971|0|{Flow_3|}4857|4862|}
{2010604001|XXGgraph_flow_flow|8111|0|12973|0|{Flow_4|}4857|4863|}
{2010604001|XXGgraph_flow_flow|8112|0|12975|0|{Flow_5|}4857|4864|}
{2010604001|XXGgraph_flow_flow|8113|0|12977|0|{Flow_6|}4857|4865|}
{2010601001|XXGgraph_vertex_vertex|8114|0|12979|0|{FBE_Pass_Only_Matching_Rec|}4857|4866|}
{2010212001|XXGvertex_oport_oport|8115|0|12981|0|{0|out|}4866|4867|}
{2010213001|XXGoport_dst_flow|8116|0|12983|0|{0|}4867|4864|}
{2010212001|XXGvertex_oport_oport|8117|0|12984|0|{1|deselect|}4866|4868|}
{2010213001|XXGoport_dst_flow|8118|0|12986|0|{0|}4868|4865|}
{2010212001|XXGvertex_oport_oport|8119|0|12987|0|{2|reject|}4866|4869|}
{2010212001|XXGvertex_oport_oport|8120|0|12989|0|{3|error|}4866|4870|}
{2010212001|XXGvertex_oport_oport|8121|0|12991|0|{4|log|}4866|4871|}
{2010211001|XXGvertex_iport_iport|8122|0|12993|0|{0|in|}4866|4872|}
{2010214001|XXGiport_src_flow|8123|0|12995|0|{0|}4872|4863|}
{2010007001|XXGobject_proto_object|8124|0|12996|0|{}4866|4873|}
{2010212001|XXGvertex_oport_oport|8125|0|12998|0|{0|out|}4873|4874|}
{2010006001|XXGobject_psameas_object|8126|0|13000|0|{metadata|out_metadata|1|0|}4874|4873|}
{2010212001|XXGvertex_oport_oport|8127|0|13001|0|{1|deselect|}4873|4875|}
{2010006001|XXGobject_psameas_object|8128|0|13003|0|{metadata|deselect_metadata|1|0|}4875|4873|}
{2010212001|XXGvertex_oport_oport|8129|0|13004|0|{2|reject|}4873|4876|}
{2010006001|XXGobject_psameas_object|8130|0|13006|0|{metadata|reject_metadata|1|0|}4876|4873|}
{2010212001|XXGvertex_oport_oport|8131|0|13007|0|{3|error|}4873|4877|}
{2010006001|XXGobject_psameas_object|8132|0|13009|0|{metadata|error_metadata|1|0|}4877|4873|}
{2010212001|XXGvertex_oport_oport|8133|0|13010|0|{4|log|}4873|4878|}
{2010006001|XXGobject_psameas_object|8134|0|13012|0|{metadata|log_metadata|1|0|}4878|4873|}
{2010211001|XXGvertex_iport_iport|8135|0|13013|0|{0|in|}4873|4879|}
{2010006001|XXGobject_psameas_object|8136|0|13015|0|{metadata|in_metadata|1|0|}4879|4873|}
{2010601001|XXGgraph_vertex_vertex|8137|0|13016|0|{FBE_filter_matching_lkp_record|}4857|4880|}
{2010212001|XXGvertex_oport_oport|8138|0|13018|0|{0|out|}4880|4881|}
{2010213001|XXGoport_dst_flow|8139|0|13020|0|{0|}4881|4862|}
{2010212001|XXGvertex_oport_oport|8140|0|13021|0|{1|deselect|}4880|4882|}
{2010213001|XXGoport_dst_flow|8141|0|13023|0|{0|}4882|4860|}
{2010212001|XXGvertex_oport_oport|8142|0|13024|0|{2|reject|}4880|4883|}
{2010212001|XXGvertex_oport_oport|8143|0|13026|0|{3|error|}4880|4884|}
{2010212001|XXGvertex_oport_oport|8144|0|13028|0|{4|log|}4880|4885|}
{2010211001|XXGvertex_iport_iport|8145|0|13030|0|{0|in|}4880|4886|}
{2010007001|XXGobject_proto_object|8146|0|13032|0|{}4880|4887|}
{2010212001|XXGvertex_oport_oport|8147|0|13034|0|{0|out|}4887|4888|}
{2010006001|XXGobject_psameas_object|8148|0|13036|0|{metadata|out_metadata|1|0|}4888|4887|}
{2010212001|XXGvertex_oport_oport|8149|0|13037|0|{1|deselect|}4887|4889|}
{2010006001|XXGobject_psameas_object|8150|0|13039|0|{metadata|deselect_metadata|1|0|}4889|4887|}
{2010212001|XXGvertex_oport_oport|8151|0|13040|0|{2|reject|}4887|4890|}
{2010006001|XXGobject_psameas_object|8152|0|13042|0|{metadata|reject_metadata|1|0|}4890|4887|}
{2010212001|XXGvertex_oport_oport|8153|0|13043|0|{3|error|}4887|4891|}
{2010006001|XXGobject_psameas_object|8154|0|13045|0|{metadata|error_metadata|1|0|}4891|4887|}
{2010212001|XXGvertex_oport_oport|8155|0|13046|0|{4|log|}4887|4892|}
{2010006001|XXGobject_psameas_object|8156|0|13048|0|{metadata|log_metadata|1|0|}4892|4887|}
{2010211001|XXGvertex_iport_iport|8157|0|13049|0|{0|in|}4887|4893|}
{2010006001|XXGobject_psameas_object|8158|0|13051|0|{metadata|in_metadata|1|0|}4893|4887|}
{2010601001|XXGgraph_vertex_vertex|8159|0|13052|0|{Merge|}4857|4894|}
{2010212001|XXGvertex_oport_oport|8160|0|13054|0|{0|out|}4894|4895|}
{2010211001|XXGvertex_iport_iport|8161|0|13056|0|{0|in|}4894|4896|}
{2010214001|XXGiport_src_flow|8162|0|13058|0|{0|}4896|4862|}
{2010214001|XXGiport_src_flow|8163|0|13059|0|{1|}4896|4864|}
{2010007001|XXGobject_proto_object|8164|0|13060|0|{}4894|4897|}
{2010212001|XXGvertex_oport_oport|8165|0|13062|0|{0|out|}4897|4898|}
{2010006001|XXGobject_psameas_object|8166|0|13064|0|{metadata|out_metadata|1|0|}4898|4897|}
{2010211001|XXGvertex_iport_iport|8167|0|13065|0|{0|in|}4897|4899|}
{2010006001|XXGobject_psameas_object|8168|0|13067|0|{metadata|in_metadata|1|0|}4899|4897|}
{2010601001|XXGgraph_vertex_vertex|8169|0|13068|0|{No_Match_Record_In_Second_Pass|}4857|4900|}
{2010211001|XXGvertex_iport_iport|8170|0|13070|0|{0|in|}4900|4901|}
{2010214001|XXGiport_src_flow|8171|0|13072|0|{0|}4901|4865|}
{2010007001|XXGobject_proto_object|8172|0|13073|0|{}4900|4902|}
{2010211001|XXGvertex_iport_iport|8173|0|13075|0|{0|in|}4902|4903|}
{2010006001|XXGobject_psameas_object|8174|0|13077|0|{metadata|in_metadata|1|0|}4903|4902|}
{2010601001|XXGgraph_vertex_vertex|8175|0|13078|0|{RFMT_Lookup_with_IDS_Archive_|}4857|4904|}
{2010212001|XXGvertex_oport_oport|8176|0|13080|0|{0|out0|}4904|4905|}
{2010213001|XXGoport_dst_flow|8177|0|13082|0|{0|}4905|4863|}
{2010212001|XXGvertex_oport_oport|8178|0|13083|0|{1|reject0|}4904|4906|}
{2010212001|XXGvertex_oport_oport|8179|0|13085|0|{2|error0|}4904|4907|}
{2010212001|XXGvertex_oport_oport|8180|0|13087|0|{3|log|}4904|4908|}
{2010211001|XXGvertex_iport_iport|8181|0|13089|0|{0|in|}4904|4909|}
{2010214001|XXGiport_src_flow|8182|0|13091|0|{0|}4909|4861|}
{2010007001|XXGobject_proto_object|8183|0|13092|0|{}4904|4910|}
{2010212001|XXGvertex_oport_oport|8184|0|13094|0|{0|out0|}4910|4911|}
{2010006001|XXGobject_psameas_object|8185|0|13096|0|{metadata|out0_metadata|1|0|}4911|4910|}
{2010006001|XXGobject_psameas_object|8186|0|13097|0|{transform0|transform0|1|0|}4911|4910|}
{2010212001|XXGvertex_oport_oport|8187|0|13098|0|{1|reject0|}4910|4912|}
{2010006001|XXGobject_psameas_object|8188|0|13100|0|{metadata|reject0_metadata|1|0|}4912|4910|}
{2010212001|XXGvertex_oport_oport|8189|0|13101|0|{2|error0|}4910|4913|}
{2010006001|XXGobject_psameas_object|8190|0|13103|0|{metadata|error0_metadata|1|0|}4913|4910|}
{2010212001|XXGvertex_oport_oport|8191|0|13104|0|{3|log|}4910|4914|}
{2010006001|XXGobject_psameas_object|8192|0|13106|0|{metadata|log_metadata|1|0|}4914|4910|}
{2010211001|XXGvertex_iport_iport|8193|0|13107|0|{0|in|}4910|4915|}
{2010006001|XXGobject_psameas_object|8194|0|13109|0|{metadata|in_metadata|1|0|}4915|4910|}
{2010601001|XXGgraph_vertex_vertex|8195|0|13110|0|{RFMT_Pass_only_Hash_Keys|}4857|4916|}
{2010212001|XXGvertex_oport_oport|8196|0|13112|0|{0|out0|}4916|4917|}
{2010213001|XXGoport_dst_flow|8197|0|13114|0|{0|}4917|4861|}
{2010212001|XXGvertex_oport_oport|8198|0|13115|0|{1|reject0|}4916|4918|}
{2010212001|XXGvertex_oport_oport|8199|0|13117|0|{2|error0|}4916|4919|}
{2010212001|XXGvertex_oport_oport|8200|0|13119|0|{3|log|}4916|4920|}
{2010211001|XXGvertex_iport_iport|8201|0|13121|0|{0|in|}4916|4921|}
{2010214001|XXGiport_src_flow|8202|0|13123|0|{0|}4921|4860|}
{2010007001|XXGobject_proto_object|8203|0|13124|0|{}4916|4922|}
{2010212001|XXGvertex_oport_oport|8204|0|13126|0|{0|out0|}4922|4923|}
{2010006001|XXGobject_psameas_object|8205|0|13128|0|{metadata|out0_metadata|1|0|}4923|4922|}
{2010006001|XXGobject_psameas_object|8206|0|13129|0|{transform0|transform0|1|0|}4923|4922|}
{2010212001|XXGvertex_oport_oport|8207|0|13130|0|{1|reject0|}4922|4924|}
{2010006001|XXGobject_psameas_object|8208|0|13132|0|{metadata|reject0_metadata|1|0|}4924|4922|}
{2010212001|XXGvertex_oport_oport|8209|0|13133|0|{2|error0|}4922|4925|}
{2010006001|XXGobject_psameas_object|8210|0|13135|0|{metadata|error0_metadata|1|0|}4925|4922|}
{2010212001|XXGvertex_oport_oport|8211|0|13136|0|{3|log|}4922|4926|}
{2010006001|XXGobject_psameas_object|8212|0|13138|0|{metadata|log_metadata|1|0|}4926|4922|}
{2010211001|XXGvertex_iport_iport|8213|0|13139|0|{0|in|}4922|4927|}
{2010006001|XXGobject_psameas_object|8214|0|13141|0|{metadata|in_metadata|1|0|}4927|4922|}
{2010212001|XXGvertex_oport_oport|8215|0|13142|0|{0|out0|}4857|4928|}
{2010216002|XXGoport_binding_oport|8216|0|13144|0|{.5|.5|{0|}15500|}4928|4895|}
{2010213001|XXGoport_dst_flow|8217|0|13145|0|{0|}4928|4729|}
{2010211001|XXGvertex_iport_iport|8218|0|13146|0|{0|in0|}4857|4929|}
{2010215002|XXGiport_binding_iport|8219|0|13148|0|{.5|.5|{0|}15499|}4929|4886|}
{2010214001|XXGiport_src_flow|8220|0|13149|0|{0|}4929|4728|}
{2010212001|XXGvertex_oport_oport|8221|0|13150|0|{0|out0|}4716|4930|}
{2010216002|XXGoport_binding_oport|8222|0|13152|0|{.5|.5|{0|}15515|}4930|4735|}
{2010213001|XXGoport_dst_flow|8223|0|13153|0|{0|}4930|4536|}
{2010211001|XXGvertex_iport_iport|8224|0|13154|0|{0|in1|}4716|4931|}
{2010215002|XXGiport_binding_iport|8225|0|13156|0|{.5|.5|{0|}15514|}4931|4767|}
{2010214001|XXGiport_src_flow|8226|0|13157|0|{0|}4931|4534|}
{2010601001|XXGgraph_vertex_vertex|8227|0|13158|0|{Merge|}4528|4932|}
{2010212001|XXGvertex_oport_oport|8228|0|13160|0|{0|out|}4932|4933|}
{2010211001|XXGvertex_iport_iport|8229|0|13162|0|{0|in|}4932|4934|}
{2010214001|XXGiport_src_flow|8230|0|13164|0|{0|}4934|4537|}
{2010007001|XXGobject_proto_object|8231|0|13165|0|{}4932|4935|}
{2010212001|XXGvertex_oport_oport|8232|0|13167|0|{0|out|}4935|4936|}
{2010006001|XXGobject_psameas_object|8233|0|13169|0|{metadata|out_metadata|1|0|}4936|4935|}
{2010211001|XXGvertex_iport_iport|8234|0|13170|0|{0|in|}4935|4937|}
{2010006001|XXGobject_psameas_object|8235|0|13172|0|{metadata|in_metadata|1|0|}4937|4935|}
{2010601001|XXGgraph_vertex_vertex|8236|0|13173|0|{Replicate|}4528|4938|}
{2010212001|XXGvertex_oport_oport|8237|0|13175|0|{0|out|}4938|4939|}
{2010213001|XXGoport_dst_flow|8238|0|13177|0|{0|}4939|4533|}
{2010213001|XXGoport_dst_flow|8239|0|13178|0|{1|}4939|4534|}
{2010211001|XXGvertex_iport_iport|8240|0|13179|0|{0|in|}4938|4940|}
{2010007001|XXGobject_proto_object|8241|0|13181|0|{}4938|4941|}
{2010212001|XXGvertex_oport_oport|8242|0|13183|0|{0|out|}4941|4942|}
{2010006001|XXGobject_psameas_object|8243|0|13185|0|{metadata|out_metadata|1|0|}4942|4941|}
{2010211001|XXGvertex_iport_iport|8244|0|13186|0|{0|in|}4941|4943|}
{2010006001|XXGobject_psameas_object|8245|0|13188|0|{metadata|in_metadata|1|0|}4943|4941|}
{2010601001|XXGgraph_vertex_vertex|8246|0|13189|0|{Replicate_1|}4528|4944|}
{2010212001|XXGvertex_oport_oport|8247|0|13191|0|{0|out|}4944|4945|}
{2010213001|XXGoport_dst_flow|8248|0|13193|0|{0|}4945|4537|}
{2010211001|XXGvertex_iport_iport|8249|0|13194|0|{0|in|}4944|4946|}
{2010214001|XXGiport_src_flow|8250|0|13196|0|{0|}4946|4535|}
{2010214001|XXGiport_src_flow|8251|0|13197|0|{1|}4946|4536|}
{2010007001|XXGobject_proto_object|8252|0|13198|0|{}4944|4947|}
{2010212001|XXGvertex_oport_oport|8253|0|13200|0|{0|out|}4947|4948|}
{2010006001|XXGobject_psameas_object|8254|0|13202|0|{metadata|out_metadata|1|0|}4948|4947|}
{2010211001|XXGvertex_iport_iport|8255|0|13203|0|{0|in|}4947|4949|}
{2010006001|XXGobject_psameas_object|8256|0|13205|0|{metadata|in_metadata|1|0|}4949|4947|}
{2010212001|XXGvertex_oport_oport|8257|0|13206|0|{0|out0|}4528|4950|}
{2010216002|XXGoport_binding_oport|8258|0|13208|0|{.5|.5|{0|}7797|}4950|4933|}
{2010211001|XXGvertex_iport_iport|8259|0|13209|0|{0|in0|}4528|4951|}
{2010215002|XXGiport_binding_iport|8260|0|13211|0|{.5|.5|{0|}7796|}4951|4940|}
{2010601001|XXGgraph_vertex_vertex|8261|0|13212|0|{ids_lookup_8|}143|4952|}
{2010605001|XXGgraph_legend_legend|8262|0|13214|0|{0|}4952|4953|}
{2010241001|XXGlegend_face_face|8263|0|13216|0|{}4953|4954|}
{2010605001|XXGgraph_legend_legend|8264|0|13218|0|{1|}4952|4955|}
{2010241001|XXGlegend_face_face|8265|0|13220|0|{}4955|4956|}
{2010604001|XXGgraph_flow_flow|8266|0|13222|0|{Flow_1|}4952|4957|}
{2010604001|XXGgraph_flow_flow|8267|0|13224|0|{Flow_2|}4952|4958|}
{2010604001|XXGgraph_flow_flow|8268|0|13226|0|{Flow_3|}4952|4959|}
{2010604001|XXGgraph_flow_flow|8269|0|13228|0|{Flow_4|}4952|4960|}
{2010604001|XXGgraph_flow_flow|8270|0|13230|0|{Flow_5|}4952|4961|}
{2010601001|XXGgraph_vertex_vertex|8271|0|13232|0|{Get_All_LookUp_Record|}4952|4962|}
{2010605001|XXGgraph_legend_legend|8272|0|13234|0|{0|}4962|4963|}
{2010241001|XXGlegend_face_face|8273|0|13236|0|{}4963|4964|}
{2010605001|XXGgraph_legend_legend|8274|0|13238|0|{1|}4962|4965|}
{2010241001|XXGlegend_face_face|8275|0|13240|0|{}4965|4966|}
{2010605001|XXGgraph_legend_legend|8276|0|13242|0|{2|}4962|4967|}
{2010241001|XXGlegend_face_face|8277|0|13244|0|{}4967|4968|}
{2010605001|XXGgraph_legend_legend|8278|0|13246|0|{3|}4962|4969|}
{2010241001|XXGlegend_face_face|8279|0|13248|0|{}4969|4970|}
{2010605001|XXGgraph_legend_legend|8280|0|13250|0|{4|}4962|4971|}
{2010241001|XXGlegend_face_face|8281|0|13252|0|{}4971|4972|}
{2010604001|XXGgraph_flow_flow|8282|0|13254|0|{Flow_1|}4962|4973|}
{2010604001|XXGgraph_flow_flow|8283|0|13256|0|{Flow_10|}4962|4974|}
{2010604001|XXGgraph_flow_flow|8284|0|13258|0|{Flow_11|}4962|4975|}
{2010604001|XXGgraph_flow_flow|8285|0|13260|0|{Flow_12|}4962|4976|}
{2010604001|XXGgraph_flow_flow|8286|0|13262|0|{Flow_18|}4962|4977|}
{2010604001|XXGgraph_flow_flow|8287|0|13264|0|{Flow_2|}4962|4978|}
{2010604001|XXGgraph_flow_flow|8288|0|13266|0|{Flow_3|}4962|4979|}
{2010604001|XXGgraph_flow_flow|8289|0|13268|0|{Flow_4|}4962|4980|}
{2010604001|XXGgraph_flow_flow|8290|0|13270|0|{Flow_5|}4962|4981|}
{2010604001|XXGgraph_flow_flow|8291|0|13272|0|{Flow_6|}4962|4982|}
{2010604001|XXGgraph_flow_flow|8292|0|13274|0|{Flow_7|}4962|4983|}
{2010604001|XXGgraph_flow_flow|8293|0|13276|0|{Flow_8|}4962|4984|}
{2010604001|XXGgraph_flow_flow|8294|0|13278|0|{Flow_9|}4962|4985|}
{2010601001|XXGgraph_vertex_vertex|8295|0|13280|0|{Dedup_Sorted|}4962|4986|}
{2010212001|XXGvertex_oport_oport|8296|0|13282|0|{0|out|}4986|4987|}
{2010213001|XXGoport_dst_flow|8297|0|13284|0|{0|}4987|4978|}
{2010212001|XXGvertex_oport_oport|8298|0|13285|0|{1|dup|}4986|4988|}
{2010213001|XXGoport_dst_flow|8299|0|13287|0|{0|}4988|4982|}
{2010212001|XXGvertex_oport_oport|8300|0|13288|0|{2|reject|}4986|4989|}
{2010212001|XXGvertex_oport_oport|8301|0|13290|0|{3|error|}4986|4990|}
{2010212001|XXGvertex_oport_oport|8302|0|13292|0|{4|log|}4986|4991|}
{2010211001|XXGvertex_iport_iport|8303|0|13294|0|{0|in|}4986|4992|}
{2010214001|XXGiport_src_flow|8304|0|13296|0|{0|}4992|4973|}
{2010006001|XXGobject_psameas_object|8305|0|13297|0|{Layout|Layout|0|0|}4986|4993|}
{2010212001|XXGvertex_oport_oport|8306|0|13299|0|{0|out|}4993|4994|}
{2010213001|XXGoport_dst_flow|8307|0|13301|0|{0|}4994|4976|}
{2010212001|XXGvertex_oport_oport|8308|0|13302|0|{1|reject|}4993|4995|}
{2010212001|XXGvertex_oport_oport|8309|0|13304|0|{2|error|}4993|4996|}
{2010212001|XXGvertex_oport_oport|8310|0|13306|0|{3|log|}4993|4997|}
{2010211001|XXGvertex_iport_iport|8311|0|13308|0|{0|in|}4993|4998|}
{2010214001|XXGiport_src_flow|8312|0|13310|0|{0|}4998|4974|}
{2010006001|XXGobject_psameas_object|8313|0|13311|0|{in_metadata|out0_metadata|0|0|}4993|4999|}
{2010212001|XXGvertex_oport_oport|8314|0|13313|0|{0|out0|}4999|5000|}
{2010213001|XXGoport_dst_flow|8315|0|13315|0|{0|}5000|4977|}
{2010212001|XXGvertex_oport_oport|8316|0|13316|0|{1|reject0|}4999|5001|}
{2010212001|XXGvertex_oport_oport|8317|0|13318|0|{2|error0|}4999|5002|}
{2010212001|XXGvertex_oport_oport|8318|0|13320|0|{3|log|}4999|5003|}
{2010211001|XXGvertex_iport_iport|8319|0|13322|0|{0|in|}4999|5004|}
{2010006001|XXGobject_psameas_object|8320|0|13324|0|{Layout|Layout|0|0|}4999|242|}
{2010006001|XXGobject_psameas_object|8321|0|13325|0|{in_metadata|out7_metadata|0|0|}4999|242|}
{2010006001|XXGobject_psameas_object|8322|0|13326|0|{reject0_metadata|out7_metadata|0|0|}4999|242|}
{2010006001|XXGobject_psameas_object|8323|0|13327|0|{reject_metadata|out0_metadata|0|0|}4993|4999|}
{2010006001|XXGobject_psameas_object|8324|0|13328|0|{dup_metadata|out_metadata|0|0|}4986|5005|}
{2010212001|XXGvertex_oport_oport|8325|0|13330|0|{0|out|}5005|5006|}
{2010213001|XXGoport_dst_flow|8326|0|13332|0|{0|}5006|4975|}
{2010212001|XXGvertex_oport_oport|8327|0|13333|0|{1|deselect|}5005|5007|}
{2010213001|XXGoport_dst_flow|8328|0|13335|0|{0|}5007|4983|}
{2010212001|XXGvertex_oport_oport|8329|0|13336|0|{2|reject|}5005|5008|}
{2010212001|XXGvertex_oport_oport|8330|0|13338|0|{3|error|}5005|5009|}
{2010212001|XXGvertex_oport_oport|8331|0|13340|0|{4|log|}5005|5010|}
{2010211001|XXGvertex_iport_iport|8332|0|13342|0|{0|in|}5005|5011|}
{2010214001|XXGiport_src_flow|8333|0|13344|0|{0|}5011|4984|}
{2010006001|XXGobject_psameas_object|8334|0|13345|0|{Layout|Layout|0|0|}5005|4993|}
{2010006001|XXGobject_psameas_object|8335|0|13346|0|{deselect_metadata|out_metadata|0|0|}5005|5005|}
{2010006001|XXGobject_psameas_object|8336|0|13347|0|{in_metadata|out_metadata|0|0|}5005|5012|}
{2010212001|XXGvertex_oport_oport|8337|0|13349|0|{0|out|}5012|5013|}
{2010213001|XXGoport_dst_flow|8338|0|13351|0|{0|}5013|4979|}
{2010212001|XXGvertex_oport_oport|8339|0|13352|0|{1|reject|}5012|5014|}
{2010212001|XXGvertex_oport_oport|8340|0|13354|0|{2|error|}5012|5015|}
{2010212001|XXGvertex_oport_oport|8341|0|13356|0|{3|log|}5012|5016|}
{2010211001|XXGvertex_iport_iport|8342|0|13358|0|{0|in|}5012|5017|}
{2010214001|XXGiport_src_flow|8343|0|13360|0|{0|}5017|4981|}
{2010006001|XXGobject_psameas_object|8344|0|13361|0|{in_metadata|out0_metadata|0|0|}5012|4999|}
{2010006001|XXGobject_psameas_object|8345|0|13362|0|{reject_metadata|out0_metadata|0|0|}5012|4999|}
{2010006001|XXGobject_psameas_object|8346|0|13363|0|{reject_metadata|out_metadata|0|0|}5005|5012|}
{2010006001|XXGobject_psameas_object|8347|0|13364|0|{in_metadata|out_metadata|0|0|}4986|5005|}
{2010006001|XXGobject_psameas_object|8348|0|13365|0|{out_metadata|out_metadata|0|0|}4986|5005|}
{2010006001|XXGobject_psameas_object|8349|0|13366|0|{reject_metadata|out_metadata|0|0|}4986|5005|}
{2010601001|XXGgraph_vertex_vertex|8350|0|13367|0|{FBE_Filter_match_records|}4962|5005|}
{2010601001|XXGgraph_vertex_vertex|8351|0|13368|0|{Get_Hash_on_SRC_NK|}4962|4999|}
{2010601001|XXGgraph_vertex_vertex|8352|0|13369|0|{Merge|}4962|5018|}
{2010212001|XXGvertex_oport_oport|8353|0|13371|0|{0|out|}5018|5019|}
{2010213001|XXGoport_dst_flow|8354|0|13373|0|{0|}5019|4984|}
{2010211001|XXGvertex_iport_iport|8355|0|13374|0|{0|in|}5018|5020|}
{2010214001|XXGiport_src_flow|8356|0|13376|0|{0|}5020|4979|}
{2010214001|XXGiport_src_flow|8357|0|13377|0|{1|}5020|4976|}
{2010006001|XXGobject_psameas_object|8358|0|13378|0|{Layout|Layout|0|0|}5018|4993|}
{2010006001|XXGobject_psameas_object|8359|0|13379|0|{in_metadata|out_metadata|0|0|}5018|5012|}
{2010006001|XXGobject_psameas_object|8360|0|13380|0|{out_metadata|out_metadata|0|0|}5018|5012|}
{2010601001|XXGgraph_vertex_vertex|8361|0|13381|0|{Normalize_Get_all_records_from_Archive_Lkp|}4962|4993|}
{2010601001|XXGgraph_vertex_vertex|8362|0|13382|0|{Normalize_Get_all_records_from_lkp|}4962|5012|}
{2010601001|XXGgraph_vertex_vertex|8363|0|13383|0|{Replicate|}4962|5021|}
{2010212001|XXGvertex_oport_oport|8364|0|13385|0|{0|out|}5021|5022|}
{2010211001|XXGvertex_iport_iport|8365|0|13387|0|{0|in|}5021|5023|}
{2010214001|XXGiport_src_flow|8366|0|13389|0|{0|}5023|4978|}
{2010006001|XXGobject_psameas_object|8367|0|13390|0|{Layout|Layout|0|0|}5021|4993|}
{2010006001|XXGobject_psameas_object|8368|0|13391|0|{in_metadata|out_metadata|0|0|}5021|5005|}
{2010006001|XXGobject_psameas_object|8369|0|13392|0|{out_metadata|out_metadata|0|0|}5021|5005|}
{2010601001|XXGgraph_vertex_vertex|8370|0|13393|0|{Replicate_1|}4962|5024|}
{2010212001|XXGvertex_oport_oport|8371|0|13395|0|{0|out|}5024|5025|}
{2010213001|XXGoport_dst_flow|8372|0|13397|0|{0|}5025|4981|}
{2010213001|XXGoport_dst_flow|8373|0|13398|0|{1|}5025|4974|}
{2010211001|XXGvertex_iport_iport|8374|0|13399|0|{0|in|}5024|5026|}
{2010214001|XXGiport_src_flow|8375|0|13401|0|{0|}5026|4980|}
{2010006001|XXGobject_psameas_object|8376|0|13402|0|{Layout|Layout|0|0|}5024|4993|}
{2010006001|XXGobject_psameas_object|8377|0|13403|0|{in_metadata|out0_metadata|0|0|}5024|4999|}
{2010006001|XXGobject_psameas_object|8378|0|13404|0|{out_metadata|out0_metadata|0|0|}5024|4999|}
{2010601001|XXGgraph_vertex_vertex|8379|0|13405|0|{Sort_Remove_Dup_On_Hash|}4962|5027|}
{2010604001|XXGgraph_flow_flow|8380|0|13407|0|{Flow_3|}5027|5028|}
{2010604001|XXGgraph_flow_flow|8381|0|13409|0|{Flow_5|}5027|5029|}
{2010601001|XXGgraph_vertex_vertex|8382|0|13411|0|{Dedup_Sorted_1|}5027|5030|}
{2010212001|XXGvertex_oport_oport|8383|0|13413|0|{0|out|}5030|5031|}
{2010212001|XXGvertex_oport_oport|8384|0|13415|0|{1|dup|}5030|5032|}
{2010212001|XXGvertex_oport_oport|8385|0|13417|0|{2|reject|}5030|5033|}
{2010212001|XXGvertex_oport_oport|8386|0|13419|0|{3|error|}5030|5034|}
{2010212001|XXGvertex_oport_oport|8387|0|13421|0|{4|log|}5030|5035|}
{2010211001|XXGvertex_iport_iport|8388|0|13423|0|{0|in|}5030|5036|}
{2010214001|XXGiport_src_flow|8389|0|13425|0|{0|}5036|5029|}
{2010006001|XXGobject_psameas_object|8390|0|13426|0|{Layout|Layout|0|0|}5030|4993|}
{2010006001|XXGobject_psameas_object|8391|0|13427|0|{dup_metadata|out0_metadata|0|0|}5030|4999|}
{2010006001|XXGobject_psameas_object|8392|0|13428|0|{in_metadata|out0_metadata|0|0|}5030|4999|}
{2010006001|XXGobject_psameas_object|8393|0|13429|0|{out_metadata|out0_metadata|0|0|}5030|4999|}
{2010006001|XXGobject_psameas_object|8394|0|13430|0|{reject_metadata|out0_metadata|0|0|}5030|4999|}
{2010601001|XXGgraph_vertex_vertex|8395|0|13431|0|{PBKS_dxf_hk_part1_|}5027|5037|}
{2010604001|XXGgraph_flow_flow|8396|0|13433|0|{Flow_1|}5037|5038|}
{2010601001|XXGgraph_vertex_vertex|8397|0|13435|0|{Partition_by_Key|}5037|5039|}
{2010212001|XXGvertex_oport_oport|8398|0|13437|0|{0|out|}5039|5040|}
{2010213001|XXGoport_dst_flow|8399|0|13439|0|{0|}5040|5038|}
{2010211001|XXGvertex_iport_iport|8400|0|13440|0|{0|in|}5039|5041|}
{2010006001|XXGobject_psameas_object|8401|0|13442|0|{in_metadata|out0_metadata|0|0|}5039|4999|}
{2010006001|XXGobject_psameas_object|8402|0|13443|0|{out_metadata|out0_metadata|0|0|}5039|4999|}
{2010601001|XXGgraph_vertex_vertex|8403|0|13444|0|{Sort|}5037|5042|}
{2010212001|XXGvertex_oport_oport|8404|0|13446|0|{0|out|}5042|5043|}
{2010211001|XXGvertex_iport_iport|8405|0|13448|0|{0|in|}5042|5044|}
{2010214001|XXGiport_src_flow|8406|0|13450|0|{0|}5044|5038|}
{2010006001|XXGobject_psameas_object|8407|0|13451|0|{in_metadata|out0_metadata|0|0|}5042|4999|}
{2010006001|XXGobject_psameas_object|8408|0|13452|0|{out_metadata|out0_metadata|0|0|}5042|4999|}
{2010212001|XXGvertex_oport_oport|8409|0|13453|0|{0|out0|}5037|5045|}
{2010216002|XXGoport_binding_oport|8410|0|13455|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}5045|5043|}
{2010213001|XXGoport_dst_flow|8411|0|13456|0|{0|}5045|5028|}
{2010211001|XXGvertex_iport_iport|8412|0|13457|0|{0|in0|}5037|5046|}
{2010215002|XXGiport_binding_iport|8413|0|13459|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}5046|5041|}
{2010006001|XXGobject_psameas_object|8414|0|13460|0|{OutputLayout|Layout|0|0|}5037|4993|}
{2010601001|XXGgraph_vertex_vertex|8415|0|13461|0|{Sort_within_Groups|}5027|5047|}
{2010212001|XXGvertex_oport_oport|8416|0|13463|0|{0|out|}5047|5048|}
{2010213001|XXGoport_dst_flow|8417|0|13465|0|{0|}5048|5029|}
{2010211001|XXGvertex_iport_iport|8418|0|13466|0|{0|in|}5047|5049|}
{2010214001|XXGiport_src_flow|8419|0|13468|0|{0|}5049|5028|}
{2010006001|XXGobject_psameas_object|8420|0|13469|0|{Layout|Layout|0|0|}5047|4993|}
{2010006001|XXGobject_psameas_object|8421|0|13470|0|{in_metadata|out0_metadata|0|0|}5047|4999|}
{2010006001|XXGobject_psameas_object|8422|0|13471|0|{out_metadata|out0_metadata|0|0|}5047|4999|}
{2010212001|XXGvertex_oport_oport|8423|0|13472|0|{0|out0|}5027|5050|}
{2010216002|XXGoport_binding_oport|8424|0|13474|0|{.5|.5|{0|}14672|}5050|5031|}
{2010213001|XXGoport_dst_flow|8425|0|13475|0|{0|}5050|4980|}
{2010212001|XXGvertex_oport_oport|8426|0|13476|0|{1|out1|}5027|5051|}
{2010216002|XXGoport_binding_oport|8427|0|13478|0|{.5|.5|{0|}14673|}5051|5032|}
{2010213001|XXGoport_dst_flow|8428|0|13479|0|{0|}5051|4985|}
{2010211001|XXGvertex_iport_iport|8429|0|13480|0|{0|in0|}5027|5052|}
{2010215002|XXGiport_binding_iport|8430|0|13482|0|{.5|.5|{0|}14671|}5052|5046|}
{2010214001|XXGiport_src_flow|8431|0|13483|0|{0|}5052|4977|}
{2010601001|XXGgraph_vertex_vertex|8432|0|13484|0|{Sort_on_Adjusted_Natural_Keys|}4962|5053|}
{2010212001|XXGvertex_oport_oport|8433|0|13486|0|{0|out|}5053|5054|}
{2010213001|XXGoport_dst_flow|8434|0|13488|0|{0|}5054|4973|}
{2010211001|XXGvertex_iport_iport|8435|0|13489|0|{0|in|}5053|5055|}
{2010214001|XXGiport_src_flow|8436|0|13491|0|{0|}5055|4975|}
{2010006001|XXGobject_psameas_object|8437|0|13492|0|{Layout|Layout|0|0|}5053|4993|}
{2010006001|XXGobject_psameas_object|8438|0|13493|0|{in_metadata|out_metadata|0|0|}5053|5005|}
{2010006001|XXGobject_psameas_object|8439|0|13494|0|{out_metadata|out_metadata|0|0|}5053|5005|}
{2010601001|XXGgraph_vertex_vertex|8440|0|13495|0|{Trash_1|}4962|5056|}
{2010211001|XXGvertex_iport_iport|8441|0|13497|0|{0|in|}5056|5057|}
{2010214001|XXGiport_src_flow|8442|0|13499|0|{0|}5057|4983|}
{2010006001|XXGobject_psameas_object|8443|0|13500|0|{Layout|Layout|0|0|}5056|4993|}
{2010006001|XXGobject_psameas_object|8444|0|13501|0|{in_metadata|out_metadata|0|0|}5056|5005|}
{2010601001|XXGgraph_vertex_vertex|8445|0|13502|0|{Trash_2|}4962|5058|}
{2010211001|XXGvertex_iport_iport|8446|0|13504|0|{0|in|}5058|5059|}
{2010214001|XXGiport_src_flow|8447|0|13506|0|{0|}5059|4982|}
{2010006001|XXGobject_psameas_object|8448|0|13507|0|{Layout|Layout|0|0|}5058|4993|}
{2010006001|XXGobject_psameas_object|8449|0|13508|0|{in_metadata|out_metadata|0|0|}5058|5005|}
{2010601001|XXGgraph_vertex_vertex|8450|0|13509|0|{Trash_3|}4962|5060|}
{2010211001|XXGvertex_iport_iport|8451|0|13511|0|{0|in|}5060|5061|}
{2010214001|XXGiport_src_flow|8452|0|13513|0|{0|}5061|4985|}
{2010006001|XXGobject_psameas_object|8453|0|13514|0|{Layout|Layout|0|0|}5060|4993|}
{2010006001|XXGobject_psameas_object|8454|0|13515|0|{in_metadata|out0_metadata|0|0|}5060|4999|}
{2010212001|XXGvertex_oport_oport|8455|0|13516|0|{0|out0|}4962|5062|}
{2010216002|XXGoport_binding_oport|8456|0|13518|0|{.5|.5|{0|}14919|}5062|5022|}
{2010213001|XXGoport_dst_flow|8457|0|13519|0|{0|}5062|4959|}
{2010211001|XXGvertex_iport_iport|8458|0|13520|0|{0|in0|}4962|5063|}
{2010215002|XXGiport_binding_iport|8459|0|13522|0|{.5|.5|{0|}14918|}5063|5004|}
{2010214001|XXGiport_src_flow|8460|0|13523|0|{0|}5063|4957|}
{2010601001|XXGgraph_vertex_vertex|8461|0|13524|0|{Get_Last_Lookup_Record|}4952|5064|}
{2010605001|XXGgraph_legend_legend|8462|0|13526|0|{0|}5064|5065|}
{2010241001|XXGlegend_face_face|8463|0|13528|0|{}5065|5066|}
{2010605001|XXGgraph_legend_legend|8464|0|13530|0|{1|}5064|5067|}
{2010241001|XXGlegend_face_face|8465|0|13532|0|{}5067|5068|}
{2010605001|XXGgraph_legend_legend|8466|0|13534|0|{2|}5064|5069|}
{2010241001|XXGlegend_face_face|8467|0|13536|0|{}5069|5070|}
{2010605001|XXGgraph_legend_legend|8468|0|13538|0|{3|}5064|5071|}
{2010241001|XXGlegend_face_face|8469|0|13540|0|{}5071|5072|}
{2010604001|XXGgraph_flow_flow|8470|0|13542|0|{Flow_1|}5064|5073|}
{2010604001|XXGgraph_flow_flow|8471|0|13544|0|{Flow_2|}5064|5074|}
{2010604001|XXGgraph_flow_flow|8472|0|13546|0|{Flow_3|}5064|5075|}
{2010604001|XXGgraph_flow_flow|8473|0|13548|0|{Flow_4|}5064|5076|}
{2010604001|XXGgraph_flow_flow|8474|0|13550|0|{Flow_5|}5064|5077|}
{2010604001|XXGgraph_flow_flow|8475|0|13552|0|{Flow_6|}5064|5078|}
{2010604001|XXGgraph_flow_flow|8476|0|13554|0|{Flow_7|}5064|5079|}
{2010604001|XXGgraph_flow_flow|8477|0|13556|0|{Flow_8|}5064|5080|}
{2010604001|XXGgraph_flow_flow|8478|0|13558|0|{Flow_9|}5064|5081|}
{2010601001|XXGgraph_vertex_vertex|8479|0|13560|0|{Dedup_Sorted|}5064|5082|}
{2010212001|XXGvertex_oport_oport|8480|0|13562|0|{0|out|}5082|5083|}
{2010212001|XXGvertex_oport_oport|8481|0|13564|0|{1|dup|}5082|5084|}
{2010213001|XXGoport_dst_flow|8482|0|13566|0|{0|}5084|5080|}
{2010212001|XXGvertex_oport_oport|8483|0|13567|0|{2|reject|}5082|5085|}
{2010212001|XXGvertex_oport_oport|8484|0|13569|0|{3|error|}5082|5086|}
{2010212001|XXGvertex_oport_oport|8485|0|13571|0|{4|log|}5082|5087|}
{2010211001|XXGvertex_iport_iport|8486|0|13573|0|{0|in|}5082|5088|}
{2010214001|XXGiport_src_flow|8487|0|13575|0|{0|}5088|5075|}
{2010006001|XXGobject_psameas_object|8488|0|13576|0|{Layout|Layout|0|0|}5082|4993|}
{2010006001|XXGobject_psameas_object|8489|0|13577|0|{dup_metadata|out_metadata|0|0|}5082|5089|}
{2010212001|XXGvertex_oport_oport|8490|0|13579|0|{0|out|}5089|5090|}
{2010213001|XXGoport_dst_flow|8491|0|13581|0|{0|}5090|5074|}
{2010212001|XXGvertex_oport_oport|8492|0|13582|0|{1|deselect|}5089|5091|}
{2010213001|XXGoport_dst_flow|8493|0|13584|0|{0|}5091|5081|}
{2010212001|XXGvertex_oport_oport|8494|0|13585|0|{2|reject|}5089|5092|}
{2010212001|XXGvertex_oport_oport|8495|0|13587|0|{3|error|}5089|5093|}
{2010212001|XXGvertex_oport_oport|8496|0|13589|0|{4|log|}5089|5094|}
{2010211001|XXGvertex_iport_iport|8497|0|13591|0|{0|in|}5089|5095|}
{2010214001|XXGiport_src_flow|8498|0|13593|0|{0|}5095|5077|}
{2010006001|XXGobject_psameas_object|8499|0|13594|0|{Layout|Layout|0|0|}5089|4993|}
{2010006001|XXGobject_psameas_object|8500|0|13595|0|{deselect_metadata|out_metadata|0|0|}5089|5089|}
{2010006001|XXGobject_psameas_object|8501|0|13596|0|{in_metadata|out_metadata|0|0|}5089|5096|}
{2010212001|XXGvertex_oport_oport|8502|0|13598|0|{0|out|}5096|5097|}
{2010213001|XXGoport_dst_flow|8503|0|13600|0|{0|}5097|5098|}
{2010212001|XXGvertex_oport_oport|8504|0|13602|0|{1|deselect|}5096|5099|}
{2010213001|XXGoport_dst_flow|8505|0|13604|0|{0|}5099|5100|}
{2010212001|XXGvertex_oport_oport|8506|0|13606|0|{2|reject|}5096|5101|}
{2010212001|XXGvertex_oport_oport|8507|0|13608|0|{3|error|}5096|5102|}
{2010212001|XXGvertex_oport_oport|8508|0|13610|0|{4|log|}5096|5103|}
{2010211001|XXGvertex_iport_iport|8509|0|13612|0|{0|in|}5096|5104|}
{2010006001|XXGobject_psameas_object|8510|0|13614|0|{Layout|Layout|0|0|}5096|4993|}
{2010006001|XXGobject_psameas_object|8511|0|13615|0|{in_metadata|out0_metadata|0|0|}5096|5105|}
{2010212001|XXGvertex_oport_oport|8512|0|13617|0|{0|out0|}5105|5106|}
{2010213001|XXGoport_dst_flow|8513|0|13619|0|{0|}5106|5076|}
{2010212001|XXGvertex_oport_oport|8514|0|13620|0|{1|reject0|}5105|5107|}
{2010212001|XXGvertex_oport_oport|8515|0|13622|0|{2|error0|}5105|5108|}
{2010212001|XXGvertex_oport_oport|8516|0|13624|0|{3|log|}5105|5109|}
{2010211001|XXGvertex_iport_iport|8517|0|13626|0|{0|in|}5105|5110|}
{2010214001|XXGiport_src_flow|8518|0|13628|0|{0|}5110|5078|}
{2010006001|XXGobject_psameas_object|8519|0|13629|0|{Layout|Layout|0|0|}5105|4993|}
{2010006001|XXGobject_psameas_object|8520|0|13630|0|{in_metadata|out0_metadata|0|0|}5105|5111|}
{2010212001|XXGvertex_oport_oport|8521|0|13632|0|{0|out0|}5111|5112|}
{2010213001|XXGoport_dst_flow|8522|0|13634|0|{0|}5112|5073|}
{2010212001|XXGvertex_oport_oport|8523|0|13635|0|{1|reject0|}5111|5113|}
{2010212001|XXGvertex_oport_oport|8524|0|13637|0|{2|error0|}5111|5114|}
{2010212001|XXGvertex_oport_oport|8525|0|13639|0|{3|log|}5111|5115|}
{2010211001|XXGvertex_iport_iport|8526|0|13641|0|{0|in|}5111|5116|}
{2010006001|XXGobject_psameas_object|8527|0|13643|0|{Layout|Layout|0|0|}5111|242|}
{2010006001|XXGobject_psameas_object|8528|0|13644|0|{in_metadata|out7_metadata|0|0|}5111|242|}
{2010006001|XXGobject_psameas_object|8529|0|13645|0|{reject0_metadata|out7_metadata|0|0|}5111|242|}
{2010006001|XXGobject_psameas_object|8530|0|13646|0|{reject0_metadata|out0_metadata|0|0|}5105|5111|}
{2010006001|XXGobject_psameas_object|8531|0|13647|0|{reject_metadata|out0_metadata|0|0|}5096|5105|}
{2010006001|XXGobject_psameas_object|8532|0|13648|0|{reject_metadata|out_metadata|0|0|}5089|5096|}
{2010006001|XXGobject_psameas_object|8533|0|13649|0|{in_metadata|out_metadata|0|0|}5082|5089|}
{2010006001|XXGobject_psameas_object|8534|0|13650|0|{out_metadata|out_metadata|0|0|}5082|5089|}
{2010006001|XXGobject_psameas_object|8535|0|13651|0|{reject_metadata|out_metadata|0|0|}5082|5089|}
{2010601001|XXGgraph_vertex_vertex|8536|0|13652|0|{FBE_filter_matching_lkp_record|}5064|5089|}
{2010601001|XXGgraph_vertex_vertex|8537|0|13653|0|{RFMT_Get_Hash_On_NK|}5064|5111|}
{2010601001|XXGgraph_vertex_vertex|8538|0|13654|0|{RFMT_Lookup_with_IDS|}5064|5105|}
{2010601001|XXGgraph_vertex_vertex|8539|0|13655|0|{Sort_De_dup|}5064|5117|}
{2010604001|XXGgraph_flow_flow|8540|0|13657|0|{Flow_10|}5117|5118|}
{2010604001|XXGgraph_flow_flow|8541|0|13659|0|{Flow_4|}5117|5119|}
{2010244001|XXGflow_watcher_watcher|8542|0|13661|0|{}5119|5120|}
{2010601001|XXGgraph_vertex_vertex|8543|0|13663|0|{Dedup_Sorted_1|}5117|5121|}
{2010212001|XXGvertex_oport_oport|8544|0|13665|0|{0|out|}5121|5122|}
{2010212001|XXGvertex_oport_oport|8545|0|13667|0|{1|dup|}5121|5123|}
{2010212001|XXGvertex_oport_oport|8546|0|13669|0|{2|reject|}5121|5124|}
{2010212001|XXGvertex_oport_oport|8547|0|13671|0|{3|error|}5121|5125|}
{2010212001|XXGvertex_oport_oport|8548|0|13673|0|{4|log|}5121|5126|}
{2010211001|XXGvertex_iport_iport|8549|0|13675|0|{0|in|}5121|5127|}
{2010214001|XXGiport_src_flow|8550|0|13677|0|{0|}5127|5118|}
{2010006001|XXGobject_psameas_object|8551|0|13678|0|{Layout|Layout|0|0|}5121|4993|}
{2010006001|XXGobject_psameas_object|8552|0|13679|0|{dup_metadata|out0_metadata|0|0|}5121|5111|}
{2010006001|XXGobject_psameas_object|8553|0|13680|0|{in_metadata|out0_metadata|0|0|}5121|5111|}
{2010006001|XXGobject_psameas_object|8554|0|13681|0|{out_metadata|out0_metadata|0|0|}5121|5111|}
{2010006001|XXGobject_psameas_object|8555|0|13682|0|{reject_metadata|out0_metadata|0|0|}5121|5111|}
{2010601001|XXGgraph_vertex_vertex|8556|0|13683|0|{PBKS_dxf_hk_part1_|}5117|5128|}
{2010604001|XXGgraph_flow_flow|8557|0|13685|0|{Flow_1|}5128|5129|}
{2010601001|XXGgraph_vertex_vertex|8558|0|13687|0|{Partition_by_Key|}5128|5130|}
{2010212001|XXGvertex_oport_oport|8559|0|13689|0|{0|out|}5130|5131|}
{2010213001|XXGoport_dst_flow|8560|0|13691|0|{0|}5131|5129|}
{2010211001|XXGvertex_iport_iport|8561|0|13692|0|{0|in|}5130|5132|}
{2010006001|XXGobject_psameas_object|8562|0|13694|0|{in_metadata|out0_metadata|0|0|}5130|5111|}
{2010006001|XXGobject_psameas_object|8563|0|13695|0|{out_metadata|out0_metadata|0|0|}5130|5111|}
{2010601001|XXGgraph_vertex_vertex|8564|0|13696|0|{Sort|}5128|5133|}
{2010212001|XXGvertex_oport_oport|8565|0|13698|0|{0|out|}5133|5134|}
{2010211001|XXGvertex_iport_iport|8566|0|13700|0|{0|in|}5133|5135|}
{2010214001|XXGiport_src_flow|8567|0|13702|0|{0|}5135|5129|}
{2010006001|XXGobject_psameas_object|8568|0|13703|0|{in_metadata|out0_metadata|0|0|}5133|5111|}
{2010006001|XXGobject_psameas_object|8569|0|13704|0|{out_metadata|out0_metadata|0|0|}5133|5111|}
{2010212001|XXGvertex_oport_oport|8570|0|13705|0|{0|out0|}5128|5136|}
{2010216002|XXGoport_binding_oport|8571|0|13707|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}5136|5134|}
{2010213001|XXGoport_dst_flow|8572|0|13708|0|{0|}5136|5119|}
{2010211001|XXGvertex_iport_iport|8573|0|13709|0|{0|in0|}5128|5137|}
{2010215002|XXGiport_binding_iport|8574|0|13711|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}5137|5132|}
{2010006001|XXGobject_psameas_object|8575|0|13712|0|{InputLayout|Layout|0|0|}5128|242|}
{2010006001|XXGobject_psameas_object|8576|0|13713|0|{OutputLayout|Layout|0|0|}5128|4993|}
{2010601001|XXGgraph_vertex_vertex|8577|0|13714|0|{Sort_within_Groups_1|}5117|5138|}
{2010212001|XXGvertex_oport_oport|8578|0|13716|0|{0|out|}5138|5139|}
{2010213001|XXGoport_dst_flow|8579|0|13718|0|{0|}5139|5118|}
{2010211001|XXGvertex_iport_iport|8580|0|13719|0|{0|in|}5138|5140|}
{2010214001|XXGiport_src_flow|8581|0|13721|0|{0|}5140|5119|}
{2010006001|XXGobject_psameas_object|8582|0|13722|0|{Layout|Layout|0|0|}5138|4993|}
{2010006001|XXGobject_psameas_object|8583|0|13723|0|{in_metadata|out0_metadata|0|0|}5138|5111|}
{2010006001|XXGobject_psameas_object|8584|0|13724|0|{out_metadata|out0_metadata|0|0|}5138|5111|}
{2010212001|XXGvertex_oport_oport|8585|0|13725|0|{0|out0|}5117|5141|}
{2010216002|XXGoport_binding_oport|8586|0|13727|0|{.5|.5|{0|}7792|}5141|5122|}
{2010213001|XXGoport_dst_flow|8587|0|13728|0|{0|}5141|5078|}
{2010212001|XXGvertex_oport_oport|8588|0|13729|0|{1|out1|}5117|5142|}
{2010216002|XXGoport_binding_oport|8589|0|13731|0|{.5|.5|{0|}7793|}5142|5123|}
{2010213001|XXGoport_dst_flow|8590|0|13732|0|{0|}5142|5079|}
{2010211001|XXGvertex_iport_iport|8591|0|13733|0|{0|in0|}5117|5143|}
{2010215002|XXGiport_binding_iport|8592|0|13735|0|{.5|.5|{0|}7791|}5143|5137|}
{2010214001|XXGiport_src_flow|8593|0|13736|0|{0|}5143|5073|}
{2010601001|XXGgraph_vertex_vertex|8594|0|13737|0|{Sort_within_Groups|}5064|5144|}
{2010212001|XXGvertex_oport_oport|8595|0|13739|0|{0|out|}5144|5145|}
{2010213001|XXGoport_dst_flow|8596|0|13741|0|{0|}5145|5075|}
{2010211001|XXGvertex_iport_iport|8597|0|13742|0|{0|in|}5144|5146|}
{2010214001|XXGiport_src_flow|8598|0|13744|0|{0|}5146|5074|}
{2010006001|XXGobject_psameas_object|8599|0|13745|0|{Layout|Layout|0|0|}5144|4993|}
{2010006001|XXGobject_psameas_object|8600|0|13746|0|{in_metadata|out_metadata|0|0|}5144|5089|}
{2010006001|XXGobject_psameas_object|8601|0|13747|0|{out_metadata|out_metadata|0|0|}5144|5089|}
{2010601001|XXGgraph_vertex_vertex|8602|0|13748|0|{Trash|}5064|5147|}
{2010211001|XXGvertex_iport_iport|8603|0|13750|0|{0|in|}5147|5148|}
{2010214001|XXGiport_src_flow|8604|0|13752|0|{0|}5148|5079|}
{2010006001|XXGobject_psameas_object|8605|0|13753|0|{Layout|Layout|0|0|}5147|4993|}
{2010006001|XXGobject_psameas_object|8606|0|13754|0|{in_metadata|out0_metadata|0|0|}5147|5111|}
{2010601001|XXGgraph_vertex_vertex|8607|0|13755|0|{Trash_1|}5064|5149|}
{2010211001|XXGvertex_iport_iport|8608|0|13757|0|{0|in|}5149|5150|}
{2010214001|XXGiport_src_flow|8609|0|13759|0|{0|}5150|5080|}
{2010006001|XXGobject_psameas_object|8610|0|13760|0|{Layout|Layout|0|0|}5149|4993|}
{2010006001|XXGobject_psameas_object|8611|0|13761|0|{in_metadata|out_metadata|0|0|}5149|5089|}
{2010601001|XXGgraph_vertex_vertex|8612|0|13762|0|{Trash_2|}5064|5151|}
{2010211001|XXGvertex_iport_iport|8613|0|13764|0|{0|in|}5151|5152|}
{2010214001|XXGiport_src_flow|8614|0|13766|0|{0|}5152|5081|}
{2010006001|XXGobject_psameas_object|8615|0|13767|0|{Layout|Layout|0|0|}5151|4993|}
{2010006001|XXGobject_psameas_object|8616|0|13768|0|{in_metadata|out_metadata|0|0|}5151|5089|}
{2010601001|XXGgraph_vertex_vertex|8617|0|13769|0|{Two_Step_Lookup|}5064|5153|}
{2010605001|XXGgraph_legend_legend|8618|0|13771|0|{0|}5153|5154|}
{2010241001|XXGlegend_face_face|8619|0|13773|0|{}5154|5155|}
{2010604001|XXGgraph_flow_flow|8620|0|13775|0|{Flow_1|}5153|5100|}
{2010604001|XXGgraph_flow_flow|8621|0|13776|0|{Flow_2|}5153|5156|}
{2010604001|XXGgraph_flow_flow|8622|0|13778|0|{Flow_3|}5153|5098|}
{2010604001|XXGgraph_flow_flow|8623|0|13779|0|{Flow_4|}5153|5157|}
{2010604001|XXGgraph_flow_flow|8624|0|13781|0|{Flow_5|}5153|5158|}
{2010604001|XXGgraph_flow_flow|8625|0|13783|0|{Flow_6|}5153|5159|}
{2010601001|XXGgraph_vertex_vertex|8626|0|13785|0|{FBE_Pass_Only_Matching_Rec|}5153|5160|}
{2010212001|XXGvertex_oport_oport|8627|0|13787|0|{0|out|}5160|5161|}
{2010213001|XXGoport_dst_flow|8628|0|13789|0|{0|}5161|5158|}
{2010212001|XXGvertex_oport_oport|8629|0|13790|0|{1|deselect|}5160|5162|}
{2010213001|XXGoport_dst_flow|8630|0|13792|0|{0|}5162|5159|}
{2010212001|XXGvertex_oport_oport|8631|0|13793|0|{2|reject|}5160|5163|}
{2010212001|XXGvertex_oport_oport|8632|0|13795|0|{3|error|}5160|5164|}
{2010212001|XXGvertex_oport_oport|8633|0|13797|0|{4|log|}5160|5165|}
{2010211001|XXGvertex_iport_iport|8634|0|13799|0|{0|in|}5160|5166|}
{2010214001|XXGiport_src_flow|8635|0|13801|0|{0|}5166|5157|}
{2010006001|XXGobject_psameas_object|8636|0|13802|0|{Layout|Layout|0|0|}5160|4993|}
{2010006001|XXGobject_psameas_object|8637|0|13803|0|{deselect_metadata|out_metadata|0|0|}5160|5096|}
{2010006001|XXGobject_psameas_object|8638|0|13804|0|{in_metadata|out0_metadata|0|0|}5160|5167|}
{2010212001|XXGvertex_oport_oport|8639|0|13806|0|{0|out0|}5167|5168|}
{2010213001|XXGoport_dst_flow|8640|0|13808|0|{0|}5168|5157|}
{2010212001|XXGvertex_oport_oport|8641|0|13809|0|{1|reject0|}5167|5169|}
{2010212001|XXGvertex_oport_oport|8642|0|13811|0|{2|error0|}5167|5170|}
{2010212001|XXGvertex_oport_oport|8643|0|13813|0|{3|log|}5167|5171|}
{2010211001|XXGvertex_iport_iport|8644|0|13815|0|{0|in|}5167|5172|}
{2010214001|XXGiport_src_flow|8645|0|13817|0|{0|}5172|5156|}
{2010006001|XXGobject_psameas_object|8646|0|13818|0|{Layout|Layout|0|0|}5167|4993|}
{2010006001|XXGobject_psameas_object|8647|0|13819|0|{in_metadata|out0_metadata|0|0|}5167|5173|}
{2010212001|XXGvertex_oport_oport|8648|0|13821|0|{0|out0|}5173|5174|}
{2010213001|XXGoport_dst_flow|8649|0|13823|0|{0|}5174|5156|}
{2010212001|XXGvertex_oport_oport|8650|0|13824|0|{1|reject0|}5173|5175|}
{2010212001|XXGvertex_oport_oport|8651|0|13826|0|{2|error0|}5173|5176|}
{2010212001|XXGvertex_oport_oport|8652|0|13828|0|{3|log|}5173|5177|}
{2010211001|XXGvertex_iport_iport|8653|0|13830|0|{0|in|}5173|5178|}
{2010214001|XXGiport_src_flow|8654|0|13832|0|{0|}5178|5100|}
{2010006001|XXGobject_psameas_object|8655|0|13833|0|{Layout|Layout|0|0|}5173|4993|}
{2010006001|XXGobject_psameas_object|8656|0|13834|0|{in_metadata|deselect_metadata|0|0|}5173|5096|}
{2010006001|XXGobject_psameas_object|8657|0|13835|0|{reject0_metadata|deselect_metadata|0|0|}5173|5096|}
{2010006001|XXGobject_psameas_object|8658|0|13836|0|{reject0_metadata|out0_metadata|0|0|}5167|5173|}
{2010006001|XXGobject_psameas_object|8659|0|13837|0|{out_metadata|out_metadata|0|0|}5160|5096|}
{2010006001|XXGobject_psameas_object|8660|0|13838|0|{reject_metadata|out0_metadata|0|0|}5160|5167|}
{2010601001|XXGgraph_vertex_vertex|8661|0|13839|0|{FBE_filter_matching_lkp_record|}5153|5096|}
{2010601001|XXGgraph_vertex_vertex|8662|0|13840|0|{Merge|}5153|5179|}
{2010212001|XXGvertex_oport_oport|8663|0|13842|0|{0|out|}5179|5180|}
{2010211001|XXGvertex_iport_iport|8664|0|13844|0|{0|in|}5179|5181|}
{2010214001|XXGiport_src_flow|8665|0|13846|0|{0|}5181|5098|}
{2010214001|XXGiport_src_flow|8666|0|13847|0|{1|}5181|5158|}
{2010006001|XXGobject_psameas_object|8667|0|13848|0|{Layout|Layout|0|0|}5179|4993|}
{2010006001|XXGobject_psameas_object|8668|0|13849|0|{in_metadata|out_metadata|0|0|}5179|5096|}
{2010006001|XXGobject_psameas_object|8669|0|13850|0|{out_metadata|out_metadata|0|0|}5179|5096|}
{2010601001|XXGgraph_vertex_vertex|8670|0|13851|0|{No_Match_Record_In_Second_Pass|}5153|5182|}
{2010211001|XXGvertex_iport_iport|8671|0|13853|0|{0|in|}5182|5183|}
{2010214001|XXGiport_src_flow|8672|0|13855|0|{0|}5183|5159|}
{2010006001|XXGobject_psameas_object|8673|0|13856|0|{Layout|Layout|0|0|}5182|4993|}
{2010006001|XXGobject_psameas_object|8674|0|13857|0|{in_metadata|out_metadata|0|0|}5182|5096|}
{2010601001|XXGgraph_vertex_vertex|8675|0|13858|0|{RFMT_Lookup_with_IDS_Archive_|}5153|5167|}
{2010601001|XXGgraph_vertex_vertex|8676|0|13859|0|{RFMT_Pass_only_Hash_Keys|}5153|5173|}
{2010212001|XXGvertex_oport_oport|8677|0|13860|0|{0|out0|}5153|5184|}
{2010216002|XXGoport_binding_oport|8678|0|13862|0|{.5|.5|{0|}15500|}5184|5180|}
{2010213001|XXGoport_dst_flow|8679|0|13863|0|{0|}5184|5077|}
{2010211001|XXGvertex_iport_iport|8680|0|13864|0|{0|in0|}5153|5185|}
{2010215002|XXGiport_binding_iport|8681|0|13866|0|{.5|.5|{0|}15499|}5185|5104|}
{2010214001|XXGiport_src_flow|8682|0|13867|0|{0|}5185|5076|}
{2010212001|XXGvertex_oport_oport|8683|0|13868|0|{0|out0|}5064|5186|}
{2010216002|XXGoport_binding_oport|8684|0|13870|0|{.5|.5|{0|}15515|}5186|5083|}
{2010213001|XXGoport_dst_flow|8685|0|13871|0|{0|}5186|4960|}
{2010211001|XXGvertex_iport_iport|8686|0|13872|0|{0|in1|}5064|5187|}
{2010215002|XXGiport_binding_iport|8687|0|13874|0|{.5|.5|{0|}15514|}5187|5116|}
{2010214001|XXGiport_src_flow|8688|0|13875|0|{0|}5187|4958|}
{2010601001|XXGgraph_vertex_vertex|8689|0|13876|0|{Merge|}4952|5188|}
{2010212001|XXGvertex_oport_oport|8690|0|13878|0|{0|out|}5188|5189|}
{2010211001|XXGvertex_iport_iport|8691|0|13880|0|{0|in|}5188|5190|}
{2010214001|XXGiport_src_flow|8692|0|13882|0|{0|}5190|4961|}
{2010006001|XXGobject_psameas_object|8693|0|13883|0|{Layout|Layout|0|0|}5188|181|}
{2010006001|XXGobject_psameas_object|8694|0|13884|0|{in_metadata|write_metadata|0|0|}5188|181|}
{2010006001|XXGobject_psameas_object|8695|0|13885|0|{out_metadata|write_metadata|0|0|}5188|181|}
{2010601001|XXGgraph_vertex_vertex|8696|0|13886|0|{Replicate|}4952|5191|}
{2010212001|XXGvertex_oport_oport|8697|0|13888|0|{0|out|}5191|5192|}
{2010213001|XXGoport_dst_flow|8698|0|13890|0|{0|}5192|4957|}
{2010213001|XXGoport_dst_flow|8699|0|13891|0|{1|}5192|4958|}
{2010211001|XXGvertex_iport_iport|8700|0|13892|0|{0|in|}5191|5193|}
{2010006001|XXGobject_psameas_object|8701|0|13894|0|{Layout|Layout|0|0|}5191|242|}
{2010006001|XXGobject_psameas_object|8702|0|13895|0|{in_metadata|out7_metadata|0|0|}5191|242|}
{2010006001|XXGobject_psameas_object|8703|0|13896|0|{out_metadata|out7_metadata|0|0|}5191|242|}
{2010601001|XXGgraph_vertex_vertex|8704|0|13897|0|{Replicate_1|}4952|5194|}
{2010212001|XXGvertex_oport_oport|8705|0|13899|0|{0|out|}5194|5195|}
{2010213001|XXGoport_dst_flow|8706|0|13901|0|{0|}5195|4961|}
{2010211001|XXGvertex_iport_iport|8707|0|13902|0|{0|in|}5194|5196|}
{2010214001|XXGiport_src_flow|8708|0|13904|0|{0|}5196|4959|}
{2010214001|XXGiport_src_flow|8709|0|13905|0|{1|}5196|4960|}
{2010006001|XXGobject_psameas_object|8710|0|13906|0|{Layout|Layout|0|0|}5194|4993|}
{2010006001|XXGobject_psameas_object|8711|0|13907|0|{in_metadata|out_metadata|0|0|}5194|5089|}
{2010006001|XXGobject_psameas_object|8712|0|13908|0|{out_metadata|out_metadata|0|0|}5194|5089|}
{2010212001|XXGvertex_oport_oport|8713|0|13909|0|{0|out0|}4952|5197|}
{2010216002|XXGoport_binding_oport|8714|0|13911|0|{.5|.5|{0|}7802|}5197|5189|}
{2010213001|XXGoport_dst_flow|8715|0|13912|0|{0|}5197|147|}
{2010211001|XXGvertex_iport_iport|8716|0|13913|0|{0|in0|}4952|5198|}
{2010215002|XXGiport_binding_iport|8717|0|13915|0|{.5|.5|{0|}7801|}5198|5193|}
{2010007001|XXGobject_proto_object|8718|0|13916|0|{}4952|5199|}
{2010605001|XXGgraph_legend_legend|8719|0|13918|0|{0|}5199|5200|}
{2010241001|XXGlegend_face_face|8720|0|13920|0|{}5200|5201|}
{2010605001|XXGgraph_legend_legend|8721|0|13922|0|{1|}5199|5202|}
{2010241001|XXGlegend_face_face|8722|0|13924|0|{}5202|5203|}
{2010604001|XXGgraph_flow_flow|8723|0|13926|0|{Flow_1|}5199|5204|}
{2010604001|XXGgraph_flow_flow|8724|0|13928|0|{Flow_2|}5199|5205|}
{2010604001|XXGgraph_flow_flow|8725|0|13930|0|{Flow_3|}5199|5206|}
{2010604001|XXGgraph_flow_flow|8726|0|13932|0|{Flow_4|}5199|5207|}
{2010604001|XXGgraph_flow_flow|8727|0|13934|0|{Flow_5|}5199|5208|}
{2010601001|XXGgraph_vertex_vertex|8728|0|13936|0|{Get_All_LookUp_Record|}5199|5209|}
{2010605001|XXGgraph_legend_legend|8729|0|13938|0|{0|}5209|5210|}
{2010241001|XXGlegend_face_face|8730|0|13940|0|{}5210|5211|}
{2010605001|XXGgraph_legend_legend|8731|0|13942|0|{1|}5209|5212|}
{2010241001|XXGlegend_face_face|8732|0|13944|0|{}5212|5213|}
{2010605001|XXGgraph_legend_legend|8733|0|13946|0|{2|}5209|5214|}
{2010241001|XXGlegend_face_face|8734|0|13948|0|{}5214|5215|}
{2010605001|XXGgraph_legend_legend|8735|0|13950|0|{3|}5209|5216|}
{2010241001|XXGlegend_face_face|8736|0|13952|0|{}5216|5217|}
{2010605001|XXGgraph_legend_legend|8737|0|13954|0|{4|}5209|5218|}
{2010241001|XXGlegend_face_face|8738|0|13956|0|{}5218|5219|}
{2010604001|XXGgraph_flow_flow|8739|0|13958|0|{Flow_1|}5209|5220|}
{2010604001|XXGgraph_flow_flow|8740|0|13960|0|{Flow_10|}5209|5221|}
{2010604001|XXGgraph_flow_flow|8741|0|13962|0|{Flow_11|}5209|5222|}
{2010604001|XXGgraph_flow_flow|8742|0|13964|0|{Flow_12|}5209|5223|}
{2010604001|XXGgraph_flow_flow|8743|0|13966|0|{Flow_18|}5209|5224|}
{2010604001|XXGgraph_flow_flow|8744|0|13968|0|{Flow_2|}5209|5225|}
{2010604001|XXGgraph_flow_flow|8745|0|13970|0|{Flow_3|}5209|5226|}
{2010604001|XXGgraph_flow_flow|8746|0|13972|0|{Flow_4|}5209|5227|}
{2010604001|XXGgraph_flow_flow|8747|0|13974|0|{Flow_5|}5209|5228|}
{2010604001|XXGgraph_flow_flow|8748|0|13976|0|{Flow_6|}5209|5229|}
{2010604001|XXGgraph_flow_flow|8749|0|13978|0|{Flow_7|}5209|5230|}
{2010604001|XXGgraph_flow_flow|8750|0|13980|0|{Flow_8|}5209|5231|}
{2010604001|XXGgraph_flow_flow|8751|0|13982|0|{Flow_9|}5209|5232|}
{2010601001|XXGgraph_vertex_vertex|8752|0|13984|0|{Dedup_Sorted|}5209|5233|}
{2010212001|XXGvertex_oport_oport|8753|0|13986|0|{0|out|}5233|5234|}
{2010213001|XXGoport_dst_flow|8754|0|13988|0|{0|}5234|5225|}
{2010212001|XXGvertex_oport_oport|8755|0|13989|0|{1|dup|}5233|5235|}
{2010213001|XXGoport_dst_flow|8756|0|13991|0|{0|}5235|5229|}
{2010212001|XXGvertex_oport_oport|8757|0|13992|0|{2|reject|}5233|5236|}
{2010212001|XXGvertex_oport_oport|8758|0|13994|0|{3|error|}5233|5237|}
{2010212001|XXGvertex_oport_oport|8759|0|13996|0|{4|log|}5233|5238|}
{2010211001|XXGvertex_iport_iport|8760|0|13998|0|{0|in|}5233|5239|}
{2010214001|XXGiport_src_flow|8761|0|14000|0|{0|}5239|5220|}
{2010007001|XXGobject_proto_object|8762|0|14001|0|{}5233|5240|}
{2010212001|XXGvertex_oport_oport|8763|0|14003|0|{0|out|}5240|5241|}
{2010006001|XXGobject_psameas_object|8764|0|14005|0|{metadata|out_metadata|1|0|}5241|5240|}
{2010212001|XXGvertex_oport_oport|8765|0|14006|0|{1|dup|}5240|5242|}
{2010006001|XXGobject_psameas_object|8766|0|14008|0|{metadata|dup_metadata|1|0|}5242|5240|}
{2010212001|XXGvertex_oport_oport|8767|0|14009|0|{2|reject|}5240|5243|}
{2010006001|XXGobject_psameas_object|8768|0|14011|0|{metadata|reject_metadata|1|0|}5243|5240|}
{2010212001|XXGvertex_oport_oport|8769|0|14012|0|{3|error|}5240|5244|}
{2010006001|XXGobject_psameas_object|8770|0|14014|0|{metadata|error_metadata|1|0|}5244|5240|}
{2010212001|XXGvertex_oport_oport|8771|0|14015|0|{4|log|}5240|5245|}
{2010006001|XXGobject_psameas_object|8772|0|14017|0|{metadata|log_metadata|1|0|}5245|5240|}
{2010211001|XXGvertex_iport_iport|8773|0|14018|0|{0|in|}5240|5246|}
{2010006001|XXGobject_psameas_object|8774|0|14020|0|{metadata|in_metadata|1|0|}5246|5240|}
{2010601001|XXGgraph_vertex_vertex|8775|0|14021|0|{FBE_Filter_match_records|}5209|5247|}
{2010212001|XXGvertex_oport_oport|8776|0|14023|0|{0|out|}5247|5248|}
{2010213001|XXGoport_dst_flow|8777|0|14025|0|{0|}5248|5222|}
{2010212001|XXGvertex_oport_oport|8778|0|14026|0|{1|deselect|}5247|5249|}
{2010213001|XXGoport_dst_flow|8779|0|14028|0|{0|}5249|5230|}
{2010212001|XXGvertex_oport_oport|8780|0|14029|0|{2|reject|}5247|5250|}
{2010212001|XXGvertex_oport_oport|8781|0|14031|0|{3|error|}5247|5251|}
{2010212001|XXGvertex_oport_oport|8782|0|14033|0|{4|log|}5247|5252|}
{2010211001|XXGvertex_iport_iport|8783|0|14035|0|{0|in|}5247|5253|}
{2010214001|XXGiport_src_flow|8784|0|14037|0|{0|}5253|5231|}
{2010007001|XXGobject_proto_object|8785|0|14038|0|{}5247|5254|}
{2010212001|XXGvertex_oport_oport|8786|0|14040|0|{0|out|}5254|5255|}
{2010006001|XXGobject_psameas_object|8787|0|14042|0|{metadata|out_metadata|1|0|}5255|5254|}
{2010212001|XXGvertex_oport_oport|8788|0|14043|0|{1|deselect|}5254|5256|}
{2010006001|XXGobject_psameas_object|8789|0|14045|0|{metadata|deselect_metadata|1|0|}5256|5254|}
{2010212001|XXGvertex_oport_oport|8790|0|14046|0|{2|reject|}5254|5257|}
{2010006001|XXGobject_psameas_object|8791|0|14048|0|{metadata|reject_metadata|1|0|}5257|5254|}
{2010212001|XXGvertex_oport_oport|8792|0|14049|0|{3|error|}5254|5258|}
{2010006001|XXGobject_psameas_object|8793|0|14051|0|{metadata|error_metadata|1|0|}5258|5254|}
{2010212001|XXGvertex_oport_oport|8794|0|14052|0|{4|log|}5254|5259|}
{2010006001|XXGobject_psameas_object|8795|0|14054|0|{metadata|log_metadata|1|0|}5259|5254|}
{2010211001|XXGvertex_iport_iport|8796|0|14055|0|{0|in|}5254|5260|}
{2010006001|XXGobject_psameas_object|8797|0|14057|0|{metadata|in_metadata|1|0|}5260|5254|}
{2010601001|XXGgraph_vertex_vertex|8798|0|14058|0|{Get_Hash_on_SRC_NK|}5209|5261|}
{2010212001|XXGvertex_oport_oport|8799|0|14060|0|{0|out0|}5261|5262|}
{2010213001|XXGoport_dst_flow|8800|0|14062|0|{0|}5262|5224|}
{2010212001|XXGvertex_oport_oport|8801|0|14063|0|{1|reject0|}5261|5263|}
{2010212001|XXGvertex_oport_oport|8802|0|14065|0|{2|error0|}5261|5264|}
{2010212001|XXGvertex_oport_oport|8803|0|14067|0|{3|log|}5261|5265|}
{2010211001|XXGvertex_iport_iport|8804|0|14069|0|{0|in|}5261|5266|}
{2010007001|XXGobject_proto_object|8805|0|14071|0|{}5261|5267|}
{2010212001|XXGvertex_oport_oport|8806|0|14073|0|{0|out0|}5267|5268|}
{2010006001|XXGobject_psameas_object|8807|0|14075|0|{metadata|out0_metadata|1|0|}5268|5267|}
{2010006001|XXGobject_psameas_object|8808|0|14076|0|{transform0|transform0|1|0|}5268|5267|}
{2010212001|XXGvertex_oport_oport|8809|0|14077|0|{1|reject0|}5267|5269|}
{2010006001|XXGobject_psameas_object|8810|0|14079|0|{metadata|reject0_metadata|1|0|}5269|5267|}
{2010212001|XXGvertex_oport_oport|8811|0|14080|0|{2|error0|}5267|5270|}
{2010006001|XXGobject_psameas_object|8812|0|14082|0|{metadata|error0_metadata|1|0|}5270|5267|}
{2010212001|XXGvertex_oport_oport|8813|0|14083|0|{3|log|}5267|5271|}
{2010006001|XXGobject_psameas_object|8814|0|14085|0|{metadata|log_metadata|1|0|}5271|5267|}
{2010211001|XXGvertex_iport_iport|8815|0|14086|0|{0|in|}5267|5272|}
{2010006001|XXGobject_psameas_object|8816|0|14088|0|{metadata|in_metadata|1|0|}5272|5267|}
{2010601001|XXGgraph_vertex_vertex|8817|0|14089|0|{Merge|}5209|5273|}
{2010212001|XXGvertex_oport_oport|8818|0|14091|0|{0|out|}5273|5274|}
{2010213001|XXGoport_dst_flow|8819|0|14093|0|{0|}5274|5231|}
{2010211001|XXGvertex_iport_iport|8820|0|14094|0|{0|in|}5273|5275|}
{2010214001|XXGiport_src_flow|8821|0|14096|0|{0|}5275|5226|}
{2010214001|XXGiport_src_flow|8822|0|14097|0|{1|}5275|5223|}
{2010007001|XXGobject_proto_object|8823|0|14098|0|{}5273|5276|}
{2010212001|XXGvertex_oport_oport|8824|0|14100|0|{0|out|}5276|5277|}
{2010006001|XXGobject_psameas_object|8825|0|14102|0|{metadata|out_metadata|1|0|}5277|5276|}
{2010211001|XXGvertex_iport_iport|8826|0|14103|0|{0|in|}5276|5278|}
{2010006001|XXGobject_psameas_object|8827|0|14105|0|{metadata|in_metadata|1|0|}5278|5276|}
{2010601001|XXGgraph_vertex_vertex|8828|0|14106|0|{Normalize_Get_all_records_from_Archive_Lkp|}5209|5279|}
{2010212001|XXGvertex_oport_oport|8829|0|14108|0|{0|out|}5279|5280|}
{2010213001|XXGoport_dst_flow|8830|0|14110|0|{0|}5280|5223|}
{2010212001|XXGvertex_oport_oport|8831|0|14111|0|{1|reject|}5279|5281|}
{2010212001|XXGvertex_oport_oport|8832|0|14113|0|{2|error|}5279|5282|}
{2010212001|XXGvertex_oport_oport|8833|0|14115|0|{3|log|}5279|5283|}
{2010211001|XXGvertex_iport_iport|8834|0|14117|0|{0|in|}5279|5284|}
{2010214001|XXGiport_src_flow|8835|0|14119|0|{0|}5284|5221|}
{2010007001|XXGobject_proto_object|8836|0|14120|0|{}5279|5285|}
{2010212001|XXGvertex_oport_oport|8837|0|14122|0|{0|out|}5285|5286|}
{2010006001|XXGobject_psameas_object|8838|0|14124|0|{metadata|out_metadata|1|0|}5286|5285|}
{2010212001|XXGvertex_oport_oport|8839|0|14125|0|{1|reject|}5285|5287|}
{2010006001|XXGobject_psameas_object|8840|0|14127|0|{metadata|reject_metadata|1|0|}5287|5285|}
{2010212001|XXGvertex_oport_oport|8841|0|14128|0|{2|error|}5285|5288|}
{2010006001|XXGobject_psameas_object|8842|0|14130|0|{metadata|error_metadata|1|0|}5288|5285|}
{2010212001|XXGvertex_oport_oport|8843|0|14131|0|{3|log|}5285|5289|}
{2010006001|XXGobject_psameas_object|8844|0|14133|0|{metadata|log_metadata|1|0|}5289|5285|}
{2010211001|XXGvertex_iport_iport|8845|0|14134|0|{0|in|}5285|5290|}
{2010006001|XXGobject_psameas_object|8846|0|14136|0|{metadata|in_metadata|1|0|}5290|5285|}
{2010601001|XXGgraph_vertex_vertex|8847|0|14137|0|{Normalize_Get_all_records_from_lkp|}5209|5291|}
{2010212001|XXGvertex_oport_oport|8848|0|14139|0|{0|out|}5291|5292|}
{2010213001|XXGoport_dst_flow|8849|0|14141|0|{0|}5292|5226|}
{2010212001|XXGvertex_oport_oport|8850|0|14142|0|{1|reject|}5291|5293|}
{2010212001|XXGvertex_oport_oport|8851|0|14144|0|{2|error|}5291|5294|}
{2010212001|XXGvertex_oport_oport|8852|0|14146|0|{3|log|}5291|5295|}
{2010211001|XXGvertex_iport_iport|8853|0|14148|0|{0|in|}5291|5296|}
{2010214001|XXGiport_src_flow|8854|0|14150|0|{0|}5296|5228|}
{2010007001|XXGobject_proto_object|8855|0|14151|0|{}5291|5297|}
{2010212001|XXGvertex_oport_oport|8856|0|14153|0|{0|out|}5297|5298|}
{2010006001|XXGobject_psameas_object|8857|0|14155|0|{metadata|out_metadata|1|0|}5298|5297|}
{2010212001|XXGvertex_oport_oport|8858|0|14156|0|{1|reject|}5297|5299|}
{2010006001|XXGobject_psameas_object|8859|0|14158|0|{metadata|reject_metadata|1|0|}5299|5297|}
{2010212001|XXGvertex_oport_oport|8860|0|14159|0|{2|error|}5297|5300|}
{2010006001|XXGobject_psameas_object|8861|0|14161|0|{metadata|error_metadata|1|0|}5300|5297|}
{2010212001|XXGvertex_oport_oport|8862|0|14162|0|{3|log|}5297|5301|}
{2010006001|XXGobject_psameas_object|8863|0|14164|0|{metadata|log_metadata|1|0|}5301|5297|}
{2010211001|XXGvertex_iport_iport|8864|0|14165|0|{0|in|}5297|5302|}
{2010006001|XXGobject_psameas_object|8865|0|14167|0|{metadata|in_metadata|1|0|}5302|5297|}
{2010601001|XXGgraph_vertex_vertex|8866|0|14168|0|{Replicate|}5209|5303|}
{2010212001|XXGvertex_oport_oport|8867|0|14170|0|{0|out|}5303|5304|}
{2010211001|XXGvertex_iport_iport|8868|0|14172|0|{0|in|}5303|5305|}
{2010214001|XXGiport_src_flow|8869|0|14174|0|{0|}5305|5225|}
{2010007001|XXGobject_proto_object|8870|0|14175|0|{}5303|5306|}
{2010212001|XXGvertex_oport_oport|8871|0|14177|0|{0|out|}5306|5307|}
{2010006001|XXGobject_psameas_object|8872|0|14179|0|{metadata|out_metadata|1|0|}5307|5306|}
{2010211001|XXGvertex_iport_iport|8873|0|14180|0|{0|in|}5306|5308|}
{2010006001|XXGobject_psameas_object|8874|0|14182|0|{metadata|in_metadata|1|0|}5308|5306|}
{2010601001|XXGgraph_vertex_vertex|8875|0|14183|0|{Replicate_1|}5209|5309|}
{2010212001|XXGvertex_oport_oport|8876|0|14185|0|{0|out|}5309|5310|}
{2010213001|XXGoport_dst_flow|8877|0|14187|0|{0|}5310|5228|}
{2010213001|XXGoport_dst_flow|8878|0|14188|0|{1|}5310|5221|}
{2010211001|XXGvertex_iport_iport|8879|0|14189|0|{0|in|}5309|5311|}
{2010214001|XXGiport_src_flow|8880|0|14191|0|{0|}5311|5227|}
{2010007001|XXGobject_proto_object|8881|0|14192|0|{}5309|5312|}
{2010212001|XXGvertex_oport_oport|8882|0|14194|0|{0|out|}5312|5313|}
{2010006001|XXGobject_psameas_object|8883|0|14196|0|{metadata|out_metadata|1|0|}5313|5312|}
{2010211001|XXGvertex_iport_iport|8884|0|14197|0|{0|in|}5312|5314|}
{2010006001|XXGobject_psameas_object|8885|0|14199|0|{metadata|in_metadata|1|0|}5314|5312|}
{2010601001|XXGgraph_vertex_vertex|8886|0|14200|0|{Sort_Remove_Dup_On_Hash|}5209|5315|}
{2010604001|XXGgraph_flow_flow|8887|0|14202|0|{Flow_3|}5315|5316|}
{2010604001|XXGgraph_flow_flow|8888|0|14204|0|{Flow_5|}5315|5317|}
{2010601001|XXGgraph_vertex_vertex|8889|0|14206|0|{Dedup_Sorted_1|}5315|5318|}
{2010212001|XXGvertex_oport_oport|8890|0|14208|0|{0|out|}5318|5319|}
{2010212001|XXGvertex_oport_oport|8891|0|14210|0|{1|dup|}5318|5320|}
{2010212001|XXGvertex_oport_oport|8892|0|14212|0|{2|reject|}5318|5321|}
{2010212001|XXGvertex_oport_oport|8893|0|14214|0|{3|error|}5318|5322|}
{2010212001|XXGvertex_oport_oport|8894|0|14216|0|{4|log|}5318|5323|}
{2010211001|XXGvertex_iport_iport|8895|0|14218|0|{0|in|}5318|5324|}
{2010214001|XXGiport_src_flow|8896|0|14220|0|{0|}5324|5317|}
{2010007001|XXGobject_proto_object|8897|0|14221|0|{}5318|5325|}
{2010212001|XXGvertex_oport_oport|8898|0|14223|0|{0|out|}5325|5326|}
{2010006001|XXGobject_psameas_object|8899|0|14225|0|{metadata|out_metadata|1|0|}5326|5325|}
{2010212001|XXGvertex_oport_oport|8900|0|14226|0|{1|dup|}5325|5327|}
{2010006001|XXGobject_psameas_object|8901|0|14228|0|{metadata|dup_metadata|1|0|}5327|5325|}
{2010212001|XXGvertex_oport_oport|8902|0|14229|0|{2|reject|}5325|5328|}
{2010006001|XXGobject_psameas_object|8903|0|14231|0|{metadata|reject_metadata|1|0|}5328|5325|}
{2010212001|XXGvertex_oport_oport|8904|0|14232|0|{3|error|}5325|5329|}
{2010006001|XXGobject_psameas_object|8905|0|14234|0|{metadata|error_metadata|1|0|}5329|5325|}
{2010212001|XXGvertex_oport_oport|8906|0|14235|0|{4|log|}5325|5330|}
{2010006001|XXGobject_psameas_object|8907|0|14237|0|{metadata|log_metadata|1|0|}5330|5325|}
{2010211001|XXGvertex_iport_iport|8908|0|14238|0|{0|in|}5325|5331|}
{2010006001|XXGobject_psameas_object|8909|0|14240|0|{metadata|in_metadata|1|0|}5331|5325|}
{2010601001|XXGgraph_vertex_vertex|8910|0|14241|0|{PBKS_dxf_hk_part1_|}5315|5332|}
{2010604001|XXGgraph_flow_flow|8911|0|14243|0|{Flow_1|}5332|5333|}
{2010601001|XXGgraph_vertex_vertex|8912|0|14245|0|{Partition_by_Key|}5332|5334|}
{2010212001|XXGvertex_oport_oport|8913|0|14247|0|{0|out|}5334|5335|}
{2010213001|XXGoport_dst_flow|8914|0|14249|0|{0|}5335|5333|}
{2010211001|XXGvertex_iport_iport|8915|0|14250|0|{0|in|}5334|5336|}
{2010601001|XXGgraph_vertex_vertex|8916|0|14252|0|{Sort|}5332|5337|}
{2010212001|XXGvertex_oport_oport|8917|0|14254|0|{0|out|}5337|5338|}
{2010211001|XXGvertex_iport_iport|8918|0|14256|0|{0|in|}5337|5339|}
{2010214001|XXGiport_src_flow|8919|0|14258|0|{0|}5339|5333|}
{2010212001|XXGvertex_oport_oport|8920|0|14259|0|{0|out0|}5332|5340|}
{2010216002|XXGoport_binding_oport|8921|0|14261|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}5340|5338|}
{2010213001|XXGoport_dst_flow|8922|0|14262|0|{0|}5340|5316|}
{2010211001|XXGvertex_iport_iport|8923|0|14263|0|{0|in0|}5332|5341|}
{2010215002|XXGiport_binding_iport|8924|0|14265|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}5341|5336|}
{2010007001|XXGobject_proto_object|8925|0|14266|0|{}5332|5342|}
{2010604001|XXGgraph_flow_flow|8926|0|14268|0|{Flow_1|}5342|5343|}
{2010601001|XXGgraph_vertex_vertex|8927|0|14270|0|{Partition_by_Key|}5342|5344|}
{2010212001|XXGvertex_oport_oport|8928|0|14272|0|{0|out|}5344|5345|}
{2010213001|XXGoport_dst_flow|8929|0|14274|0|{0|}5345|5343|}
{2010211001|XXGvertex_iport_iport|8930|0|14275|0|{0|in|}5344|5346|}
{2010007001|XXGobject_proto_object|8931|0|14277|0|{}5344|5347|}
{2010212001|XXGvertex_oport_oport|8932|0|14279|0|{0|out|}5347|5348|}
{2010006001|XXGobject_psameas_object|8933|0|14281|0|{metadata|out_metadata|1|0|}5348|5347|}
{2010211001|XXGvertex_iport_iport|8934|0|14282|0|{0|in|}5347|5349|}
{2010006001|XXGobject_psameas_object|8935|0|14284|0|{metadata|in_metadata|1|0|}5349|5347|}
{2010006001|XXGobject_psameas_object|8936|0|14285|0|{Layout|InputLayout|1|0|}5344|5342|}
{2010006001|XXGobject_psameas_object|8937|0|14286|0|{key|Key|1|0|}5344|5342|}
{2010601001|XXGgraph_vertex_vertex|8938|0|14287|0|{Sort|}5342|5350|}
{2010212001|XXGvertex_oport_oport|8939|0|14289|0|{0|out|}5350|5351|}
{2010211001|XXGvertex_iport_iport|8940|0|14291|0|{0|in|}5350|5352|}
{2010214001|XXGiport_src_flow|8941|0|14293|0|{0|}5352|5343|}
{2010007001|XXGobject_proto_object|8942|0|14294|0|{}5350|5353|}
{2010212001|XXGvertex_oport_oport|8943|0|14296|0|{0|out|}5353|5354|}
{2010006001|XXGobject_psameas_object|8944|0|14298|0|{metadata|out_metadata|1|0|}5354|5353|}
{2010211001|XXGvertex_iport_iport|8945|0|14299|0|{0|in|}5353|5355|}
{2010006001|XXGobject_psameas_object|8946|0|14301|0|{metadata|in_metadata|1|0|}5355|5353|}
{2010006001|XXGobject_psameas_object|8947|0|14302|0|{Layout|OutputLayout|1|0|}5350|5342|}
{2010006001|XXGobject_psameas_object|8948|0|14303|0|{key|Key|1|0|}5350|5342|}
{2010006001|XXGobject_psameas_object|8949|0|14304|0|{max_core|Max_core|1|0|}5350|5342|}
{2010212001|XXGvertex_oport_oport|8950|0|14305|0|{0|out0|}5342|5356|}
{2010216002|XXGoport_binding_oport|8951|0|14307|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}5356|5351|}
{2010211001|XXGvertex_iport_iport|8952|0|14308|0|{0|in0|}5342|5357|}
{2010215002|XXGiport_binding_iport|8953|0|14310|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}5357|5346|}
{2010006001|XXGobject_psameas_object|8954|0|14311|0|{InputLayout|Layout|0|0|}5332|5261|}
{2010601001|XXGgraph_vertex_vertex|8955|0|14312|0|{Sort_within_Groups|}5315|5358|}
{2010212001|XXGvertex_oport_oport|8956|0|14314|0|{0|out|}5358|5359|}
{2010213001|XXGoport_dst_flow|8957|0|14316|0|{0|}5359|5317|}
{2010211001|XXGvertex_iport_iport|8958|0|14317|0|{0|in|}5358|5360|}
{2010214001|XXGiport_src_flow|8959|0|14319|0|{0|}5360|5316|}
{2010007001|XXGobject_proto_object|8960|0|14320|0|{}5358|5361|}
{2010212001|XXGvertex_oport_oport|8961|0|14322|0|{0|out|}5361|5362|}
{2010006001|XXGobject_psameas_object|8962|0|14324|0|{metadata|out_metadata|1|0|}5362|5361|}
{2010211001|XXGvertex_iport_iport|8963|0|14325|0|{0|in|}5361|5363|}
{2010006001|XXGobject_psameas_object|8964|0|14327|0|{metadata|in_metadata|1|0|}5363|5361|}
{2010212001|XXGvertex_oport_oport|8965|0|14328|0|{0|out0|}5315|5364|}
{2010216002|XXGoport_binding_oport|8966|0|14330|0|{.5|.5|{0|}14672|}5364|5319|}
{2010213001|XXGoport_dst_flow|8967|0|14331|0|{0|}5364|5227|}
{2010212001|XXGvertex_oport_oport|8968|0|14332|0|{1|out1|}5315|5365|}
{2010216002|XXGoport_binding_oport|8969|0|14334|0|{.5|.5|{0|}14673|}5365|5320|}
{2010213001|XXGoport_dst_flow|8970|0|14335|0|{0|}5365|5232|}
{2010211001|XXGvertex_iport_iport|8971|0|14336|0|{0|in0|}5315|5366|}
{2010215002|XXGiport_binding_iport|8972|0|14338|0|{.5|.5|{0|}14671|}5366|5341|}
{2010214001|XXGiport_src_flow|8973|0|14339|0|{0|}5366|5224|}
{2010601001|XXGgraph_vertex_vertex|8974|0|14340|0|{Sort_on_Adjusted_Natural_Keys|}5209|5367|}
{2010212001|XXGvertex_oport_oport|8975|0|14342|0|{0|out|}5367|5368|}
{2010213001|XXGoport_dst_flow|8976|0|14344|0|{0|}5368|5220|}
{2010211001|XXGvertex_iport_iport|8977|0|14345|0|{0|in|}5367|5369|}
{2010214001|XXGiport_src_flow|8978|0|14347|0|{0|}5369|5222|}
{2010007001|XXGobject_proto_object|8979|0|14348|0|{}5367|5370|}
{2010212001|XXGvertex_oport_oport|8980|0|14350|0|{0|out|}5370|5371|}
{2010006001|XXGobject_psameas_object|8981|0|14352|0|{metadata|out_metadata|1|0|}5371|5370|}
{2010211001|XXGvertex_iport_iport|8982|0|14353|0|{0|in|}5370|5372|}
{2010006001|XXGobject_psameas_object|8983|0|14355|0|{metadata|in_metadata|1|0|}5372|5370|}
{2010601001|XXGgraph_vertex_vertex|8984|0|14356|0|{Trash_1|}5209|5373|}
{2010211001|XXGvertex_iport_iport|8985|0|14358|0|{0|in|}5373|5374|}
{2010214001|XXGiport_src_flow|8986|0|14360|0|{0|}5374|5230|}
{2010007001|XXGobject_proto_object|8987|0|14361|0|{}5373|5375|}
{2010211001|XXGvertex_iport_iport|8988|0|14363|0|{0|in|}5375|5376|}
{2010006001|XXGobject_psameas_object|8989|0|14365|0|{metadata|in_metadata|1|0|}5376|5375|}
{2010601001|XXGgraph_vertex_vertex|8990|0|14366|0|{Trash_2|}5209|5377|}
{2010211001|XXGvertex_iport_iport|8991|0|14368|0|{0|in|}5377|5378|}
{2010214001|XXGiport_src_flow|8992|0|14370|0|{0|}5378|5229|}
{2010007001|XXGobject_proto_object|8993|0|14371|0|{}5377|5379|}
{2010211001|XXGvertex_iport_iport|8994|0|14373|0|{0|in|}5379|5380|}
{2010006001|XXGobject_psameas_object|8995|0|14375|0|{metadata|in_metadata|1|0|}5380|5379|}
{2010601001|XXGgraph_vertex_vertex|8996|0|14376|0|{Trash_3|}5209|5381|}
{2010211001|XXGvertex_iport_iport|8997|0|14378|0|{0|in|}5381|5382|}
{2010214001|XXGiport_src_flow|8998|0|14380|0|{0|}5382|5232|}
{2010007001|XXGobject_proto_object|8999|0|14381|0|{}5381|5383|}
{2010211001|XXGvertex_iport_iport|9000|0|14383|0|{0|in|}5383|5384|}
{2010006001|XXGobject_psameas_object|9001|0|14385|0|{metadata|in_metadata|1|0|}5384|5383|}
{2010212001|XXGvertex_oport_oport|9002|0|14386|0|{0|out0|}5209|5385|}
{2010216002|XXGoport_binding_oport|9003|0|14388|0|{.5|.5|{0|}14899|}5385|5304|}
{2010213001|XXGoport_dst_flow|9004|0|14389|0|{0|}5385|5206|}
{2010211001|XXGvertex_iport_iport|9005|0|14390|0|{0|in0|}5209|5386|}
{2010215002|XXGiport_binding_iport|9006|0|14392|0|{.5|.5|{0|}14898|}5386|5266|}
{2010214001|XXGiport_src_flow|9007|0|14393|0|{0|}5386|5204|}
{2010601001|XXGgraph_vertex_vertex|9008|0|14394|0|{Get_Last_Lookup_Record|}5199|5387|}
{2010605001|XXGgraph_legend_legend|9009|0|14396|0|{0|}5387|5388|}
{2010241001|XXGlegend_face_face|9010|0|14398|0|{}5388|5389|}
{2010605001|XXGgraph_legend_legend|9011|0|14400|0|{1|}5387|5390|}
{2010241001|XXGlegend_face_face|9012|0|14402|0|{}5390|5391|}
{2010605001|XXGgraph_legend_legend|9013|0|14404|0|{2|}5387|5392|}
{2010241001|XXGlegend_face_face|9014|0|14406|0|{}5392|5393|}
{2010605001|XXGgraph_legend_legend|9015|0|14408|0|{3|}5387|5394|}
{2010241001|XXGlegend_face_face|9016|0|14410|0|{}5394|5395|}
{2010604001|XXGgraph_flow_flow|9017|0|14412|0|{Flow_1|}5387|5396|}
{2010604001|XXGgraph_flow_flow|9018|0|14414|0|{Flow_2|}5387|5397|}
{2010604001|XXGgraph_flow_flow|9019|0|14416|0|{Flow_3|}5387|5398|}
{2010604001|XXGgraph_flow_flow|9020|0|14418|0|{Flow_4|}5387|5399|}
{2010604001|XXGgraph_flow_flow|9021|0|14420|0|{Flow_5|}5387|5400|}
{2010604001|XXGgraph_flow_flow|9022|0|14422|0|{Flow_6|}5387|5401|}
{2010604001|XXGgraph_flow_flow|9023|0|14424|0|{Flow_7|}5387|5402|}
{2010604001|XXGgraph_flow_flow|9024|0|14426|0|{Flow_8|}5387|5403|}
{2010604001|XXGgraph_flow_flow|9025|0|14428|0|{Flow_9|}5387|5404|}
{2010601001|XXGgraph_vertex_vertex|9026|0|14430|0|{Dedup_Sorted|}5387|5405|}
{2010212001|XXGvertex_oport_oport|9027|0|14432|0|{0|out|}5405|5406|}
{2010212001|XXGvertex_oport_oport|9028|0|14434|0|{1|dup|}5405|5407|}
{2010213001|XXGoport_dst_flow|9029|0|14436|0|{0|}5407|5403|}
{2010212001|XXGvertex_oport_oport|9030|0|14437|0|{2|reject|}5405|5408|}
{2010212001|XXGvertex_oport_oport|9031|0|14439|0|{3|error|}5405|5409|}
{2010212001|XXGvertex_oport_oport|9032|0|14441|0|{4|log|}5405|5410|}
{2010211001|XXGvertex_iport_iport|9033|0|14443|0|{0|in|}5405|5411|}
{2010214001|XXGiport_src_flow|9034|0|14445|0|{0|}5411|5398|}
{2010007001|XXGobject_proto_object|9035|0|14446|0|{}5405|5412|}
{2010212001|XXGvertex_oport_oport|9036|0|14448|0|{0|out|}5412|5413|}
{2010006001|XXGobject_psameas_object|9037|0|14450|0|{metadata|out_metadata|1|0|}5413|5412|}
{2010212001|XXGvertex_oport_oport|9038|0|14451|0|{1|dup|}5412|5414|}
{2010006001|XXGobject_psameas_object|9039|0|14453|0|{metadata|dup_metadata|1|0|}5414|5412|}
{2010212001|XXGvertex_oport_oport|9040|0|14454|0|{2|reject|}5412|5415|}
{2010006001|XXGobject_psameas_object|9041|0|14456|0|{metadata|reject_metadata|1|0|}5415|5412|}
{2010212001|XXGvertex_oport_oport|9042|0|14457|0|{3|error|}5412|5416|}
{2010006001|XXGobject_psameas_object|9043|0|14459|0|{metadata|error_metadata|1|0|}5416|5412|}
{2010212001|XXGvertex_oport_oport|9044|0|14460|0|{4|log|}5412|5417|}
{2010006001|XXGobject_psameas_object|9045|0|14462|0|{metadata|log_metadata|1|0|}5417|5412|}
{2010211001|XXGvertex_iport_iport|9046|0|14463|0|{0|in|}5412|5418|}
{2010006001|XXGobject_psameas_object|9047|0|14465|0|{metadata|in_metadata|1|0|}5418|5412|}
{2010601001|XXGgraph_vertex_vertex|9048|0|14466|0|{FBE_filter_matching_lkp_record|}5387|5419|}
{2010212001|XXGvertex_oport_oport|9049|0|14468|0|{0|out|}5419|5420|}
{2010213001|XXGoport_dst_flow|9050|0|14470|0|{0|}5420|5397|}
{2010212001|XXGvertex_oport_oport|9051|0|14471|0|{1|deselect|}5419|5421|}
{2010213001|XXGoport_dst_flow|9052|0|14473|0|{0|}5421|5404|}
{2010212001|XXGvertex_oport_oport|9053|0|14474|0|{2|reject|}5419|5422|}
{2010212001|XXGvertex_oport_oport|9054|0|14476|0|{3|error|}5419|5423|}
{2010212001|XXGvertex_oport_oport|9055|0|14478|0|{4|log|}5419|5424|}
{2010211001|XXGvertex_iport_iport|9056|0|14480|0|{0|in|}5419|5425|}
{2010214001|XXGiport_src_flow|9057|0|14482|0|{0|}5425|5400|}
{2010007001|XXGobject_proto_object|9058|0|14483|0|{}5419|5426|}
{2010212001|XXGvertex_oport_oport|9059|0|14485|0|{0|out|}5426|5427|}
{2010006001|XXGobject_psameas_object|9060|0|14487|0|{metadata|out_metadata|1|0|}5427|5426|}
{2010212001|XXGvertex_oport_oport|9061|0|14488|0|{1|deselect|}5426|5428|}
{2010006001|XXGobject_psameas_object|9062|0|14490|0|{metadata|deselect_metadata|1|0|}5428|5426|}
{2010212001|XXGvertex_oport_oport|9063|0|14491|0|{2|reject|}5426|5429|}
{2010006001|XXGobject_psameas_object|9064|0|14493|0|{metadata|reject_metadata|1|0|}5429|5426|}
{2010212001|XXGvertex_oport_oport|9065|0|14494|0|{3|error|}5426|5430|}
{2010006001|XXGobject_psameas_object|9066|0|14496|0|{metadata|error_metadata|1|0|}5430|5426|}
{2010212001|XXGvertex_oport_oport|9067|0|14497|0|{4|log|}5426|5431|}
{2010006001|XXGobject_psameas_object|9068|0|14499|0|{metadata|log_metadata|1|0|}5431|5426|}
{2010211001|XXGvertex_iport_iport|9069|0|14500|0|{0|in|}5426|5432|}
{2010006001|XXGobject_psameas_object|9070|0|14502|0|{metadata|in_metadata|1|0|}5432|5426|}
{2010601001|XXGgraph_vertex_vertex|9071|0|14503|0|{RFMT_Get_Hash_On_NK|}5387|5433|}
{2010212001|XXGvertex_oport_oport|9072|0|14505|0|{0|out0|}5433|5434|}
{2010213001|XXGoport_dst_flow|9073|0|14507|0|{0|}5434|5396|}
{2010212001|XXGvertex_oport_oport|9074|0|14508|0|{1|reject0|}5433|5435|}
{2010212001|XXGvertex_oport_oport|9075|0|14510|0|{2|error0|}5433|5436|}
{2010212001|XXGvertex_oport_oport|9076|0|14512|0|{3|log|}5433|5437|}
{2010211001|XXGvertex_iport_iport|9077|0|14514|0|{0|in|}5433|5438|}
{2010007001|XXGobject_proto_object|9078|0|14516|0|{}5433|5439|}
{2010212001|XXGvertex_oport_oport|9079|0|14518|0|{0|out0|}5439|5440|}
{2010006001|XXGobject_psameas_object|9080|0|14520|0|{metadata|out0_metadata|1|0|}5440|5439|}
{2010006001|XXGobject_psameas_object|9081|0|14521|0|{transform0|transform0|1|0|}5440|5439|}
{2010212001|XXGvertex_oport_oport|9082|0|14522|0|{1|reject0|}5439|5441|}
{2010006001|XXGobject_psameas_object|9083|0|14524|0|{metadata|reject0_metadata|1|0|}5441|5439|}
{2010212001|XXGvertex_oport_oport|9084|0|14525|0|{2|error0|}5439|5442|}
{2010006001|XXGobject_psameas_object|9085|0|14527|0|{metadata|error0_metadata|1|0|}5442|5439|}
{2010212001|XXGvertex_oport_oport|9086|0|14528|0|{3|log|}5439|5443|}
{2010006001|XXGobject_psameas_object|9087|0|14530|0|{metadata|log_metadata|1|0|}5443|5439|}
{2010211001|XXGvertex_iport_iport|9088|0|14531|0|{0|in|}5439|5444|}
{2010006001|XXGobject_psameas_object|9089|0|14533|0|{metadata|in_metadata|1|0|}5444|5439|}
{2010601001|XXGgraph_vertex_vertex|9090|0|14534|0|{RFMT_Lookup_with_IDS|}5387|5445|}
{2010212001|XXGvertex_oport_oport|9091|0|14536|0|{0|out0|}5445|5446|}
{2010213001|XXGoport_dst_flow|9092|0|14538|0|{0|}5446|5399|}
{2010212001|XXGvertex_oport_oport|9093|0|14539|0|{1|reject0|}5445|5447|}
{2010212001|XXGvertex_oport_oport|9094|0|14541|0|{2|error0|}5445|5448|}
{2010212001|XXGvertex_oport_oport|9095|0|14543|0|{3|log|}5445|5449|}
{2010211001|XXGvertex_iport_iport|9096|0|14545|0|{0|in|}5445|5450|}
{2010214001|XXGiport_src_flow|9097|0|14547|0|{0|}5450|5401|}
{2010007001|XXGobject_proto_object|9098|0|14548|0|{}5445|5451|}
{2010212001|XXGvertex_oport_oport|9099|0|14550|0|{0|out0|}5451|5452|}
{2010006001|XXGobject_psameas_object|9100|0|14552|0|{metadata|out0_metadata|1|0|}5452|5451|}
{2010006001|XXGobject_psameas_object|9101|0|14553|0|{transform0|transform0|1|0|}5452|5451|}
{2010212001|XXGvertex_oport_oport|9102|0|14554|0|{1|reject0|}5451|5453|}
{2010006001|XXGobject_psameas_object|9103|0|14556|0|{metadata|reject0_metadata|1|0|}5453|5451|}
{2010212001|XXGvertex_oport_oport|9104|0|14557|0|{2|error0|}5451|5454|}
{2010006001|XXGobject_psameas_object|9105|0|14559|0|{metadata|error0_metadata|1|0|}5454|5451|}
{2010212001|XXGvertex_oport_oport|9106|0|14560|0|{3|log|}5451|5455|}
{2010006001|XXGobject_psameas_object|9107|0|14562|0|{metadata|log_metadata|1|0|}5455|5451|}
{2010211001|XXGvertex_iport_iport|9108|0|14563|0|{0|in|}5451|5456|}
{2010006001|XXGobject_psameas_object|9109|0|14565|0|{metadata|in_metadata|1|0|}5456|5451|}
{2010601001|XXGgraph_vertex_vertex|9110|0|14566|0|{Sort_De_dup|}5387|5457|}
{2010604001|XXGgraph_flow_flow|9111|0|14568|0|{Flow_10|}5457|5458|}
{2010604001|XXGgraph_flow_flow|9112|0|14570|0|{Flow_4|}5457|5459|}
{2010244001|XXGflow_watcher_watcher|9113|0|14572|0|{}5459|5460|}
{2010601001|XXGgraph_vertex_vertex|9114|0|14574|0|{Dedup_Sorted_1|}5457|5461|}
{2010212001|XXGvertex_oport_oport|9115|0|14576|0|{0|out|}5461|5462|}
{2010212001|XXGvertex_oport_oport|9116|0|14578|0|{1|dup|}5461|5463|}
{2010212001|XXGvertex_oport_oport|9117|0|14580|0|{2|reject|}5461|5464|}
{2010212001|XXGvertex_oport_oport|9118|0|14582|0|{3|error|}5461|5465|}
{2010212001|XXGvertex_oport_oport|9119|0|14584|0|{4|log|}5461|5466|}
{2010211001|XXGvertex_iport_iport|9120|0|14586|0|{0|in|}5461|5467|}
{2010214001|XXGiport_src_flow|9121|0|14588|0|{0|}5467|5458|}
{2010007001|XXGobject_proto_object|9122|0|14589|0|{}5461|5468|}
{2010212001|XXGvertex_oport_oport|9123|0|14591|0|{0|out|}5468|5469|}
{2010006001|XXGobject_psameas_object|9124|0|14593|0|{metadata|out_metadata|1|0|}5469|5468|}
{2010212001|XXGvertex_oport_oport|9125|0|14594|0|{1|dup|}5468|5470|}
{2010006001|XXGobject_psameas_object|9126|0|14596|0|{metadata|dup_metadata|1|0|}5470|5468|}
{2010212001|XXGvertex_oport_oport|9127|0|14597|0|{2|reject|}5468|5471|}
{2010006001|XXGobject_psameas_object|9128|0|14599|0|{metadata|reject_metadata|1|0|}5471|5468|}
{2010212001|XXGvertex_oport_oport|9129|0|14600|0|{3|error|}5468|5472|}
{2010006001|XXGobject_psameas_object|9130|0|14602|0|{metadata|error_metadata|1|0|}5472|5468|}
{2010212001|XXGvertex_oport_oport|9131|0|14603|0|{4|log|}5468|5473|}
{2010006001|XXGobject_psameas_object|9132|0|14605|0|{metadata|log_metadata|1|0|}5473|5468|}
{2010211001|XXGvertex_iport_iport|9133|0|14606|0|{0|in|}5468|5474|}
{2010006001|XXGobject_psameas_object|9134|0|14608|0|{metadata|in_metadata|1|0|}5474|5468|}
{2010601001|XXGgraph_vertex_vertex|9135|0|14609|0|{PBKS_dxf_hk_part1_|}5457|5475|}
{2010604001|XXGgraph_flow_flow|9136|0|14611|0|{Flow_1|}5475|5476|}
{2010601001|XXGgraph_vertex_vertex|9137|0|14613|0|{Partition_by_Key|}5475|5477|}
{2010212001|XXGvertex_oport_oport|9138|0|14615|0|{0|out|}5477|5478|}
{2010213001|XXGoport_dst_flow|9139|0|14617|0|{0|}5478|5476|}
{2010211001|XXGvertex_iport_iport|9140|0|14618|0|{0|in|}5477|5479|}
{2010601001|XXGgraph_vertex_vertex|9141|0|14620|0|{Sort|}5475|5480|}
{2010212001|XXGvertex_oport_oport|9142|0|14622|0|{0|out|}5480|5481|}
{2010211001|XXGvertex_iport_iport|9143|0|14624|0|{0|in|}5480|5482|}
{2010214001|XXGiport_src_flow|9144|0|14626|0|{0|}5482|5476|}
{2010212001|XXGvertex_oport_oport|9145|0|14627|0|{0|out0|}5475|5483|}
{2010216002|XXGoport_binding_oport|9146|0|14629|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}5483|5481|}
{2010213001|XXGoport_dst_flow|9147|0|14630|0|{0|}5483|5459|}
{2010211001|XXGvertex_iport_iport|9148|0|14631|0|{0|in0|}5475|5484|}
{2010215002|XXGiport_binding_iport|9149|0|14633|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}5484|5479|}
{2010007001|XXGobject_proto_object|9150|0|14634|0|{}5475|5485|}
{2010604001|XXGgraph_flow_flow|9151|0|14636|0|{Flow_1|}5485|5486|}
{2010601001|XXGgraph_vertex_vertex|9152|0|14638|0|{Partition_by_Key|}5485|5487|}
{2010212001|XXGvertex_oport_oport|9153|0|14640|0|{0|out|}5487|5488|}
{2010213001|XXGoport_dst_flow|9154|0|14642|0|{0|}5488|5486|}
{2010211001|XXGvertex_iport_iport|9155|0|14643|0|{0|in|}5487|5489|}
{2010007001|XXGobject_proto_object|9156|0|14645|0|{}5487|5490|}
{2010212001|XXGvertex_oport_oport|9157|0|14647|0|{0|out|}5490|5491|}
{2010006001|XXGobject_psameas_object|9158|0|14649|0|{metadata|out_metadata|1|0|}5491|5490|}
{2010211001|XXGvertex_iport_iport|9159|0|14650|0|{0|in|}5490|5492|}
{2010006001|XXGobject_psameas_object|9160|0|14652|0|{metadata|in_metadata|1|0|}5492|5490|}
{2010006001|XXGobject_psameas_object|9161|0|14653|0|{Layout|InputLayout|1|0|}5487|5485|}
{2010006001|XXGobject_psameas_object|9162|0|14654|0|{key|Key|1|0|}5487|5485|}
{2010601001|XXGgraph_vertex_vertex|9163|0|14655|0|{Sort|}5485|5493|}
{2010212001|XXGvertex_oport_oport|9164|0|14657|0|{0|out|}5493|5494|}
{2010211001|XXGvertex_iport_iport|9165|0|14659|0|{0|in|}5493|5495|}
{2010214001|XXGiport_src_flow|9166|0|14661|0|{0|}5495|5486|}
{2010007001|XXGobject_proto_object|9167|0|14662|0|{}5493|5496|}
{2010212001|XXGvertex_oport_oport|9168|0|14664|0|{0|out|}5496|5497|}
{2010006001|XXGobject_psameas_object|9169|0|14666|0|{metadata|out_metadata|1|0|}5497|5496|}
{2010211001|XXGvertex_iport_iport|9170|0|14667|0|{0|in|}5496|5498|}
{2010006001|XXGobject_psameas_object|9171|0|14669|0|{metadata|in_metadata|1|0|}5498|5496|}
{2010006001|XXGobject_psameas_object|9172|0|14670|0|{Layout|OutputLayout|1|0|}5493|5485|}
{2010006001|XXGobject_psameas_object|9173|0|14671|0|{key|Key|1|0|}5493|5485|}
{2010006001|XXGobject_psameas_object|9174|0|14672|0|{max_core|Max_core|1|0|}5493|5485|}
{2010212001|XXGvertex_oport_oport|9175|0|14673|0|{0|out0|}5485|5499|}
{2010216002|XXGoport_binding_oport|9176|0|14675|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}5499|5494|}
{2010211001|XXGvertex_iport_iport|9177|0|14676|0|{0|in0|}5485|5500|}
{2010215002|XXGiport_binding_iport|9178|0|14678|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}5500|5489|}
{2010601001|XXGgraph_vertex_vertex|9179|0|14679|0|{Sort_within_Groups_1|}5457|5501|}
{2010212001|XXGvertex_oport_oport|9180|0|14681|0|{0|out|}5501|5502|}
{2010213001|XXGoport_dst_flow|9181|0|14683|0|{0|}5502|5458|}
{2010211001|XXGvertex_iport_iport|9182|0|14684|0|{0|in|}5501|5503|}
{2010214001|XXGiport_src_flow|9183|0|14686|0|{0|}5503|5459|}
{2010007001|XXGobject_proto_object|9184|0|14687|0|{}5501|5504|}
{2010212001|XXGvertex_oport_oport|9185|0|14689|0|{0|out|}5504|5505|}
{2010006001|XXGobject_psameas_object|9186|0|14691|0|{metadata|out_metadata|1|0|}5505|5504|}
{2010211001|XXGvertex_iport_iport|9187|0|14692|0|{0|in|}5504|5506|}
{2010006001|XXGobject_psameas_object|9188|0|14694|0|{metadata|in_metadata|1|0|}5506|5504|}
{2010212001|XXGvertex_oport_oport|9189|0|14695|0|{0|out0|}5457|5507|}
{2010216002|XXGoport_binding_oport|9190|0|14697|0|{.5|.5|{0|}7792|}5507|5462|}
{2010213001|XXGoport_dst_flow|9191|0|14698|0|{0|}5507|5401|}
{2010212001|XXGvertex_oport_oport|9192|0|14699|0|{1|out1|}5457|5508|}
{2010216002|XXGoport_binding_oport|9193|0|14701|0|{.5|.5|{0|}7793|}5508|5463|}
{2010213001|XXGoport_dst_flow|9194|0|14702|0|{0|}5508|5402|}
{2010211001|XXGvertex_iport_iport|9195|0|14703|0|{0|in0|}5457|5509|}
{2010215002|XXGiport_binding_iport|9196|0|14705|0|{.5|.5|{0|}7791|}5509|5484|}
{2010214001|XXGiport_src_flow|9197|0|14706|0|{0|}5509|5396|}
{2010601001|XXGgraph_vertex_vertex|9198|0|14707|0|{Sort_within_Groups|}5387|5510|}
{2010212001|XXGvertex_oport_oport|9199|0|14709|0|{0|out|}5510|5511|}
{2010213001|XXGoport_dst_flow|9200|0|14711|0|{0|}5511|5398|}
{2010211001|XXGvertex_iport_iport|9201|0|14712|0|{0|in|}5510|5512|}
{2010214001|XXGiport_src_flow|9202|0|14714|0|{0|}5512|5397|}
{2010007001|XXGobject_proto_object|9203|0|14715|0|{}5510|5513|}
{2010212001|XXGvertex_oport_oport|9204|0|14717|0|{0|out|}5513|5514|}
{2010006001|XXGobject_psameas_object|9205|0|14719|0|{metadata|out_metadata|1|0|}5514|5513|}
{2010211001|XXGvertex_iport_iport|9206|0|14720|0|{0|in|}5513|5515|}
{2010006001|XXGobject_psameas_object|9207|0|14722|0|{metadata|in_metadata|1|0|}5515|5513|}
{2010601001|XXGgraph_vertex_vertex|9208|0|14723|0|{Trash|}5387|5516|}
{2010211001|XXGvertex_iport_iport|9209|0|14725|0|{0|in|}5516|5517|}
{2010214001|XXGiport_src_flow|9210|0|14727|0|{0|}5517|5402|}
{2010007001|XXGobject_proto_object|9211|0|14728|0|{}5516|5518|}
{2010211001|XXGvertex_iport_iport|9212|0|14730|0|{0|in|}5518|5519|}
{2010006001|XXGobject_psameas_object|9213|0|14732|0|{metadata|in_metadata|1|0|}5519|5518|}
{2010601001|XXGgraph_vertex_vertex|9214|0|14733|0|{Trash_1|}5387|5520|}
{2010211001|XXGvertex_iport_iport|9215|0|14735|0|{0|in|}5520|5521|}
{2010214001|XXGiport_src_flow|9216|0|14737|0|{0|}5521|5403|}
{2010007001|XXGobject_proto_object|9217|0|14738|0|{}5520|5522|}
{2010211001|XXGvertex_iport_iport|9218|0|14740|0|{0|in|}5522|5523|}
{2010006001|XXGobject_psameas_object|9219|0|14742|0|{metadata|in_metadata|1|0|}5523|5522|}
{2010601001|XXGgraph_vertex_vertex|9220|0|14743|0|{Trash_2|}5387|5524|}
{2010211001|XXGvertex_iport_iport|9221|0|14745|0|{0|in|}5524|5525|}
{2010214001|XXGiport_src_flow|9222|0|14747|0|{0|}5525|5404|}
{2010007001|XXGobject_proto_object|9223|0|14748|0|{}5524|5526|}
{2010211001|XXGvertex_iport_iport|9224|0|14750|0|{0|in|}5526|5527|}
{2010006001|XXGobject_psameas_object|9225|0|14752|0|{metadata|in_metadata|1|0|}5527|5526|}
{2010601001|XXGgraph_vertex_vertex|9226|0|14753|0|{Two_Step_Lookup|}5387|5528|}
{2010605001|XXGgraph_legend_legend|9227|0|14755|0|{0|}5528|5529|}
{2010241001|XXGlegend_face_face|9228|0|14757|0|{}5529|5530|}
{2010604001|XXGgraph_flow_flow|9229|0|14759|0|{Flow_1|}5528|5531|}
{2010604001|XXGgraph_flow_flow|9230|0|14761|0|{Flow_2|}5528|5532|}
{2010604001|XXGgraph_flow_flow|9231|0|14763|0|{Flow_3|}5528|5533|}
{2010604001|XXGgraph_flow_flow|9232|0|14765|0|{Flow_4|}5528|5534|}
{2010604001|XXGgraph_flow_flow|9233|0|14767|0|{Flow_5|}5528|5535|}
{2010604001|XXGgraph_flow_flow|9234|0|14769|0|{Flow_6|}5528|5536|}
{2010601001|XXGgraph_vertex_vertex|9235|0|14771|0|{FBE_Pass_Only_Matching_Rec|}5528|5537|}
{2010212001|XXGvertex_oport_oport|9236|0|14773|0|{0|out|}5537|5538|}
{2010213001|XXGoport_dst_flow|9237|0|14775|0|{0|}5538|5535|}
{2010212001|XXGvertex_oport_oport|9238|0|14776|0|{1|deselect|}5537|5539|}
{2010213001|XXGoport_dst_flow|9239|0|14778|0|{0|}5539|5536|}
{2010212001|XXGvertex_oport_oport|9240|0|14779|0|{2|reject|}5537|5540|}
{2010212001|XXGvertex_oport_oport|9241|0|14781|0|{3|error|}5537|5541|}
{2010212001|XXGvertex_oport_oport|9242|0|14783|0|{4|log|}5537|5542|}
{2010211001|XXGvertex_iport_iport|9243|0|14785|0|{0|in|}5537|5543|}
{2010214001|XXGiport_src_flow|9244|0|14787|0|{0|}5543|5534|}
{2010007001|XXGobject_proto_object|9245|0|14788|0|{}5537|5544|}
{2010212001|XXGvertex_oport_oport|9246|0|14790|0|{0|out|}5544|5545|}
{2010006001|XXGobject_psameas_object|9247|0|14792|0|{metadata|out_metadata|1|0|}5545|5544|}
{2010212001|XXGvertex_oport_oport|9248|0|14793|0|{1|deselect|}5544|5546|}
{2010006001|XXGobject_psameas_object|9249|0|14795|0|{metadata|deselect_metadata|1|0|}5546|5544|}
{2010212001|XXGvertex_oport_oport|9250|0|14796|0|{2|reject|}5544|5547|}
{2010006001|XXGobject_psameas_object|9251|0|14798|0|{metadata|reject_metadata|1|0|}5547|5544|}
{2010212001|XXGvertex_oport_oport|9252|0|14799|0|{3|error|}5544|5548|}
{2010006001|XXGobject_psameas_object|9253|0|14801|0|{metadata|error_metadata|1|0|}5548|5544|}
{2010212001|XXGvertex_oport_oport|9254|0|14802|0|{4|log|}5544|5549|}
{2010006001|XXGobject_psameas_object|9255|0|14804|0|{metadata|log_metadata|1|0|}5549|5544|}
{2010211001|XXGvertex_iport_iport|9256|0|14805|0|{0|in|}5544|5550|}
{2010006001|XXGobject_psameas_object|9257|0|14807|0|{metadata|in_metadata|1|0|}5550|5544|}
{2010601001|XXGgraph_vertex_vertex|9258|0|14808|0|{FBE_filter_matching_lkp_record|}5528|5551|}
{2010212001|XXGvertex_oport_oport|9259|0|14810|0|{0|out|}5551|5552|}
{2010213001|XXGoport_dst_flow|9260|0|14812|0|{0|}5552|5533|}
{2010212001|XXGvertex_oport_oport|9261|0|14813|0|{1|deselect|}5551|5553|}
{2010213001|XXGoport_dst_flow|9262|0|14815|0|{0|}5553|5531|}
{2010212001|XXGvertex_oport_oport|9263|0|14816|0|{2|reject|}5551|5554|}
{2010212001|XXGvertex_oport_oport|9264|0|14818|0|{3|error|}5551|5555|}
{2010212001|XXGvertex_oport_oport|9265|0|14820|0|{4|log|}5551|5556|}
{2010211001|XXGvertex_iport_iport|9266|0|14822|0|{0|in|}5551|5557|}
{2010007001|XXGobject_proto_object|9267|0|14824|0|{}5551|5558|}
{2010212001|XXGvertex_oport_oport|9268|0|14826|0|{0|out|}5558|5559|}
{2010006001|XXGobject_psameas_object|9269|0|14828|0|{metadata|out_metadata|1|0|}5559|5558|}
{2010212001|XXGvertex_oport_oport|9270|0|14829|0|{1|deselect|}5558|5560|}
{2010006001|XXGobject_psameas_object|9271|0|14831|0|{metadata|deselect_metadata|1|0|}5560|5558|}
{2010212001|XXGvertex_oport_oport|9272|0|14832|0|{2|reject|}5558|5561|}
{2010006001|XXGobject_psameas_object|9273|0|14834|0|{metadata|reject_metadata|1|0|}5561|5558|}
{2010212001|XXGvertex_oport_oport|9274|0|14835|0|{3|error|}5558|5562|}
{2010006001|XXGobject_psameas_object|9275|0|14837|0|{metadata|error_metadata|1|0|}5562|5558|}
{2010212001|XXGvertex_oport_oport|9276|0|14838|0|{4|log|}5558|5563|}
{2010006001|XXGobject_psameas_object|9277|0|14840|0|{metadata|log_metadata|1|0|}5563|5558|}
{2010211001|XXGvertex_iport_iport|9278|0|14841|0|{0|in|}5558|5564|}
{2010006001|XXGobject_psameas_object|9279|0|14843|0|{metadata|in_metadata|1|0|}5564|5558|}
{2010601001|XXGgraph_vertex_vertex|9280|0|14844|0|{Merge|}5528|5565|}
{2010212001|XXGvertex_oport_oport|9281|0|14846|0|{0|out|}5565|5566|}
{2010211001|XXGvertex_iport_iport|9282|0|14848|0|{0|in|}5565|5567|}
{2010214001|XXGiport_src_flow|9283|0|14850|0|{0|}5567|5533|}
{2010214001|XXGiport_src_flow|9284|0|14851|0|{1|}5567|5535|}
{2010007001|XXGobject_proto_object|9285|0|14852|0|{}5565|5568|}
{2010212001|XXGvertex_oport_oport|9286|0|14854|0|{0|out|}5568|5569|}
{2010006001|XXGobject_psameas_object|9287|0|14856|0|{metadata|out_metadata|1|0|}5569|5568|}
{2010211001|XXGvertex_iport_iport|9288|0|14857|0|{0|in|}5568|5570|}
{2010006001|XXGobject_psameas_object|9289|0|14859|0|{metadata|in_metadata|1|0|}5570|5568|}
{2010601001|XXGgraph_vertex_vertex|9290|0|14860|0|{No_Match_Record_In_Second_Pass|}5528|5571|}
{2010211001|XXGvertex_iport_iport|9291|0|14862|0|{0|in|}5571|5572|}
{2010214001|XXGiport_src_flow|9292|0|14864|0|{0|}5572|5536|}
{2010007001|XXGobject_proto_object|9293|0|14865|0|{}5571|5573|}
{2010211001|XXGvertex_iport_iport|9294|0|14867|0|{0|in|}5573|5574|}
{2010006001|XXGobject_psameas_object|9295|0|14869|0|{metadata|in_metadata|1|0|}5574|5573|}
{2010601001|XXGgraph_vertex_vertex|9296|0|14870|0|{RFMT_Lookup_with_IDS_Archive_|}5528|5575|}
{2010212001|XXGvertex_oport_oport|9297|0|14872|0|{0|out0|}5575|5576|}
{2010213001|XXGoport_dst_flow|9298|0|14874|0|{0|}5576|5534|}
{2010212001|XXGvertex_oport_oport|9299|0|14875|0|{1|reject0|}5575|5577|}
{2010212001|XXGvertex_oport_oport|9300|0|14877|0|{2|error0|}5575|5578|}
{2010212001|XXGvertex_oport_oport|9301|0|14879|0|{3|log|}5575|5579|}
{2010211001|XXGvertex_iport_iport|9302|0|14881|0|{0|in|}5575|5580|}
{2010214001|XXGiport_src_flow|9303|0|14883|0|{0|}5580|5532|}
{2010007001|XXGobject_proto_object|9304|0|14884|0|{}5575|5581|}
{2010212001|XXGvertex_oport_oport|9305|0|14886|0|{0|out0|}5581|5582|}
{2010006001|XXGobject_psameas_object|9306|0|14888|0|{metadata|out0_metadata|1|0|}5582|5581|}
{2010006001|XXGobject_psameas_object|9307|0|14889|0|{transform0|transform0|1|0|}5582|5581|}
{2010212001|XXGvertex_oport_oport|9308|0|14890|0|{1|reject0|}5581|5583|}
{2010006001|XXGobject_psameas_object|9309|0|14892|0|{metadata|reject0_metadata|1|0|}5583|5581|}
{2010212001|XXGvertex_oport_oport|9310|0|14893|0|{2|error0|}5581|5584|}
{2010006001|XXGobject_psameas_object|9311|0|14895|0|{metadata|error0_metadata|1|0|}5584|5581|}
{2010212001|XXGvertex_oport_oport|9312|0|14896|0|{3|log|}5581|5585|}
{2010006001|XXGobject_psameas_object|9313|0|14898|0|{metadata|log_metadata|1|0|}5585|5581|}
{2010211001|XXGvertex_iport_iport|9314|0|14899|0|{0|in|}5581|5586|}
{2010006001|XXGobject_psameas_object|9315|0|14901|0|{metadata|in_metadata|1|0|}5586|5581|}
{2010601001|XXGgraph_vertex_vertex|9316|0|14902|0|{RFMT_Pass_only_Hash_Keys|}5528|5587|}
{2010212001|XXGvertex_oport_oport|9317|0|14904|0|{0|out0|}5587|5588|}
{2010213001|XXGoport_dst_flow|9318|0|14906|0|{0|}5588|5532|}
{2010212001|XXGvertex_oport_oport|9319|0|14907|0|{1|reject0|}5587|5589|}
{2010212001|XXGvertex_oport_oport|9320|0|14909|0|{2|error0|}5587|5590|}
{2010212001|XXGvertex_oport_oport|9321|0|14911|0|{3|log|}5587|5591|}
{2010211001|XXGvertex_iport_iport|9322|0|14913|0|{0|in|}5587|5592|}
{2010214001|XXGiport_src_flow|9323|0|14915|0|{0|}5592|5531|}
{2010007001|XXGobject_proto_object|9324|0|14916|0|{}5587|5593|}
{2010212001|XXGvertex_oport_oport|9325|0|14918|0|{0|out0|}5593|5594|}
{2010006001|XXGobject_psameas_object|9326|0|14920|0|{metadata|out0_metadata|1|0|}5594|5593|}
{2010006001|XXGobject_psameas_object|9327|0|14921|0|{transform0|transform0|1|0|}5594|5593|}
{2010212001|XXGvertex_oport_oport|9328|0|14922|0|{1|reject0|}5593|5595|}
{2010006001|XXGobject_psameas_object|9329|0|14924|0|{metadata|reject0_metadata|1|0|}5595|5593|}
{2010212001|XXGvertex_oport_oport|9330|0|14925|0|{2|error0|}5593|5596|}
{2010006001|XXGobject_psameas_object|9331|0|14927|0|{metadata|error0_metadata|1|0|}5596|5593|}
{2010212001|XXGvertex_oport_oport|9332|0|14928|0|{3|log|}5593|5597|}
{2010006001|XXGobject_psameas_object|9333|0|14930|0|{metadata|log_metadata|1|0|}5597|5593|}
{2010211001|XXGvertex_iport_iport|9334|0|14931|0|{0|in|}5593|5598|}
{2010006001|XXGobject_psameas_object|9335|0|14933|0|{metadata|in_metadata|1|0|}5598|5593|}
{2010212001|XXGvertex_oport_oport|9336|0|14934|0|{0|out0|}5528|5599|}
{2010216002|XXGoport_binding_oport|9337|0|14936|0|{.5|.5|{0|}15500|}5599|5566|}
{2010213001|XXGoport_dst_flow|9338|0|14937|0|{0|}5599|5400|}
{2010211001|XXGvertex_iport_iport|9339|0|14938|0|{0|in0|}5528|5600|}
{2010215002|XXGiport_binding_iport|9340|0|14940|0|{.5|.5|{0|}15499|}5600|5557|}
{2010214001|XXGiport_src_flow|9341|0|14941|0|{0|}5600|5399|}
{2010212001|XXGvertex_oport_oport|9342|0|14942|0|{0|out0|}5387|5601|}
{2010216002|XXGoport_binding_oport|9343|0|14944|0|{.5|.5|{0|}15515|}5601|5406|}
{2010213001|XXGoport_dst_flow|9344|0|14945|0|{0|}5601|5207|}
{2010211001|XXGvertex_iport_iport|9345|0|14946|0|{0|in1|}5387|5602|}
{2010215002|XXGiport_binding_iport|9346|0|14948|0|{.5|.5|{0|}15514|}5602|5438|}
{2010214001|XXGiport_src_flow|9347|0|14949|0|{0|}5602|5205|}
{2010601001|XXGgraph_vertex_vertex|9348|0|14950|0|{Merge|}5199|5603|}
{2010212001|XXGvertex_oport_oport|9349|0|14952|0|{0|out|}5603|5604|}
{2010211001|XXGvertex_iport_iport|9350|0|14954|0|{0|in|}5603|5605|}
{2010214001|XXGiport_src_flow|9351|0|14956|0|{0|}5605|5208|}
{2010007001|XXGobject_proto_object|9352|0|14957|0|{}5603|5606|}
{2010212001|XXGvertex_oport_oport|9353|0|14959|0|{0|out|}5606|5607|}
{2010006001|XXGobject_psameas_object|9354|0|14961|0|{metadata|out_metadata|1|0|}5607|5606|}
{2010211001|XXGvertex_iport_iport|9355|0|14962|0|{0|in|}5606|5608|}
{2010006001|XXGobject_psameas_object|9356|0|14964|0|{metadata|in_metadata|1|0|}5608|5606|}
{2010601001|XXGgraph_vertex_vertex|9357|0|14965|0|{Replicate|}5199|5609|}
{2010212001|XXGvertex_oport_oport|9358|0|14967|0|{0|out|}5609|5610|}
{2010213001|XXGoport_dst_flow|9359|0|14969|0|{0|}5610|5204|}
{2010213001|XXGoport_dst_flow|9360|0|14970|0|{1|}5610|5205|}
{2010211001|XXGvertex_iport_iport|9361|0|14971|0|{0|in|}5609|5611|}
{2010007001|XXGobject_proto_object|9362|0|14973|0|{}5609|5612|}
{2010212001|XXGvertex_oport_oport|9363|0|14975|0|{0|out|}5612|5613|}
{2010006001|XXGobject_psameas_object|9364|0|14977|0|{metadata|out_metadata|1|0|}5613|5612|}
{2010211001|XXGvertex_iport_iport|9365|0|14978|0|{0|in|}5612|5614|}
{2010006001|XXGobject_psameas_object|9366|0|14980|0|{metadata|in_metadata|1|0|}5614|5612|}
{2010601001|XXGgraph_vertex_vertex|9367|0|14981|0|{Replicate_1|}5199|5615|}
{2010212001|XXGvertex_oport_oport|9368|0|14983|0|{0|out|}5615|5616|}
{2010213001|XXGoport_dst_flow|9369|0|14985|0|{0|}5616|5208|}
{2010211001|XXGvertex_iport_iport|9370|0|14986|0|{0|in|}5615|5617|}
{2010214001|XXGiport_src_flow|9371|0|14988|0|{0|}5617|5206|}
{2010214001|XXGiport_src_flow|9372|0|14989|0|{1|}5617|5207|}
{2010007001|XXGobject_proto_object|9373|0|14990|0|{}5615|5618|}
{2010212001|XXGvertex_oport_oport|9374|0|14992|0|{0|out|}5618|5619|}
{2010006001|XXGobject_psameas_object|9375|0|14994|0|{metadata|out_metadata|1|0|}5619|5618|}
{2010211001|XXGvertex_iport_iport|9376|0|14995|0|{0|in|}5618|5620|}
{2010006001|XXGobject_psameas_object|9377|0|14997|0|{metadata|in_metadata|1|0|}5620|5618|}
{2010212001|XXGvertex_oport_oport|9378|0|14998|0|{0|out0|}5199|5621|}
{2010216002|XXGoport_binding_oport|9379|0|15000|0|{.5|.5|{0|}7797|}5621|5604|}
{2010211001|XXGvertex_iport_iport|9380|0|15001|0|{0|in0|}5199|5622|}
{2010215002|XXGiport_binding_iport|9381|0|15003|0|{.5|.5|{0|}7796|}5622|5611|}
{2010601001|XXGgraph_vertex_vertex|9382|0|15004|0|{ids_lookup_9|}143|5623|}
{2010605001|XXGgraph_legend_legend|9383|0|15006|0|{0|}5623|5624|}
{2010241001|XXGlegend_face_face|9384|0|15008|0|{}5624|5625|}
{2010605001|XXGgraph_legend_legend|9385|0|15010|0|{1|}5623|5626|}
{2010241001|XXGlegend_face_face|9386|0|15012|0|{}5626|5627|}
{2010604001|XXGgraph_flow_flow|9387|0|15014|0|{Flow_1|}5623|5628|}
{2010604001|XXGgraph_flow_flow|9388|0|15016|0|{Flow_2|}5623|5629|}
{2010604001|XXGgraph_flow_flow|9389|0|15018|0|{Flow_3|}5623|5630|}
{2010604001|XXGgraph_flow_flow|9390|0|15020|0|{Flow_4|}5623|5631|}
{2010604001|XXGgraph_flow_flow|9391|0|15022|0|{Flow_5|}5623|5632|}
{2010601001|XXGgraph_vertex_vertex|9392|0|15024|0|{Get_All_LookUp_Record|}5623|5633|}
{2010605001|XXGgraph_legend_legend|9393|0|15026|0|{0|}5633|5634|}
{2010241001|XXGlegend_face_face|9394|0|15028|0|{}5634|5635|}
{2010605001|XXGgraph_legend_legend|9395|0|15030|0|{1|}5633|5636|}
{2010241001|XXGlegend_face_face|9396|0|15032|0|{}5636|5637|}
{2010605001|XXGgraph_legend_legend|9397|0|15034|0|{2|}5633|5638|}
{2010241001|XXGlegend_face_face|9398|0|15036|0|{}5638|5639|}
{2010605001|XXGgraph_legend_legend|9399|0|15038|0|{3|}5633|5640|}
{2010241001|XXGlegend_face_face|9400|0|15040|0|{}5640|5641|}
{2010605001|XXGgraph_legend_legend|9401|0|15042|0|{4|}5633|5642|}
{2010241001|XXGlegend_face_face|9402|0|15044|0|{}5642|5643|}
{2010604001|XXGgraph_flow_flow|9403|0|15046|0|{Flow_1|}5633|5644|}
{2010604001|XXGgraph_flow_flow|9404|0|15048|0|{Flow_10|}5633|5645|}
{2010604001|XXGgraph_flow_flow|9405|0|15050|0|{Flow_11|}5633|5646|}
{2010604001|XXGgraph_flow_flow|9406|0|15052|0|{Flow_12|}5633|5647|}
{2010604001|XXGgraph_flow_flow|9407|0|15054|0|{Flow_18|}5633|5648|}
{2010604001|XXGgraph_flow_flow|9408|0|15056|0|{Flow_2|}5633|5649|}
{2010604001|XXGgraph_flow_flow|9409|0|15058|0|{Flow_3|}5633|5650|}
{2010604001|XXGgraph_flow_flow|9410|0|15060|0|{Flow_4|}5633|5651|}
{2010604001|XXGgraph_flow_flow|9411|0|15062|0|{Flow_5|}5633|5652|}
{2010604001|XXGgraph_flow_flow|9412|0|15064|0|{Flow_6|}5633|5653|}
{2010604001|XXGgraph_flow_flow|9413|0|15066|0|{Flow_7|}5633|5654|}
{2010604001|XXGgraph_flow_flow|9414|0|15068|0|{Flow_8|}5633|5655|}
{2010604001|XXGgraph_flow_flow|9415|0|15070|0|{Flow_9|}5633|5656|}
{2010601001|XXGgraph_vertex_vertex|9416|0|15072|0|{Dedup_Sorted|}5633|5657|}
{2010212001|XXGvertex_oport_oport|9417|0|15074|0|{0|out|}5657|5658|}
{2010213001|XXGoport_dst_flow|9418|0|15076|0|{0|}5658|5649|}
{2010212001|XXGvertex_oport_oport|9419|0|15077|0|{1|dup|}5657|5659|}
{2010213001|XXGoport_dst_flow|9420|0|15079|0|{0|}5659|5653|}
{2010212001|XXGvertex_oport_oport|9421|0|15080|0|{2|reject|}5657|5660|}
{2010212001|XXGvertex_oport_oport|9422|0|15082|0|{3|error|}5657|5661|}
{2010212001|XXGvertex_oport_oport|9423|0|15084|0|{4|log|}5657|5662|}
{2010211001|XXGvertex_iport_iport|9424|0|15086|0|{0|in|}5657|5663|}
{2010214001|XXGiport_src_flow|9425|0|15088|0|{0|}5663|5644|}
{2010006001|XXGobject_psameas_object|9426|0|15089|0|{Layout|Layout|0|0|}5657|5664|}
{2010212001|XXGvertex_oport_oport|9427|0|15091|0|{0|out|}5664|5665|}
{2010213001|XXGoport_dst_flow|9428|0|15093|0|{0|}5665|5647|}
{2010212001|XXGvertex_oport_oport|9429|0|15094|0|{1|reject|}5664|5666|}
{2010212001|XXGvertex_oport_oport|9430|0|15096|0|{2|error|}5664|5667|}
{2010212001|XXGvertex_oport_oport|9431|0|15098|0|{3|log|}5664|5668|}
{2010211001|XXGvertex_iport_iport|9432|0|15100|0|{0|in|}5664|5669|}
{2010214001|XXGiport_src_flow|9433|0|15102|0|{0|}5669|5645|}
{2010006001|XXGobject_psameas_object|9434|0|15103|0|{in_metadata|out0_metadata|0|0|}5664|5670|}
{2010212001|XXGvertex_oport_oport|9435|0|15105|0|{0|out0|}5670|5671|}
{2010213001|XXGoport_dst_flow|9436|0|15107|0|{0|}5671|5648|}
{2010212001|XXGvertex_oport_oport|9437|0|15108|0|{1|reject0|}5670|5672|}
{2010212001|XXGvertex_oport_oport|9438|0|15110|0|{2|error0|}5670|5673|}
{2010212001|XXGvertex_oport_oport|9439|0|15112|0|{3|log|}5670|5674|}
{2010211001|XXGvertex_iport_iport|9440|0|15114|0|{0|in|}5670|5675|}
{2010006001|XXGobject_psameas_object|9441|0|15116|0|{Layout|Layout|0|0|}5670|242|}
{2010006001|XXGobject_psameas_object|9442|0|15117|0|{in_metadata|out8_metadata|0|0|}5670|242|}
{2010006001|XXGobject_psameas_object|9443|0|15118|0|{reject0_metadata|out8_metadata|0|0|}5670|242|}
{2010006001|XXGobject_psameas_object|9444|0|15119|0|{reject_metadata|out0_metadata|0|0|}5664|5670|}
{2010006001|XXGobject_psameas_object|9445|0|15120|0|{dup_metadata|out_metadata|0|0|}5657|5676|}
{2010212001|XXGvertex_oport_oport|9446|0|15122|0|{0|out|}5676|5677|}
{2010213001|XXGoport_dst_flow|9447|0|15124|0|{0|}5677|5646|}
{2010212001|XXGvertex_oport_oport|9448|0|15125|0|{1|deselect|}5676|5678|}
{2010213001|XXGoport_dst_flow|9449|0|15127|0|{0|}5678|5654|}
{2010212001|XXGvertex_oport_oport|9450|0|15128|0|{2|reject|}5676|5679|}
{2010212001|XXGvertex_oport_oport|9451|0|15130|0|{3|error|}5676|5680|}
{2010212001|XXGvertex_oport_oport|9452|0|15132|0|{4|log|}5676|5681|}
{2010211001|XXGvertex_iport_iport|9453|0|15134|0|{0|in|}5676|5682|}
{2010214001|XXGiport_src_flow|9454|0|15136|0|{0|}5682|5655|}
{2010006001|XXGobject_psameas_object|9455|0|15137|0|{Layout|Layout|0|0|}5676|5664|}
{2010006001|XXGobject_psameas_object|9456|0|15138|0|{deselect_metadata|out_metadata|0|0|}5676|5676|}
{2010006001|XXGobject_psameas_object|9457|0|15139|0|{in_metadata|out_metadata|0|0|}5676|5683|}
{2010212001|XXGvertex_oport_oport|9458|0|15141|0|{0|out|}5683|5684|}
{2010213001|XXGoport_dst_flow|9459|0|15143|0|{0|}5684|5650|}
{2010212001|XXGvertex_oport_oport|9460|0|15144|0|{1|reject|}5683|5685|}
{2010212001|XXGvertex_oport_oport|9461|0|15146|0|{2|error|}5683|5686|}
{2010212001|XXGvertex_oport_oport|9462|0|15148|0|{3|log|}5683|5687|}
{2010211001|XXGvertex_iport_iport|9463|0|15150|0|{0|in|}5683|5688|}
{2010214001|XXGiport_src_flow|9464|0|15152|0|{0|}5688|5652|}
{2010006001|XXGobject_psameas_object|9465|0|15153|0|{in_metadata|out0_metadata|0|0|}5683|5670|}
{2010006001|XXGobject_psameas_object|9466|0|15154|0|{reject_metadata|out0_metadata|0|0|}5683|5670|}
{2010006001|XXGobject_psameas_object|9467|0|15155|0|{reject_metadata|out_metadata|0|0|}5676|5683|}
{2010006001|XXGobject_psameas_object|9468|0|15156|0|{in_metadata|out_metadata|0|0|}5657|5676|}
{2010006001|XXGobject_psameas_object|9469|0|15157|0|{out_metadata|out_metadata|0|0|}5657|5676|}
{2010006001|XXGobject_psameas_object|9470|0|15158|0|{reject_metadata|out_metadata|0|0|}5657|5676|}
{2010601001|XXGgraph_vertex_vertex|9471|0|15159|0|{FBE_Filter_match_records|}5633|5676|}
{2010601001|XXGgraph_vertex_vertex|9472|0|15160|0|{Get_Hash_on_SRC_NK|}5633|5670|}
{2010601001|XXGgraph_vertex_vertex|9473|0|15161|0|{Merge|}5633|5689|}
{2010212001|XXGvertex_oport_oport|9474|0|15163|0|{0|out|}5689|5690|}
{2010213001|XXGoport_dst_flow|9475|0|15165|0|{0|}5690|5655|}
{2010211001|XXGvertex_iport_iport|9476|0|15166|0|{0|in|}5689|5691|}
{2010214001|XXGiport_src_flow|9477|0|15168|0|{0|}5691|5650|}
{2010214001|XXGiport_src_flow|9478|0|15169|0|{1|}5691|5647|}
{2010006001|XXGobject_psameas_object|9479|0|15170|0|{Layout|Layout|0|0|}5689|5664|}
{2010006001|XXGobject_psameas_object|9480|0|15171|0|{in_metadata|out_metadata|0|0|}5689|5683|}
{2010006001|XXGobject_psameas_object|9481|0|15172|0|{out_metadata|out_metadata|0|0|}5689|5683|}
{2010601001|XXGgraph_vertex_vertex|9482|0|15173|0|{Normalize_Get_all_records_from_Archive_Lkp|}5633|5664|}
{2010601001|XXGgraph_vertex_vertex|9483|0|15174|0|{Normalize_Get_all_records_from_lkp|}5633|5683|}
{2010601001|XXGgraph_vertex_vertex|9484|0|15175|0|{Replicate|}5633|5692|}
{2010212001|XXGvertex_oport_oport|9485|0|15177|0|{0|out|}5692|5693|}
{2010211001|XXGvertex_iport_iport|9486|0|15179|0|{0|in|}5692|5694|}
{2010214001|XXGiport_src_flow|9487|0|15181|0|{0|}5694|5649|}
{2010006001|XXGobject_psameas_object|9488|0|15182|0|{Layout|Layout|0|0|}5692|5664|}
{2010006001|XXGobject_psameas_object|9489|0|15183|0|{in_metadata|out_metadata|0|0|}5692|5676|}
{2010006001|XXGobject_psameas_object|9490|0|15184|0|{out_metadata|out_metadata|0|0|}5692|5676|}
{2010601001|XXGgraph_vertex_vertex|9491|0|15185|0|{Replicate_1|}5633|5695|}
{2010212001|XXGvertex_oport_oport|9492|0|15187|0|{0|out|}5695|5696|}
{2010213001|XXGoport_dst_flow|9493|0|15189|0|{0|}5696|5652|}
{2010213001|XXGoport_dst_flow|9494|0|15190|0|{1|}5696|5645|}
{2010211001|XXGvertex_iport_iport|9495|0|15191|0|{0|in|}5695|5697|}
{2010214001|XXGiport_src_flow|9496|0|15193|0|{0|}5697|5651|}
{2010006001|XXGobject_psameas_object|9497|0|15194|0|{Layout|Layout|0|0|}5695|5664|}
{2010006001|XXGobject_psameas_object|9498|0|15195|0|{in_metadata|out0_metadata|0|0|}5695|5670|}
{2010006001|XXGobject_psameas_object|9499|0|15196|0|{out_metadata|out0_metadata|0|0|}5695|5670|}
{2010601001|XXGgraph_vertex_vertex|9500|0|15197|0|{Sort_Remove_Dup_On_Hash|}5633|5698|}
{2010604001|XXGgraph_flow_flow|9501|0|15199|0|{Flow_3|}5698|5699|}
{2010604001|XXGgraph_flow_flow|9502|0|15201|0|{Flow_5|}5698|5700|}
{2010601001|XXGgraph_vertex_vertex|9503|0|15203|0|{Dedup_Sorted_1|}5698|5701|}
{2010212001|XXGvertex_oport_oport|9504|0|15205|0|{0|out|}5701|5702|}
{2010212001|XXGvertex_oport_oport|9505|0|15207|0|{1|dup|}5701|5703|}
{2010212001|XXGvertex_oport_oport|9506|0|15209|0|{2|reject|}5701|5704|}
{2010212001|XXGvertex_oport_oport|9507|0|15211|0|{3|error|}5701|5705|}
{2010212001|XXGvertex_oport_oport|9508|0|15213|0|{4|log|}5701|5706|}
{2010211001|XXGvertex_iport_iport|9509|0|15215|0|{0|in|}5701|5707|}
{2010214001|XXGiport_src_flow|9510|0|15217|0|{0|}5707|5700|}
{2010006001|XXGobject_psameas_object|9511|0|15218|0|{Layout|Layout|0|0|}5701|5664|}
{2010006001|XXGobject_psameas_object|9512|0|15219|0|{dup_metadata|out0_metadata|0|0|}5701|5670|}
{2010006001|XXGobject_psameas_object|9513|0|15220|0|{in_metadata|out0_metadata|0|0|}5701|5670|}
{2010006001|XXGobject_psameas_object|9514|0|15221|0|{out_metadata|out0_metadata|0|0|}5701|5670|}
{2010006001|XXGobject_psameas_object|9515|0|15222|0|{reject_metadata|out0_metadata|0|0|}5701|5670|}
{2010601001|XXGgraph_vertex_vertex|9516|0|15223|0|{PBKS_dxf_hk_part1_|}5698|5708|}
{2010604001|XXGgraph_flow_flow|9517|0|15225|0|{Flow_1|}5708|5709|}
{2010601001|XXGgraph_vertex_vertex|9518|0|15227|0|{Partition_by_Key|}5708|5710|}
{2010212001|XXGvertex_oport_oport|9519|0|15229|0|{0|out|}5710|5711|}
{2010213001|XXGoport_dst_flow|9520|0|15231|0|{0|}5711|5709|}
{2010211001|XXGvertex_iport_iport|9521|0|15232|0|{0|in|}5710|5712|}
{2010006001|XXGobject_psameas_object|9522|0|15234|0|{in_metadata|out0_metadata|0|0|}5710|5670|}
{2010006001|XXGobject_psameas_object|9523|0|15235|0|{out_metadata|out0_metadata|0|0|}5710|5670|}
{2010601001|XXGgraph_vertex_vertex|9524|0|15236|0|{Sort|}5708|5713|}
{2010212001|XXGvertex_oport_oport|9525|0|15238|0|{0|out|}5713|5714|}
{2010211001|XXGvertex_iport_iport|9526|0|15240|0|{0|in|}5713|5715|}
{2010214001|XXGiport_src_flow|9527|0|15242|0|{0|}5715|5709|}
{2010006001|XXGobject_psameas_object|9528|0|15243|0|{in_metadata|out0_metadata|0|0|}5713|5670|}
{2010006001|XXGobject_psameas_object|9529|0|15244|0|{out_metadata|out0_metadata|0|0|}5713|5670|}
{2010212001|XXGvertex_oport_oport|9530|0|15245|0|{0|out0|}5708|5716|}
{2010216002|XXGoport_binding_oport|9531|0|15247|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}5716|5714|}
{2010213001|XXGoport_dst_flow|9532|0|15248|0|{0|}5716|5699|}
{2010211001|XXGvertex_iport_iport|9533|0|15249|0|{0|in0|}5708|5717|}
{2010215002|XXGiport_binding_iport|9534|0|15251|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}5717|5712|}
{2010006001|XXGobject_psameas_object|9535|0|15252|0|{OutputLayout|Layout|0|0|}5708|5664|}
{2010601001|XXGgraph_vertex_vertex|9536|0|15253|0|{Sort_within_Groups|}5698|5718|}
{2010212001|XXGvertex_oport_oport|9537|0|15255|0|{0|out|}5718|5719|}
{2010213001|XXGoport_dst_flow|9538|0|15257|0|{0|}5719|5700|}
{2010211001|XXGvertex_iport_iport|9539|0|15258|0|{0|in|}5718|5720|}
{2010214001|XXGiport_src_flow|9540|0|15260|0|{0|}5720|5699|}
{2010006001|XXGobject_psameas_object|9541|0|15261|0|{Layout|Layout|0|0|}5718|5664|}
{2010006001|XXGobject_psameas_object|9542|0|15262|0|{in_metadata|out0_metadata|0|0|}5718|5670|}
{2010006001|XXGobject_psameas_object|9543|0|15263|0|{out_metadata|out0_metadata|0|0|}5718|5670|}
{2010212001|XXGvertex_oport_oport|9544|0|15264|0|{0|out0|}5698|5721|}
{2010216002|XXGoport_binding_oport|9545|0|15266|0|{.5|.5|{0|}14672|}5721|5702|}
{2010213001|XXGoport_dst_flow|9546|0|15267|0|{0|}5721|5651|}
{2010212001|XXGvertex_oport_oport|9547|0|15268|0|{1|out1|}5698|5722|}
{2010216002|XXGoport_binding_oport|9548|0|15270|0|{.5|.5|{0|}14673|}5722|5703|}
{2010213001|XXGoport_dst_flow|9549|0|15271|0|{0|}5722|5656|}
{2010211001|XXGvertex_iport_iport|9550|0|15272|0|{0|in0|}5698|5723|}
{2010215002|XXGiport_binding_iport|9551|0|15274|0|{.5|.5|{0|}14671|}5723|5717|}
{2010214001|XXGiport_src_flow|9552|0|15275|0|{0|}5723|5648|}
{2010601001|XXGgraph_vertex_vertex|9553|0|15276|0|{Sort_on_Adjusted_Natural_Keys|}5633|5724|}
{2010212001|XXGvertex_oport_oport|9554|0|15278|0|{0|out|}5724|5725|}
{2010213001|XXGoport_dst_flow|9555|0|15280|0|{0|}5725|5644|}
{2010211001|XXGvertex_iport_iport|9556|0|15281|0|{0|in|}5724|5726|}
{2010214001|XXGiport_src_flow|9557|0|15283|0|{0|}5726|5646|}
{2010006001|XXGobject_psameas_object|9558|0|15284|0|{Layout|Layout|0|0|}5724|5664|}
{2010006001|XXGobject_psameas_object|9559|0|15285|0|{in_metadata|out_metadata|0|0|}5724|5676|}
{2010006001|XXGobject_psameas_object|9560|0|15286|0|{out_metadata|out_metadata|0|0|}5724|5676|}
{2010601001|XXGgraph_vertex_vertex|9561|0|15287|0|{Trash_1|}5633|5727|}
{2010211001|XXGvertex_iport_iport|9562|0|15289|0|{0|in|}5727|5728|}
{2010214001|XXGiport_src_flow|9563|0|15291|0|{0|}5728|5654|}
{2010006001|XXGobject_psameas_object|9564|0|15292|0|{Layout|Layout|0|0|}5727|5664|}
{2010006001|XXGobject_psameas_object|9565|0|15293|0|{in_metadata|out_metadata|0|0|}5727|5676|}
{2010601001|XXGgraph_vertex_vertex|9566|0|15294|0|{Trash_2|}5633|5729|}
{2010211001|XXGvertex_iport_iport|9567|0|15296|0|{0|in|}5729|5730|}
{2010214001|XXGiport_src_flow|9568|0|15298|0|{0|}5730|5653|}
{2010006001|XXGobject_psameas_object|9569|0|15299|0|{Layout|Layout|0|0|}5729|5664|}
{2010006001|XXGobject_psameas_object|9570|0|15300|0|{in_metadata|out_metadata|0|0|}5729|5676|}
{2010601001|XXGgraph_vertex_vertex|9571|0|15301|0|{Trash_3|}5633|5731|}
{2010211001|XXGvertex_iport_iport|9572|0|15303|0|{0|in|}5731|5732|}
{2010214001|XXGiport_src_flow|9573|0|15305|0|{0|}5732|5656|}
{2010006001|XXGobject_psameas_object|9574|0|15306|0|{Layout|Layout|0|0|}5731|5664|}
{2010006001|XXGobject_psameas_object|9575|0|15307|0|{in_metadata|out0_metadata|0|0|}5731|5670|}
{2010212001|XXGvertex_oport_oport|9576|0|15308|0|{0|out0|}5633|5733|}
{2010216002|XXGoport_binding_oport|9577|0|15310|0|{.5|.5|{0|}14919|}5733|5693|}
{2010213001|XXGoport_dst_flow|9578|0|15311|0|{0|}5733|5630|}
{2010211001|XXGvertex_iport_iport|9579|0|15312|0|{0|in0|}5633|5734|}
{2010215002|XXGiport_binding_iport|9580|0|15314|0|{.5|.5|{0|}14918|}5734|5675|}
{2010214001|XXGiport_src_flow|9581|0|15315|0|{0|}5734|5628|}
{2010601001|XXGgraph_vertex_vertex|9582|0|15316|0|{Get_Last_Lookup_Record|}5623|5735|}
{2010605001|XXGgraph_legend_legend|9583|0|15318|0|{0|}5735|5736|}
{2010241001|XXGlegend_face_face|9584|0|15320|0|{}5736|5737|}
{2010605001|XXGgraph_legend_legend|9585|0|15322|0|{1|}5735|5738|}
{2010241001|XXGlegend_face_face|9586|0|15324|0|{}5738|5739|}
{2010605001|XXGgraph_legend_legend|9587|0|15326|0|{2|}5735|5740|}
{2010241001|XXGlegend_face_face|9588|0|15328|0|{}5740|5741|}
{2010605001|XXGgraph_legend_legend|9589|0|15330|0|{3|}5735|5742|}
{2010241001|XXGlegend_face_face|9590|0|15332|0|{}5742|5743|}
{2010604001|XXGgraph_flow_flow|9591|0|15334|0|{Flow_1|}5735|5744|}
{2010604001|XXGgraph_flow_flow|9592|0|15336|0|{Flow_2|}5735|5745|}
{2010604001|XXGgraph_flow_flow|9593|0|15338|0|{Flow_3|}5735|5746|}
{2010604001|XXGgraph_flow_flow|9594|0|15340|0|{Flow_4|}5735|5747|}
{2010604001|XXGgraph_flow_flow|9595|0|15342|0|{Flow_5|}5735|5748|}
{2010604001|XXGgraph_flow_flow|9596|0|15344|0|{Flow_6|}5735|5749|}
{2010604001|XXGgraph_flow_flow|9597|0|15346|0|{Flow_7|}5735|5750|}
{2010604001|XXGgraph_flow_flow|9598|0|15348|0|{Flow_8|}5735|5751|}
{2010604001|XXGgraph_flow_flow|9599|0|15350|0|{Flow_9|}5735|5752|}
{2010601001|XXGgraph_vertex_vertex|9600|0|15352|0|{Dedup_Sorted|}5735|5753|}
{2010212001|XXGvertex_oport_oport|9601|0|15354|0|{0|out|}5753|5754|}
{2010212001|XXGvertex_oport_oport|9602|0|15356|0|{1|dup|}5753|5755|}
{2010213001|XXGoport_dst_flow|9603|0|15358|0|{0|}5755|5751|}
{2010212001|XXGvertex_oport_oport|9604|0|15359|0|{2|reject|}5753|5756|}
{2010212001|XXGvertex_oport_oport|9605|0|15361|0|{3|error|}5753|5757|}
{2010212001|XXGvertex_oport_oport|9606|0|15363|0|{4|log|}5753|5758|}
{2010211001|XXGvertex_iport_iport|9607|0|15365|0|{0|in|}5753|5759|}
{2010214001|XXGiport_src_flow|9608|0|15367|0|{0|}5759|5746|}
{2010006001|XXGobject_psameas_object|9609|0|15368|0|{Layout|Layout|0|0|}5753|5664|}
{2010006001|XXGobject_psameas_object|9610|0|15369|0|{dup_metadata|out_metadata|0|0|}5753|5760|}
{2010212001|XXGvertex_oport_oport|9611|0|15371|0|{0|out|}5760|5761|}
{2010213001|XXGoport_dst_flow|9612|0|15373|0|{0|}5761|5745|}
{2010212001|XXGvertex_oport_oport|9613|0|15374|0|{1|deselect|}5760|5762|}
{2010213001|XXGoport_dst_flow|9614|0|15376|0|{0|}5762|5752|}
{2010212001|XXGvertex_oport_oport|9615|0|15377|0|{2|reject|}5760|5763|}
{2010212001|XXGvertex_oport_oport|9616|0|15379|0|{3|error|}5760|5764|}
{2010212001|XXGvertex_oport_oport|9617|0|15381|0|{4|log|}5760|5765|}
{2010211001|XXGvertex_iport_iport|9618|0|15383|0|{0|in|}5760|5766|}
{2010214001|XXGiport_src_flow|9619|0|15385|0|{0|}5766|5748|}
{2010006001|XXGobject_psameas_object|9620|0|15386|0|{Layout|Layout|0|0|}5760|5664|}
{2010006001|XXGobject_psameas_object|9621|0|15387|0|{deselect_metadata|out_metadata|0|0|}5760|5760|}
{2010006001|XXGobject_psameas_object|9622|0|15388|0|{in_metadata|out_metadata|0|0|}5760|5767|}
{2010212001|XXGvertex_oport_oport|9623|0|15390|0|{0|out|}5767|5768|}
{2010213001|XXGoport_dst_flow|9624|0|15392|0|{0|}5768|5769|}
{2010212001|XXGvertex_oport_oport|9625|0|15394|0|{1|deselect|}5767|5770|}
{2010213001|XXGoport_dst_flow|9626|0|15396|0|{0|}5770|5771|}
{2010212001|XXGvertex_oport_oport|9627|0|15398|0|{2|reject|}5767|5772|}
{2010212001|XXGvertex_oport_oport|9628|0|15400|0|{3|error|}5767|5773|}
{2010212001|XXGvertex_oport_oport|9629|0|15402|0|{4|log|}5767|5774|}
{2010211001|XXGvertex_iport_iport|9630|0|15404|0|{0|in|}5767|5775|}
{2010006001|XXGobject_psameas_object|9631|0|15406|0|{Layout|Layout|0|0|}5767|5664|}
{2010006001|XXGobject_psameas_object|9632|0|15407|0|{in_metadata|out0_metadata|0|0|}5767|5776|}
{2010212001|XXGvertex_oport_oport|9633|0|15409|0|{0|out0|}5776|5777|}
{2010213001|XXGoport_dst_flow|9634|0|15411|0|{0|}5777|5747|}
{2010212001|XXGvertex_oport_oport|9635|0|15412|0|{1|reject0|}5776|5778|}
{2010212001|XXGvertex_oport_oport|9636|0|15414|0|{2|error0|}5776|5779|}
{2010212001|XXGvertex_oport_oport|9637|0|15416|0|{3|log|}5776|5780|}
{2010211001|XXGvertex_iport_iport|9638|0|15418|0|{0|in|}5776|5781|}
{2010214001|XXGiport_src_flow|9639|0|15420|0|{0|}5781|5749|}
{2010006001|XXGobject_psameas_object|9640|0|15421|0|{Layout|Layout|0|0|}5776|5664|}
{2010006001|XXGobject_psameas_object|9641|0|15422|0|{in_metadata|out0_metadata|0|0|}5776|5782|}
{2010212001|XXGvertex_oport_oport|9642|0|15424|0|{0|out0|}5782|5783|}
{2010213001|XXGoport_dst_flow|9643|0|15426|0|{0|}5783|5744|}
{2010212001|XXGvertex_oport_oport|9644|0|15427|0|{1|reject0|}5782|5784|}
{2010212001|XXGvertex_oport_oport|9645|0|15429|0|{2|error0|}5782|5785|}
{2010212001|XXGvertex_oport_oport|9646|0|15431|0|{3|log|}5782|5786|}
{2010211001|XXGvertex_iport_iport|9647|0|15433|0|{0|in|}5782|5787|}
{2010006001|XXGobject_psameas_object|9648|0|15435|0|{Layout|Layout|0|0|}5782|242|}
{2010006001|XXGobject_psameas_object|9649|0|15436|0|{in_metadata|out8_metadata|0|0|}5782|242|}
{2010006001|XXGobject_psameas_object|9650|0|15437|0|{reject0_metadata|out8_metadata|0|0|}5782|242|}
{2010006001|XXGobject_psameas_object|9651|0|15438|0|{reject0_metadata|out0_metadata|0|0|}5776|5782|}
{2010006001|XXGobject_psameas_object|9652|0|15439|0|{reject_metadata|out0_metadata|0|0|}5767|5776|}
{2010006001|XXGobject_psameas_object|9653|0|15440|0|{reject_metadata|out_metadata|0|0|}5760|5767|}
{2010006001|XXGobject_psameas_object|9654|0|15441|0|{in_metadata|out_metadata|0|0|}5753|5760|}
{2010006001|XXGobject_psameas_object|9655|0|15442|0|{out_metadata|out_metadata|0|0|}5753|5760|}
{2010006001|XXGobject_psameas_object|9656|0|15443|0|{reject_metadata|out_metadata|0|0|}5753|5760|}
{2010601001|XXGgraph_vertex_vertex|9657|0|15444|0|{FBE_filter_matching_lkp_record|}5735|5760|}
{2010601001|XXGgraph_vertex_vertex|9658|0|15445|0|{RFMT_Get_Hash_On_NK|}5735|5782|}
{2010601001|XXGgraph_vertex_vertex|9659|0|15446|0|{RFMT_Lookup_with_IDS|}5735|5776|}
{2010601001|XXGgraph_vertex_vertex|9660|0|15447|0|{Sort_De_dup|}5735|5788|}
{2010604001|XXGgraph_flow_flow|9661|0|15449|0|{Flow_10|}5788|5789|}
{2010604001|XXGgraph_flow_flow|9662|0|15451|0|{Flow_4|}5788|5790|}
{2010244001|XXGflow_watcher_watcher|9663|0|15453|0|{}5790|5791|}
{2010601001|XXGgraph_vertex_vertex|9664|0|15455|0|{Dedup_Sorted_1|}5788|5792|}
{2010212001|XXGvertex_oport_oport|9665|0|15457|0|{0|out|}5792|5793|}
{2010212001|XXGvertex_oport_oport|9666|0|15459|0|{1|dup|}5792|5794|}
{2010212001|XXGvertex_oport_oport|9667|0|15461|0|{2|reject|}5792|5795|}
{2010212001|XXGvertex_oport_oport|9668|0|15463|0|{3|error|}5792|5796|}
{2010212001|XXGvertex_oport_oport|9669|0|15465|0|{4|log|}5792|5797|}
{2010211001|XXGvertex_iport_iport|9670|0|15467|0|{0|in|}5792|5798|}
{2010214001|XXGiport_src_flow|9671|0|15469|0|{0|}5798|5789|}
{2010006001|XXGobject_psameas_object|9672|0|15470|0|{Layout|Layout|0|0|}5792|5664|}
{2010006001|XXGobject_psameas_object|9673|0|15471|0|{dup_metadata|out0_metadata|0|0|}5792|5782|}
{2010006001|XXGobject_psameas_object|9674|0|15472|0|{in_metadata|out0_metadata|0|0|}5792|5782|}
{2010006001|XXGobject_psameas_object|9675|0|15473|0|{out_metadata|out0_metadata|0|0|}5792|5782|}
{2010006001|XXGobject_psameas_object|9676|0|15474|0|{reject_metadata|out0_metadata|0|0|}5792|5782|}
{2010601001|XXGgraph_vertex_vertex|9677|0|15475|0|{PBKS_dxf_hk_part1_|}5788|5799|}
{2010604001|XXGgraph_flow_flow|9678|0|15477|0|{Flow_1|}5799|5800|}
{2010601001|XXGgraph_vertex_vertex|9679|0|15479|0|{Partition_by_Key|}5799|5801|}
{2010212001|XXGvertex_oport_oport|9680|0|15481|0|{0|out|}5801|5802|}
{2010213001|XXGoport_dst_flow|9681|0|15483|0|{0|}5802|5800|}
{2010211001|XXGvertex_iport_iport|9682|0|15484|0|{0|in|}5801|5803|}
{2010006001|XXGobject_psameas_object|9683|0|15486|0|{in_metadata|out0_metadata|0|0|}5801|5782|}
{2010006001|XXGobject_psameas_object|9684|0|15487|0|{out_metadata|out0_metadata|0|0|}5801|5782|}
{2010601001|XXGgraph_vertex_vertex|9685|0|15488|0|{Sort|}5799|5804|}
{2010212001|XXGvertex_oport_oport|9686|0|15490|0|{0|out|}5804|5805|}
{2010211001|XXGvertex_iport_iport|9687|0|15492|0|{0|in|}5804|5806|}
{2010214001|XXGiport_src_flow|9688|0|15494|0|{0|}5806|5800|}
{2010006001|XXGobject_psameas_object|9689|0|15495|0|{in_metadata|out0_metadata|0|0|}5804|5782|}
{2010006001|XXGobject_psameas_object|9690|0|15496|0|{out_metadata|out0_metadata|0|0|}5804|5782|}
{2010212001|XXGvertex_oport_oport|9691|0|15497|0|{0|out0|}5799|5807|}
{2010216002|XXGoport_binding_oport|9692|0|15499|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}5807|5805|}
{2010213001|XXGoport_dst_flow|9693|0|15500|0|{0|}5807|5790|}
{2010211001|XXGvertex_iport_iport|9694|0|15501|0|{0|in0|}5799|5808|}
{2010215002|XXGiport_binding_iport|9695|0|15503|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}5808|5803|}
{2010006001|XXGobject_psameas_object|9696|0|15504|0|{InputLayout|Layout|0|0|}5799|242|}
{2010006001|XXGobject_psameas_object|9697|0|15505|0|{OutputLayout|Layout|0|0|}5799|5664|}
{2010601001|XXGgraph_vertex_vertex|9698|0|15506|0|{Sort_within_Groups_1|}5788|5809|}
{2010212001|XXGvertex_oport_oport|9699|0|15508|0|{0|out|}5809|5810|}
{2010213001|XXGoport_dst_flow|9700|0|15510|0|{0|}5810|5789|}
{2010211001|XXGvertex_iport_iport|9701|0|15511|0|{0|in|}5809|5811|}
{2010214001|XXGiport_src_flow|9702|0|15513|0|{0|}5811|5790|}
{2010006001|XXGobject_psameas_object|9703|0|15514|0|{Layout|Layout|0|0|}5809|5664|}
{2010006001|XXGobject_psameas_object|9704|0|15515|0|{in_metadata|out0_metadata|0|0|}5809|5782|}
{2010006001|XXGobject_psameas_object|9705|0|15516|0|{out_metadata|out0_metadata|0|0|}5809|5782|}
{2010212001|XXGvertex_oport_oport|9706|0|15517|0|{0|out0|}5788|5812|}
{2010216002|XXGoport_binding_oport|9707|0|15519|0|{.5|.5|{0|}7792|}5812|5793|}
{2010213001|XXGoport_dst_flow|9708|0|15520|0|{0|}5812|5749|}
{2010212001|XXGvertex_oport_oport|9709|0|15521|0|{1|out1|}5788|5813|}
{2010216002|XXGoport_binding_oport|9710|0|15523|0|{.5|.5|{0|}7793|}5813|5794|}
{2010213001|XXGoport_dst_flow|9711|0|15524|0|{0|}5813|5750|}
{2010211001|XXGvertex_iport_iport|9712|0|15525|0|{0|in0|}5788|5814|}
{2010215002|XXGiport_binding_iport|9713|0|15527|0|{.5|.5|{0|}7791|}5814|5808|}
{2010214001|XXGiport_src_flow|9714|0|15528|0|{0|}5814|5744|}
{2010601001|XXGgraph_vertex_vertex|9715|0|15529|0|{Sort_within_Groups|}5735|5815|}
{2010212001|XXGvertex_oport_oport|9716|0|15531|0|{0|out|}5815|5816|}
{2010213001|XXGoport_dst_flow|9717|0|15533|0|{0|}5816|5746|}
{2010211001|XXGvertex_iport_iport|9718|0|15534|0|{0|in|}5815|5817|}
{2010214001|XXGiport_src_flow|9719|0|15536|0|{0|}5817|5745|}
{2010006001|XXGobject_psameas_object|9720|0|15537|0|{Layout|Layout|0|0|}5815|5664|}
{2010006001|XXGobject_psameas_object|9721|0|15538|0|{in_metadata|out_metadata|0|0|}5815|5760|}
{2010006001|XXGobject_psameas_object|9722|0|15539|0|{out_metadata|out_metadata|0|0|}5815|5760|}
{2010601001|XXGgraph_vertex_vertex|9723|0|15540|0|{Trash|}5735|5818|}
{2010211001|XXGvertex_iport_iport|9724|0|15542|0|{0|in|}5818|5819|}
{2010214001|XXGiport_src_flow|9725|0|15544|0|{0|}5819|5750|}
{2010006001|XXGobject_psameas_object|9726|0|15545|0|{Layout|Layout|0|0|}5818|5664|}
{2010006001|XXGobject_psameas_object|9727|0|15546|0|{in_metadata|out0_metadata|0|0|}5818|5782|}
{2010601001|XXGgraph_vertex_vertex|9728|0|15547|0|{Trash_1|}5735|5820|}
{2010211001|XXGvertex_iport_iport|9729|0|15549|0|{0|in|}5820|5821|}
{2010214001|XXGiport_src_flow|9730|0|15551|0|{0|}5821|5751|}
{2010006001|XXGobject_psameas_object|9731|0|15552|0|{Layout|Layout|0|0|}5820|5664|}
{2010006001|XXGobject_psameas_object|9732|0|15553|0|{in_metadata|out_metadata|0|0|}5820|5760|}
{2010601001|XXGgraph_vertex_vertex|9733|0|15554|0|{Trash_2|}5735|5822|}
{2010211001|XXGvertex_iport_iport|9734|0|15556|0|{0|in|}5822|5823|}
{2010214001|XXGiport_src_flow|9735|0|15558|0|{0|}5823|5752|}
{2010006001|XXGobject_psameas_object|9736|0|15559|0|{Layout|Layout|0|0|}5822|5664|}
{2010006001|XXGobject_psameas_object|9737|0|15560|0|{in_metadata|out_metadata|0|0|}5822|5760|}
{2010601001|XXGgraph_vertex_vertex|9738|0|15561|0|{Two_Step_Lookup|}5735|5824|}
{2010605001|XXGgraph_legend_legend|9739|0|15563|0|{0|}5824|5825|}
{2010241001|XXGlegend_face_face|9740|0|15565|0|{}5825|5826|}
{2010604001|XXGgraph_flow_flow|9741|0|15567|0|{Flow_1|}5824|5771|}
{2010604001|XXGgraph_flow_flow|9742|0|15568|0|{Flow_2|}5824|5827|}
{2010604001|XXGgraph_flow_flow|9743|0|15570|0|{Flow_3|}5824|5769|}
{2010604001|XXGgraph_flow_flow|9744|0|15571|0|{Flow_4|}5824|5828|}
{2010604001|XXGgraph_flow_flow|9745|0|15573|0|{Flow_5|}5824|5829|}
{2010604001|XXGgraph_flow_flow|9746|0|15575|0|{Flow_6|}5824|5830|}
{2010601001|XXGgraph_vertex_vertex|9747|0|15577|0|{FBE_Pass_Only_Matching_Rec|}5824|5831|}
{2010212001|XXGvertex_oport_oport|9748|0|15579|0|{0|out|}5831|5832|}
{2010213001|XXGoport_dst_flow|9749|0|15581|0|{0|}5832|5829|}
{2010212001|XXGvertex_oport_oport|9750|0|15582|0|{1|deselect|}5831|5833|}
{2010213001|XXGoport_dst_flow|9751|0|15584|0|{0|}5833|5830|}
{2010212001|XXGvertex_oport_oport|9752|0|15585|0|{2|reject|}5831|5834|}
{2010212001|XXGvertex_oport_oport|9753|0|15587|0|{3|error|}5831|5835|}
{2010212001|XXGvertex_oport_oport|9754|0|15589|0|{4|log|}5831|5836|}
{2010211001|XXGvertex_iport_iport|9755|0|15591|0|{0|in|}5831|5837|}
{2010214001|XXGiport_src_flow|9756|0|15593|0|{0|}5837|5828|}
{2010006001|XXGobject_psameas_object|9757|0|15594|0|{Layout|Layout|0|0|}5831|5664|}
{2010006001|XXGobject_psameas_object|9758|0|15595|0|{deselect_metadata|out_metadata|0|0|}5831|5767|}
{2010006001|XXGobject_psameas_object|9759|0|15596|0|{in_metadata|out0_metadata|0|0|}5831|5838|}
{2010212001|XXGvertex_oport_oport|9760|0|15598|0|{0|out0|}5838|5839|}
{2010213001|XXGoport_dst_flow|9761|0|15600|0|{0|}5839|5828|}
{2010212001|XXGvertex_oport_oport|9762|0|15601|0|{1|reject0|}5838|5840|}
{2010212001|XXGvertex_oport_oport|9763|0|15603|0|{2|error0|}5838|5841|}
{2010212001|XXGvertex_oport_oport|9764|0|15605|0|{3|log|}5838|5842|}
{2010211001|XXGvertex_iport_iport|9765|0|15607|0|{0|in|}5838|5843|}
{2010214001|XXGiport_src_flow|9766|0|15609|0|{0|}5843|5827|}
{2010006001|XXGobject_psameas_object|9767|0|15610|0|{Layout|Layout|0|0|}5838|5664|}
{2010006001|XXGobject_psameas_object|9768|0|15611|0|{in_metadata|out0_metadata|0|0|}5838|5844|}
{2010212001|XXGvertex_oport_oport|9769|0|15613|0|{0|out0|}5844|5845|}
{2010213001|XXGoport_dst_flow|9770|0|15615|0|{0|}5845|5827|}
{2010212001|XXGvertex_oport_oport|9771|0|15616|0|{1|reject0|}5844|5846|}
{2010212001|XXGvertex_oport_oport|9772|0|15618|0|{2|error0|}5844|5847|}
{2010212001|XXGvertex_oport_oport|9773|0|15620|0|{3|log|}5844|5848|}
{2010211001|XXGvertex_iport_iport|9774|0|15622|0|{0|in|}5844|5849|}
{2010214001|XXGiport_src_flow|9775|0|15624|0|{0|}5849|5771|}
{2010006001|XXGobject_psameas_object|9776|0|15625|0|{Layout|Layout|0|0|}5844|5664|}
{2010006001|XXGobject_psameas_object|9777|0|15626|0|{in_metadata|deselect_metadata|0|0|}5844|5767|}
{2010006001|XXGobject_psameas_object|9778|0|15627|0|{reject0_metadata|deselect_metadata|0|0|}5844|5767|}
{2010006001|XXGobject_psameas_object|9779|0|15628|0|{reject0_metadata|out0_metadata|0|0|}5838|5844|}
{2010006001|XXGobject_psameas_object|9780|0|15629|0|{out_metadata|out_metadata|0|0|}5831|5767|}
{2010006001|XXGobject_psameas_object|9781|0|15630|0|{reject_metadata|out0_metadata|0|0|}5831|5838|}
{2010601001|XXGgraph_vertex_vertex|9782|0|15631|0|{FBE_filter_matching_lkp_record|}5824|5767|}
{2010601001|XXGgraph_vertex_vertex|9783|0|15632|0|{Merge|}5824|5850|}
{2010212001|XXGvertex_oport_oport|9784|0|15634|0|{0|out|}5850|5851|}
{2010211001|XXGvertex_iport_iport|9785|0|15636|0|{0|in|}5850|5852|}
{2010214001|XXGiport_src_flow|9786|0|15638|0|{0|}5852|5769|}
{2010214001|XXGiport_src_flow|9787|0|15639|0|{1|}5852|5829|}
{2010006001|XXGobject_psameas_object|9788|0|15640|0|{Layout|Layout|0|0|}5850|5664|}
{2010006001|XXGobject_psameas_object|9789|0|15641|0|{in_metadata|out_metadata|0|0|}5850|5767|}
{2010006001|XXGobject_psameas_object|9790|0|15642|0|{out_metadata|out_metadata|0|0|}5850|5767|}
{2010601001|XXGgraph_vertex_vertex|9791|0|15643|0|{No_Match_Record_In_Second_Pass|}5824|5853|}
{2010211001|XXGvertex_iport_iport|9792|0|15645|0|{0|in|}5853|5854|}
{2010214001|XXGiport_src_flow|9793|0|15647|0|{0|}5854|5830|}
{2010006001|XXGobject_psameas_object|9794|0|15648|0|{Layout|Layout|0|0|}5853|5664|}
{2010006001|XXGobject_psameas_object|9795|0|15649|0|{in_metadata|out_metadata|0|0|}5853|5767|}
{2010601001|XXGgraph_vertex_vertex|9796|0|15650|0|{RFMT_Lookup_with_IDS_Archive_|}5824|5838|}
{2010601001|XXGgraph_vertex_vertex|9797|0|15651|0|{RFMT_Pass_only_Hash_Keys|}5824|5844|}
{2010212001|XXGvertex_oport_oport|9798|0|15652|0|{0|out0|}5824|5855|}
{2010216002|XXGoport_binding_oport|9799|0|15654|0|{.5|.5|{0|}15500|}5855|5851|}
{2010213001|XXGoport_dst_flow|9800|0|15655|0|{0|}5855|5748|}
{2010211001|XXGvertex_iport_iport|9801|0|15656|0|{0|in0|}5824|5856|}
{2010215002|XXGiport_binding_iport|9802|0|15658|0|{.5|.5|{0|}15499|}5856|5775|}
{2010214001|XXGiport_src_flow|9803|0|15659|0|{0|}5856|5747|}
{2010212001|XXGvertex_oport_oport|9804|0|15660|0|{0|out0|}5735|5857|}
{2010216002|XXGoport_binding_oport|9805|0|15662|0|{.5|.5|{0|}15515|}5857|5754|}
{2010213001|XXGoport_dst_flow|9806|0|15663|0|{0|}5857|5631|}
{2010211001|XXGvertex_iport_iport|9807|0|15664|0|{0|in1|}5735|5858|}
{2010215002|XXGiport_binding_iport|9808|0|15666|0|{.5|.5|{0|}15514|}5858|5787|}
{2010214001|XXGiport_src_flow|9809|0|15667|0|{0|}5858|5629|}
{2010601001|XXGgraph_vertex_vertex|9810|0|15668|0|{Merge|}5623|5859|}
{2010212001|XXGvertex_oport_oport|9811|0|15670|0|{0|out|}5859|5860|}
{2010211001|XXGvertex_iport_iport|9812|0|15672|0|{0|in|}5859|5861|}
{2010214001|XXGiport_src_flow|9813|0|15674|0|{0|}5861|5632|}
{2010006001|XXGobject_psameas_object|9814|0|15675|0|{Layout|Layout|0|0|}5859|185|}
{2010006001|XXGobject_psameas_object|9815|0|15676|0|{in_metadata|write_metadata|0|0|}5859|185|}
{2010006001|XXGobject_psameas_object|9816|0|15677|0|{out_metadata|write_metadata|0|0|}5859|185|}
{2010601001|XXGgraph_vertex_vertex|9817|0|15678|0|{Replicate|}5623|5862|}
{2010212001|XXGvertex_oport_oport|9818|0|15680|0|{0|out|}5862|5863|}
{2010213001|XXGoport_dst_flow|9819|0|15682|0|{0|}5863|5628|}
{2010213001|XXGoport_dst_flow|9820|0|15683|0|{1|}5863|5629|}
{2010211001|XXGvertex_iport_iport|9821|0|15684|0|{0|in|}5862|5864|}
{2010006001|XXGobject_psameas_object|9822|0|15686|0|{Layout|Layout|0|0|}5862|242|}
{2010006001|XXGobject_psameas_object|9823|0|15687|0|{in_metadata|out8_metadata|0|0|}5862|242|}
{2010006001|XXGobject_psameas_object|9824|0|15688|0|{out_metadata|out8_metadata|0|0|}5862|242|}
{2010601001|XXGgraph_vertex_vertex|9825|0|15689|0|{Replicate_1|}5623|5865|}
{2010212001|XXGvertex_oport_oport|9826|0|15691|0|{0|out|}5865|5866|}
{2010213001|XXGoport_dst_flow|9827|0|15693|0|{0|}5866|5632|}
{2010211001|XXGvertex_iport_iport|9828|0|15694|0|{0|in|}5865|5867|}
{2010214001|XXGiport_src_flow|9829|0|15696|0|{0|}5867|5630|}
{2010214001|XXGiport_src_flow|9830|0|15697|0|{1|}5867|5631|}
{2010006001|XXGobject_psameas_object|9831|0|15698|0|{Layout|Layout|0|0|}5865|5664|}
{2010006001|XXGobject_psameas_object|9832|0|15699|0|{in_metadata|out_metadata|0|0|}5865|5760|}
{2010006001|XXGobject_psameas_object|9833|0|15700|0|{out_metadata|out_metadata|0|0|}5865|5760|}
{2010212001|XXGvertex_oport_oport|9834|0|15701|0|{0|out0|}5623|5868|}
{2010216002|XXGoport_binding_oport|9835|0|15703|0|{.5|.5|{0|}7802|}5868|5860|}
{2010213001|XXGoport_dst_flow|9836|0|15704|0|{0|}5868|148|}
{2010211001|XXGvertex_iport_iport|9837|0|15705|0|{0|in0|}5623|5869|}
{2010215002|XXGiport_binding_iport|9838|0|15707|0|{.5|.5|{0|}7801|}5869|5864|}
{2010007001|XXGobject_proto_object|9839|0|15708|0|{}5623|5870|}
{2010605001|XXGgraph_legend_legend|9840|0|15710|0|{0|}5870|5871|}
{2010241001|XXGlegend_face_face|9841|0|15712|0|{}5871|5872|}
{2010605001|XXGgraph_legend_legend|9842|0|15714|0|{1|}5870|5873|}
{2010241001|XXGlegend_face_face|9843|0|15716|0|{}5873|5874|}
{2010604001|XXGgraph_flow_flow|9844|0|15718|0|{Flow_1|}5870|5875|}
{2010604001|XXGgraph_flow_flow|9845|0|15720|0|{Flow_2|}5870|5876|}
{2010604001|XXGgraph_flow_flow|9846|0|15722|0|{Flow_3|}5870|5877|}
{2010604001|XXGgraph_flow_flow|9847|0|15724|0|{Flow_4|}5870|5878|}
{2010604001|XXGgraph_flow_flow|9848|0|15726|0|{Flow_5|}5870|5879|}
{2010601001|XXGgraph_vertex_vertex|9849|0|15728|0|{Get_All_LookUp_Record|}5870|5880|}
{2010605001|XXGgraph_legend_legend|9850|0|15730|0|{0|}5880|5881|}
{2010241001|XXGlegend_face_face|9851|0|15732|0|{}5881|5882|}
{2010605001|XXGgraph_legend_legend|9852|0|15734|0|{1|}5880|5883|}
{2010241001|XXGlegend_face_face|9853|0|15736|0|{}5883|5884|}
{2010605001|XXGgraph_legend_legend|9854|0|15738|0|{2|}5880|5885|}
{2010241001|XXGlegend_face_face|9855|0|15740|0|{}5885|5886|}
{2010605001|XXGgraph_legend_legend|9856|0|15742|0|{3|}5880|5887|}
{2010241001|XXGlegend_face_face|9857|0|15744|0|{}5887|5888|}
{2010605001|XXGgraph_legend_legend|9858|0|15746|0|{4|}5880|5889|}
{2010241001|XXGlegend_face_face|9859|0|15748|0|{}5889|5890|}
{2010604001|XXGgraph_flow_flow|9860|0|15750|0|{Flow_1|}5880|5891|}
{2010604001|XXGgraph_flow_flow|9861|0|15752|0|{Flow_10|}5880|5892|}
{2010604001|XXGgraph_flow_flow|9862|0|15754|0|{Flow_11|}5880|5893|}
{2010604001|XXGgraph_flow_flow|9863|0|15756|0|{Flow_12|}5880|5894|}
{2010604001|XXGgraph_flow_flow|9864|0|15758|0|{Flow_18|}5880|5895|}
{2010604001|XXGgraph_flow_flow|9865|0|15760|0|{Flow_2|}5880|5896|}
{2010604001|XXGgraph_flow_flow|9866|0|15762|0|{Flow_3|}5880|5897|}
{2010604001|XXGgraph_flow_flow|9867|0|15764|0|{Flow_4|}5880|5898|}
{2010604001|XXGgraph_flow_flow|9868|0|15766|0|{Flow_5|}5880|5899|}
{2010604001|XXGgraph_flow_flow|9869|0|15768|0|{Flow_6|}5880|5900|}
{2010604001|XXGgraph_flow_flow|9870|0|15770|0|{Flow_7|}5880|5901|}
{2010604001|XXGgraph_flow_flow|9871|0|15772|0|{Flow_8|}5880|5902|}
{2010604001|XXGgraph_flow_flow|9872|0|15774|0|{Flow_9|}5880|5903|}
{2010601001|XXGgraph_vertex_vertex|9873|0|15776|0|{Dedup_Sorted|}5880|5904|}
{2010212001|XXGvertex_oport_oport|9874|0|15778|0|{0|out|}5904|5905|}
{2010213001|XXGoport_dst_flow|9875|0|15780|0|{0|}5905|5896|}
{2010212001|XXGvertex_oport_oport|9876|0|15781|0|{1|dup|}5904|5906|}
{2010213001|XXGoport_dst_flow|9877|0|15783|0|{0|}5906|5900|}
{2010212001|XXGvertex_oport_oport|9878|0|15784|0|{2|reject|}5904|5907|}
{2010212001|XXGvertex_oport_oport|9879|0|15786|0|{3|error|}5904|5908|}
{2010212001|XXGvertex_oport_oport|9880|0|15788|0|{4|log|}5904|5909|}
{2010211001|XXGvertex_iport_iport|9881|0|15790|0|{0|in|}5904|5910|}
{2010214001|XXGiport_src_flow|9882|0|15792|0|{0|}5910|5891|}
{2010007001|XXGobject_proto_object|9883|0|15793|0|{}5904|5911|}
{2010212001|XXGvertex_oport_oport|9884|0|15795|0|{0|out|}5911|5912|}
{2010006001|XXGobject_psameas_object|9885|0|15797|0|{metadata|out_metadata|1|0|}5912|5911|}
{2010212001|XXGvertex_oport_oport|9886|0|15798|0|{1|dup|}5911|5913|}
{2010006001|XXGobject_psameas_object|9887|0|15800|0|{metadata|dup_metadata|1|0|}5913|5911|}
{2010212001|XXGvertex_oport_oport|9888|0|15801|0|{2|reject|}5911|5914|}
{2010006001|XXGobject_psameas_object|9889|0|15803|0|{metadata|reject_metadata|1|0|}5914|5911|}
{2010212001|XXGvertex_oport_oport|9890|0|15804|0|{3|error|}5911|5915|}
{2010006001|XXGobject_psameas_object|9891|0|15806|0|{metadata|error_metadata|1|0|}5915|5911|}
{2010212001|XXGvertex_oport_oport|9892|0|15807|0|{4|log|}5911|5916|}
{2010006001|XXGobject_psameas_object|9893|0|15809|0|{metadata|log_metadata|1|0|}5916|5911|}
{2010211001|XXGvertex_iport_iport|9894|0|15810|0|{0|in|}5911|5917|}
{2010006001|XXGobject_psameas_object|9895|0|15812|0|{metadata|in_metadata|1|0|}5917|5911|}
{2010601001|XXGgraph_vertex_vertex|9896|0|15813|0|{FBE_Filter_match_records|}5880|5918|}
{2010212001|XXGvertex_oport_oport|9897|0|15815|0|{0|out|}5918|5919|}
{2010213001|XXGoport_dst_flow|9898|0|15817|0|{0|}5919|5893|}
{2010212001|XXGvertex_oport_oport|9899|0|15818|0|{1|deselect|}5918|5920|}
{2010213001|XXGoport_dst_flow|9900|0|15820|0|{0|}5920|5901|}
{2010212001|XXGvertex_oport_oport|9901|0|15821|0|{2|reject|}5918|5921|}
{2010212001|XXGvertex_oport_oport|9902|0|15823|0|{3|error|}5918|5922|}
{2010212001|XXGvertex_oport_oport|9903|0|15825|0|{4|log|}5918|5923|}
{2010211001|XXGvertex_iport_iport|9904|0|15827|0|{0|in|}5918|5924|}
{2010214001|XXGiport_src_flow|9905|0|15829|0|{0|}5924|5902|}
{2010007001|XXGobject_proto_object|9906|0|15830|0|{}5918|5925|}
{2010212001|XXGvertex_oport_oport|9907|0|15832|0|{0|out|}5925|5926|}
{2010006001|XXGobject_psameas_object|9908|0|15834|0|{metadata|out_metadata|1|0|}5926|5925|}
{2010212001|XXGvertex_oport_oport|9909|0|15835|0|{1|deselect|}5925|5927|}
{2010006001|XXGobject_psameas_object|9910|0|15837|0|{metadata|deselect_metadata|1|0|}5927|5925|}
{2010212001|XXGvertex_oport_oport|9911|0|15838|0|{2|reject|}5925|5928|}
{2010006001|XXGobject_psameas_object|9912|0|15840|0|{metadata|reject_metadata|1|0|}5928|5925|}
{2010212001|XXGvertex_oport_oport|9913|0|15841|0|{3|error|}5925|5929|}
{2010006001|XXGobject_psameas_object|9914|0|15843|0|{metadata|error_metadata|1|0|}5929|5925|}
{2010212001|XXGvertex_oport_oport|9915|0|15844|0|{4|log|}5925|5930|}
{2010006001|XXGobject_psameas_object|9916|0|15846|0|{metadata|log_metadata|1|0|}5930|5925|}
{2010211001|XXGvertex_iport_iport|9917|0|15847|0|{0|in|}5925|5931|}
{2010006001|XXGobject_psameas_object|9918|0|15849|0|{metadata|in_metadata|1|0|}5931|5925|}
{2010601001|XXGgraph_vertex_vertex|9919|0|15850|0|{Get_Hash_on_SRC_NK|}5880|5932|}
{2010212001|XXGvertex_oport_oport|9920|0|15852|0|{0|out0|}5932|5933|}
{2010213001|XXGoport_dst_flow|9921|0|15854|0|{0|}5933|5895|}
{2010212001|XXGvertex_oport_oport|9922|0|15855|0|{1|reject0|}5932|5934|}
{2010212001|XXGvertex_oport_oport|9923|0|15857|0|{2|error0|}5932|5935|}
{2010212001|XXGvertex_oport_oport|9924|0|15859|0|{3|log|}5932|5936|}
{2010211001|XXGvertex_iport_iport|9925|0|15861|0|{0|in|}5932|5937|}
{2010007001|XXGobject_proto_object|9926|0|15863|0|{}5932|5938|}
{2010212001|XXGvertex_oport_oport|9927|0|15865|0|{0|out0|}5938|5939|}
{2010006001|XXGobject_psameas_object|9928|0|15867|0|{metadata|out0_metadata|1|0|}5939|5938|}
{2010006001|XXGobject_psameas_object|9929|0|15868|0|{transform0|transform0|1|0|}5939|5938|}
{2010212001|XXGvertex_oport_oport|9930|0|15869|0|{1|reject0|}5938|5940|}
{2010006001|XXGobject_psameas_object|9931|0|15871|0|{metadata|reject0_metadata|1|0|}5940|5938|}
{2010212001|XXGvertex_oport_oport|9932|0|15872|0|{2|error0|}5938|5941|}
{2010006001|XXGobject_psameas_object|9933|0|15874|0|{metadata|error0_metadata|1|0|}5941|5938|}
{2010212001|XXGvertex_oport_oport|9934|0|15875|0|{3|log|}5938|5942|}
{2010006001|XXGobject_psameas_object|9935|0|15877|0|{metadata|log_metadata|1|0|}5942|5938|}
{2010211001|XXGvertex_iport_iport|9936|0|15878|0|{0|in|}5938|5943|}
{2010006001|XXGobject_psameas_object|9937|0|15880|0|{metadata|in_metadata|1|0|}5943|5938|}
{2010601001|XXGgraph_vertex_vertex|9938|0|15881|0|{Merge|}5880|5944|}
{2010212001|XXGvertex_oport_oport|9939|0|15883|0|{0|out|}5944|5945|}
{2010213001|XXGoport_dst_flow|9940|0|15885|0|{0|}5945|5902|}
{2010211001|XXGvertex_iport_iport|9941|0|15886|0|{0|in|}5944|5946|}
{2010214001|XXGiport_src_flow|9942|0|15888|0|{0|}5946|5897|}
{2010214001|XXGiport_src_flow|9943|0|15889|0|{1|}5946|5894|}
{2010007001|XXGobject_proto_object|9944|0|15890|0|{}5944|5947|}
{2010212001|XXGvertex_oport_oport|9945|0|15892|0|{0|out|}5947|5948|}
{2010006001|XXGobject_psameas_object|9946|0|15894|0|{metadata|out_metadata|1|0|}5948|5947|}
{2010211001|XXGvertex_iport_iport|9947|0|15895|0|{0|in|}5947|5949|}
{2010006001|XXGobject_psameas_object|9948|0|15897|0|{metadata|in_metadata|1|0|}5949|5947|}
{2010601001|XXGgraph_vertex_vertex|9949|0|15898|0|{Normalize_Get_all_records_from_Archive_Lkp|}5880|5950|}
{2010212001|XXGvertex_oport_oport|9950|0|15900|0|{0|out|}5950|5951|}
{2010213001|XXGoport_dst_flow|9951|0|15902|0|{0|}5951|5894|}
{2010212001|XXGvertex_oport_oport|9952|0|15903|0|{1|reject|}5950|5952|}
{2010212001|XXGvertex_oport_oport|9953|0|15905|0|{2|error|}5950|5953|}
{2010212001|XXGvertex_oport_oport|9954|0|15907|0|{3|log|}5950|5954|}
{2010211001|XXGvertex_iport_iport|9955|0|15909|0|{0|in|}5950|5955|}
{2010214001|XXGiport_src_flow|9956|0|15911|0|{0|}5955|5892|}
{2010007001|XXGobject_proto_object|9957|0|15912|0|{}5950|5956|}
{2010212001|XXGvertex_oport_oport|9958|0|15914|0|{0|out|}5956|5957|}
{2010006001|XXGobject_psameas_object|9959|0|15916|0|{metadata|out_metadata|1|0|}5957|5956|}
{2010212001|XXGvertex_oport_oport|9960|0|15917|0|{1|reject|}5956|5958|}
{2010006001|XXGobject_psameas_object|9961|0|15919|0|{metadata|reject_metadata|1|0|}5958|5956|}
{2010212001|XXGvertex_oport_oport|9962|0|15920|0|{2|error|}5956|5959|}
{2010006001|XXGobject_psameas_object|9963|0|15922|0|{metadata|error_metadata|1|0|}5959|5956|}
{2010212001|XXGvertex_oport_oport|9964|0|15923|0|{3|log|}5956|5960|}
{2010006001|XXGobject_psameas_object|9965|0|15925|0|{metadata|log_metadata|1|0|}5960|5956|}
{2010211001|XXGvertex_iport_iport|9966|0|15926|0|{0|in|}5956|5961|}
{2010006001|XXGobject_psameas_object|9967|0|15928|0|{metadata|in_metadata|1|0|}5961|5956|}
{2010601001|XXGgraph_vertex_vertex|9968|0|15929|0|{Normalize_Get_all_records_from_lkp|}5880|5962|}
{2010212001|XXGvertex_oport_oport|9969|0|15931|0|{0|out|}5962|5963|}
{2010213001|XXGoport_dst_flow|9970|0|15933|0|{0|}5963|5897|}
{2010212001|XXGvertex_oport_oport|9971|0|15934|0|{1|reject|}5962|5964|}
{2010212001|XXGvertex_oport_oport|9972|0|15936|0|{2|error|}5962|5965|}
{2010212001|XXGvertex_oport_oport|9973|0|15938|0|{3|log|}5962|5966|}
{2010211001|XXGvertex_iport_iport|9974|0|15940|0|{0|in|}5962|5967|}
{2010214001|XXGiport_src_flow|9975|0|15942|0|{0|}5967|5899|}
{2010007001|XXGobject_proto_object|9976|0|15943|0|{}5962|5968|}
{2010212001|XXGvertex_oport_oport|9977|0|15945|0|{0|out|}5968|5969|}
{2010006001|XXGobject_psameas_object|9978|0|15947|0|{metadata|out_metadata|1|0|}5969|5968|}
{2010212001|XXGvertex_oport_oport|9979|0|15948|0|{1|reject|}5968|5970|}
{2010006001|XXGobject_psameas_object|9980|0|15950|0|{metadata|reject_metadata|1|0|}5970|5968|}
{2010212001|XXGvertex_oport_oport|9981|0|15951|0|{2|error|}5968|5971|}
{2010006001|XXGobject_psameas_object|9982|0|15953|0|{metadata|error_metadata|1|0|}5971|5968|}
{2010212001|XXGvertex_oport_oport|9983|0|15954|0|{3|log|}5968|5972|}
{2010006001|XXGobject_psameas_object|9984|0|15956|0|{metadata|log_metadata|1|0|}5972|5968|}
{2010211001|XXGvertex_iport_iport|9985|0|15957|0|{0|in|}5968|5973|}
{2010006001|XXGobject_psameas_object|9986|0|15959|0|{metadata|in_metadata|1|0|}5973|5968|}
{2010601001|XXGgraph_vertex_vertex|9987|0|15960|0|{Replicate|}5880|5974|}
{2010212001|XXGvertex_oport_oport|9988|0|15962|0|{0|out|}5974|5975|}
{2010211001|XXGvertex_iport_iport|9989|0|15964|0|{0|in|}5974|5976|}
{2010214001|XXGiport_src_flow|9990|0|15966|0|{0|}5976|5896|}
{2010007001|XXGobject_proto_object|9991|0|15967|0|{}5974|5977|}
{2010212001|XXGvertex_oport_oport|9992|0|15969|0|{0|out|}5977|5978|}
{2010006001|XXGobject_psameas_object|9993|0|15971|0|{metadata|out_metadata|1|0|}5978|5977|}
{2010211001|XXGvertex_iport_iport|9994|0|15972|0|{0|in|}5977|5979|}
{2010006001|XXGobject_psameas_object|9995|0|15974|0|{metadata|in_metadata|1|0|}5979|5977|}
{2010601001|XXGgraph_vertex_vertex|9996|0|15975|0|{Replicate_1|}5880|5980|}
{2010212001|XXGvertex_oport_oport|9997|0|15977|0|{0|out|}5980|5981|}
{2010213001|XXGoport_dst_flow|9998|0|15979|0|{0|}5981|5899|}
{2010213001|XXGoport_dst_flow|9999|0|15980|0|{1|}5981|5892|}
{2010211001|XXGvertex_iport_iport|10000|0|15981|0|{0|in|}5980|5982|}
{2010214001|XXGiport_src_flow|10001|0|15983|0|{0|}5982|5898|}
{2010007001|XXGobject_proto_object|10002|0|15984|0|{}5980|5983|}
{2010212001|XXGvertex_oport_oport|10003|0|15986|0|{0|out|}5983|5984|}
{2010006001|XXGobject_psameas_object|10004|0|15988|0|{metadata|out_metadata|1|0|}5984|5983|}
{2010211001|XXGvertex_iport_iport|10005|0|15989|0|{0|in|}5983|5985|}
{2010006001|XXGobject_psameas_object|10006|0|15991|0|{metadata|in_metadata|1|0|}5985|5983|}
{2010601001|XXGgraph_vertex_vertex|10007|0|15992|0|{Sort_Remove_Dup_On_Hash|}5880|5986|}
{2010604001|XXGgraph_flow_flow|10008|0|15994|0|{Flow_3|}5986|5987|}
{2010604001|XXGgraph_flow_flow|10009|0|15996|0|{Flow_5|}5986|5988|}
{2010601001|XXGgraph_vertex_vertex|10010|0|15998|0|{Dedup_Sorted_1|}5986|5989|}
{2010212001|XXGvertex_oport_oport|10011|0|16000|0|{0|out|}5989|5990|}
{2010212001|XXGvertex_oport_oport|10012|0|16002|0|{1|dup|}5989|5991|}
{2010212001|XXGvertex_oport_oport|10013|0|16004|0|{2|reject|}5989|5992|}
{2010212001|XXGvertex_oport_oport|10014|0|16006|0|{3|error|}5989|5993|}
{2010212001|XXGvertex_oport_oport|10015|0|16008|0|{4|log|}5989|5994|}
{2010211001|XXGvertex_iport_iport|10016|0|16010|0|{0|in|}5989|5995|}
{2010214001|XXGiport_src_flow|10017|0|16012|0|{0|}5995|5988|}
{2010007001|XXGobject_proto_object|10018|0|16013|0|{}5989|5996|}
{2010212001|XXGvertex_oport_oport|10019|0|16015|0|{0|out|}5996|5997|}
{2010006001|XXGobject_psameas_object|10020|0|16017|0|{metadata|out_metadata|1|0|}5997|5996|}
{2010212001|XXGvertex_oport_oport|10021|0|16018|0|{1|dup|}5996|5998|}
{2010006001|XXGobject_psameas_object|10022|0|16020|0|{metadata|dup_metadata|1|0|}5998|5996|}
{2010212001|XXGvertex_oport_oport|10023|0|16021|0|{2|reject|}5996|5999|}
{2010006001|XXGobject_psameas_object|10024|0|16023|0|{metadata|reject_metadata|1|0|}5999|5996|}
{2010212001|XXGvertex_oport_oport|10025|0|16024|0|{3|error|}5996|6000|}
{2010006001|XXGobject_psameas_object|10026|0|16026|0|{metadata|error_metadata|1|0|}6000|5996|}
{2010212001|XXGvertex_oport_oport|10027|0|16027|0|{4|log|}5996|6001|}
{2010006001|XXGobject_psameas_object|10028|0|16029|0|{metadata|log_metadata|1|0|}6001|5996|}
{2010211001|XXGvertex_iport_iport|10029|0|16030|0|{0|in|}5996|6002|}
{2010006001|XXGobject_psameas_object|10030|0|16032|0|{metadata|in_metadata|1|0|}6002|5996|}
{2010601001|XXGgraph_vertex_vertex|10031|0|16033|0|{PBKS_dxf_hk_part1_|}5986|6003|}
{2010604001|XXGgraph_flow_flow|10032|0|16035|0|{Flow_1|}6003|6004|}
{2010601001|XXGgraph_vertex_vertex|10033|0|16037|0|{Partition_by_Key|}6003|6005|}
{2010212001|XXGvertex_oport_oport|10034|0|16039|0|{0|out|}6005|6006|}
{2010213001|XXGoport_dst_flow|10035|0|16041|0|{0|}6006|6004|}
{2010211001|XXGvertex_iport_iport|10036|0|16042|0|{0|in|}6005|6007|}
{2010601001|XXGgraph_vertex_vertex|10037|0|16044|0|{Sort|}6003|6008|}
{2010212001|XXGvertex_oport_oport|10038|0|16046|0|{0|out|}6008|6009|}
{2010211001|XXGvertex_iport_iport|10039|0|16048|0|{0|in|}6008|6010|}
{2010214001|XXGiport_src_flow|10040|0|16050|0|{0|}6010|6004|}
{2010212001|XXGvertex_oport_oport|10041|0|16051|0|{0|out0|}6003|6011|}
{2010216002|XXGoport_binding_oport|10042|0|16053|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}6011|6009|}
{2010213001|XXGoport_dst_flow|10043|0|16054|0|{0|}6011|5987|}
{2010211001|XXGvertex_iport_iport|10044|0|16055|0|{0|in0|}6003|6012|}
{2010215002|XXGiport_binding_iport|10045|0|16057|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}6012|6007|}
{2010007001|XXGobject_proto_object|10046|0|16058|0|{}6003|6013|}
{2010604001|XXGgraph_flow_flow|10047|0|16060|0|{Flow_1|}6013|6014|}
{2010601001|XXGgraph_vertex_vertex|10048|0|16062|0|{Partition_by_Key|}6013|6015|}
{2010212001|XXGvertex_oport_oport|10049|0|16064|0|{0|out|}6015|6016|}
{2010213001|XXGoport_dst_flow|10050|0|16066|0|{0|}6016|6014|}
{2010211001|XXGvertex_iport_iport|10051|0|16067|0|{0|in|}6015|6017|}
{2010007001|XXGobject_proto_object|10052|0|16069|0|{}6015|6018|}
{2010212001|XXGvertex_oport_oport|10053|0|16071|0|{0|out|}6018|6019|}
{2010006001|XXGobject_psameas_object|10054|0|16073|0|{metadata|out_metadata|1|0|}6019|6018|}
{2010211001|XXGvertex_iport_iport|10055|0|16074|0|{0|in|}6018|6020|}
{2010006001|XXGobject_psameas_object|10056|0|16076|0|{metadata|in_metadata|1|0|}6020|6018|}
{2010006001|XXGobject_psameas_object|10057|0|16077|0|{Layout|InputLayout|1|0|}6015|6013|}
{2010006001|XXGobject_psameas_object|10058|0|16078|0|{key|Key|1|0|}6015|6013|}
{2010601001|XXGgraph_vertex_vertex|10059|0|16079|0|{Sort|}6013|6021|}
{2010212001|XXGvertex_oport_oport|10060|0|16081|0|{0|out|}6021|6022|}
{2010211001|XXGvertex_iport_iport|10061|0|16083|0|{0|in|}6021|6023|}
{2010214001|XXGiport_src_flow|10062|0|16085|0|{0|}6023|6014|}
{2010007001|XXGobject_proto_object|10063|0|16086|0|{}6021|6024|}
{2010212001|XXGvertex_oport_oport|10064|0|16088|0|{0|out|}6024|6025|}
{2010006001|XXGobject_psameas_object|10065|0|16090|0|{metadata|out_metadata|1|0|}6025|6024|}
{2010211001|XXGvertex_iport_iport|10066|0|16091|0|{0|in|}6024|6026|}
{2010006001|XXGobject_psameas_object|10067|0|16093|0|{metadata|in_metadata|1|0|}6026|6024|}
{2010006001|XXGobject_psameas_object|10068|0|16094|0|{Layout|OutputLayout|1|0|}6021|6013|}
{2010006001|XXGobject_psameas_object|10069|0|16095|0|{key|Key|1|0|}6021|6013|}
{2010006001|XXGobject_psameas_object|10070|0|16096|0|{max_core|Max_core|1|0|}6021|6013|}
{2010212001|XXGvertex_oport_oport|10071|0|16097|0|{0|out0|}6013|6027|}
{2010216002|XXGoport_binding_oport|10072|0|16099|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}6027|6022|}
{2010211001|XXGvertex_iport_iport|10073|0|16100|0|{0|in0|}6013|6028|}
{2010215002|XXGiport_binding_iport|10074|0|16102|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}6028|6017|}
{2010006001|XXGobject_psameas_object|10075|0|16103|0|{InputLayout|Layout|0|0|}6003|5932|}
{2010601001|XXGgraph_vertex_vertex|10076|0|16104|0|{Sort_within_Groups|}5986|6029|}
{2010212001|XXGvertex_oport_oport|10077|0|16106|0|{0|out|}6029|6030|}
{2010213001|XXGoport_dst_flow|10078|0|16108|0|{0|}6030|5988|}
{2010211001|XXGvertex_iport_iport|10079|0|16109|0|{0|in|}6029|6031|}
{2010214001|XXGiport_src_flow|10080|0|16111|0|{0|}6031|5987|}
{2010007001|XXGobject_proto_object|10081|0|16112|0|{}6029|6032|}
{2010212001|XXGvertex_oport_oport|10082|0|16114|0|{0|out|}6032|6033|}
{2010006001|XXGobject_psameas_object|10083|0|16116|0|{metadata|out_metadata|1|0|}6033|6032|}
{2010211001|XXGvertex_iport_iport|10084|0|16117|0|{0|in|}6032|6034|}
{2010006001|XXGobject_psameas_object|10085|0|16119|0|{metadata|in_metadata|1|0|}6034|6032|}
{2010212001|XXGvertex_oport_oport|10086|0|16120|0|{0|out0|}5986|6035|}
{2010216002|XXGoport_binding_oport|10087|0|16122|0|{.5|.5|{0|}14672|}6035|5990|}
{2010213001|XXGoport_dst_flow|10088|0|16123|0|{0|}6035|5898|}
{2010212001|XXGvertex_oport_oport|10089|0|16124|0|{1|out1|}5986|6036|}
{2010216002|XXGoport_binding_oport|10090|0|16126|0|{.5|.5|{0|}14673|}6036|5991|}
{2010213001|XXGoport_dst_flow|10091|0|16127|0|{0|}6036|5903|}
{2010211001|XXGvertex_iport_iport|10092|0|16128|0|{0|in0|}5986|6037|}
{2010215002|XXGiport_binding_iport|10093|0|16130|0|{.5|.5|{0|}14671|}6037|6012|}
{2010214001|XXGiport_src_flow|10094|0|16131|0|{0|}6037|5895|}
{2010601001|XXGgraph_vertex_vertex|10095|0|16132|0|{Sort_on_Adjusted_Natural_Keys|}5880|6038|}
{2010212001|XXGvertex_oport_oport|10096|0|16134|0|{0|out|}6038|6039|}
{2010213001|XXGoport_dst_flow|10097|0|16136|0|{0|}6039|5891|}
{2010211001|XXGvertex_iport_iport|10098|0|16137|0|{0|in|}6038|6040|}
{2010214001|XXGiport_src_flow|10099|0|16139|0|{0|}6040|5893|}
{2010007001|XXGobject_proto_object|10100|0|16140|0|{}6038|6041|}
{2010212001|XXGvertex_oport_oport|10101|0|16142|0|{0|out|}6041|6042|}
{2010006001|XXGobject_psameas_object|10102|0|16144|0|{metadata|out_metadata|1|0|}6042|6041|}
{2010211001|XXGvertex_iport_iport|10103|0|16145|0|{0|in|}6041|6043|}
{2010006001|XXGobject_psameas_object|10104|0|16147|0|{metadata|in_metadata|1|0|}6043|6041|}
{2010601001|XXGgraph_vertex_vertex|10105|0|16148|0|{Trash_1|}5880|6044|}
{2010211001|XXGvertex_iport_iport|10106|0|16150|0|{0|in|}6044|6045|}
{2010214001|XXGiport_src_flow|10107|0|16152|0|{0|}6045|5901|}
{2010007001|XXGobject_proto_object|10108|0|16153|0|{}6044|6046|}
{2010211001|XXGvertex_iport_iport|10109|0|16155|0|{0|in|}6046|6047|}
{2010006001|XXGobject_psameas_object|10110|0|16157|0|{metadata|in_metadata|1|0|}6047|6046|}
{2010601001|XXGgraph_vertex_vertex|10111|0|16158|0|{Trash_2|}5880|6048|}
{2010211001|XXGvertex_iport_iport|10112|0|16160|0|{0|in|}6048|6049|}
{2010214001|XXGiport_src_flow|10113|0|16162|0|{0|}6049|5900|}
{2010007001|XXGobject_proto_object|10114|0|16163|0|{}6048|6050|}
{2010211001|XXGvertex_iport_iport|10115|0|16165|0|{0|in|}6050|6051|}
{2010006001|XXGobject_psameas_object|10116|0|16167|0|{metadata|in_metadata|1|0|}6051|6050|}
{2010601001|XXGgraph_vertex_vertex|10117|0|16168|0|{Trash_3|}5880|6052|}
{2010211001|XXGvertex_iport_iport|10118|0|16170|0|{0|in|}6052|6053|}
{2010214001|XXGiport_src_flow|10119|0|16172|0|{0|}6053|5903|}
{2010007001|XXGobject_proto_object|10120|0|16173|0|{}6052|6054|}
{2010211001|XXGvertex_iport_iport|10121|0|16175|0|{0|in|}6054|6055|}
{2010006001|XXGobject_psameas_object|10122|0|16177|0|{metadata|in_metadata|1|0|}6055|6054|}
{2010212001|XXGvertex_oport_oport|10123|0|16178|0|{0|out0|}5880|6056|}
{2010216002|XXGoport_binding_oport|10124|0|16180|0|{.5|.5|{0|}14899|}6056|5975|}
{2010213001|XXGoport_dst_flow|10125|0|16181|0|{0|}6056|5877|}
{2010211001|XXGvertex_iport_iport|10126|0|16182|0|{0|in0|}5880|6057|}
{2010215002|XXGiport_binding_iport|10127|0|16184|0|{.5|.5|{0|}14898|}6057|5937|}
{2010214001|XXGiport_src_flow|10128|0|16185|0|{0|}6057|5875|}
{2010601001|XXGgraph_vertex_vertex|10129|0|16186|0|{Get_Last_Lookup_Record|}5870|6058|}
{2010605001|XXGgraph_legend_legend|10130|0|16188|0|{0|}6058|6059|}
{2010241001|XXGlegend_face_face|10131|0|16190|0|{}6059|6060|}
{2010605001|XXGgraph_legend_legend|10132|0|16192|0|{1|}6058|6061|}
{2010241001|XXGlegend_face_face|10133|0|16194|0|{}6061|6062|}
{2010605001|XXGgraph_legend_legend|10134|0|16196|0|{2|}6058|6063|}
{2010241001|XXGlegend_face_face|10135|0|16198|0|{}6063|6064|}
{2010605001|XXGgraph_legend_legend|10136|0|16200|0|{3|}6058|6065|}
{2010241001|XXGlegend_face_face|10137|0|16202|0|{}6065|6066|}
{2010604001|XXGgraph_flow_flow|10138|0|16204|0|{Flow_1|}6058|6067|}
{2010604001|XXGgraph_flow_flow|10139|0|16206|0|{Flow_2|}6058|6068|}
{2010604001|XXGgraph_flow_flow|10140|0|16208|0|{Flow_3|}6058|6069|}
{2010604001|XXGgraph_flow_flow|10141|0|16210|0|{Flow_4|}6058|6070|}
{2010604001|XXGgraph_flow_flow|10142|0|16212|0|{Flow_5|}6058|6071|}
{2010604001|XXGgraph_flow_flow|10143|0|16214|0|{Flow_6|}6058|6072|}
{2010604001|XXGgraph_flow_flow|10144|0|16216|0|{Flow_7|}6058|6073|}
{2010604001|XXGgraph_flow_flow|10145|0|16218|0|{Flow_8|}6058|6074|}
{2010604001|XXGgraph_flow_flow|10146|0|16220|0|{Flow_9|}6058|6075|}
{2010601001|XXGgraph_vertex_vertex|10147|0|16222|0|{Dedup_Sorted|}6058|6076|}
{2010212001|XXGvertex_oport_oport|10148|0|16224|0|{0|out|}6076|6077|}
{2010212001|XXGvertex_oport_oport|10149|0|16226|0|{1|dup|}6076|6078|}
{2010213001|XXGoport_dst_flow|10150|0|16228|0|{0|}6078|6074|}
{2010212001|XXGvertex_oport_oport|10151|0|16229|0|{2|reject|}6076|6079|}
{2010212001|XXGvertex_oport_oport|10152|0|16231|0|{3|error|}6076|6080|}
{2010212001|XXGvertex_oport_oport|10153|0|16233|0|{4|log|}6076|6081|}
{2010211001|XXGvertex_iport_iport|10154|0|16235|0|{0|in|}6076|6082|}
{2010214001|XXGiport_src_flow|10155|0|16237|0|{0|}6082|6069|}
{2010007001|XXGobject_proto_object|10156|0|16238|0|{}6076|6083|}
{2010212001|XXGvertex_oport_oport|10157|0|16240|0|{0|out|}6083|6084|}
{2010006001|XXGobject_psameas_object|10158|0|16242|0|{metadata|out_metadata|1|0|}6084|6083|}
{2010212001|XXGvertex_oport_oport|10159|0|16243|0|{1|dup|}6083|6085|}
{2010006001|XXGobject_psameas_object|10160|0|16245|0|{metadata|dup_metadata|1|0|}6085|6083|}
{2010212001|XXGvertex_oport_oport|10161|0|16246|0|{2|reject|}6083|6086|}
{2010006001|XXGobject_psameas_object|10162|0|16248|0|{metadata|reject_metadata|1|0|}6086|6083|}
{2010212001|XXGvertex_oport_oport|10163|0|16249|0|{3|error|}6083|6087|}
{2010006001|XXGobject_psameas_object|10164|0|16251|0|{metadata|error_metadata|1|0|}6087|6083|}
{2010212001|XXGvertex_oport_oport|10165|0|16252|0|{4|log|}6083|6088|}
{2010006001|XXGobject_psameas_object|10166|0|16254|0|{metadata|log_metadata|1|0|}6088|6083|}
{2010211001|XXGvertex_iport_iport|10167|0|16255|0|{0|in|}6083|6089|}
{2010006001|XXGobject_psameas_object|10168|0|16257|0|{metadata|in_metadata|1|0|}6089|6083|}
{2010601001|XXGgraph_vertex_vertex|10169|0|16258|0|{FBE_filter_matching_lkp_record|}6058|6090|}
{2010212001|XXGvertex_oport_oport|10170|0|16260|0|{0|out|}6090|6091|}
{2010213001|XXGoport_dst_flow|10171|0|16262|0|{0|}6091|6068|}
{2010212001|XXGvertex_oport_oport|10172|0|16263|0|{1|deselect|}6090|6092|}
{2010213001|XXGoport_dst_flow|10173|0|16265|0|{0|}6092|6075|}
{2010212001|XXGvertex_oport_oport|10174|0|16266|0|{2|reject|}6090|6093|}
{2010212001|XXGvertex_oport_oport|10175|0|16268|0|{3|error|}6090|6094|}
{2010212001|XXGvertex_oport_oport|10176|0|16270|0|{4|log|}6090|6095|}
{2010211001|XXGvertex_iport_iport|10177|0|16272|0|{0|in|}6090|6096|}
{2010214001|XXGiport_src_flow|10178|0|16274|0|{0|}6096|6071|}
{2010007001|XXGobject_proto_object|10179|0|16275|0|{}6090|6097|}
{2010212001|XXGvertex_oport_oport|10180|0|16277|0|{0|out|}6097|6098|}
{2010006001|XXGobject_psameas_object|10181|0|16279|0|{metadata|out_metadata|1|0|}6098|6097|}
{2010212001|XXGvertex_oport_oport|10182|0|16280|0|{1|deselect|}6097|6099|}
{2010006001|XXGobject_psameas_object|10183|0|16282|0|{metadata|deselect_metadata|1|0|}6099|6097|}
{2010212001|XXGvertex_oport_oport|10184|0|16283|0|{2|reject|}6097|6100|}
{2010006001|XXGobject_psameas_object|10185|0|16285|0|{metadata|reject_metadata|1|0|}6100|6097|}
{2010212001|XXGvertex_oport_oport|10186|0|16286|0|{3|error|}6097|6101|}
{2010006001|XXGobject_psameas_object|10187|0|16288|0|{metadata|error_metadata|1|0|}6101|6097|}
{2010212001|XXGvertex_oport_oport|10188|0|16289|0|{4|log|}6097|6102|}
{2010006001|XXGobject_psameas_object|10189|0|16291|0|{metadata|log_metadata|1|0|}6102|6097|}
{2010211001|XXGvertex_iport_iport|10190|0|16292|0|{0|in|}6097|6103|}
{2010006001|XXGobject_psameas_object|10191|0|16294|0|{metadata|in_metadata|1|0|}6103|6097|}
{2010601001|XXGgraph_vertex_vertex|10192|0|16295|0|{RFMT_Get_Hash_On_NK|}6058|6104|}
{2010212001|XXGvertex_oport_oport|10193|0|16297|0|{0|out0|}6104|6105|}
{2010213001|XXGoport_dst_flow|10194|0|16299|0|{0|}6105|6067|}
{2010212001|XXGvertex_oport_oport|10195|0|16300|0|{1|reject0|}6104|6106|}
{2010212001|XXGvertex_oport_oport|10196|0|16302|0|{2|error0|}6104|6107|}
{2010212001|XXGvertex_oport_oport|10197|0|16304|0|{3|log|}6104|6108|}
{2010211001|XXGvertex_iport_iport|10198|0|16306|0|{0|in|}6104|6109|}
{2010007001|XXGobject_proto_object|10199|0|16308|0|{}6104|6110|}
{2010212001|XXGvertex_oport_oport|10200|0|16310|0|{0|out0|}6110|6111|}
{2010006001|XXGobject_psameas_object|10201|0|16312|0|{metadata|out0_metadata|1|0|}6111|6110|}
{2010006001|XXGobject_psameas_object|10202|0|16313|0|{transform0|transform0|1|0|}6111|6110|}
{2010212001|XXGvertex_oport_oport|10203|0|16314|0|{1|reject0|}6110|6112|}
{2010006001|XXGobject_psameas_object|10204|0|16316|0|{metadata|reject0_metadata|1|0|}6112|6110|}
{2010212001|XXGvertex_oport_oport|10205|0|16317|0|{2|error0|}6110|6113|}
{2010006001|XXGobject_psameas_object|10206|0|16319|0|{metadata|error0_metadata|1|0|}6113|6110|}
{2010212001|XXGvertex_oport_oport|10207|0|16320|0|{3|log|}6110|6114|}
{2010006001|XXGobject_psameas_object|10208|0|16322|0|{metadata|log_metadata|1|0|}6114|6110|}
{2010211001|XXGvertex_iport_iport|10209|0|16323|0|{0|in|}6110|6115|}
{2010006001|XXGobject_psameas_object|10210|0|16325|0|{metadata|in_metadata|1|0|}6115|6110|}
{2010601001|XXGgraph_vertex_vertex|10211|0|16326|0|{RFMT_Lookup_with_IDS|}6058|6116|}
{2010212001|XXGvertex_oport_oport|10212|0|16328|0|{0|out0|}6116|6117|}
{2010213001|XXGoport_dst_flow|10213|0|16330|0|{0|}6117|6070|}
{2010212001|XXGvertex_oport_oport|10214|0|16331|0|{1|reject0|}6116|6118|}
{2010212001|XXGvertex_oport_oport|10215|0|16333|0|{2|error0|}6116|6119|}
{2010212001|XXGvertex_oport_oport|10216|0|16335|0|{3|log|}6116|6120|}
{2010211001|XXGvertex_iport_iport|10217|0|16337|0|{0|in|}6116|6121|}
{2010214001|XXGiport_src_flow|10218|0|16339|0|{0|}6121|6072|}
{2010007001|XXGobject_proto_object|10219|0|16340|0|{}6116|6122|}
{2010212001|XXGvertex_oport_oport|10220|0|16342|0|{0|out0|}6122|6123|}
{2010006001|XXGobject_psameas_object|10221|0|16344|0|{metadata|out0_metadata|1|0|}6123|6122|}
{2010006001|XXGobject_psameas_object|10222|0|16345|0|{transform0|transform0|1|0|}6123|6122|}
{2010212001|XXGvertex_oport_oport|10223|0|16346|0|{1|reject0|}6122|6124|}
{2010006001|XXGobject_psameas_object|10224|0|16348|0|{metadata|reject0_metadata|1|0|}6124|6122|}
{2010212001|XXGvertex_oport_oport|10225|0|16349|0|{2|error0|}6122|6125|}
{2010006001|XXGobject_psameas_object|10226|0|16351|0|{metadata|error0_metadata|1|0|}6125|6122|}
{2010212001|XXGvertex_oport_oport|10227|0|16352|0|{3|log|}6122|6126|}
{2010006001|XXGobject_psameas_object|10228|0|16354|0|{metadata|log_metadata|1|0|}6126|6122|}
{2010211001|XXGvertex_iport_iport|10229|0|16355|0|{0|in|}6122|6127|}
{2010006001|XXGobject_psameas_object|10230|0|16357|0|{metadata|in_metadata|1|0|}6127|6122|}
{2010601001|XXGgraph_vertex_vertex|10231|0|16358|0|{Sort_De_dup|}6058|6128|}
{2010604001|XXGgraph_flow_flow|10232|0|16360|0|{Flow_10|}6128|6129|}
{2010604001|XXGgraph_flow_flow|10233|0|16362|0|{Flow_4|}6128|6130|}
{2010244001|XXGflow_watcher_watcher|10234|0|16364|0|{}6130|6131|}
{2010601001|XXGgraph_vertex_vertex|10235|0|16366|0|{Dedup_Sorted_1|}6128|6132|}
{2010212001|XXGvertex_oport_oport|10236|0|16368|0|{0|out|}6132|6133|}
{2010212001|XXGvertex_oport_oport|10237|0|16370|0|{1|dup|}6132|6134|}
{2010212001|XXGvertex_oport_oport|10238|0|16372|0|{2|reject|}6132|6135|}
{2010212001|XXGvertex_oport_oport|10239|0|16374|0|{3|error|}6132|6136|}
{2010212001|XXGvertex_oport_oport|10240|0|16376|0|{4|log|}6132|6137|}
{2010211001|XXGvertex_iport_iport|10241|0|16378|0|{0|in|}6132|6138|}
{2010214001|XXGiport_src_flow|10242|0|16380|0|{0|}6138|6129|}
{2010007001|XXGobject_proto_object|10243|0|16381|0|{}6132|6139|}
{2010212001|XXGvertex_oport_oport|10244|0|16383|0|{0|out|}6139|6140|}
{2010006001|XXGobject_psameas_object|10245|0|16385|0|{metadata|out_metadata|1|0|}6140|6139|}
{2010212001|XXGvertex_oport_oport|10246|0|16386|0|{1|dup|}6139|6141|}
{2010006001|XXGobject_psameas_object|10247|0|16388|0|{metadata|dup_metadata|1|0|}6141|6139|}
{2010212001|XXGvertex_oport_oport|10248|0|16389|0|{2|reject|}6139|6142|}
{2010006001|XXGobject_psameas_object|10249|0|16391|0|{metadata|reject_metadata|1|0|}6142|6139|}
{2010212001|XXGvertex_oport_oport|10250|0|16392|0|{3|error|}6139|6143|}
{2010006001|XXGobject_psameas_object|10251|0|16394|0|{metadata|error_metadata|1|0|}6143|6139|}
{2010212001|XXGvertex_oport_oport|10252|0|16395|0|{4|log|}6139|6144|}
{2010006001|XXGobject_psameas_object|10253|0|16397|0|{metadata|log_metadata|1|0|}6144|6139|}
{2010211001|XXGvertex_iport_iport|10254|0|16398|0|{0|in|}6139|6145|}
{2010006001|XXGobject_psameas_object|10255|0|16400|0|{metadata|in_metadata|1|0|}6145|6139|}
{2010601001|XXGgraph_vertex_vertex|10256|0|16401|0|{PBKS_dxf_hk_part1_|}6128|6146|}
{2010604001|XXGgraph_flow_flow|10257|0|16403|0|{Flow_1|}6146|6147|}
{2010601001|XXGgraph_vertex_vertex|10258|0|16405|0|{Partition_by_Key|}6146|6148|}
{2010212001|XXGvertex_oport_oport|10259|0|16407|0|{0|out|}6148|6149|}
{2010213001|XXGoport_dst_flow|10260|0|16409|0|{0|}6149|6147|}
{2010211001|XXGvertex_iport_iport|10261|0|16410|0|{0|in|}6148|6150|}
{2010601001|XXGgraph_vertex_vertex|10262|0|16412|0|{Sort|}6146|6151|}
{2010212001|XXGvertex_oport_oport|10263|0|16414|0|{0|out|}6151|6152|}
{2010211001|XXGvertex_iport_iport|10264|0|16416|0|{0|in|}6151|6153|}
{2010214001|XXGiport_src_flow|10265|0|16418|0|{0|}6153|6147|}
{2010212001|XXGvertex_oport_oport|10266|0|16419|0|{0|out0|}6146|6154|}
{2010216002|XXGoport_binding_oport|10267|0|16421|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}6154|6152|}
{2010213001|XXGoport_dst_flow|10268|0|16422|0|{0|}6154|6130|}
{2010211001|XXGvertex_iport_iport|10269|0|16423|0|{0|in0|}6146|6155|}
{2010215002|XXGiport_binding_iport|10270|0|16425|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}6155|6150|}
{2010007001|XXGobject_proto_object|10271|0|16426|0|{}6146|6156|}
{2010604001|XXGgraph_flow_flow|10272|0|16428|0|{Flow_1|}6156|6157|}
{2010601001|XXGgraph_vertex_vertex|10273|0|16430|0|{Partition_by_Key|}6156|6158|}
{2010212001|XXGvertex_oport_oport|10274|0|16432|0|{0|out|}6158|6159|}
{2010213001|XXGoport_dst_flow|10275|0|16434|0|{0|}6159|6157|}
{2010211001|XXGvertex_iport_iport|10276|0|16435|0|{0|in|}6158|6160|}
{2010007001|XXGobject_proto_object|10277|0|16437|0|{}6158|6161|}
{2010212001|XXGvertex_oport_oport|10278|0|16439|0|{0|out|}6161|6162|}
{2010006001|XXGobject_psameas_object|10279|0|16441|0|{metadata|out_metadata|1|0|}6162|6161|}
{2010211001|XXGvertex_iport_iport|10280|0|16442|0|{0|in|}6161|6163|}
{2010006001|XXGobject_psameas_object|10281|0|16444|0|{metadata|in_metadata|1|0|}6163|6161|}
{2010006001|XXGobject_psameas_object|10282|0|16445|0|{Layout|InputLayout|1|0|}6158|6156|}
{2010006001|XXGobject_psameas_object|10283|0|16446|0|{key|Key|1|0|}6158|6156|}
{2010601001|XXGgraph_vertex_vertex|10284|0|16447|0|{Sort|}6156|6164|}
{2010212001|XXGvertex_oport_oport|10285|0|16449|0|{0|out|}6164|6165|}
{2010211001|XXGvertex_iport_iport|10286|0|16451|0|{0|in|}6164|6166|}
{2010214001|XXGiport_src_flow|10287|0|16453|0|{0|}6166|6157|}
{2010007001|XXGobject_proto_object|10288|0|16454|0|{}6164|6167|}
{2010212001|XXGvertex_oport_oport|10289|0|16456|0|{0|out|}6167|6168|}
{2010006001|XXGobject_psameas_object|10290|0|16458|0|{metadata|out_metadata|1|0|}6168|6167|}
{2010211001|XXGvertex_iport_iport|10291|0|16459|0|{0|in|}6167|6169|}
{2010006001|XXGobject_psameas_object|10292|0|16461|0|{metadata|in_metadata|1|0|}6169|6167|}
{2010006001|XXGobject_psameas_object|10293|0|16462|0|{Layout|OutputLayout|1|0|}6164|6156|}
{2010006001|XXGobject_psameas_object|10294|0|16463|0|{key|Key|1|0|}6164|6156|}
{2010006001|XXGobject_psameas_object|10295|0|16464|0|{max_core|Max_core|1|0|}6164|6156|}
{2010212001|XXGvertex_oport_oport|10296|0|16465|0|{0|out0|}6156|6170|}
{2010216002|XXGoport_binding_oport|10297|0|16467|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}6170|6165|}
{2010211001|XXGvertex_iport_iport|10298|0|16468|0|{0|in0|}6156|6171|}
{2010215002|XXGiport_binding_iport|10299|0|16470|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}6171|6160|}
{2010601001|XXGgraph_vertex_vertex|10300|0|16471|0|{Sort_within_Groups_1|}6128|6172|}
{2010212001|XXGvertex_oport_oport|10301|0|16473|0|{0|out|}6172|6173|}
{2010213001|XXGoport_dst_flow|10302|0|16475|0|{0|}6173|6129|}
{2010211001|XXGvertex_iport_iport|10303|0|16476|0|{0|in|}6172|6174|}
{2010214001|XXGiport_src_flow|10304|0|16478|0|{0|}6174|6130|}
{2010007001|XXGobject_proto_object|10305|0|16479|0|{}6172|6175|}
{2010212001|XXGvertex_oport_oport|10306|0|16481|0|{0|out|}6175|6176|}
{2010006001|XXGobject_psameas_object|10307|0|16483|0|{metadata|out_metadata|1|0|}6176|6175|}
{2010211001|XXGvertex_iport_iport|10308|0|16484|0|{0|in|}6175|6177|}
{2010006001|XXGobject_psameas_object|10309|0|16486|0|{metadata|in_metadata|1|0|}6177|6175|}
{2010212001|XXGvertex_oport_oport|10310|0|16487|0|{0|out0|}6128|6178|}
{2010216002|XXGoport_binding_oport|10311|0|16489|0|{.5|.5|{0|}7792|}6178|6133|}
{2010213001|XXGoport_dst_flow|10312|0|16490|0|{0|}6178|6072|}
{2010212001|XXGvertex_oport_oport|10313|0|16491|0|{1|out1|}6128|6179|}
{2010216002|XXGoport_binding_oport|10314|0|16493|0|{.5|.5|{0|}7793|}6179|6134|}
{2010213001|XXGoport_dst_flow|10315|0|16494|0|{0|}6179|6073|}
{2010211001|XXGvertex_iport_iport|10316|0|16495|0|{0|in0|}6128|6180|}
{2010215002|XXGiport_binding_iport|10317|0|16497|0|{.5|.5|{0|}7791|}6180|6155|}
{2010214001|XXGiport_src_flow|10318|0|16498|0|{0|}6180|6067|}
{2010601001|XXGgraph_vertex_vertex|10319|0|16499|0|{Sort_within_Groups|}6058|6181|}
{2010212001|XXGvertex_oport_oport|10320|0|16501|0|{0|out|}6181|6182|}
{2010213001|XXGoport_dst_flow|10321|0|16503|0|{0|}6182|6069|}
{2010211001|XXGvertex_iport_iport|10322|0|16504|0|{0|in|}6181|6183|}
{2010214001|XXGiport_src_flow|10323|0|16506|0|{0|}6183|6068|}
{2010007001|XXGobject_proto_object|10324|0|16507|0|{}6181|6184|}
{2010212001|XXGvertex_oport_oport|10325|0|16509|0|{0|out|}6184|6185|}
{2010006001|XXGobject_psameas_object|10326|0|16511|0|{metadata|out_metadata|1|0|}6185|6184|}
{2010211001|XXGvertex_iport_iport|10327|0|16512|0|{0|in|}6184|6186|}
{2010006001|XXGobject_psameas_object|10328|0|16514|0|{metadata|in_metadata|1|0|}6186|6184|}
{2010601001|XXGgraph_vertex_vertex|10329|0|16515|0|{Trash|}6058|6187|}
{2010211001|XXGvertex_iport_iport|10330|0|16517|0|{0|in|}6187|6188|}
{2010214001|XXGiport_src_flow|10331|0|16519|0|{0|}6188|6073|}
{2010007001|XXGobject_proto_object|10332|0|16520|0|{}6187|6189|}
{2010211001|XXGvertex_iport_iport|10333|0|16522|0|{0|in|}6189|6190|}
{2010006001|XXGobject_psameas_object|10334|0|16524|0|{metadata|in_metadata|1|0|}6190|6189|}
{2010601001|XXGgraph_vertex_vertex|10335|0|16525|0|{Trash_1|}6058|6191|}
{2010211001|XXGvertex_iport_iport|10336|0|16527|0|{0|in|}6191|6192|}
{2010214001|XXGiport_src_flow|10337|0|16529|0|{0|}6192|6074|}
{2010007001|XXGobject_proto_object|10338|0|16530|0|{}6191|6193|}
{2010211001|XXGvertex_iport_iport|10339|0|16532|0|{0|in|}6193|6194|}
{2010006001|XXGobject_psameas_object|10340|0|16534|0|{metadata|in_metadata|1|0|}6194|6193|}
{2010601001|XXGgraph_vertex_vertex|10341|0|16535|0|{Trash_2|}6058|6195|}
{2010211001|XXGvertex_iport_iport|10342|0|16537|0|{0|in|}6195|6196|}
{2010214001|XXGiport_src_flow|10343|0|16539|0|{0|}6196|6075|}
{2010007001|XXGobject_proto_object|10344|0|16540|0|{}6195|6197|}
{2010211001|XXGvertex_iport_iport|10345|0|16542|0|{0|in|}6197|6198|}
{2010006001|XXGobject_psameas_object|10346|0|16544|0|{metadata|in_metadata|1|0|}6198|6197|}
{2010601001|XXGgraph_vertex_vertex|10347|0|16545|0|{Two_Step_Lookup|}6058|6199|}
{2010605001|XXGgraph_legend_legend|10348|0|16547|0|{0|}6199|6200|}
{2010241001|XXGlegend_face_face|10349|0|16549|0|{}6200|6201|}
{2010604001|XXGgraph_flow_flow|10350|0|16551|0|{Flow_1|}6199|6202|}
{2010604001|XXGgraph_flow_flow|10351|0|16553|0|{Flow_2|}6199|6203|}
{2010604001|XXGgraph_flow_flow|10352|0|16555|0|{Flow_3|}6199|6204|}
{2010604001|XXGgraph_flow_flow|10353|0|16557|0|{Flow_4|}6199|6205|}
{2010604001|XXGgraph_flow_flow|10354|0|16559|0|{Flow_5|}6199|6206|}
{2010604001|XXGgraph_flow_flow|10355|0|16561|0|{Flow_6|}6199|6207|}
{2010601001|XXGgraph_vertex_vertex|10356|0|16563|0|{FBE_Pass_Only_Matching_Rec|}6199|6208|}
{2010212001|XXGvertex_oport_oport|10357|0|16565|0|{0|out|}6208|6209|}
{2010213001|XXGoport_dst_flow|10358|0|16567|0|{0|}6209|6206|}
{2010212001|XXGvertex_oport_oport|10359|0|16568|0|{1|deselect|}6208|6210|}
{2010213001|XXGoport_dst_flow|10360|0|16570|0|{0|}6210|6207|}
{2010212001|XXGvertex_oport_oport|10361|0|16571|0|{2|reject|}6208|6211|}
{2010212001|XXGvertex_oport_oport|10362|0|16573|0|{3|error|}6208|6212|}
{2010212001|XXGvertex_oport_oport|10363|0|16575|0|{4|log|}6208|6213|}
{2010211001|XXGvertex_iport_iport|10364|0|16577|0|{0|in|}6208|6214|}
{2010214001|XXGiport_src_flow|10365|0|16579|0|{0|}6214|6205|}
{2010007001|XXGobject_proto_object|10366|0|16580|0|{}6208|6215|}
{2010212001|XXGvertex_oport_oport|10367|0|16582|0|{0|out|}6215|6216|}
{2010006001|XXGobject_psameas_object|10368|0|16584|0|{metadata|out_metadata|1|0|}6216|6215|}
{2010212001|XXGvertex_oport_oport|10369|0|16585|0|{1|deselect|}6215|6217|}
{2010006001|XXGobject_psameas_object|10370|0|16587|0|{metadata|deselect_metadata|1|0|}6217|6215|}
{2010212001|XXGvertex_oport_oport|10371|0|16588|0|{2|reject|}6215|6218|}
{2010006001|XXGobject_psameas_object|10372|0|16590|0|{metadata|reject_metadata|1|0|}6218|6215|}
{2010212001|XXGvertex_oport_oport|10373|0|16591|0|{3|error|}6215|6219|}
{2010006001|XXGobject_psameas_object|10374|0|16593|0|{metadata|error_metadata|1|0|}6219|6215|}
{2010212001|XXGvertex_oport_oport|10375|0|16594|0|{4|log|}6215|6220|}
{2010006001|XXGobject_psameas_object|10376|0|16596|0|{metadata|log_metadata|1|0|}6220|6215|}
{2010211001|XXGvertex_iport_iport|10377|0|16597|0|{0|in|}6215|6221|}
{2010006001|XXGobject_psameas_object|10378|0|16599|0|{metadata|in_metadata|1|0|}6221|6215|}
{2010601001|XXGgraph_vertex_vertex|10379|0|16600|0|{FBE_filter_matching_lkp_record|}6199|6222|}
{2010212001|XXGvertex_oport_oport|10380|0|16602|0|{0|out|}6222|6223|}
{2010213001|XXGoport_dst_flow|10381|0|16604|0|{0|}6223|6204|}
{2010212001|XXGvertex_oport_oport|10382|0|16605|0|{1|deselect|}6222|6224|}
{2010213001|XXGoport_dst_flow|10383|0|16607|0|{0|}6224|6202|}
{2010212001|XXGvertex_oport_oport|10384|0|16608|0|{2|reject|}6222|6225|}
{2010212001|XXGvertex_oport_oport|10385|0|16610|0|{3|error|}6222|6226|}
{2010212001|XXGvertex_oport_oport|10386|0|16612|0|{4|log|}6222|6227|}
{2010211001|XXGvertex_iport_iport|10387|0|16614|0|{0|in|}6222|6228|}
{2010007001|XXGobject_proto_object|10388|0|16616|0|{}6222|6229|}
{2010212001|XXGvertex_oport_oport|10389|0|16618|0|{0|out|}6229|6230|}
{2010006001|XXGobject_psameas_object|10390|0|16620|0|{metadata|out_metadata|1|0|}6230|6229|}
{2010212001|XXGvertex_oport_oport|10391|0|16621|0|{1|deselect|}6229|6231|}
{2010006001|XXGobject_psameas_object|10392|0|16623|0|{metadata|deselect_metadata|1|0|}6231|6229|}
{2010212001|XXGvertex_oport_oport|10393|0|16624|0|{2|reject|}6229|6232|}
{2010006001|XXGobject_psameas_object|10394|0|16626|0|{metadata|reject_metadata|1|0|}6232|6229|}
{2010212001|XXGvertex_oport_oport|10395|0|16627|0|{3|error|}6229|6233|}
{2010006001|XXGobject_psameas_object|10396|0|16629|0|{metadata|error_metadata|1|0|}6233|6229|}
{2010212001|XXGvertex_oport_oport|10397|0|16630|0|{4|log|}6229|6234|}
{2010006001|XXGobject_psameas_object|10398|0|16632|0|{metadata|log_metadata|1|0|}6234|6229|}
{2010211001|XXGvertex_iport_iport|10399|0|16633|0|{0|in|}6229|6235|}
{2010006001|XXGobject_psameas_object|10400|0|16635|0|{metadata|in_metadata|1|0|}6235|6229|}
{2010601001|XXGgraph_vertex_vertex|10401|0|16636|0|{Merge|}6199|6236|}
{2010212001|XXGvertex_oport_oport|10402|0|16638|0|{0|out|}6236|6237|}
{2010211001|XXGvertex_iport_iport|10403|0|16640|0|{0|in|}6236|6238|}
{2010214001|XXGiport_src_flow|10404|0|16642|0|{0|}6238|6204|}
{2010214001|XXGiport_src_flow|10405|0|16643|0|{1|}6238|6206|}
{2010007001|XXGobject_proto_object|10406|0|16644|0|{}6236|6239|}
{2010212001|XXGvertex_oport_oport|10407|0|16646|0|{0|out|}6239|6240|}
{2010006001|XXGobject_psameas_object|10408|0|16648|0|{metadata|out_metadata|1|0|}6240|6239|}
{2010211001|XXGvertex_iport_iport|10409|0|16649|0|{0|in|}6239|6241|}
{2010006001|XXGobject_psameas_object|10410|0|16651|0|{metadata|in_metadata|1|0|}6241|6239|}
{2010601001|XXGgraph_vertex_vertex|10411|0|16652|0|{No_Match_Record_In_Second_Pass|}6199|6242|}
{2010211001|XXGvertex_iport_iport|10412|0|16654|0|{0|in|}6242|6243|}
{2010214001|XXGiport_src_flow|10413|0|16656|0|{0|}6243|6207|}
{2010007001|XXGobject_proto_object|10414|0|16657|0|{}6242|6244|}
{2010211001|XXGvertex_iport_iport|10415|0|16659|0|{0|in|}6244|6245|}
{2010006001|XXGobject_psameas_object|10416|0|16661|0|{metadata|in_metadata|1|0|}6245|6244|}
{2010601001|XXGgraph_vertex_vertex|10417|0|16662|0|{RFMT_Lookup_with_IDS_Archive_|}6199|6246|}
{2010212001|XXGvertex_oport_oport|10418|0|16664|0|{0|out0|}6246|6247|}
{2010213001|XXGoport_dst_flow|10419|0|16666|0|{0|}6247|6205|}
{2010212001|XXGvertex_oport_oport|10420|0|16667|0|{1|reject0|}6246|6248|}
{2010212001|XXGvertex_oport_oport|10421|0|16669|0|{2|error0|}6246|6249|}
{2010212001|XXGvertex_oport_oport|10422|0|16671|0|{3|log|}6246|6250|}
{2010211001|XXGvertex_iport_iport|10423|0|16673|0|{0|in|}6246|6251|}
{2010214001|XXGiport_src_flow|10424|0|16675|0|{0|}6251|6203|}
{2010007001|XXGobject_proto_object|10425|0|16676|0|{}6246|6252|}
{2010212001|XXGvertex_oport_oport|10426|0|16678|0|{0|out0|}6252|6253|}
{2010006001|XXGobject_psameas_object|10427|0|16680|0|{metadata|out0_metadata|1|0|}6253|6252|}
{2010006001|XXGobject_psameas_object|10428|0|16681|0|{transform0|transform0|1|0|}6253|6252|}
{2010212001|XXGvertex_oport_oport|10429|0|16682|0|{1|reject0|}6252|6254|}
{2010006001|XXGobject_psameas_object|10430|0|16684|0|{metadata|reject0_metadata|1|0|}6254|6252|}
{2010212001|XXGvertex_oport_oport|10431|0|16685|0|{2|error0|}6252|6255|}
{2010006001|XXGobject_psameas_object|10432|0|16687|0|{metadata|error0_metadata|1|0|}6255|6252|}
{2010212001|XXGvertex_oport_oport|10433|0|16688|0|{3|log|}6252|6256|}
{2010006001|XXGobject_psameas_object|10434|0|16690|0|{metadata|log_metadata|1|0|}6256|6252|}
{2010211001|XXGvertex_iport_iport|10435|0|16691|0|{0|in|}6252|6257|}
{2010006001|XXGobject_psameas_object|10436|0|16693|0|{metadata|in_metadata|1|0|}6257|6252|}
{2010601001|XXGgraph_vertex_vertex|10437|0|16694|0|{RFMT_Pass_only_Hash_Keys|}6199|6258|}
{2010212001|XXGvertex_oport_oport|10438|0|16696|0|{0|out0|}6258|6259|}
{2010213001|XXGoport_dst_flow|10439|0|16698|0|{0|}6259|6203|}
{2010212001|XXGvertex_oport_oport|10440|0|16699|0|{1|reject0|}6258|6260|}
{2010212001|XXGvertex_oport_oport|10441|0|16701|0|{2|error0|}6258|6261|}
{2010212001|XXGvertex_oport_oport|10442|0|16703|0|{3|log|}6258|6262|}
{2010211001|XXGvertex_iport_iport|10443|0|16705|0|{0|in|}6258|6263|}
{2010214001|XXGiport_src_flow|10444|0|16707|0|{0|}6263|6202|}
{2010007001|XXGobject_proto_object|10445|0|16708|0|{}6258|6264|}
{2010212001|XXGvertex_oport_oport|10446|0|16710|0|{0|out0|}6264|6265|}
{2010006001|XXGobject_psameas_object|10447|0|16712|0|{metadata|out0_metadata|1|0|}6265|6264|}
{2010006001|XXGobject_psameas_object|10448|0|16713|0|{transform0|transform0|1|0|}6265|6264|}
{2010212001|XXGvertex_oport_oport|10449|0|16714|0|{1|reject0|}6264|6266|}
{2010006001|XXGobject_psameas_object|10450|0|16716|0|{metadata|reject0_metadata|1|0|}6266|6264|}
{2010212001|XXGvertex_oport_oport|10451|0|16717|0|{2|error0|}6264|6267|}
{2010006001|XXGobject_psameas_object|10452|0|16719|0|{metadata|error0_metadata|1|0|}6267|6264|}
{2010212001|XXGvertex_oport_oport|10453|0|16720|0|{3|log|}6264|6268|}
{2010006001|XXGobject_psameas_object|10454|0|16722|0|{metadata|log_metadata|1|0|}6268|6264|}
{2010211001|XXGvertex_iport_iport|10455|0|16723|0|{0|in|}6264|6269|}
{2010006001|XXGobject_psameas_object|10456|0|16725|0|{metadata|in_metadata|1|0|}6269|6264|}
{2010212001|XXGvertex_oport_oport|10457|0|16726|0|{0|out0|}6199|6270|}
{2010216002|XXGoport_binding_oport|10458|0|16728|0|{.5|.5|{0|}15500|}6270|6237|}
{2010213001|XXGoport_dst_flow|10459|0|16729|0|{0|}6270|6071|}
{2010211001|XXGvertex_iport_iport|10460|0|16730|0|{0|in0|}6199|6271|}
{2010215002|XXGiport_binding_iport|10461|0|16732|0|{.5|.5|{0|}15499|}6271|6228|}
{2010214001|XXGiport_src_flow|10462|0|16733|0|{0|}6271|6070|}
{2010212001|XXGvertex_oport_oport|10463|0|16734|0|{0|out0|}6058|6272|}
{2010216002|XXGoport_binding_oport|10464|0|16736|0|{.5|.5|{0|}15515|}6272|6077|}
{2010213001|XXGoport_dst_flow|10465|0|16737|0|{0|}6272|5878|}
{2010211001|XXGvertex_iport_iport|10466|0|16738|0|{0|in1|}6058|6273|}
{2010215002|XXGiport_binding_iport|10467|0|16740|0|{.5|.5|{0|}15514|}6273|6109|}
{2010214001|XXGiport_src_flow|10468|0|16741|0|{0|}6273|5876|}
{2010601001|XXGgraph_vertex_vertex|10469|0|16742|0|{Merge|}5870|6274|}
{2010212001|XXGvertex_oport_oport|10470|0|16744|0|{0|out|}6274|6275|}
{2010211001|XXGvertex_iport_iport|10471|0|16746|0|{0|in|}6274|6276|}
{2010214001|XXGiport_src_flow|10472|0|16748|0|{0|}6276|5879|}
{2010007001|XXGobject_proto_object|10473|0|16749|0|{}6274|6277|}
{2010212001|XXGvertex_oport_oport|10474|0|16751|0|{0|out|}6277|6278|}
{2010006001|XXGobject_psameas_object|10475|0|16753|0|{metadata|out_metadata|1|0|}6278|6277|}
{2010211001|XXGvertex_iport_iport|10476|0|16754|0|{0|in|}6277|6279|}
{2010006001|XXGobject_psameas_object|10477|0|16756|0|{metadata|in_metadata|1|0|}6279|6277|}
{2010601001|XXGgraph_vertex_vertex|10478|0|16757|0|{Replicate|}5870|6280|}
{2010212001|XXGvertex_oport_oport|10479|0|16759|0|{0|out|}6280|6281|}
{2010213001|XXGoport_dst_flow|10480|0|16761|0|{0|}6281|5875|}
{2010213001|XXGoport_dst_flow|10481|0|16762|0|{1|}6281|5876|}
{2010211001|XXGvertex_iport_iport|10482|0|16763|0|{0|in|}6280|6282|}
{2010007001|XXGobject_proto_object|10483|0|16765|0|{}6280|6283|}
{2010212001|XXGvertex_oport_oport|10484|0|16767|0|{0|out|}6283|6284|}
{2010006001|XXGobject_psameas_object|10485|0|16769|0|{metadata|out_metadata|1|0|}6284|6283|}
{2010211001|XXGvertex_iport_iport|10486|0|16770|0|{0|in|}6283|6285|}
{2010006001|XXGobject_psameas_object|10487|0|16772|0|{metadata|in_metadata|1|0|}6285|6283|}
{2010601001|XXGgraph_vertex_vertex|10488|0|16773|0|{Replicate_1|}5870|6286|}
{2010212001|XXGvertex_oport_oport|10489|0|16775|0|{0|out|}6286|6287|}
{2010213001|XXGoport_dst_flow|10490|0|16777|0|{0|}6287|5879|}
{2010211001|XXGvertex_iport_iport|10491|0|16778|0|{0|in|}6286|6288|}
{2010214001|XXGiport_src_flow|10492|0|16780|0|{0|}6288|5877|}
{2010214001|XXGiport_src_flow|10493|0|16781|0|{1|}6288|5878|}
{2010007001|XXGobject_proto_object|10494|0|16782|0|{}6286|6289|}
{2010212001|XXGvertex_oport_oport|10495|0|16784|0|{0|out|}6289|6290|}
{2010006001|XXGobject_psameas_object|10496|0|16786|0|{metadata|out_metadata|1|0|}6290|6289|}
{2010211001|XXGvertex_iport_iport|10497|0|16787|0|{0|in|}6289|6291|}
{2010006001|XXGobject_psameas_object|10498|0|16789|0|{metadata|in_metadata|1|0|}6291|6289|}
{2010212001|XXGvertex_oport_oport|10499|0|16790|0|{0|out0|}5870|6292|}
{2010216002|XXGoport_binding_oport|10500|0|16792|0|{.5|.5|{0|}7797|}6292|6275|}
{2010211001|XXGvertex_iport_iport|10501|0|16793|0|{0|in0|}5870|6293|}
{2010215002|XXGiport_binding_iport|10502|0|16795|0|{.5|.5|{0|}7796|}6293|6282|}
{2010211001|XXGvertex_iport_iport|10503|0|16796|0|{0|in0|}143|6294|}
{2010215002|XXGiport_binding_iport|10504|0|16798|0|{.5|.5|{0|}8590|}6294|5869|}
{2010214001|XXGiport_src_flow|10505|0|16799|0|{0|}6294|136|}
{2010211001|XXGvertex_iport_iport|10506|0|16800|0|{1|in1|}143|6295|}
{2010215002|XXGiport_binding_iport|10507|0|16802|0|{.5|.5|{0|}8591|}6295|501|}
{2010214001|XXGiport_src_flow|10508|0|16803|0|{0|}6295|138|}
{2010211001|XXGvertex_iport_iport|10509|0|16804|0|{2|in2|}143|6296|}
{2010215002|XXGiport_binding_iport|10510|0|16806|0|{.5|.5|{0|}8592|}6296|1172|}
{2010214001|XXGiport_src_flow|10511|0|16807|0|{0|}6296|137|}
{2010211001|XXGvertex_iport_iport|10512|0|16808|0|{3|in3|}143|6297|}
{2010215002|XXGiport_binding_iport|10513|0|16810|0|{.5|.5|{0|}8593|}6297|1843|}
{2010214001|XXGiport_src_flow|10514|0|16811|0|{0|}6297|139|}
{2010211001|XXGvertex_iport_iport|10515|0|16812|0|{4|in4|}143|6298|}
{2010215002|XXGiport_binding_iport|10516|0|16814|0|{.5|.5|{0|}8594|}6298|2514|}
{2010214001|XXGiport_src_flow|10517|0|16815|0|{0|}6298|140|}
{2010211001|XXGvertex_iport_iport|10518|0|16816|0|{5|in5|}143|6299|}
{2010215002|XXGiport_binding_iport|10519|0|16818|0|{.5|.5|{0|}8595|}6299|3185|}
{2010214001|XXGiport_src_flow|10520|0|16819|0|{0|}6299|141|}
{2010211001|XXGvertex_iport_iport|10521|0|16820|0|{6|in6|}143|6300|}
{2010215002|XXGiport_binding_iport|10522|0|16822|0|{.5|.5|{0|}8596|}6300|4527|}
{2010214001|XXGiport_src_flow|10523|0|16823|0|{0|}6300|134|}
{2010211001|XXGvertex_iport_iport|10524|0|16824|0|{7|in7|}143|6301|}
{2010215002|XXGiport_binding_iport|10525|0|16826|0|{.5|.5|{0|}8597|}6301|5198|}
{2010214001|XXGiport_src_flow|10526|0|16827|0|{0|}6301|135|}
{2010211001|XXGvertex_iport_iport|10527|0|16828|0|{8|in8|}143|6302|}
{2010215002|XXGiport_binding_iport|10528|0|16830|0|{.5|.5|{0|}8598|}6302|3856|}
{2010214001|XXGiport_src_flow|10529|0|16831|0|{0|}6302|133|}
{2010601001|XXGgraph_vertex_vertex|10530|0|16832|0|{Get_Natural_Key_Value_for_every_record|}123|242|}
{2010601001|XXGgraph_vertex_vertex|10531|0|16833|0|{ICFF_LKPS|}123|6303|}
{2010601001|XXGgraph_vertex_vertex|10532|0|16835|0|{IDS_Lkp1|}6303|6304|}
{2010007001|XXGobject_proto_object|10533|0|16837|0|{}6304|6305|}
{2010601001|XXGgraph_vertex_vertex|10534|0|16839|0|{IDS_Lkp10|}6303|6306|}
{2010007001|XXGobject_proto_object|10535|0|16841|0|{}6306|6307|}
{2010601001|XXGgraph_vertex_vertex|10536|0|16843|0|{IDS_Lkp2|}6303|6308|}
{2010007001|XXGobject_proto_object|10537|0|16845|0|{}6308|6309|}
{2010601001|XXGgraph_vertex_vertex|10538|0|16847|0|{IDS_Lkp3|}6303|6310|}
{2010007001|XXGobject_proto_object|10539|0|16849|0|{}6310|6311|}
{2010601001|XXGgraph_vertex_vertex|10540|0|16851|0|{IDS_Lkp4|}6303|6312|}
{2010007001|XXGobject_proto_object|10541|0|16853|0|{}6312|6313|}
{2010601001|XXGgraph_vertex_vertex|10542|0|16855|0|{IDS_Lkp5|}6303|6314|}
{2010007001|XXGobject_proto_object|10543|0|16857|0|{}6314|6315|}
{2010601001|XXGgraph_vertex_vertex|10544|0|16859|0|{IDS_Lkp6|}6303|6316|}
{2010007001|XXGobject_proto_object|10545|0|16861|0|{}6316|6317|}
{2010601001|XXGgraph_vertex_vertex|10546|0|16863|0|{IDS_Lkp7|}6303|6318|}
{2010007001|XXGobject_proto_object|10547|0|16865|0|{}6318|6319|}
{2010601001|XXGgraph_vertex_vertex|10548|0|16867|0|{IDS_Lkp8|}6303|6320|}
{2010007001|XXGobject_proto_object|10549|0|16869|0|{}6320|6321|}
{2010601001|XXGgraph_vertex_vertex|10550|0|16871|0|{IDS_Lkp9|}6303|6322|}
{2010007001|XXGobject_proto_object|10551|0|16873|0|{}6322|6323|}
{2010601001|XXGgraph_vertex_vertex|10552|0|16875|0|{ICFF_LKPS_ARCHIVE|}123|6324|}
{2010601001|XXGgraph_vertex_vertex|10553|0|16877|0|{IDS_Lkp10_Archive|}6324|6325|}
{2010007001|XXGobject_proto_object|10554|0|16879|0|{}6325|6326|}
{2010601001|XXGgraph_vertex_vertex|10555|0|16881|0|{IDS_Lkp1_Archive|}6324|6327|}
{2010007001|XXGobject_proto_object|10556|0|16883|0|{}6327|6328|}
{2010601001|XXGgraph_vertex_vertex|10557|0|16885|0|{IDS_Lkp2_Archive|}6324|6329|}
{2010007001|XXGobject_proto_object|10558|0|16887|0|{}6329|6330|}
{2010601001|XXGgraph_vertex_vertex|10559|0|16889|0|{IDS_Lkp3_Archive|}6324|6331|}
{2010007001|XXGobject_proto_object|10560|0|16891|0|{}6331|6332|}
{2010601001|XXGgraph_vertex_vertex|10561|0|16893|0|{IDS_Lkp4_Archive|}6324|6333|}
{2010007001|XXGobject_proto_object|10562|0|16895|0|{}6333|6334|}
{2010601001|XXGgraph_vertex_vertex|10563|0|16897|0|{IDS_Lkp5_Archive|}6324|6335|}
{2010007001|XXGobject_proto_object|10564|0|16899|0|{}6335|6336|}
{2010601001|XXGgraph_vertex_vertex|10565|0|16901|0|{IDS_Lkp6_Archive|}6324|6337|}
{2010007001|XXGobject_proto_object|10566|0|16903|0|{}6337|6338|}
{2010601001|XXGgraph_vertex_vertex|10567|0|16905|0|{IDS_Lkp7_Archive|}6324|6339|}
{2010007001|XXGobject_proto_object|10568|0|16907|0|{}6339|6340|}
{2010601001|XXGgraph_vertex_vertex|10569|0|16909|0|{IDS_Lkp8_Archive|}6324|6341|}
{2010007001|XXGobject_proto_object|10570|0|16911|0|{}6341|6342|}
{2010601001|XXGgraph_vertex_vertex|10571|0|16913|0|{IDS_Lkp9_Archive|}6324|6343|}
{2010007001|XXGobject_proto_object|10572|0|16915|0|{}6343|6344|}
{2010601001|XXGgraph_vertex_vertex|10573|0|16917|0|{Lkp_File_1|}123|6345|}
{2010211001|XXGvertex_iport_iport|10574|0|16919|0|{0|write|}6345|6346|}
{2010214001|XXGiport_src_flow|10575|0|16921|0|{0|}6346|142|}
{2010007001|XXGobject_proto_object|10576|0|16922|0|{}6345|6347|}
{2010211001|XXGvertex_iport_iport|10577|0|16924|0|{0|write|}6347|6348|}
{2010006001|XXGobject_psameas_object|10578|0|16926|0|{metadata|write_metadata|1|0|}6348|6347|}
{2010601001|XXGgraph_vertex_vertex|10579|0|16927|0|{ids_lookup_1|}123|6349|}
{2010605001|XXGgraph_legend_legend|10580|0|16929|0|{0|}6349|6350|}
{2010241001|XXGlegend_face_face|10581|0|16931|0|{}6350|6351|}
{2010605001|XXGgraph_legend_legend|10582|0|16933|0|{1|}6349|6352|}
{2010241001|XXGlegend_face_face|10583|0|16935|0|{}6352|6353|}
{2010604001|XXGgraph_flow_flow|10584|0|16937|0|{Flow_1|}6349|6354|}
{2010604001|XXGgraph_flow_flow|10585|0|16939|0|{Flow_2|}6349|6355|}
{2010604001|XXGgraph_flow_flow|10586|0|16941|0|{Flow_3|}6349|6356|}
{2010604001|XXGgraph_flow_flow|10587|0|16943|0|{Flow_4|}6349|6357|}
{2010604001|XXGgraph_flow_flow|10588|0|16945|0|{Flow_5|}6349|6358|}
{2010601001|XXGgraph_vertex_vertex|10589|0|16947|0|{Get_All_LookUp_Record|}6349|6359|}
{2010605001|XXGgraph_legend_legend|10590|0|16949|0|{0|}6359|6360|}
{2010241001|XXGlegend_face_face|10591|0|16951|0|{}6360|6361|}
{2010605001|XXGgraph_legend_legend|10592|0|16953|0|{1|}6359|6362|}
{2010241001|XXGlegend_face_face|10593|0|16955|0|{}6362|6363|}
{2010605001|XXGgraph_legend_legend|10594|0|16957|0|{2|}6359|6364|}
{2010241001|XXGlegend_face_face|10595|0|16959|0|{}6364|6365|}
{2010605001|XXGgraph_legend_legend|10596|0|16961|0|{3|}6359|6366|}
{2010241001|XXGlegend_face_face|10597|0|16963|0|{}6366|6367|}
{2010605001|XXGgraph_legend_legend|10598|0|16965|0|{4|}6359|6368|}
{2010241001|XXGlegend_face_face|10599|0|16967|0|{}6368|6369|}
{2010604001|XXGgraph_flow_flow|10600|0|16969|0|{Flow_1|}6359|6370|}
{2010604001|XXGgraph_flow_flow|10601|0|16971|0|{Flow_10|}6359|6371|}
{2010604001|XXGgraph_flow_flow|10602|0|16973|0|{Flow_11|}6359|6372|}
{2010604001|XXGgraph_flow_flow|10603|0|16975|0|{Flow_12|}6359|6373|}
{2010604001|XXGgraph_flow_flow|10604|0|16977|0|{Flow_18|}6359|6374|}
{2010604001|XXGgraph_flow_flow|10605|0|16979|0|{Flow_2|}6359|6375|}
{2010604001|XXGgraph_flow_flow|10606|0|16981|0|{Flow_3|}6359|6376|}
{2010604001|XXGgraph_flow_flow|10607|0|16983|0|{Flow_4|}6359|6377|}
{2010604001|XXGgraph_flow_flow|10608|0|16985|0|{Flow_5|}6359|6378|}
{2010604001|XXGgraph_flow_flow|10609|0|16987|0|{Flow_6|}6359|6379|}
{2010604001|XXGgraph_flow_flow|10610|0|16989|0|{Flow_7|}6359|6380|}
{2010604001|XXGgraph_flow_flow|10611|0|16991|0|{Flow_8|}6359|6381|}
{2010604001|XXGgraph_flow_flow|10612|0|16993|0|{Flow_9|}6359|6382|}
{2010601001|XXGgraph_vertex_vertex|10613|0|16995|0|{Dedup_Sorted|}6359|6383|}
{2010212001|XXGvertex_oport_oport|10614|0|16997|0|{0|out|}6383|6384|}
{2010213001|XXGoport_dst_flow|10615|0|16999|0|{0|}6384|6375|}
{2010212001|XXGvertex_oport_oport|10616|0|17000|0|{1|dup|}6383|6385|}
{2010213001|XXGoport_dst_flow|10617|0|17002|0|{0|}6385|6379|}
{2010212001|XXGvertex_oport_oport|10618|0|17003|0|{2|reject|}6383|6386|}
{2010212001|XXGvertex_oport_oport|10619|0|17005|0|{3|error|}6383|6387|}
{2010212001|XXGvertex_oport_oport|10620|0|17007|0|{4|log|}6383|6388|}
{2010211001|XXGvertex_iport_iport|10621|0|17009|0|{0|in|}6383|6389|}
{2010214001|XXGiport_src_flow|10622|0|17011|0|{0|}6389|6370|}
{2010006001|XXGobject_psameas_object|10623|0|17012|0|{Layout|Layout|0|0|}6383|6390|}
{2010212001|XXGvertex_oport_oport|10624|0|17014|0|{0|out|}6390|6391|}
{2010213001|XXGoport_dst_flow|10625|0|17016|0|{0|}6391|6373|}
{2010212001|XXGvertex_oport_oport|10626|0|17017|0|{1|reject|}6390|6392|}
{2010212001|XXGvertex_oport_oport|10627|0|17019|0|{2|error|}6390|6393|}
{2010212001|XXGvertex_oport_oport|10628|0|17021|0|{3|log|}6390|6394|}
{2010211001|XXGvertex_iport_iport|10629|0|17023|0|{0|in|}6390|6395|}
{2010214001|XXGiport_src_flow|10630|0|17025|0|{0|}6395|6371|}
{2010006001|XXGobject_psameas_object|10631|0|17026|0|{in_metadata|out0_metadata|0|0|}6390|6396|}
{2010212001|XXGvertex_oport_oport|10632|0|17028|0|{0|out0|}6396|6397|}
{2010213001|XXGoport_dst_flow|10633|0|17030|0|{0|}6397|6374|}
{2010212001|XXGvertex_oport_oport|10634|0|17031|0|{1|reject0|}6396|6398|}
{2010212001|XXGvertex_oport_oport|10635|0|17033|0|{2|error0|}6396|6399|}
{2010212001|XXGvertex_oport_oport|10636|0|17035|0|{3|log|}6396|6400|}
{2010211001|XXGvertex_iport_iport|10637|0|17037|0|{0|in|}6396|6401|}
{2010006001|XXGobject_psameas_object|10638|0|17039|0|{Layout|Layout|0|0|}6396|242|}
{2010006001|XXGobject_psameas_object|10639|0|17040|0|{in_metadata|out0_metadata|0|0|}6396|242|}
{2010006001|XXGobject_psameas_object|10640|0|17041|0|{reject0_metadata|out0_metadata|0|0|}6396|242|}
{2010006001|XXGobject_psameas_object|10641|0|17042|0|{reject_metadata|out0_metadata|0|0|}6390|6396|}
{2010006001|XXGobject_psameas_object|10642|0|17043|0|{dup_metadata|out_metadata|0|0|}6383|6402|}
{2010212001|XXGvertex_oport_oport|10643|0|17045|0|{0|out|}6402|6403|}
{2010213001|XXGoport_dst_flow|10644|0|17047|0|{0|}6403|6372|}
{2010212001|XXGvertex_oport_oport|10645|0|17048|0|{1|deselect|}6402|6404|}
{2010213001|XXGoport_dst_flow|10646|0|17050|0|{0|}6404|6380|}
{2010212001|XXGvertex_oport_oport|10647|0|17051|0|{2|reject|}6402|6405|}
{2010212001|XXGvertex_oport_oport|10648|0|17053|0|{3|error|}6402|6406|}
{2010212001|XXGvertex_oport_oport|10649|0|17055|0|{4|log|}6402|6407|}
{2010211001|XXGvertex_iport_iport|10650|0|17057|0|{0|in|}6402|6408|}
{2010214001|XXGiport_src_flow|10651|0|17059|0|{0|}6408|6381|}
{2010006001|XXGobject_psameas_object|10652|0|17060|0|{Layout|Layout|0|0|}6402|6390|}
{2010006001|XXGobject_psameas_object|10653|0|17061|0|{deselect_metadata|out_metadata|0|0|}6402|6402|}
{2010006001|XXGobject_psameas_object|10654|0|17062|0|{in_metadata|out_metadata|0|0|}6402|6390|}
{2010006001|XXGobject_psameas_object|10655|0|17063|0|{reject_metadata|out_metadata|0|0|}6402|6390|}
{2010006001|XXGobject_psameas_object|10656|0|17064|0|{in_metadata|out_metadata|0|0|}6383|6402|}
{2010006001|XXGobject_psameas_object|10657|0|17065|0|{out_metadata|out_metadata|0|0|}6383|6402|}
{2010006001|XXGobject_psameas_object|10658|0|17066|0|{reject_metadata|out_metadata|0|0|}6383|6402|}
{2010601001|XXGgraph_vertex_vertex|10659|0|17067|0|{FBE_Filter_match_records|}6359|6402|}
{2010601001|XXGgraph_vertex_vertex|10660|0|17068|0|{Get_Hash_on_SRC_NK|}6359|6396|}
{2010601001|XXGgraph_vertex_vertex|10661|0|17069|0|{Merge|}6359|6409|}
{2010212001|XXGvertex_oport_oport|10662|0|17071|0|{0|out|}6409|6410|}
{2010213001|XXGoport_dst_flow|10663|0|17073|0|{0|}6410|6381|}
{2010211001|XXGvertex_iport_iport|10664|0|17074|0|{0|in|}6409|6411|}
{2010214001|XXGiport_src_flow|10665|0|17076|0|{0|}6411|6376|}
{2010214001|XXGiport_src_flow|10666|0|17077|0|{1|}6411|6373|}
{2010006001|XXGobject_psameas_object|10667|0|17078|0|{Layout|Layout|0|0|}6409|6390|}
{2010006001|XXGobject_psameas_object|10668|0|17079|0|{in_metadata|out_metadata|0|0|}6409|6390|}
{2010006001|XXGobject_psameas_object|10669|0|17080|0|{out_metadata|out_metadata|0|0|}6409|6390|}
{2010601001|XXGgraph_vertex_vertex|10670|0|17081|0|{Normalize_Get_all_records_from_Archive_Lkp|}6359|6390|}
{2010601001|XXGgraph_vertex_vertex|10671|0|17082|0|{Normalize_Get_all_records_from_lkp|}6359|6412|}
{2010212001|XXGvertex_oport_oport|10672|0|17084|0|{0|out|}6412|6413|}
{2010213001|XXGoport_dst_flow|10673|0|17086|0|{0|}6413|6376|}
{2010212001|XXGvertex_oport_oport|10674|0|17087|0|{1|reject|}6412|6414|}
{2010212001|XXGvertex_oport_oport|10675|0|17089|0|{2|error|}6412|6415|}
{2010212001|XXGvertex_oport_oport|10676|0|17091|0|{3|log|}6412|6416|}
{2010211001|XXGvertex_iport_iport|10677|0|17093|0|{0|in|}6412|6417|}
{2010214001|XXGiport_src_flow|10678|0|17095|0|{0|}6417|6378|}
{2010006001|XXGobject_psameas_object|10679|0|17096|0|{in_metadata|out0_metadata|0|0|}6412|6396|}
{2010006001|XXGobject_psameas_object|10680|0|17097|0|{reject_metadata|out0_metadata|0|0|}6412|6396|}
{2010601001|XXGgraph_vertex_vertex|10681|0|17098|0|{Replicate|}6359|6418|}
{2010212001|XXGvertex_oport_oport|10682|0|17100|0|{0|out|}6418|6419|}
{2010211001|XXGvertex_iport_iport|10683|0|17102|0|{0|in|}6418|6420|}
{2010214001|XXGiport_src_flow|10684|0|17104|0|{0|}6420|6375|}
{2010006001|XXGobject_psameas_object|10685|0|17105|0|{Layout|Layout|0|0|}6418|6390|}
{2010006001|XXGobject_psameas_object|10686|0|17106|0|{in_metadata|out_metadata|0|0|}6418|6402|}
{2010006001|XXGobject_psameas_object|10687|0|17107|0|{out_metadata|out_metadata|0|0|}6418|6402|}
{2010601001|XXGgraph_vertex_vertex|10688|0|17108|0|{Replicate_1|}6359|6421|}
{2010212001|XXGvertex_oport_oport|10689|0|17110|0|{0|out|}6421|6422|}
{2010213001|XXGoport_dst_flow|10690|0|17112|0|{0|}6422|6378|}
{2010213001|XXGoport_dst_flow|10691|0|17113|0|{1|}6422|6371|}
{2010211001|XXGvertex_iport_iport|10692|0|17114|0|{0|in|}6421|6423|}
{2010214001|XXGiport_src_flow|10693|0|17116|0|{0|}6423|6377|}
{2010006001|XXGobject_psameas_object|10694|0|17117|0|{Layout|Layout|0|0|}6421|6390|}
{2010006001|XXGobject_psameas_object|10695|0|17118|0|{in_metadata|out0_metadata|0|0|}6421|6396|}
{2010006001|XXGobject_psameas_object|10696|0|17119|0|{out_metadata|out0_metadata|0|0|}6421|6396|}
{2010601001|XXGgraph_vertex_vertex|10697|0|17120|0|{Sort_Remove_Dup_On_Hash|}6359|6424|}
{2010604001|XXGgraph_flow_flow|10698|0|17122|0|{Flow_3|}6424|6425|}
{2010604001|XXGgraph_flow_flow|10699|0|17124|0|{Flow_5|}6424|6426|}
{2010601001|XXGgraph_vertex_vertex|10700|0|17126|0|{Dedup_Sorted_1|}6424|6427|}
{2010212001|XXGvertex_oport_oport|10701|0|17128|0|{0|out|}6427|6428|}
{2010212001|XXGvertex_oport_oport|10702|0|17130|0|{1|dup|}6427|6429|}
{2010212001|XXGvertex_oport_oport|10703|0|17132|0|{2|reject|}6427|6430|}
{2010212001|XXGvertex_oport_oport|10704|0|17134|0|{3|error|}6427|6431|}
{2010212001|XXGvertex_oport_oport|10705|0|17136|0|{4|log|}6427|6432|}
{2010211001|XXGvertex_iport_iport|10706|0|17138|0|{0|in|}6427|6433|}
{2010214001|XXGiport_src_flow|10707|0|17140|0|{0|}6433|6426|}
{2010006001|XXGobject_psameas_object|10708|0|17141|0|{Layout|Layout|0|0|}6427|6390|}
{2010006001|XXGobject_psameas_object|10709|0|17142|0|{dup_metadata|out0_metadata|0|0|}6427|6396|}
{2010006001|XXGobject_psameas_object|10710|0|17143|0|{in_metadata|out0_metadata|0|0|}6427|6396|}
{2010006001|XXGobject_psameas_object|10711|0|17144|0|{out_metadata|out0_metadata|0|0|}6427|6396|}
{2010006001|XXGobject_psameas_object|10712|0|17145|0|{reject_metadata|out0_metadata|0|0|}6427|6396|}
{2010601001|XXGgraph_vertex_vertex|10713|0|17146|0|{PBKS_dxf_hk_part1_|}6424|6434|}
{2010604001|XXGgraph_flow_flow|10714|0|17148|0|{Flow_1|}6434|6435|}
{2010601001|XXGgraph_vertex_vertex|10715|0|17150|0|{Partition_by_Key|}6434|6436|}
{2010212001|XXGvertex_oport_oport|10716|0|17152|0|{0|out|}6436|6437|}
{2010213001|XXGoport_dst_flow|10717|0|17154|0|{0|}6437|6435|}
{2010211001|XXGvertex_iport_iport|10718|0|17155|0|{0|in|}6436|6438|}
{2010006001|XXGobject_psameas_object|10719|0|17157|0|{in_metadata|out0_metadata|0|0|}6436|6396|}
{2010006001|XXGobject_psameas_object|10720|0|17158|0|{out_metadata|out0_metadata|0|0|}6436|6396|}
{2010601001|XXGgraph_vertex_vertex|10721|0|17159|0|{Sort|}6434|6439|}
{2010212001|XXGvertex_oport_oport|10722|0|17161|0|{0|out|}6439|6440|}
{2010211001|XXGvertex_iport_iport|10723|0|17163|0|{0|in|}6439|6441|}
{2010214001|XXGiport_src_flow|10724|0|17165|0|{0|}6441|6435|}
{2010006001|XXGobject_psameas_object|10725|0|17166|0|{in_metadata|out0_metadata|0|0|}6439|6396|}
{2010006001|XXGobject_psameas_object|10726|0|17167|0|{out_metadata|out0_metadata|0|0|}6439|6396|}
{2010212001|XXGvertex_oport_oport|10727|0|17168|0|{0|out0|}6434|6442|}
{2010216002|XXGoport_binding_oport|10728|0|17170|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}6442|6440|}
{2010213001|XXGoport_dst_flow|10729|0|17171|0|{0|}6442|6425|}
{2010211001|XXGvertex_iport_iport|10730|0|17172|0|{0|in0|}6434|6443|}
{2010215002|XXGiport_binding_iport|10731|0|17174|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}6443|6438|}
{2010006001|XXGobject_psameas_object|10732|0|17175|0|{OutputLayout|Layout|0|0|}6434|6390|}
{2010601001|XXGgraph_vertex_vertex|10733|0|17176|0|{Sort_within_Groups|}6424|6444|}
{2010212001|XXGvertex_oport_oport|10734|0|17178|0|{0|out|}6444|6445|}
{2010213001|XXGoport_dst_flow|10735|0|17180|0|{0|}6445|6426|}
{2010211001|XXGvertex_iport_iport|10736|0|17181|0|{0|in|}6444|6446|}
{2010214001|XXGiport_src_flow|10737|0|17183|0|{0|}6446|6425|}
{2010006001|XXGobject_psameas_object|10738|0|17184|0|{Layout|Layout|0|0|}6444|6390|}
{2010006001|XXGobject_psameas_object|10739|0|17185|0|{in_metadata|out0_metadata|0|0|}6444|6396|}
{2010006001|XXGobject_psameas_object|10740|0|17186|0|{out_metadata|out0_metadata|0|0|}6444|6396|}
{2010212001|XXGvertex_oport_oport|10741|0|17187|0|{0|out0|}6424|6447|}
{2010216002|XXGoport_binding_oport|10742|0|17189|0|{.5|.5|{0|}14672|}6447|6428|}
{2010213001|XXGoport_dst_flow|10743|0|17190|0|{0|}6447|6377|}
{2010212001|XXGvertex_oport_oport|10744|0|17191|0|{1|out1|}6424|6448|}
{2010216002|XXGoport_binding_oport|10745|0|17193|0|{.5|.5|{0|}14673|}6448|6429|}
{2010213001|XXGoport_dst_flow|10746|0|17194|0|{0|}6448|6382|}
{2010211001|XXGvertex_iport_iport|10747|0|17195|0|{0|in0|}6424|6449|}
{2010215002|XXGiport_binding_iport|10748|0|17197|0|{.5|.5|{0|}14671|}6449|6443|}
{2010214001|XXGiport_src_flow|10749|0|17198|0|{0|}6449|6374|}
{2010601001|XXGgraph_vertex_vertex|10750|0|17199|0|{Sort_on_Adjusted_Natural_Keys|}6359|6450|}
{2010212001|XXGvertex_oport_oport|10751|0|17201|0|{0|out|}6450|6451|}
{2010213001|XXGoport_dst_flow|10752|0|17203|0|{0|}6451|6370|}
{2010211001|XXGvertex_iport_iport|10753|0|17204|0|{0|in|}6450|6452|}
{2010214001|XXGiport_src_flow|10754|0|17206|0|{0|}6452|6372|}
{2010006001|XXGobject_psameas_object|10755|0|17207|0|{Layout|Layout|0|0|}6450|6390|}
{2010006001|XXGobject_psameas_object|10756|0|17208|0|{in_metadata|out_metadata|0|0|}6450|6402|}
{2010006001|XXGobject_psameas_object|10757|0|17209|0|{out_metadata|out_metadata|0|0|}6450|6402|}
{2010601001|XXGgraph_vertex_vertex|10758|0|17210|0|{Trash_1|}6359|6453|}
{2010211001|XXGvertex_iport_iport|10759|0|17212|0|{0|in|}6453|6454|}
{2010214001|XXGiport_src_flow|10760|0|17214|0|{0|}6454|6380|}
{2010006001|XXGobject_psameas_object|10761|0|17215|0|{Layout|Layout|0|0|}6453|6390|}
{2010006001|XXGobject_psameas_object|10762|0|17216|0|{in_metadata|out_metadata|0|0|}6453|6402|}
{2010601001|XXGgraph_vertex_vertex|10763|0|17217|0|{Trash_2|}6359|6455|}
{2010211001|XXGvertex_iport_iport|10764|0|17219|0|{0|in|}6455|6456|}
{2010214001|XXGiport_src_flow|10765|0|17221|0|{0|}6456|6379|}
{2010006001|XXGobject_psameas_object|10766|0|17222|0|{Layout|Layout|0|0|}6455|6390|}
{2010006001|XXGobject_psameas_object|10767|0|17223|0|{in_metadata|out_metadata|0|0|}6455|6402|}
{2010601001|XXGgraph_vertex_vertex|10768|0|17224|0|{Trash_3|}6359|6457|}
{2010211001|XXGvertex_iport_iport|10769|0|17226|0|{0|in|}6457|6458|}
{2010214001|XXGiport_src_flow|10770|0|17228|0|{0|}6458|6382|}
{2010006001|XXGobject_psameas_object|10771|0|17229|0|{Layout|Layout|0|0|}6457|6390|}
{2010006001|XXGobject_psameas_object|10772|0|17230|0|{in_metadata|out0_metadata|0|0|}6457|6396|}
{2010212001|XXGvertex_oport_oport|10773|0|17231|0|{0|out0|}6359|6459|}
{2010216002|XXGoport_binding_oport|10774|0|17233|0|{.5|.5|{0|}14924|}6459|6419|}
{2010213001|XXGoport_dst_flow|10775|0|17234|0|{0|}6459|6356|}
{2010211001|XXGvertex_iport_iport|10776|0|17235|0|{0|in0|}6359|6460|}
{2010215002|XXGiport_binding_iport|10777|0|17237|0|{.5|.5|{0|}14923|}6460|6401|}
{2010214001|XXGiport_src_flow|10778|0|17238|0|{0|}6460|6354|}
{2010601001|XXGgraph_vertex_vertex|10779|0|17239|0|{Get_Last_Lookup_Record|}6349|6461|}
{2010605001|XXGgraph_legend_legend|10780|0|17241|0|{0|}6461|6462|}
{2010241001|XXGlegend_face_face|10781|0|17243|0|{}6462|6463|}
{2010605001|XXGgraph_legend_legend|10782|0|17245|0|{1|}6461|6464|}
{2010241001|XXGlegend_face_face|10783|0|17247|0|{}6464|6465|}
{2010605001|XXGgraph_legend_legend|10784|0|17249|0|{2|}6461|6466|}
{2010241001|XXGlegend_face_face|10785|0|17251|0|{}6466|6467|}
{2010605001|XXGgraph_legend_legend|10786|0|17253|0|{3|}6461|6468|}
{2010241001|XXGlegend_face_face|10787|0|17255|0|{}6468|6469|}
{2010604001|XXGgraph_flow_flow|10788|0|17257|0|{Flow_1|}6461|6470|}
{2010604001|XXGgraph_flow_flow|10789|0|17259|0|{Flow_2|}6461|6471|}
{2010604001|XXGgraph_flow_flow|10790|0|17261|0|{Flow_3|}6461|6472|}
{2010604001|XXGgraph_flow_flow|10791|0|17263|0|{Flow_4|}6461|6473|}
{2010604001|XXGgraph_flow_flow|10792|0|17265|0|{Flow_5|}6461|6474|}
{2010604001|XXGgraph_flow_flow|10793|0|17267|0|{Flow_6|}6461|6475|}
{2010604001|XXGgraph_flow_flow|10794|0|17269|0|{Flow_7|}6461|6476|}
{2010604001|XXGgraph_flow_flow|10795|0|17271|0|{Flow_8|}6461|6477|}
{2010604001|XXGgraph_flow_flow|10796|0|17273|0|{Flow_9|}6461|6478|}
{2010601001|XXGgraph_vertex_vertex|10797|0|17275|0|{Dedup_Sorted|}6461|6479|}
{2010212001|XXGvertex_oport_oport|10798|0|17277|0|{0|out|}6479|6480|}
{2010212001|XXGvertex_oport_oport|10799|0|17279|0|{1|dup|}6479|6481|}
{2010213001|XXGoport_dst_flow|10800|0|17281|0|{0|}6481|6477|}
{2010212001|XXGvertex_oport_oport|10801|0|17282|0|{2|reject|}6479|6482|}
{2010212001|XXGvertex_oport_oport|10802|0|17284|0|{3|error|}6479|6483|}
{2010212001|XXGvertex_oport_oport|10803|0|17286|0|{4|log|}6479|6484|}
{2010211001|XXGvertex_iport_iport|10804|0|17288|0|{0|in|}6479|6485|}
{2010214001|XXGiport_src_flow|10805|0|17290|0|{0|}6485|6472|}
{2010006001|XXGobject_psameas_object|10806|0|17291|0|{Layout|Layout|0|0|}6479|6390|}
{2010006001|XXGobject_psameas_object|10807|0|17292|0|{dup_metadata|out_metadata|0|0|}6479|6486|}
{2010212001|XXGvertex_oport_oport|10808|0|17294|0|{0|out|}6486|6487|}
{2010213001|XXGoport_dst_flow|10809|0|17296|0|{0|}6487|6471|}
{2010212001|XXGvertex_oport_oport|10810|0|17297|0|{1|deselect|}6486|6488|}
{2010213001|XXGoport_dst_flow|10811|0|17299|0|{0|}6488|6478|}
{2010212001|XXGvertex_oport_oport|10812|0|17300|0|{2|reject|}6486|6489|}
{2010212001|XXGvertex_oport_oport|10813|0|17302|0|{3|error|}6486|6490|}
{2010212001|XXGvertex_oport_oport|10814|0|17304|0|{4|log|}6486|6491|}
{2010211001|XXGvertex_iport_iport|10815|0|17306|0|{0|in|}6486|6492|}
{2010214001|XXGiport_src_flow|10816|0|17308|0|{0|}6492|6474|}
{2010006001|XXGobject_psameas_object|10817|0|17309|0|{Layout|Layout|0|0|}6486|6390|}
{2010006001|XXGobject_psameas_object|10818|0|17310|0|{deselect_metadata|out_metadata|0|0|}6486|6486|}
{2010006001|XXGobject_psameas_object|10819|0|17311|0|{in_metadata|out_metadata|0|0|}6486|6493|}
{2010212001|XXGvertex_oport_oport|10820|0|17313|0|{0|out|}6493|6494|}
{2010213001|XXGoport_dst_flow|10821|0|17315|0|{0|}6494|6495|}
{2010212001|XXGvertex_oport_oport|10822|0|17317|0|{1|deselect|}6493|6496|}
{2010213001|XXGoport_dst_flow|10823|0|17319|0|{0|}6496|6497|}
{2010212001|XXGvertex_oport_oport|10824|0|17321|0|{2|reject|}6493|6498|}
{2010212001|XXGvertex_oport_oport|10825|0|17323|0|{3|error|}6493|6499|}
{2010212001|XXGvertex_oport_oport|10826|0|17325|0|{4|log|}6493|6500|}
{2010211001|XXGvertex_iport_iport|10827|0|17327|0|{0|in|}6493|6501|}
{2010006001|XXGobject_psameas_object|10828|0|17329|0|{Layout|Layout|0|0|}6493|6390|}
{2010006001|XXGobject_psameas_object|10829|0|17330|0|{in_metadata|out0_metadata|0|0|}6493|6502|}
{2010212001|XXGvertex_oport_oport|10830|0|17332|0|{0|out0|}6502|6503|}
{2010213001|XXGoport_dst_flow|10831|0|17334|0|{0|}6503|6473|}
{2010212001|XXGvertex_oport_oport|10832|0|17335|0|{1|reject0|}6502|6504|}
{2010212001|XXGvertex_oport_oport|10833|0|17337|0|{2|error0|}6502|6505|}
{2010212001|XXGvertex_oport_oport|10834|0|17339|0|{3|log|}6502|6506|}
{2010211001|XXGvertex_iport_iport|10835|0|17341|0|{0|in|}6502|6507|}
{2010214001|XXGiport_src_flow|10836|0|17343|0|{0|}6507|6475|}
{2010006001|XXGobject_psameas_object|10837|0|17344|0|{Layout|Layout|0|0|}6502|6390|}
{2010006001|XXGobject_psameas_object|10838|0|17345|0|{in_metadata|out0_metadata|0|0|}6502|6508|}
{2010212001|XXGvertex_oport_oport|10839|0|17347|0|{0|out0|}6508|6509|}
{2010213001|XXGoport_dst_flow|10840|0|17349|0|{0|}6509|6470|}
{2010212001|XXGvertex_oport_oport|10841|0|17350|0|{1|reject0|}6508|6510|}
{2010212001|XXGvertex_oport_oport|10842|0|17352|0|{2|error0|}6508|6511|}
{2010212001|XXGvertex_oport_oport|10843|0|17354|0|{3|log|}6508|6512|}
{2010211001|XXGvertex_iport_iport|10844|0|17356|0|{0|in|}6508|6513|}
{2010006001|XXGobject_psameas_object|10845|0|17358|0|{Layout|Layout|0|0|}6508|242|}
{2010006001|XXGobject_psameas_object|10846|0|17359|0|{in_metadata|out0_metadata|0|0|}6508|242|}
{2010006001|XXGobject_psameas_object|10847|0|17360|0|{reject0_metadata|out0_metadata|0|0|}6508|242|}
{2010006001|XXGobject_psameas_object|10848|0|17361|0|{reject0_metadata|out0_metadata|0|0|}6502|6508|}
{2010006001|XXGobject_psameas_object|10849|0|17362|0|{reject_metadata|out0_metadata|0|0|}6493|6502|}
{2010006001|XXGobject_psameas_object|10850|0|17363|0|{reject_metadata|out_metadata|0|0|}6486|6493|}
{2010006001|XXGobject_psameas_object|10851|0|17364|0|{in_metadata|out_metadata|0|0|}6479|6486|}
{2010006001|XXGobject_psameas_object|10852|0|17365|0|{out_metadata|out_metadata|0|0|}6479|6486|}
{2010006001|XXGobject_psameas_object|10853|0|17366|0|{reject_metadata|out_metadata|0|0|}6479|6486|}
{2010601001|XXGgraph_vertex_vertex|10854|0|17367|0|{FBE_filter_matching_lkp_record|}6461|6486|}
{2010601001|XXGgraph_vertex_vertex|10855|0|17368|0|{RFMT_Get_Hash_On_NK|}6461|6508|}
{2010601001|XXGgraph_vertex_vertex|10856|0|17369|0|{RFMT_Lookup_with_IDS|}6461|6502|}
{2010601001|XXGgraph_vertex_vertex|10857|0|17370|0|{Sort_De_dup|}6461|6514|}
{2010604001|XXGgraph_flow_flow|10858|0|17372|0|{Flow_10|}6514|6515|}
{2010604001|XXGgraph_flow_flow|10859|0|17374|0|{Flow_4|}6514|6516|}
{2010244001|XXGflow_watcher_watcher|10860|0|17376|0|{}6516|6517|}
{2010601001|XXGgraph_vertex_vertex|10861|0|17378|0|{Dedup_Sorted_1|}6514|6518|}
{2010212001|XXGvertex_oport_oport|10862|0|17380|0|{0|out|}6518|6519|}
{2010212001|XXGvertex_oport_oport|10863|0|17382|0|{1|dup|}6518|6520|}
{2010212001|XXGvertex_oport_oport|10864|0|17384|0|{2|reject|}6518|6521|}
{2010212001|XXGvertex_oport_oport|10865|0|17386|0|{3|error|}6518|6522|}
{2010212001|XXGvertex_oport_oport|10866|0|17388|0|{4|log|}6518|6523|}
{2010211001|XXGvertex_iport_iport|10867|0|17390|0|{0|in|}6518|6524|}
{2010214001|XXGiport_src_flow|10868|0|17392|0|{0|}6524|6515|}
{2010006001|XXGobject_psameas_object|10869|0|17393|0|{Layout|Layout|0|0|}6518|6390|}
{2010006001|XXGobject_psameas_object|10870|0|17394|0|{dup_metadata|out0_metadata|0|0|}6518|6508|}
{2010006001|XXGobject_psameas_object|10871|0|17395|0|{in_metadata|out0_metadata|0|0|}6518|6508|}
{2010006001|XXGobject_psameas_object|10872|0|17396|0|{out_metadata|out0_metadata|0|0|}6518|6508|}
{2010006001|XXGobject_psameas_object|10873|0|17397|0|{reject_metadata|out0_metadata|0|0|}6518|6508|}
{2010601001|XXGgraph_vertex_vertex|10874|0|17398|0|{PBKS_dxf_hk_part1_|}6514|6525|}
{2010604001|XXGgraph_flow_flow|10875|0|17400|0|{Flow_1|}6525|6526|}
{2010601001|XXGgraph_vertex_vertex|10876|0|17402|0|{Partition_by_Key|}6525|6527|}
{2010212001|XXGvertex_oport_oport|10877|0|17404|0|{0|out|}6527|6528|}
{2010213001|XXGoport_dst_flow|10878|0|17406|0|{0|}6528|6526|}
{2010211001|XXGvertex_iport_iport|10879|0|17407|0|{0|in|}6527|6529|}
{2010006001|XXGobject_psameas_object|10880|0|17409|0|{in_metadata|out0_metadata|0|0|}6527|6508|}
{2010006001|XXGobject_psameas_object|10881|0|17410|0|{out_metadata|out0_metadata|0|0|}6527|6508|}
{2010601001|XXGgraph_vertex_vertex|10882|0|17411|0|{Sort|}6525|6530|}
{2010212001|XXGvertex_oport_oport|10883|0|17413|0|{0|out|}6530|6531|}
{2010211001|XXGvertex_iport_iport|10884|0|17415|0|{0|in|}6530|6532|}
{2010214001|XXGiport_src_flow|10885|0|17417|0|{0|}6532|6526|}
{2010006001|XXGobject_psameas_object|10886|0|17418|0|{in_metadata|out0_metadata|0|0|}6530|6508|}
{2010006001|XXGobject_psameas_object|10887|0|17419|0|{out_metadata|out0_metadata|0|0|}6530|6508|}
{2010212001|XXGvertex_oport_oport|10888|0|17420|0|{0|out0|}6525|6533|}
{2010216002|XXGoport_binding_oport|10889|0|17422|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}6533|6531|}
{2010213001|XXGoport_dst_flow|10890|0|17423|0|{0|}6533|6516|}
{2010211001|XXGvertex_iport_iport|10891|0|17424|0|{0|in0|}6525|6534|}
{2010215002|XXGiport_binding_iport|10892|0|17426|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}6534|6529|}
{2010006001|XXGobject_psameas_object|10893|0|17427|0|{InputLayout|Layout|0|0|}6525|242|}
{2010006001|XXGobject_psameas_object|10894|0|17428|0|{OutputLayout|Layout|0|0|}6525|6390|}
{2010601001|XXGgraph_vertex_vertex|10895|0|17429|0|{Sort_within_Groups_1|}6514|6535|}
{2010212001|XXGvertex_oport_oport|10896|0|17431|0|{0|out|}6535|6536|}
{2010213001|XXGoport_dst_flow|10897|0|17433|0|{0|}6536|6515|}
{2010211001|XXGvertex_iport_iport|10898|0|17434|0|{0|in|}6535|6537|}
{2010214001|XXGiport_src_flow|10899|0|17436|0|{0|}6537|6516|}
{2010006001|XXGobject_psameas_object|10900|0|17437|0|{Layout|Layout|0|0|}6535|6390|}
{2010006001|XXGobject_psameas_object|10901|0|17438|0|{in_metadata|out0_metadata|0|0|}6535|6508|}
{2010006001|XXGobject_psameas_object|10902|0|17439|0|{out_metadata|out0_metadata|0|0|}6535|6508|}
{2010212001|XXGvertex_oport_oport|10903|0|17440|0|{0|out0|}6514|6538|}
{2010216002|XXGoport_binding_oport|10904|0|17442|0|{.5|.5|{0|}7792|}6538|6519|}
{2010213001|XXGoport_dst_flow|10905|0|17443|0|{0|}6538|6475|}
{2010212001|XXGvertex_oport_oport|10906|0|17444|0|{1|out1|}6514|6539|}
{2010216002|XXGoport_binding_oport|10907|0|17446|0|{.5|.5|{0|}7793|}6539|6520|}
{2010213001|XXGoport_dst_flow|10908|0|17447|0|{0|}6539|6476|}
{2010211001|XXGvertex_iport_iport|10909|0|17448|0|{0|in0|}6514|6540|}
{2010215002|XXGiport_binding_iport|10910|0|17450|0|{.5|.5|{0|}7791|}6540|6534|}
{2010214001|XXGiport_src_flow|10911|0|17451|0|{0|}6540|6470|}
{2010601001|XXGgraph_vertex_vertex|10912|0|17452|0|{Sort_within_Groups|}6461|6541|}
{2010212001|XXGvertex_oport_oport|10913|0|17454|0|{0|out|}6541|6542|}
{2010213001|XXGoport_dst_flow|10914|0|17456|0|{0|}6542|6472|}
{2010211001|XXGvertex_iport_iport|10915|0|17457|0|{0|in|}6541|6543|}
{2010214001|XXGiport_src_flow|10916|0|17459|0|{0|}6543|6471|}
{2010006001|XXGobject_psameas_object|10917|0|17460|0|{Layout|Layout|0|0|}6541|6390|}
{2010006001|XXGobject_psameas_object|10918|0|17461|0|{in_metadata|out_metadata|0|0|}6541|6486|}
{2010006001|XXGobject_psameas_object|10919|0|17462|0|{out_metadata|out_metadata|0|0|}6541|6486|}
{2010601001|XXGgraph_vertex_vertex|10920|0|17463|0|{Trash|}6461|6544|}
{2010211001|XXGvertex_iport_iport|10921|0|17465|0|{0|in|}6544|6545|}
{2010214001|XXGiport_src_flow|10922|0|17467|0|{0|}6545|6476|}
{2010006001|XXGobject_psameas_object|10923|0|17468|0|{Layout|Layout|0|0|}6544|6390|}
{2010006001|XXGobject_psameas_object|10924|0|17469|0|{in_metadata|out0_metadata|0|0|}6544|6508|}
{2010601001|XXGgraph_vertex_vertex|10925|0|17470|0|{Trash_1|}6461|6546|}
{2010211001|XXGvertex_iport_iport|10926|0|17472|0|{0|in|}6546|6547|}
{2010214001|XXGiport_src_flow|10927|0|17474|0|{0|}6547|6477|}
{2010006001|XXGobject_psameas_object|10928|0|17475|0|{Layout|Layout|0|0|}6546|6390|}
{2010006001|XXGobject_psameas_object|10929|0|17476|0|{in_metadata|out_metadata|0|0|}6546|6486|}
{2010601001|XXGgraph_vertex_vertex|10930|0|17477|0|{Trash_2|}6461|6548|}
{2010211001|XXGvertex_iport_iport|10931|0|17479|0|{0|in|}6548|6549|}
{2010214001|XXGiport_src_flow|10932|0|17481|0|{0|}6549|6478|}
{2010006001|XXGobject_psameas_object|10933|0|17482|0|{Layout|Layout|0|0|}6548|6390|}
{2010006001|XXGobject_psameas_object|10934|0|17483|0|{in_metadata|out_metadata|0|0|}6548|6486|}
{2010601001|XXGgraph_vertex_vertex|10935|0|17484|0|{Two_Step_Lookup|}6461|6550|}
{2010605001|XXGgraph_legend_legend|10936|0|17486|0|{0|}6550|6551|}
{2010241001|XXGlegend_face_face|10937|0|17488|0|{}6551|6552|}
{2010604001|XXGgraph_flow_flow|10938|0|17490|0|{Flow_1|}6550|6497|}
{2010604001|XXGgraph_flow_flow|10939|0|17491|0|{Flow_2|}6550|6553|}
{2010604001|XXGgraph_flow_flow|10940|0|17493|0|{Flow_3|}6550|6495|}
{2010604001|XXGgraph_flow_flow|10941|0|17494|0|{Flow_4|}6550|6554|}
{2010604001|XXGgraph_flow_flow|10942|0|17496|0|{Flow_5|}6550|6555|}
{2010604001|XXGgraph_flow_flow|10943|0|17498|0|{Flow_6|}6550|6556|}
{2010601001|XXGgraph_vertex_vertex|10944|0|17500|0|{FBE_Pass_Only_Matching_Rec|}6550|6557|}
{2010212001|XXGvertex_oport_oport|10945|0|17502|0|{0|out|}6557|6558|}
{2010213001|XXGoport_dst_flow|10946|0|17504|0|{0|}6558|6555|}
{2010212001|XXGvertex_oport_oport|10947|0|17505|0|{1|deselect|}6557|6559|}
{2010213001|XXGoport_dst_flow|10948|0|17507|0|{0|}6559|6556|}
{2010212001|XXGvertex_oport_oport|10949|0|17508|0|{2|reject|}6557|6560|}
{2010212001|XXGvertex_oport_oport|10950|0|17510|0|{3|error|}6557|6561|}
{2010212001|XXGvertex_oport_oport|10951|0|17512|0|{4|log|}6557|6562|}
{2010211001|XXGvertex_iport_iport|10952|0|17514|0|{0|in|}6557|6563|}
{2010214001|XXGiport_src_flow|10953|0|17516|0|{0|}6563|6554|}
{2010006001|XXGobject_psameas_object|10954|0|17517|0|{Layout|Layout|0|0|}6557|6390|}
{2010006001|XXGobject_psameas_object|10955|0|17518|0|{deselect_metadata|out_metadata|0|0|}6557|6493|}
{2010006001|XXGobject_psameas_object|10956|0|17519|0|{in_metadata|out0_metadata|0|0|}6557|6564|}
{2010212001|XXGvertex_oport_oport|10957|0|17521|0|{0|out0|}6564|6565|}
{2010213001|XXGoport_dst_flow|10958|0|17523|0|{0|}6565|6554|}
{2010212001|XXGvertex_oport_oport|10959|0|17524|0|{1|reject0|}6564|6566|}
{2010212001|XXGvertex_oport_oport|10960|0|17526|0|{2|error0|}6564|6567|}
{2010212001|XXGvertex_oport_oport|10961|0|17528|0|{3|log|}6564|6568|}
{2010211001|XXGvertex_iport_iport|10962|0|17530|0|{0|in|}6564|6569|}
{2010214001|XXGiport_src_flow|10963|0|17532|0|{0|}6569|6553|}
{2010006001|XXGobject_psameas_object|10964|0|17533|0|{Layout|Layout|0|0|}6564|6390|}
{2010006001|XXGobject_psameas_object|10965|0|17534|0|{in_metadata|out0_metadata|0|0|}6564|6570|}
{2010212001|XXGvertex_oport_oport|10966|0|17536|0|{0|out0|}6570|6571|}
{2010213001|XXGoport_dst_flow|10967|0|17538|0|{0|}6571|6553|}
{2010212001|XXGvertex_oport_oport|10968|0|17539|0|{1|reject0|}6570|6572|}
{2010212001|XXGvertex_oport_oport|10969|0|17541|0|{2|error0|}6570|6573|}
{2010212001|XXGvertex_oport_oport|10970|0|17543|0|{3|log|}6570|6574|}
{2010211001|XXGvertex_iport_iport|10971|0|17545|0|{0|in|}6570|6575|}
{2010214001|XXGiport_src_flow|10972|0|17547|0|{0|}6575|6497|}
{2010006001|XXGobject_psameas_object|10973|0|17548|0|{Layout|Layout|0|0|}6570|6390|}
{2010006001|XXGobject_psameas_object|10974|0|17549|0|{in_metadata|deselect_metadata|0|0|}6570|6493|}
{2010006001|XXGobject_psameas_object|10975|0|17550|0|{reject0_metadata|deselect_metadata|0|0|}6570|6493|}
{2010006001|XXGobject_psameas_object|10976|0|17551|0|{reject0_metadata|out0_metadata|0|0|}6564|6570|}
{2010006001|XXGobject_psameas_object|10977|0|17552|0|{out_metadata|out_metadata|0|0|}6557|6493|}
{2010006001|XXGobject_psameas_object|10978|0|17553|0|{reject_metadata|out0_metadata|0|0|}6557|6564|}
{2010601001|XXGgraph_vertex_vertex|10979|0|17554|0|{FBE_filter_matching_lkp_record|}6550|6493|}
{2010601001|XXGgraph_vertex_vertex|10980|0|17555|0|{Merge|}6550|6576|}
{2010212001|XXGvertex_oport_oport|10981|0|17557|0|{0|out|}6576|6577|}
{2010211001|XXGvertex_iport_iport|10982|0|17559|0|{0|in|}6576|6578|}
{2010214001|XXGiport_src_flow|10983|0|17561|0|{0|}6578|6495|}
{2010214001|XXGiport_src_flow|10984|0|17562|0|{1|}6578|6555|}
{2010006001|XXGobject_psameas_object|10985|0|17563|0|{Layout|Layout|0|0|}6576|6390|}
{2010006001|XXGobject_psameas_object|10986|0|17564|0|{in_metadata|out_metadata|0|0|}6576|6493|}
{2010006001|XXGobject_psameas_object|10987|0|17565|0|{out_metadata|out_metadata|0|0|}6576|6493|}
{2010601001|XXGgraph_vertex_vertex|10988|0|17566|0|{No_Match_Record_In_Second_Pass|}6550|6579|}
{2010211001|XXGvertex_iport_iport|10989|0|17568|0|{0|in|}6579|6580|}
{2010214001|XXGiport_src_flow|10990|0|17570|0|{0|}6580|6556|}
{2010006001|XXGobject_psameas_object|10991|0|17571|0|{Layout|Layout|0|0|}6579|6390|}
{2010006001|XXGobject_psameas_object|10992|0|17572|0|{in_metadata|out_metadata|0|0|}6579|6493|}
{2010601001|XXGgraph_vertex_vertex|10993|0|17573|0|{RFMT_Lookup_with_IDS_Archive_|}6550|6564|}
{2010601001|XXGgraph_vertex_vertex|10994|0|17574|0|{RFMT_Pass_only_Hash_Keys|}6550|6570|}
{2010212001|XXGvertex_oport_oport|10995|0|17575|0|{0|out0|}6550|6581|}
{2010216002|XXGoport_binding_oport|10996|0|17577|0|{.5|.5|{0|}15507|}6581|6577|}
{2010213001|XXGoport_dst_flow|10997|0|17578|0|{0|}6581|6474|}
{2010211001|XXGvertex_iport_iport|10998|0|17579|0|{0|in0|}6550|6582|}
{2010215002|XXGiport_binding_iport|10999|0|17581|0|{.5|.5|{0|}15506|}6582|6501|}
{2010214001|XXGiport_src_flow|11000|0|17582|0|{0|}6582|6473|}
{2010212001|XXGvertex_oport_oport|11001|0|17583|0|{0|out0|}6461|6583|}
{2010216002|XXGoport_binding_oport|11002|0|17585|0|{.5|.5|{0|}15520|}6583|6480|}
{2010213001|XXGoport_dst_flow|11003|0|17586|0|{0|}6583|6357|}
{2010211001|XXGvertex_iport_iport|11004|0|17587|0|{0|in1|}6461|6584|}
{2010215002|XXGiport_binding_iport|11005|0|17589|0|{.5|.5|{0|}15519|}6584|6513|}
{2010214001|XXGiport_src_flow|11006|0|17590|0|{0|}6584|6355|}
{2010601001|XXGgraph_vertex_vertex|11007|0|17591|0|{Merge|}6349|6585|}
{2010212001|XXGvertex_oport_oport|11008|0|17593|0|{0|out|}6585|6586|}
{2010211001|XXGvertex_iport_iport|11009|0|17595|0|{0|in|}6585|6587|}
{2010214001|XXGiport_src_flow|11010|0|17597|0|{0|}6587|6358|}
{2010006001|XXGobject_psameas_object|11011|0|17598|0|{Layout|Layout|0|0|}6585|6345|}
{2010006001|XXGobject_psameas_object|11012|0|17599|0|{in_metadata|write_metadata|0|0|}6585|6345|}
{2010006001|XXGobject_psameas_object|11013|0|17600|0|{out_metadata|write_metadata|0|0|}6585|6345|}
{2010601001|XXGgraph_vertex_vertex|11014|0|17601|0|{Replicate|}6349|6588|}
{2010212001|XXGvertex_oport_oport|11015|0|17603|0|{0|out|}6588|6589|}
{2010213001|XXGoport_dst_flow|11016|0|17605|0|{0|}6589|6354|}
{2010213001|XXGoport_dst_flow|11017|0|17606|0|{1|}6589|6355|}
{2010211001|XXGvertex_iport_iport|11018|0|17607|0|{0|in|}6588|6590|}
{2010006001|XXGobject_psameas_object|11019|0|17609|0|{Layout|Layout|0|0|}6588|242|}
{2010006001|XXGobject_psameas_object|11020|0|17610|0|{in_metadata|out0_metadata|0|0|}6588|242|}
{2010006001|XXGobject_psameas_object|11021|0|17611|0|{out_metadata|out0_metadata|0|0|}6588|242|}
{2010601001|XXGgraph_vertex_vertex|11022|0|17612|0|{Replicate_1|}6349|6591|}
{2010212001|XXGvertex_oport_oport|11023|0|17614|0|{0|out|}6591|6592|}
{2010213001|XXGoport_dst_flow|11024|0|17616|0|{0|}6592|6358|}
{2010211001|XXGvertex_iport_iport|11025|0|17617|0|{0|in|}6591|6593|}
{2010214001|XXGiport_src_flow|11026|0|17619|0|{0|}6593|6356|}
{2010214001|XXGiport_src_flow|11027|0|17620|0|{1|}6593|6357|}
{2010006001|XXGobject_psameas_object|11028|0|17621|0|{Layout|Layout|0|0|}6591|6390|}
{2010006001|XXGobject_psameas_object|11029|0|17622|0|{in_metadata|write_metadata|0|0|}6591|6345|}
{2010006001|XXGobject_psameas_object|11030|0|17623|0|{out_metadata|write_metadata|0|0|}6591|6345|}
{2010212001|XXGvertex_oport_oport|11031|0|17624|0|{0|out0|}6349|6594|}
{2010216002|XXGoport_binding_oport|11032|0|17626|0|{.5|.5|{0|}7812|}6594|6586|}
{2010213001|XXGoport_dst_flow|11033|0|17627|0|{0|}6594|142|}
{2010211001|XXGvertex_iport_iport|11034|0|17628|0|{0|in0|}6349|6595|}
{2010215002|XXGiport_binding_iport|11035|0|17630|0|{.5|.5|{0|}7811|}6595|6590|}
{2010214001|XXGiport_src_flow|11036|0|17631|0|{0|}6595|132|}
{2010007001|XXGobject_proto_object|11037|0|17632|0|{}6349|6596|}
{2010605001|XXGgraph_legend_legend|11038|0|17634|0|{0|}6596|6597|}
{2010241001|XXGlegend_face_face|11039|0|17636|0|{}6597|6598|}
{2010605001|XXGgraph_legend_legend|11040|0|17638|0|{1|}6596|6599|}
{2010241001|XXGlegend_face_face|11041|0|17640|0|{}6599|6600|}
{2010604001|XXGgraph_flow_flow|11042|0|17642|0|{Flow_1|}6596|6601|}
{2010604001|XXGgraph_flow_flow|11043|0|17644|0|{Flow_2|}6596|6602|}
{2010604001|XXGgraph_flow_flow|11044|0|17646|0|{Flow_3|}6596|6603|}
{2010604001|XXGgraph_flow_flow|11045|0|17648|0|{Flow_4|}6596|6604|}
{2010604001|XXGgraph_flow_flow|11046|0|17650|0|{Flow_5|}6596|6605|}
{2010601001|XXGgraph_vertex_vertex|11047|0|17652|0|{Get_All_LookUp_Record|}6596|6606|}
{2010605001|XXGgraph_legend_legend|11048|0|17654|0|{0|}6606|6607|}
{2010241001|XXGlegend_face_face|11049|0|17656|0|{}6607|6608|}
{2010605001|XXGgraph_legend_legend|11050|0|17658|0|{1|}6606|6609|}
{2010241001|XXGlegend_face_face|11051|0|17660|0|{}6609|6610|}
{2010605001|XXGgraph_legend_legend|11052|0|17662|0|{2|}6606|6611|}
{2010241001|XXGlegend_face_face|11053|0|17664|0|{}6611|6612|}
{2010605001|XXGgraph_legend_legend|11054|0|17666|0|{3|}6606|6613|}
{2010241001|XXGlegend_face_face|11055|0|17668|0|{}6613|6614|}
{2010605001|XXGgraph_legend_legend|11056|0|17670|0|{4|}6606|6615|}
{2010241001|XXGlegend_face_face|11057|0|17672|0|{}6615|6616|}
{2010604001|XXGgraph_flow_flow|11058|0|17674|0|{Flow_1|}6606|6617|}
{2010604001|XXGgraph_flow_flow|11059|0|17676|0|{Flow_10|}6606|6618|}
{2010604001|XXGgraph_flow_flow|11060|0|17678|0|{Flow_11|}6606|6619|}
{2010604001|XXGgraph_flow_flow|11061|0|17680|0|{Flow_12|}6606|6620|}
{2010604001|XXGgraph_flow_flow|11062|0|17682|0|{Flow_18|}6606|6621|}
{2010604001|XXGgraph_flow_flow|11063|0|17684|0|{Flow_2|}6606|6622|}
{2010604001|XXGgraph_flow_flow|11064|0|17686|0|{Flow_3|}6606|6623|}
{2010604001|XXGgraph_flow_flow|11065|0|17688|0|{Flow_4|}6606|6624|}
{2010604001|XXGgraph_flow_flow|11066|0|17690|0|{Flow_5|}6606|6625|}
{2010604001|XXGgraph_flow_flow|11067|0|17692|0|{Flow_6|}6606|6626|}
{2010604001|XXGgraph_flow_flow|11068|0|17694|0|{Flow_7|}6606|6627|}
{2010604001|XXGgraph_flow_flow|11069|0|17696|0|{Flow_8|}6606|6628|}
{2010604001|XXGgraph_flow_flow|11070|0|17698|0|{Flow_9|}6606|6629|}
{2010601001|XXGgraph_vertex_vertex|11071|0|17700|0|{Dedup_Sorted|}6606|6630|}
{2010212001|XXGvertex_oport_oport|11072|0|17702|0|{0|out|}6630|6631|}
{2010213001|XXGoport_dst_flow|11073|0|17704|0|{0|}6631|6622|}
{2010212001|XXGvertex_oport_oport|11074|0|17705|0|{1|dup|}6630|6632|}
{2010213001|XXGoport_dst_flow|11075|0|17707|0|{0|}6632|6626|}
{2010212001|XXGvertex_oport_oport|11076|0|17708|0|{2|reject|}6630|6633|}
{2010212001|XXGvertex_oport_oport|11077|0|17710|0|{3|error|}6630|6634|}
{2010212001|XXGvertex_oport_oport|11078|0|17712|0|{4|log|}6630|6635|}
{2010211001|XXGvertex_iport_iport|11079|0|17714|0|{0|in|}6630|6636|}
{2010214001|XXGiport_src_flow|11080|0|17716|0|{0|}6636|6617|}
{2010007001|XXGobject_proto_object|11081|0|17717|0|{}6630|6637|}
{2010212001|XXGvertex_oport_oport|11082|0|17719|0|{0|out|}6637|6638|}
{2010006001|XXGobject_psameas_object|11083|0|17721|0|{metadata|out_metadata|1|0|}6638|6637|}
{2010212001|XXGvertex_oport_oport|11084|0|17722|0|{1|dup|}6637|6639|}
{2010006001|XXGobject_psameas_object|11085|0|17724|0|{metadata|dup_metadata|1|0|}6639|6637|}
{2010212001|XXGvertex_oport_oport|11086|0|17725|0|{2|reject|}6637|6640|}
{2010006001|XXGobject_psameas_object|11087|0|17727|0|{metadata|reject_metadata|1|0|}6640|6637|}
{2010212001|XXGvertex_oport_oport|11088|0|17728|0|{3|error|}6637|6641|}
{2010006001|XXGobject_psameas_object|11089|0|17730|0|{metadata|error_metadata|1|0|}6641|6637|}
{2010212001|XXGvertex_oport_oport|11090|0|17731|0|{4|log|}6637|6642|}
{2010006001|XXGobject_psameas_object|11091|0|17733|0|{metadata|log_metadata|1|0|}6642|6637|}
{2010211001|XXGvertex_iport_iport|11092|0|17734|0|{0|in|}6637|6643|}
{2010006001|XXGobject_psameas_object|11093|0|17736|0|{metadata|in_metadata|1|0|}6643|6637|}
{2010601001|XXGgraph_vertex_vertex|11094|0|17737|0|{FBE_Filter_match_records|}6606|6644|}
{2010212001|XXGvertex_oport_oport|11095|0|17739|0|{0|out|}6644|6645|}
{2010213001|XXGoport_dst_flow|11096|0|17741|0|{0|}6645|6619|}
{2010212001|XXGvertex_oport_oport|11097|0|17742|0|{1|deselect|}6644|6646|}
{2010213001|XXGoport_dst_flow|11098|0|17744|0|{0|}6646|6627|}
{2010212001|XXGvertex_oport_oport|11099|0|17745|0|{2|reject|}6644|6647|}
{2010212001|XXGvertex_oport_oport|11100|0|17747|0|{3|error|}6644|6648|}
{2010212001|XXGvertex_oport_oport|11101|0|17749|0|{4|log|}6644|6649|}
{2010211001|XXGvertex_iport_iport|11102|0|17751|0|{0|in|}6644|6650|}
{2010214001|XXGiport_src_flow|11103|0|17753|0|{0|}6650|6628|}
{2010007001|XXGobject_proto_object|11104|0|17754|0|{}6644|6651|}
{2010212001|XXGvertex_oport_oport|11105|0|17756|0|{0|out|}6651|6652|}
{2010006001|XXGobject_psameas_object|11106|0|17758|0|{metadata|out_metadata|1|0|}6652|6651|}
{2010212001|XXGvertex_oport_oport|11107|0|17759|0|{1|deselect|}6651|6653|}
{2010006001|XXGobject_psameas_object|11108|0|17761|0|{metadata|deselect_metadata|1|0|}6653|6651|}
{2010212001|XXGvertex_oport_oport|11109|0|17762|0|{2|reject|}6651|6654|}
{2010006001|XXGobject_psameas_object|11110|0|17764|0|{metadata|reject_metadata|1|0|}6654|6651|}
{2010212001|XXGvertex_oport_oport|11111|0|17765|0|{3|error|}6651|6655|}
{2010006001|XXGobject_psameas_object|11112|0|17767|0|{metadata|error_metadata|1|0|}6655|6651|}
{2010212001|XXGvertex_oport_oport|11113|0|17768|0|{4|log|}6651|6656|}
{2010006001|XXGobject_psameas_object|11114|0|17770|0|{metadata|log_metadata|1|0|}6656|6651|}
{2010211001|XXGvertex_iport_iport|11115|0|17771|0|{0|in|}6651|6657|}
{2010006001|XXGobject_psameas_object|11116|0|17773|0|{metadata|in_metadata|1|0|}6657|6651|}
{2010601001|XXGgraph_vertex_vertex|11117|0|17774|0|{Get_Hash_on_SRC_NK|}6606|6658|}
{2010212001|XXGvertex_oport_oport|11118|0|17776|0|{0|out0|}6658|6659|}
{2010213001|XXGoport_dst_flow|11119|0|17778|0|{0|}6659|6621|}
{2010212001|XXGvertex_oport_oport|11120|0|17779|0|{1|reject0|}6658|6660|}
{2010212001|XXGvertex_oport_oport|11121|0|17781|0|{2|error0|}6658|6661|}
{2010212001|XXGvertex_oport_oport|11122|0|17783|0|{3|log|}6658|6662|}
{2010211001|XXGvertex_iport_iport|11123|0|17785|0|{0|in|}6658|6663|}
{2010007001|XXGobject_proto_object|11124|0|17787|0|{}6658|6664|}
{2010212001|XXGvertex_oport_oport|11125|0|17789|0|{0|out0|}6664|6665|}
{2010006001|XXGobject_psameas_object|11126|0|17791|0|{metadata|out0_metadata|1|0|}6665|6664|}
{2010006001|XXGobject_psameas_object|11127|0|17792|0|{transform0|transform0|1|0|}6665|6664|}
{2010212001|XXGvertex_oport_oport|11128|0|17793|0|{1|reject0|}6664|6666|}
{2010006001|XXGobject_psameas_object|11129|0|17795|0|{metadata|reject0_metadata|1|0|}6666|6664|}
{2010212001|XXGvertex_oport_oport|11130|0|17796|0|{2|error0|}6664|6667|}
{2010006001|XXGobject_psameas_object|11131|0|17798|0|{metadata|error0_metadata|1|0|}6667|6664|}
{2010212001|XXGvertex_oport_oport|11132|0|17799|0|{3|log|}6664|6668|}
{2010006001|XXGobject_psameas_object|11133|0|17801|0|{metadata|log_metadata|1|0|}6668|6664|}
{2010211001|XXGvertex_iport_iport|11134|0|17802|0|{0|in|}6664|6669|}
{2010006001|XXGobject_psameas_object|11135|0|17804|0|{metadata|in_metadata|1|0|}6669|6664|}
{2010601001|XXGgraph_vertex_vertex|11136|0|17805|0|{Merge|}6606|6670|}
{2010212001|XXGvertex_oport_oport|11137|0|17807|0|{0|out|}6670|6671|}
{2010213001|XXGoport_dst_flow|11138|0|17809|0|{0|}6671|6628|}
{2010211001|XXGvertex_iport_iport|11139|0|17810|0|{0|in|}6670|6672|}
{2010214001|XXGiport_src_flow|11140|0|17812|0|{0|}6672|6623|}
{2010214001|XXGiport_src_flow|11141|0|17813|0|{1|}6672|6620|}
{2010007001|XXGobject_proto_object|11142|0|17814|0|{}6670|6673|}
{2010212001|XXGvertex_oport_oport|11143|0|17816|0|{0|out|}6673|6674|}
{2010006001|XXGobject_psameas_object|11144|0|17818|0|{metadata|out_metadata|1|0|}6674|6673|}
{2010211001|XXGvertex_iport_iport|11145|0|17819|0|{0|in|}6673|6675|}
{2010006001|XXGobject_psameas_object|11146|0|17821|0|{metadata|in_metadata|1|0|}6675|6673|}
{2010601001|XXGgraph_vertex_vertex|11147|0|17822|0|{Normalize_Get_all_records_from_Archive_Lkp|}6606|6676|}
{2010212001|XXGvertex_oport_oport|11148|0|17824|0|{0|out|}6676|6677|}
{2010213001|XXGoport_dst_flow|11149|0|17826|0|{0|}6677|6620|}
{2010212001|XXGvertex_oport_oport|11150|0|17827|0|{1|reject|}6676|6678|}
{2010212001|XXGvertex_oport_oport|11151|0|17829|0|{2|error|}6676|6679|}
{2010212001|XXGvertex_oport_oport|11152|0|17831|0|{3|log|}6676|6680|}
{2010211001|XXGvertex_iport_iport|11153|0|17833|0|{0|in|}6676|6681|}
{2010214001|XXGiport_src_flow|11154|0|17835|0|{0|}6681|6618|}
{2010007001|XXGobject_proto_object|11155|0|17836|0|{}6676|6682|}
{2010212001|XXGvertex_oport_oport|11156|0|17838|0|{0|out|}6682|6683|}
{2010006001|XXGobject_psameas_object|11157|0|17840|0|{metadata|out_metadata|1|0|}6683|6682|}
{2010212001|XXGvertex_oport_oport|11158|0|17841|0|{1|reject|}6682|6684|}
{2010006001|XXGobject_psameas_object|11159|0|17843|0|{metadata|reject_metadata|1|0|}6684|6682|}
{2010212001|XXGvertex_oport_oport|11160|0|17844|0|{2|error|}6682|6685|}
{2010006001|XXGobject_psameas_object|11161|0|17846|0|{metadata|error_metadata|1|0|}6685|6682|}
{2010212001|XXGvertex_oport_oport|11162|0|17847|0|{3|log|}6682|6686|}
{2010006001|XXGobject_psameas_object|11163|0|17849|0|{metadata|log_metadata|1|0|}6686|6682|}
{2010211001|XXGvertex_iport_iport|11164|0|17850|0|{0|in|}6682|6687|}
{2010006001|XXGobject_psameas_object|11165|0|17852|0|{metadata|in_metadata|1|0|}6687|6682|}
{2010601001|XXGgraph_vertex_vertex|11166|0|17853|0|{Normalize_Get_all_records_from_lkp|}6606|6688|}
{2010212001|XXGvertex_oport_oport|11167|0|17855|0|{0|out|}6688|6689|}
{2010213001|XXGoport_dst_flow|11168|0|17857|0|{0|}6689|6623|}
{2010212001|XXGvertex_oport_oport|11169|0|17858|0|{1|reject|}6688|6690|}
{2010212001|XXGvertex_oport_oport|11170|0|17860|0|{2|error|}6688|6691|}
{2010212001|XXGvertex_oport_oport|11171|0|17862|0|{3|log|}6688|6692|}
{2010211001|XXGvertex_iport_iport|11172|0|17864|0|{0|in|}6688|6693|}
{2010214001|XXGiport_src_flow|11173|0|17866|0|{0|}6693|6625|}
{2010007001|XXGobject_proto_object|11174|0|17867|0|{}6688|6694|}
{2010212001|XXGvertex_oport_oport|11175|0|17869|0|{0|out|}6694|6695|}
{2010006001|XXGobject_psameas_object|11176|0|17871|0|{metadata|out_metadata|1|0|}6695|6694|}
{2010212001|XXGvertex_oport_oport|11177|0|17872|0|{1|reject|}6694|6696|}
{2010006001|XXGobject_psameas_object|11178|0|17874|0|{metadata|reject_metadata|1|0|}6696|6694|}
{2010212001|XXGvertex_oport_oport|11179|0|17875|0|{2|error|}6694|6697|}
{2010006001|XXGobject_psameas_object|11180|0|17877|0|{metadata|error_metadata|1|0|}6697|6694|}
{2010212001|XXGvertex_oport_oport|11181|0|17878|0|{3|log|}6694|6698|}
{2010006001|XXGobject_psameas_object|11182|0|17880|0|{metadata|log_metadata|1|0|}6698|6694|}
{2010211001|XXGvertex_iport_iport|11183|0|17881|0|{0|in|}6694|6699|}
{2010006001|XXGobject_psameas_object|11184|0|17883|0|{metadata|in_metadata|1|0|}6699|6694|}
{2010601001|XXGgraph_vertex_vertex|11185|0|17884|0|{Replicate|}6606|6700|}
{2010212001|XXGvertex_oport_oport|11186|0|17886|0|{0|out|}6700|6701|}
{2010211001|XXGvertex_iport_iport|11187|0|17888|0|{0|in|}6700|6702|}
{2010214001|XXGiport_src_flow|11188|0|17890|0|{0|}6702|6622|}
{2010007001|XXGobject_proto_object|11189|0|17891|0|{}6700|6703|}
{2010212001|XXGvertex_oport_oport|11190|0|17893|0|{0|out|}6703|6704|}
{2010006001|XXGobject_psameas_object|11191|0|17895|0|{metadata|out_metadata|1|0|}6704|6703|}
{2010211001|XXGvertex_iport_iport|11192|0|17896|0|{0|in|}6703|6705|}
{2010006001|XXGobject_psameas_object|11193|0|17898|0|{metadata|in_metadata|1|0|}6705|6703|}
{2010601001|XXGgraph_vertex_vertex|11194|0|17899|0|{Replicate_1|}6606|6706|}
{2010212001|XXGvertex_oport_oport|11195|0|17901|0|{0|out|}6706|6707|}
{2010213001|XXGoport_dst_flow|11196|0|17903|0|{0|}6707|6625|}
{2010213001|XXGoport_dst_flow|11197|0|17904|0|{1|}6707|6618|}
{2010211001|XXGvertex_iport_iport|11198|0|17905|0|{0|in|}6706|6708|}
{2010214001|XXGiport_src_flow|11199|0|17907|0|{0|}6708|6624|}
{2010007001|XXGobject_proto_object|11200|0|17908|0|{}6706|6709|}
{2010212001|XXGvertex_oport_oport|11201|0|17910|0|{0|out|}6709|6710|}
{2010006001|XXGobject_psameas_object|11202|0|17912|0|{metadata|out_metadata|1|0|}6710|6709|}
{2010211001|XXGvertex_iport_iport|11203|0|17913|0|{0|in|}6709|6711|}
{2010006001|XXGobject_psameas_object|11204|0|17915|0|{metadata|in_metadata|1|0|}6711|6709|}
{2010601001|XXGgraph_vertex_vertex|11205|0|17916|0|{Sort_Remove_Dup_On_Hash|}6606|6712|}
{2010604001|XXGgraph_flow_flow|11206|0|17918|0|{Flow_3|}6712|6713|}
{2010604001|XXGgraph_flow_flow|11207|0|17920|0|{Flow_5|}6712|6714|}
{2010601001|XXGgraph_vertex_vertex|11208|0|17922|0|{Dedup_Sorted_1|}6712|6715|}
{2010212001|XXGvertex_oport_oport|11209|0|17924|0|{0|out|}6715|6716|}
{2010212001|XXGvertex_oport_oport|11210|0|17926|0|{1|dup|}6715|6717|}
{2010212001|XXGvertex_oport_oport|11211|0|17928|0|{2|reject|}6715|6718|}
{2010212001|XXGvertex_oport_oport|11212|0|17930|0|{3|error|}6715|6719|}
{2010212001|XXGvertex_oport_oport|11213|0|17932|0|{4|log|}6715|6720|}
{2010211001|XXGvertex_iport_iport|11214|0|17934|0|{0|in|}6715|6721|}
{2010214001|XXGiport_src_flow|11215|0|17936|0|{0|}6721|6714|}
{2010007001|XXGobject_proto_object|11216|0|17937|0|{}6715|6722|}
{2010212001|XXGvertex_oport_oport|11217|0|17939|0|{0|out|}6722|6723|}
{2010006001|XXGobject_psameas_object|11218|0|17941|0|{metadata|out_metadata|1|0|}6723|6722|}
{2010212001|XXGvertex_oport_oport|11219|0|17942|0|{1|dup|}6722|6724|}
{2010006001|XXGobject_psameas_object|11220|0|17944|0|{metadata|dup_metadata|1|0|}6724|6722|}
{2010212001|XXGvertex_oport_oport|11221|0|17945|0|{2|reject|}6722|6725|}
{2010006001|XXGobject_psameas_object|11222|0|17947|0|{metadata|reject_metadata|1|0|}6725|6722|}
{2010212001|XXGvertex_oport_oport|11223|0|17948|0|{3|error|}6722|6726|}
{2010006001|XXGobject_psameas_object|11224|0|17950|0|{metadata|error_metadata|1|0|}6726|6722|}
{2010212001|XXGvertex_oport_oport|11225|0|17951|0|{4|log|}6722|6727|}
{2010006001|XXGobject_psameas_object|11226|0|17953|0|{metadata|log_metadata|1|0|}6727|6722|}
{2010211001|XXGvertex_iport_iport|11227|0|17954|0|{0|in|}6722|6728|}
{2010006001|XXGobject_psameas_object|11228|0|17956|0|{metadata|in_metadata|1|0|}6728|6722|}
{2010601001|XXGgraph_vertex_vertex|11229|0|17957|0|{PBKS_dxf_hk_part1_|}6712|6729|}
{2010604001|XXGgraph_flow_flow|11230|0|17959|0|{Flow_1|}6729|6730|}
{2010601001|XXGgraph_vertex_vertex|11231|0|17961|0|{Partition_by_Key|}6729|6731|}
{2010212001|XXGvertex_oport_oport|11232|0|17963|0|{0|out|}6731|6732|}
{2010213001|XXGoport_dst_flow|11233|0|17965|0|{0|}6732|6730|}
{2010211001|XXGvertex_iport_iport|11234|0|17966|0|{0|in|}6731|6733|}
{2010601001|XXGgraph_vertex_vertex|11235|0|17968|0|{Sort|}6729|6734|}
{2010212001|XXGvertex_oport_oport|11236|0|17970|0|{0|out|}6734|6735|}
{2010211001|XXGvertex_iport_iport|11237|0|17972|0|{0|in|}6734|6736|}
{2010214001|XXGiport_src_flow|11238|0|17974|0|{0|}6736|6730|}
{2010212001|XXGvertex_oport_oport|11239|0|17975|0|{0|out0|}6729|6737|}
{2010216002|XXGoport_binding_oport|11240|0|17977|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}6737|6735|}
{2010213001|XXGoport_dst_flow|11241|0|17978|0|{0|}6737|6713|}
{2010211001|XXGvertex_iport_iport|11242|0|17979|0|{0|in0|}6729|6738|}
{2010215002|XXGiport_binding_iport|11243|0|17981|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}6738|6733|}
{2010007001|XXGobject_proto_object|11244|0|17982|0|{}6729|6739|}
{2010604001|XXGgraph_flow_flow|11245|0|17984|0|{Flow_1|}6739|6740|}
{2010601001|XXGgraph_vertex_vertex|11246|0|17986|0|{Partition_by_Key|}6739|6741|}
{2010212001|XXGvertex_oport_oport|11247|0|17988|0|{0|out|}6741|6742|}
{2010213001|XXGoport_dst_flow|11248|0|17990|0|{0|}6742|6740|}
{2010211001|XXGvertex_iport_iport|11249|0|17991|0|{0|in|}6741|6743|}
{2010007001|XXGobject_proto_object|11250|0|17993|0|{}6741|6744|}
{2010212001|XXGvertex_oport_oport|11251|0|17995|0|{0|out|}6744|6745|}
{2010006001|XXGobject_psameas_object|11252|0|17997|0|{metadata|out_metadata|1|0|}6745|6744|}
{2010211001|XXGvertex_iport_iport|11253|0|17998|0|{0|in|}6744|6746|}
{2010006001|XXGobject_psameas_object|11254|0|18000|0|{metadata|in_metadata|1|0|}6746|6744|}
{2010006001|XXGobject_psameas_object|11255|0|18001|0|{Layout|InputLayout|1|0|}6741|6739|}
{2010006001|XXGobject_psameas_object|11256|0|18002|0|{key|Key|1|0|}6741|6739|}
{2010601001|XXGgraph_vertex_vertex|11257|0|18003|0|{Sort|}6739|6747|}
{2010212001|XXGvertex_oport_oport|11258|0|18005|0|{0|out|}6747|6748|}
{2010211001|XXGvertex_iport_iport|11259|0|18007|0|{0|in|}6747|6749|}
{2010214001|XXGiport_src_flow|11260|0|18009|0|{0|}6749|6740|}
{2010007001|XXGobject_proto_object|11261|0|18010|0|{}6747|6750|}
{2010212001|XXGvertex_oport_oport|11262|0|18012|0|{0|out|}6750|6751|}
{2010006001|XXGobject_psameas_object|11263|0|18014|0|{metadata|out_metadata|1|0|}6751|6750|}
{2010211001|XXGvertex_iport_iport|11264|0|18015|0|{0|in|}6750|6752|}
{2010006001|XXGobject_psameas_object|11265|0|18017|0|{metadata|in_metadata|1|0|}6752|6750|}
{2010006001|XXGobject_psameas_object|11266|0|18018|0|{Layout|OutputLayout|1|0|}6747|6739|}
{2010006001|XXGobject_psameas_object|11267|0|18019|0|{key|Key|1|0|}6747|6739|}
{2010006001|XXGobject_psameas_object|11268|0|18020|0|{max_core|Max_core|1|0|}6747|6739|}
{2010212001|XXGvertex_oport_oport|11269|0|18021|0|{0|out0|}6739|6753|}
{2010216002|XXGoport_binding_oport|11270|0|18023|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}6753|6748|}
{2010211001|XXGvertex_iport_iport|11271|0|18024|0|{0|in0|}6739|6754|}
{2010215002|XXGiport_binding_iport|11272|0|18026|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}6754|6743|}
{2010006001|XXGobject_psameas_object|11273|0|18027|0|{InputLayout|Layout|0|0|}6729|6658|}
{2010601001|XXGgraph_vertex_vertex|11274|0|18028|0|{Sort_within_Groups|}6712|6755|}
{2010212001|XXGvertex_oport_oport|11275|0|18030|0|{0|out|}6755|6756|}
{2010213001|XXGoport_dst_flow|11276|0|18032|0|{0|}6756|6714|}
{2010211001|XXGvertex_iport_iport|11277|0|18033|0|{0|in|}6755|6757|}
{2010214001|XXGiport_src_flow|11278|0|18035|0|{0|}6757|6713|}
{2010007001|XXGobject_proto_object|11279|0|18036|0|{}6755|6758|}
{2010212001|XXGvertex_oport_oport|11280|0|18038|0|{0|out|}6758|6759|}
{2010006001|XXGobject_psameas_object|11281|0|18040|0|{metadata|out_metadata|1|0|}6759|6758|}
{2010211001|XXGvertex_iport_iport|11282|0|18041|0|{0|in|}6758|6760|}
{2010006001|XXGobject_psameas_object|11283|0|18043|0|{metadata|in_metadata|1|0|}6760|6758|}
{2010212001|XXGvertex_oport_oport|11284|0|18044|0|{0|out0|}6712|6761|}
{2010216002|XXGoport_binding_oport|11285|0|18046|0|{.5|.5|{0|}14672|}6761|6716|}
{2010213001|XXGoport_dst_flow|11286|0|18047|0|{0|}6761|6624|}
{2010212001|XXGvertex_oport_oport|11287|0|18048|0|{1|out1|}6712|6762|}
{2010216002|XXGoport_binding_oport|11288|0|18050|0|{.5|.5|{0|}14673|}6762|6717|}
{2010213001|XXGoport_dst_flow|11289|0|18051|0|{0|}6762|6629|}
{2010211001|XXGvertex_iport_iport|11290|0|18052|0|{0|in0|}6712|6763|}
{2010215002|XXGiport_binding_iport|11291|0|18054|0|{.5|.5|{0|}14671|}6763|6738|}
{2010214001|XXGiport_src_flow|11292|0|18055|0|{0|}6763|6621|}
{2010601001|XXGgraph_vertex_vertex|11293|0|18056|0|{Sort_on_Adjusted_Natural_Keys|}6606|6764|}
{2010212001|XXGvertex_oport_oport|11294|0|18058|0|{0|out|}6764|6765|}
{2010213001|XXGoport_dst_flow|11295|0|18060|0|{0|}6765|6617|}
{2010211001|XXGvertex_iport_iport|11296|0|18061|0|{0|in|}6764|6766|}
{2010214001|XXGiport_src_flow|11297|0|18063|0|{0|}6766|6619|}
{2010007001|XXGobject_proto_object|11298|0|18064|0|{}6764|6767|}
{2010212001|XXGvertex_oport_oport|11299|0|18066|0|{0|out|}6767|6768|}
{2010006001|XXGobject_psameas_object|11300|0|18068|0|{metadata|out_metadata|1|0|}6768|6767|}
{2010211001|XXGvertex_iport_iport|11301|0|18069|0|{0|in|}6767|6769|}
{2010006001|XXGobject_psameas_object|11302|0|18071|0|{metadata|in_metadata|1|0|}6769|6767|}
{2010601001|XXGgraph_vertex_vertex|11303|0|18072|0|{Trash_1|}6606|6770|}
{2010211001|XXGvertex_iport_iport|11304|0|18074|0|{0|in|}6770|6771|}
{2010214001|XXGiport_src_flow|11305|0|18076|0|{0|}6771|6627|}
{2010007001|XXGobject_proto_object|11306|0|18077|0|{}6770|6772|}
{2010211001|XXGvertex_iport_iport|11307|0|18079|0|{0|in|}6772|6773|}
{2010006001|XXGobject_psameas_object|11308|0|18081|0|{metadata|in_metadata|1|0|}6773|6772|}
{2010601001|XXGgraph_vertex_vertex|11309|0|18082|0|{Trash_2|}6606|6774|}
{2010211001|XXGvertex_iport_iport|11310|0|18084|0|{0|in|}6774|6775|}
{2010214001|XXGiport_src_flow|11311|0|18086|0|{0|}6775|6626|}
{2010007001|XXGobject_proto_object|11312|0|18087|0|{}6774|6776|}
{2010211001|XXGvertex_iport_iport|11313|0|18089|0|{0|in|}6776|6777|}
{2010006001|XXGobject_psameas_object|11314|0|18091|0|{metadata|in_metadata|1|0|}6777|6776|}
{2010601001|XXGgraph_vertex_vertex|11315|0|18092|0|{Trash_3|}6606|6778|}
{2010211001|XXGvertex_iport_iport|11316|0|18094|0|{0|in|}6778|6779|}
{2010214001|XXGiport_src_flow|11317|0|18096|0|{0|}6779|6629|}
{2010007001|XXGobject_proto_object|11318|0|18097|0|{}6778|6780|}
{2010211001|XXGvertex_iport_iport|11319|0|18099|0|{0|in|}6780|6781|}
{2010006001|XXGobject_psameas_object|11320|0|18101|0|{metadata|in_metadata|1|0|}6781|6780|}
{2010212001|XXGvertex_oport_oport|11321|0|18102|0|{0|out0|}6606|6782|}
{2010216002|XXGoport_binding_oport|11322|0|18104|0|{.5|.5|{0|}14899|}6782|6701|}
{2010213001|XXGoport_dst_flow|11323|0|18105|0|{0|}6782|6603|}
{2010211001|XXGvertex_iport_iport|11324|0|18106|0|{0|in0|}6606|6783|}
{2010215002|XXGiport_binding_iport|11325|0|18108|0|{.5|.5|{0|}14898|}6783|6663|}
{2010214001|XXGiport_src_flow|11326|0|18109|0|{0|}6783|6601|}
{2010601001|XXGgraph_vertex_vertex|11327|0|18110|0|{Get_Last_Lookup_Record|}6596|6784|}
{2010605001|XXGgraph_legend_legend|11328|0|18112|0|{0|}6784|6785|}
{2010241001|XXGlegend_face_face|11329|0|18114|0|{}6785|6786|}
{2010605001|XXGgraph_legend_legend|11330|0|18116|0|{1|}6784|6787|}
{2010241001|XXGlegend_face_face|11331|0|18118|0|{}6787|6788|}
{2010605001|XXGgraph_legend_legend|11332|0|18120|0|{2|}6784|6789|}
{2010241001|XXGlegend_face_face|11333|0|18122|0|{}6789|6790|}
{2010605001|XXGgraph_legend_legend|11334|0|18124|0|{3|}6784|6791|}
{2010241001|XXGlegend_face_face|11335|0|18126|0|{}6791|6792|}
{2010604001|XXGgraph_flow_flow|11336|0|18128|0|{Flow_1|}6784|6793|}
{2010604001|XXGgraph_flow_flow|11337|0|18130|0|{Flow_2|}6784|6794|}
{2010604001|XXGgraph_flow_flow|11338|0|18132|0|{Flow_3|}6784|6795|}
{2010604001|XXGgraph_flow_flow|11339|0|18134|0|{Flow_4|}6784|6796|}
{2010604001|XXGgraph_flow_flow|11340|0|18136|0|{Flow_5|}6784|6797|}
{2010604001|XXGgraph_flow_flow|11341|0|18138|0|{Flow_6|}6784|6798|}
{2010604001|XXGgraph_flow_flow|11342|0|18140|0|{Flow_7|}6784|6799|}
{2010604001|XXGgraph_flow_flow|11343|0|18142|0|{Flow_8|}6784|6800|}
{2010604001|XXGgraph_flow_flow|11344|0|18144|0|{Flow_9|}6784|6801|}
{2010601001|XXGgraph_vertex_vertex|11345|0|18146|0|{Dedup_Sorted|}6784|6802|}
{2010212001|XXGvertex_oport_oport|11346|0|18148|0|{0|out|}6802|6803|}
{2010212001|XXGvertex_oport_oport|11347|0|18150|0|{1|dup|}6802|6804|}
{2010213001|XXGoport_dst_flow|11348|0|18152|0|{0|}6804|6800|}
{2010212001|XXGvertex_oport_oport|11349|0|18153|0|{2|reject|}6802|6805|}
{2010212001|XXGvertex_oport_oport|11350|0|18155|0|{3|error|}6802|6806|}
{2010212001|XXGvertex_oport_oport|11351|0|18157|0|{4|log|}6802|6807|}
{2010211001|XXGvertex_iport_iport|11352|0|18159|0|{0|in|}6802|6808|}
{2010214001|XXGiport_src_flow|11353|0|18161|0|{0|}6808|6795|}
{2010007001|XXGobject_proto_object|11354|0|18162|0|{}6802|6809|}
{2010212001|XXGvertex_oport_oport|11355|0|18164|0|{0|out|}6809|6810|}
{2010006001|XXGobject_psameas_object|11356|0|18166|0|{metadata|out_metadata|1|0|}6810|6809|}
{2010212001|XXGvertex_oport_oport|11357|0|18167|0|{1|dup|}6809|6811|}
{2010006001|XXGobject_psameas_object|11358|0|18169|0|{metadata|dup_metadata|1|0|}6811|6809|}
{2010212001|XXGvertex_oport_oport|11359|0|18170|0|{2|reject|}6809|6812|}
{2010006001|XXGobject_psameas_object|11360|0|18172|0|{metadata|reject_metadata|1|0|}6812|6809|}
{2010212001|XXGvertex_oport_oport|11361|0|18173|0|{3|error|}6809|6813|}
{2010006001|XXGobject_psameas_object|11362|0|18175|0|{metadata|error_metadata|1|0|}6813|6809|}
{2010212001|XXGvertex_oport_oport|11363|0|18176|0|{4|log|}6809|6814|}
{2010006001|XXGobject_psameas_object|11364|0|18178|0|{metadata|log_metadata|1|0|}6814|6809|}
{2010211001|XXGvertex_iport_iport|11365|0|18179|0|{0|in|}6809|6815|}
{2010006001|XXGobject_psameas_object|11366|0|18181|0|{metadata|in_metadata|1|0|}6815|6809|}
{2010601001|XXGgraph_vertex_vertex|11367|0|18182|0|{FBE_filter_matching_lkp_record|}6784|6816|}
{2010212001|XXGvertex_oport_oport|11368|0|18184|0|{0|out|}6816|6817|}
{2010213001|XXGoport_dst_flow|11369|0|18186|0|{0|}6817|6794|}
{2010212001|XXGvertex_oport_oport|11370|0|18187|0|{1|deselect|}6816|6818|}
{2010213001|XXGoport_dst_flow|11371|0|18189|0|{0|}6818|6801|}
{2010212001|XXGvertex_oport_oport|11372|0|18190|0|{2|reject|}6816|6819|}
{2010212001|XXGvertex_oport_oport|11373|0|18192|0|{3|error|}6816|6820|}
{2010212001|XXGvertex_oport_oport|11374|0|18194|0|{4|log|}6816|6821|}
{2010211001|XXGvertex_iport_iport|11375|0|18196|0|{0|in|}6816|6822|}
{2010214001|XXGiport_src_flow|11376|0|18198|0|{0|}6822|6797|}
{2010007001|XXGobject_proto_object|11377|0|18199|0|{}6816|6823|}
{2010212001|XXGvertex_oport_oport|11378|0|18201|0|{0|out|}6823|6824|}
{2010006001|XXGobject_psameas_object|11379|0|18203|0|{metadata|out_metadata|1|0|}6824|6823|}
{2010212001|XXGvertex_oport_oport|11380|0|18204|0|{1|deselect|}6823|6825|}
{2010006001|XXGobject_psameas_object|11381|0|18206|0|{metadata|deselect_metadata|1|0|}6825|6823|}
{2010212001|XXGvertex_oport_oport|11382|0|18207|0|{2|reject|}6823|6826|}
{2010006001|XXGobject_psameas_object|11383|0|18209|0|{metadata|reject_metadata|1|0|}6826|6823|}
{2010212001|XXGvertex_oport_oport|11384|0|18210|0|{3|error|}6823|6827|}
{2010006001|XXGobject_psameas_object|11385|0|18212|0|{metadata|error_metadata|1|0|}6827|6823|}
{2010212001|XXGvertex_oport_oport|11386|0|18213|0|{4|log|}6823|6828|}
{2010006001|XXGobject_psameas_object|11387|0|18215|0|{metadata|log_metadata|1|0|}6828|6823|}
{2010211001|XXGvertex_iport_iport|11388|0|18216|0|{0|in|}6823|6829|}
{2010006001|XXGobject_psameas_object|11389|0|18218|0|{metadata|in_metadata|1|0|}6829|6823|}
{2010601001|XXGgraph_vertex_vertex|11390|0|18219|0|{RFMT_Get_Hash_On_NK|}6784|6830|}
{2010212001|XXGvertex_oport_oport|11391|0|18221|0|{0|out0|}6830|6831|}
{2010213001|XXGoport_dst_flow|11392|0|18223|0|{0|}6831|6793|}
{2010212001|XXGvertex_oport_oport|11393|0|18224|0|{1|reject0|}6830|6832|}
{2010212001|XXGvertex_oport_oport|11394|0|18226|0|{2|error0|}6830|6833|}
{2010212001|XXGvertex_oport_oport|11395|0|18228|0|{3|log|}6830|6834|}
{2010211001|XXGvertex_iport_iport|11396|0|18230|0|{0|in|}6830|6835|}
{2010007001|XXGobject_proto_object|11397|0|18232|0|{}6830|6836|}
{2010212001|XXGvertex_oport_oport|11398|0|18234|0|{0|out0|}6836|6837|}
{2010006001|XXGobject_psameas_object|11399|0|18236|0|{metadata|out0_metadata|1|0|}6837|6836|}
{2010006001|XXGobject_psameas_object|11400|0|18237|0|{transform0|transform0|1|0|}6837|6836|}
{2010212001|XXGvertex_oport_oport|11401|0|18238|0|{1|reject0|}6836|6838|}
{2010006001|XXGobject_psameas_object|11402|0|18240|0|{metadata|reject0_metadata|1|0|}6838|6836|}
{2010212001|XXGvertex_oport_oport|11403|0|18241|0|{2|error0|}6836|6839|}
{2010006001|XXGobject_psameas_object|11404|0|18243|0|{metadata|error0_metadata|1|0|}6839|6836|}
{2010212001|XXGvertex_oport_oport|11405|0|18244|0|{3|log|}6836|6840|}
{2010006001|XXGobject_psameas_object|11406|0|18246|0|{metadata|log_metadata|1|0|}6840|6836|}
{2010211001|XXGvertex_iport_iport|11407|0|18247|0|{0|in|}6836|6841|}
{2010006001|XXGobject_psameas_object|11408|0|18249|0|{metadata|in_metadata|1|0|}6841|6836|}
{2010601001|XXGgraph_vertex_vertex|11409|0|18250|0|{RFMT_Lookup_with_IDS|}6784|6842|}
{2010212001|XXGvertex_oport_oport|11410|0|18252|0|{0|out0|}6842|6843|}
{2010213001|XXGoport_dst_flow|11411|0|18254|0|{0|}6843|6796|}
{2010212001|XXGvertex_oport_oport|11412|0|18255|0|{1|reject0|}6842|6844|}
{2010212001|XXGvertex_oport_oport|11413|0|18257|0|{2|error0|}6842|6845|}
{2010212001|XXGvertex_oport_oport|11414|0|18259|0|{3|log|}6842|6846|}
{2010211001|XXGvertex_iport_iport|11415|0|18261|0|{0|in|}6842|6847|}
{2010214001|XXGiport_src_flow|11416|0|18263|0|{0|}6847|6798|}
{2010007001|XXGobject_proto_object|11417|0|18264|0|{}6842|6848|}
{2010212001|XXGvertex_oport_oport|11418|0|18266|0|{0|out0|}6848|6849|}
{2010006001|XXGobject_psameas_object|11419|0|18268|0|{metadata|out0_metadata|1|0|}6849|6848|}
{2010006001|XXGobject_psameas_object|11420|0|18269|0|{transform0|transform0|1|0|}6849|6848|}
{2010212001|XXGvertex_oport_oport|11421|0|18270|0|{1|reject0|}6848|6850|}
{2010006001|XXGobject_psameas_object|11422|0|18272|0|{metadata|reject0_metadata|1|0|}6850|6848|}
{2010212001|XXGvertex_oport_oport|11423|0|18273|0|{2|error0|}6848|6851|}
{2010006001|XXGobject_psameas_object|11424|0|18275|0|{metadata|error0_metadata|1|0|}6851|6848|}
{2010212001|XXGvertex_oport_oport|11425|0|18276|0|{3|log|}6848|6852|}
{2010006001|XXGobject_psameas_object|11426|0|18278|0|{metadata|log_metadata|1|0|}6852|6848|}
{2010211001|XXGvertex_iport_iport|11427|0|18279|0|{0|in|}6848|6853|}
{2010006001|XXGobject_psameas_object|11428|0|18281|0|{metadata|in_metadata|1|0|}6853|6848|}
{2010601001|XXGgraph_vertex_vertex|11429|0|18282|0|{Sort_De_dup|}6784|6854|}
{2010604001|XXGgraph_flow_flow|11430|0|18284|0|{Flow_10|}6854|6855|}
{2010604001|XXGgraph_flow_flow|11431|0|18286|0|{Flow_4|}6854|6856|}
{2010244001|XXGflow_watcher_watcher|11432|0|18288|0|{}6856|6857|}
{2010601001|XXGgraph_vertex_vertex|11433|0|18290|0|{Dedup_Sorted_1|}6854|6858|}
{2010212001|XXGvertex_oport_oport|11434|0|18292|0|{0|out|}6858|6859|}
{2010212001|XXGvertex_oport_oport|11435|0|18294|0|{1|dup|}6858|6860|}
{2010212001|XXGvertex_oport_oport|11436|0|18296|0|{2|reject|}6858|6861|}
{2010212001|XXGvertex_oport_oport|11437|0|18298|0|{3|error|}6858|6862|}
{2010212001|XXGvertex_oport_oport|11438|0|18300|0|{4|log|}6858|6863|}
{2010211001|XXGvertex_iport_iport|11439|0|18302|0|{0|in|}6858|6864|}
{2010214001|XXGiport_src_flow|11440|0|18304|0|{0|}6864|6855|}
{2010007001|XXGobject_proto_object|11441|0|18305|0|{}6858|6865|}
{2010212001|XXGvertex_oport_oport|11442|0|18307|0|{0|out|}6865|6866|}
{2010006001|XXGobject_psameas_object|11443|0|18309|0|{metadata|out_metadata|1|0|}6866|6865|}
{2010212001|XXGvertex_oport_oport|11444|0|18310|0|{1|dup|}6865|6867|}
{2010006001|XXGobject_psameas_object|11445|0|18312|0|{metadata|dup_metadata|1|0|}6867|6865|}
{2010212001|XXGvertex_oport_oport|11446|0|18313|0|{2|reject|}6865|6868|}
{2010006001|XXGobject_psameas_object|11447|0|18315|0|{metadata|reject_metadata|1|0|}6868|6865|}
{2010212001|XXGvertex_oport_oport|11448|0|18316|0|{3|error|}6865|6869|}
{2010006001|XXGobject_psameas_object|11449|0|18318|0|{metadata|error_metadata|1|0|}6869|6865|}
{2010212001|XXGvertex_oport_oport|11450|0|18319|0|{4|log|}6865|6870|}
{2010006001|XXGobject_psameas_object|11451|0|18321|0|{metadata|log_metadata|1|0|}6870|6865|}
{2010211001|XXGvertex_iport_iport|11452|0|18322|0|{0|in|}6865|6871|}
{2010006001|XXGobject_psameas_object|11453|0|18324|0|{metadata|in_metadata|1|0|}6871|6865|}
{2010601001|XXGgraph_vertex_vertex|11454|0|18325|0|{PBKS_dxf_hk_part1_|}6854|6872|}
{2010604001|XXGgraph_flow_flow|11455|0|18327|0|{Flow_1|}6872|6873|}
{2010601001|XXGgraph_vertex_vertex|11456|0|18329|0|{Partition_by_Key|}6872|6874|}
{2010212001|XXGvertex_oport_oport|11457|0|18331|0|{0|out|}6874|6875|}
{2010213001|XXGoport_dst_flow|11458|0|18333|0|{0|}6875|6873|}
{2010211001|XXGvertex_iport_iport|11459|0|18334|0|{0|in|}6874|6876|}
{2010601001|XXGgraph_vertex_vertex|11460|0|18336|0|{Sort|}6872|6877|}
{2010212001|XXGvertex_oport_oport|11461|0|18338|0|{0|out|}6877|6878|}
{2010211001|XXGvertex_iport_iport|11462|0|18340|0|{0|in|}6877|6879|}
{2010214001|XXGiport_src_flow|11463|0|18342|0|{0|}6879|6873|}
{2010212001|XXGvertex_oport_oport|11464|0|18343|0|{0|out0|}6872|6880|}
{2010216002|XXGoport_binding_oport|11465|0|18345|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}7|}6880|6878|}
{2010213001|XXGoport_dst_flow|11466|0|18346|0|{0|}6880|6856|}
{2010211001|XXGvertex_iport_iport|11467|0|18347|0|{0|in0|}6872|6881|}
{2010215002|XXGiport_binding_iport|11468|0|18349|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}6|}6881|6876|}
{2010007001|XXGobject_proto_object|11469|0|18350|0|{}6872|6882|}
{2010604001|XXGgraph_flow_flow|11470|0|18352|0|{Flow_1|}6882|6883|}
{2010601001|XXGgraph_vertex_vertex|11471|0|18354|0|{Partition_by_Key|}6882|6884|}
{2010212001|XXGvertex_oport_oport|11472|0|18356|0|{0|out|}6884|6885|}
{2010213001|XXGoport_dst_flow|11473|0|18358|0|{0|}6885|6883|}
{2010211001|XXGvertex_iport_iport|11474|0|18359|0|{0|in|}6884|6886|}
{2010007001|XXGobject_proto_object|11475|0|18361|0|{}6884|6887|}
{2010212001|XXGvertex_oport_oport|11476|0|18363|0|{0|out|}6887|6888|}
{2010006001|XXGobject_psameas_object|11477|0|18365|0|{metadata|out_metadata|1|0|}6888|6887|}
{2010211001|XXGvertex_iport_iport|11478|0|18366|0|{0|in|}6887|6889|}
{2010006001|XXGobject_psameas_object|11479|0|18368|0|{metadata|in_metadata|1|0|}6889|6887|}
{2010006001|XXGobject_psameas_object|11480|0|18369|0|{Layout|InputLayout|1|0|}6884|6882|}
{2010006001|XXGobject_psameas_object|11481|0|18370|0|{key|Key|1|0|}6884|6882|}
{2010601001|XXGgraph_vertex_vertex|11482|0|18371|0|{Sort|}6882|6890|}
{2010212001|XXGvertex_oport_oport|11483|0|18373|0|{0|out|}6890|6891|}
{2010211001|XXGvertex_iport_iport|11484|0|18375|0|{0|in|}6890|6892|}
{2010214001|XXGiport_src_flow|11485|0|18377|0|{0|}6892|6883|}
{2010007001|XXGobject_proto_object|11486|0|18378|0|{}6890|6893|}
{2010212001|XXGvertex_oport_oport|11487|0|18380|0|{0|out|}6893|6894|}
{2010006001|XXGobject_psameas_object|11488|0|18382|0|{metadata|out_metadata|1|0|}6894|6893|}
{2010211001|XXGvertex_iport_iport|11489|0|18383|0|{0|in|}6893|6895|}
{2010006001|XXGobject_psameas_object|11490|0|18385|0|{metadata|in_metadata|1|0|}6895|6893|}
{2010006001|XXGobject_psameas_object|11491|0|18386|0|{Layout|OutputLayout|1|0|}6890|6882|}
{2010006001|XXGobject_psameas_object|11492|0|18387|0|{key|Key|1|0|}6890|6882|}
{2010006001|XXGobject_psameas_object|11493|0|18388|0|{max_core|Max_core|1|0|}6890|6882|}
{2010212001|XXGvertex_oport_oport|11494|0|18389|0|{0|out0|}6882|6896|}
{2010216002|XXGoport_binding_oport|11495|0|18391|0|{.5|.5|{8|450000|171000|470000|171000|480000|171000|500000|171000|}0|}6896|6891|}
{2010211001|XXGvertex_iport_iport|11496|0|18392|0|{0|in0|}6882|6897|}
{2010215002|XXGiport_binding_iport|11497|0|18394|0|{.5|.5|{8|71000|171000|51000|171000|40000|171000|20000|171000|}0|}6897|6886|}
{2010601001|XXGgraph_vertex_vertex|11498|0|18395|0|{Sort_within_Groups_1|}6854|6898|}
{2010212001|XXGvertex_oport_oport|11499|0|18397|0|{0|out|}6898|6899|}
{2010213001|XXGoport_dst_flow|11500|0|18399|0|{0|}6899|6855|}
{2010211001|XXGvertex_iport_iport|11501|0|18400|0|{0|in|}6898|6900|}
{2010214001|XXGiport_src_flow|11502|0|18402|0|{0|}6900|6856|}
{2010007001|XXGobject_proto_object|11503|0|18403|0|{}6898|6901|}
{2010212001|XXGvertex_oport_oport|11504|0|18405|0|{0|out|}6901|6902|}
{2010006001|XXGobject_psameas_object|11505|0|18407|0|{metadata|out_metadata|1|0|}6902|6901|}
{2010211001|XXGvertex_iport_iport|11506|0|18408|0|{0|in|}6901|6903|}
{2010006001|XXGobject_psameas_object|11507|0|18410|0|{metadata|in_metadata|1|0|}6903|6901|}
{2010212001|XXGvertex_oport_oport|11508|0|18411|0|{0|out0|}6854|6904|}
{2010216002|XXGoport_binding_oport|11509|0|18413|0|{.5|.5|{0|}7792|}6904|6859|}
{2010213001|XXGoport_dst_flow|11510|0|18414|0|{0|}6904|6798|}
{2010212001|XXGvertex_oport_oport|11511|0|18415|0|{1|out1|}6854|6905|}
{2010216002|XXGoport_binding_oport|11512|0|18417|0|{.5|.5|{0|}7793|}6905|6860|}
{2010213001|XXGoport_dst_flow|11513|0|18418|0|{0|}6905|6799|}
{2010211001|XXGvertex_iport_iport|11514|0|18419|0|{0|in0|}6854|6906|}
{2010215002|XXGiport_binding_iport|11515|0|18421|0|{.5|.5|{0|}7791|}6906|6881|}
{2010214001|XXGiport_src_flow|11516|0|18422|0|{0|}6906|6793|}
{2010601001|XXGgraph_vertex_vertex|11517|0|18423|0|{Sort_within_Groups|}6784|6907|}
{2010212001|XXGvertex_oport_oport|11518|0|18425|0|{0|out|}6907|6908|}
{2010213001|XXGoport_dst_flow|11519|0|18427|0|{0|}6908|6795|}
{2010211001|XXGvertex_iport_iport|11520|0|18428|0|{0|in|}6907|6909|}
{2010214001|XXGiport_src_flow|11521|0|18430|0|{0|}6909|6794|}
{2010007001|XXGobject_proto_object|11522|0|18431|0|{}6907|6910|}
{2010212001|XXGvertex_oport_oport|11523|0|18433|0|{0|out|}6910|6911|}
{2010006001|XXGobject_psameas_object|11524|0|18435|0|{metadata|out_metadata|1|0|}6911|6910|}
{2010211001|XXGvertex_iport_iport|11525|0|18436|0|{0|in|}6910|6912|}
{2010006001|XXGobject_psameas_object|11526|0|18438|0|{metadata|in_metadata|1|0|}6912|6910|}
{2010601001|XXGgraph_vertex_vertex|11527|0|18439|0|{Trash|}6784|6913|}
{2010211001|XXGvertex_iport_iport|11528|0|18441|0|{0|in|}6913|6914|}
{2010214001|XXGiport_src_flow|11529|0|18443|0|{0|}6914|6799|}
{2010007001|XXGobject_proto_object|11530|0|18444|0|{}6913|6915|}
{2010211001|XXGvertex_iport_iport|11531|0|18446|0|{0|in|}6915|6916|}
{2010006001|XXGobject_psameas_object|11532|0|18448|0|{metadata|in_metadata|1|0|}6916|6915|}
{2010601001|XXGgraph_vertex_vertex|11533|0|18449|0|{Trash_1|}6784|6917|}
{2010211001|XXGvertex_iport_iport|11534|0|18451|0|{0|in|}6917|6918|}
{2010214001|XXGiport_src_flow|11535|0|18453|0|{0|}6918|6800|}
{2010007001|XXGobject_proto_object|11536|0|18454|0|{}6917|6919|}
{2010211001|XXGvertex_iport_iport|11537|0|18456|0|{0|in|}6919|6920|}
{2010006001|XXGobject_psameas_object|11538|0|18458|0|{metadata|in_metadata|1|0|}6920|6919|}
{2010601001|XXGgraph_vertex_vertex|11539|0|18459|0|{Trash_2|}6784|6921|}
{2010211001|XXGvertex_iport_iport|11540|0|18461|0|{0|in|}6921|6922|}
{2010214001|XXGiport_src_flow|11541|0|18463|0|{0|}6922|6801|}
{2010007001|XXGobject_proto_object|11542|0|18464|0|{}6921|6923|}
{2010211001|XXGvertex_iport_iport|11543|0|18466|0|{0|in|}6923|6924|}
{2010006001|XXGobject_psameas_object|11544|0|18468|0|{metadata|in_metadata|1|0|}6924|6923|}
{2010601001|XXGgraph_vertex_vertex|11545|0|18469|0|{Two_Step_Lookup|}6784|6925|}
{2010605001|XXGgraph_legend_legend|11546|0|18471|0|{0|}6925|6926|}
{2010241001|XXGlegend_face_face|11547|0|18473|0|{}6926|6927|}
{2010604001|XXGgraph_flow_flow|11548|0|18475|0|{Flow_1|}6925|6928|}
{2010604001|XXGgraph_flow_flow|11549|0|18477|0|{Flow_2|}6925|6929|}
{2010604001|XXGgraph_flow_flow|11550|0|18479|0|{Flow_3|}6925|6930|}
{2010604001|XXGgraph_flow_flow|11551|0|18481|0|{Flow_4|}6925|6931|}
{2010604001|XXGgraph_flow_flow|11552|0|18483|0|{Flow_5|}6925|6932|}
{2010604001|XXGgraph_flow_flow|11553|0|18485|0|{Flow_6|}6925|6933|}
{2010601001|XXGgraph_vertex_vertex|11554|0|18487|0|{FBE_Pass_Only_Matching_Rec|}6925|6934|}
{2010212001|XXGvertex_oport_oport|11555|0|18489|0|{0|out|}6934|6935|}
{2010213001|XXGoport_dst_flow|11556|0|18491|0|{0|}6935|6932|}
{2010212001|XXGvertex_oport_oport|11557|0|18492|0|{1|deselect|}6934|6936|}
{2010213001|XXGoport_dst_flow|11558|0|18494|0|{0|}6936|6933|}
{2010212001|XXGvertex_oport_oport|11559|0|18495|0|{2|reject|}6934|6937|}
{2010212001|XXGvertex_oport_oport|11560|0|18497|0|{3|error|}6934|6938|}
{2010212001|XXGvertex_oport_oport|11561|0|18499|0|{4|log|}6934|6939|}
{2010211001|XXGvertex_iport_iport|11562|0|18501|0|{0|in|}6934|6940|}
{2010214001|XXGiport_src_flow|11563|0|18503|0|{0|}6940|6931|}
{2010007001|XXGobject_proto_object|11564|0|18504|0|{}6934|6941|}
{2010212001|XXGvertex_oport_oport|11565|0|18506|0|{0|out|}6941|6942|}
{2010006001|XXGobject_psameas_object|11566|0|18508|0|{metadata|out_metadata|1|0|}6942|6941|}
{2010212001|XXGvertex_oport_oport|11567|0|18509|0|{1|deselect|}6941|6943|}
{2010006001|XXGobject_psameas_object|11568|0|18511|0|{metadata|deselect_metadata|1|0|}6943|6941|}
{2010212001|XXGvertex_oport_oport|11569|0|18512|0|{2|reject|}6941|6944|}
{2010006001|XXGobject_psameas_object|11570|0|18514|0|{metadata|reject_metadata|1|0|}6944|6941|}
{2010212001|XXGvertex_oport_oport|11571|0|18515|0|{3|error|}6941|6945|}
{2010006001|XXGobject_psameas_object|11572|0|18517|0|{metadata|error_metadata|1|0|}6945|6941|}
{2010212001|XXGvertex_oport_oport|11573|0|18518|0|{4|log|}6941|6946|}
{2010006001|XXGobject_psameas_object|11574|0|18520|0|{metadata|log_metadata|1|0|}6946|6941|}
{2010211001|XXGvertex_iport_iport|11575|0|18521|0|{0|in|}6941|6947|}
{2010006001|XXGobject_psameas_object|11576|0|18523|0|{metadata|in_metadata|1|0|}6947|6941|}
{2010601001|XXGgraph_vertex_vertex|11577|0|18524|0|{FBE_filter_matching_lkp_record|}6925|6948|}
{2010212001|XXGvertex_oport_oport|11578|0|18526|0|{0|out|}6948|6949|}
{2010213001|XXGoport_dst_flow|11579|0|18528|0|{0|}6949|6930|}
{2010212001|XXGvertex_oport_oport|11580|0|18529|0|{1|deselect|}6948|6950|}
{2010213001|XXGoport_dst_flow|11581|0|18531|0|{0|}6950|6928|}
{2010212001|XXGvertex_oport_oport|11582|0|18532|0|{2|reject|}6948|6951|}
{2010212001|XXGvertex_oport_oport|11583|0|18534|0|{3|error|}6948|6952|}
{2010212001|XXGvertex_oport_oport|11584|0|18536|0|{4|log|}6948|6953|}
{2010211001|XXGvertex_iport_iport|11585|0|18538|0|{0|in|}6948|6954|}
{2010007001|XXGobject_proto_object|11586|0|18540|0|{}6948|6955|}
{2010212001|XXGvertex_oport_oport|11587|0|18542|0|{0|out|}6955|6956|}
{2010006001|XXGobject_psameas_object|11588|0|18544|0|{metadata|out_metadata|1|0|}6956|6955|}
{2010212001|XXGvertex_oport_oport|11589|0|18545|0|{1|deselect|}6955|6957|}
{2010006001|XXGobject_psameas_object|11590|0|18547|0|{metadata|deselect_metadata|1|0|}6957|6955|}
{2010212001|XXGvertex_oport_oport|11591|0|18548|0|{2|reject|}6955|6958|}
{2010006001|XXGobject_psameas_object|11592|0|18550|0|{metadata|reject_metadata|1|0|}6958|6955|}
{2010212001|XXGvertex_oport_oport|11593|0|18551|0|{3|error|}6955|6959|}
{2010006001|XXGobject_psameas_object|11594|0|18553|0|{metadata|error_metadata|1|0|}6959|6955|}
{2010212001|XXGvertex_oport_oport|11595|0|18554|0|{4|log|}6955|6960|}
{2010006001|XXGobject_psameas_object|11596|0|18556|0|{metadata|log_metadata|1|0|}6960|6955|}
{2010211001|XXGvertex_iport_iport|11597|0|18557|0|{0|in|}6955|6961|}
{2010006001|XXGobject_psameas_object|11598|0|18559|0|{metadata|in_metadata|1|0|}6961|6955|}
{2010601001|XXGgraph_vertex_vertex|11599|0|18560|0|{Merge|}6925|6962|}
{2010212001|XXGvertex_oport_oport|11600|0|18562|0|{0|out|}6962|6963|}
{2010211001|XXGvertex_iport_iport|11601|0|18564|0|{0|in|}6962|6964|}
{2010214001|XXGiport_src_flow|11602|0|18566|0|{0|}6964|6930|}
{2010214001|XXGiport_src_flow|11603|0|18567|0|{1|}6964|6932|}
{2010007001|XXGobject_proto_object|11604|0|18568|0|{}6962|6965|}
{2010212001|XXGvertex_oport_oport|11605|0|18570|0|{0|out|}6965|6966|}
{2010006001|XXGobject_psameas_object|11606|0|18572|0|{metadata|out_metadata|1|0|}6966|6965|}
{2010211001|XXGvertex_iport_iport|11607|0|18573|0|{0|in|}6965|6967|}
{2010006001|XXGobject_psameas_object|11608|0|18575|0|{metadata|in_metadata|1|0|}6967|6965|}
{2010601001|XXGgraph_vertex_vertex|11609|0|18576|0|{No_Match_Record_In_Second_Pass|}6925|6968|}
{2010211001|XXGvertex_iport_iport|11610|0|18578|0|{0|in|}6968|6969|}
{2010214001|XXGiport_src_flow|11611|0|18580|0|{0|}6969|6933|}
{2010007001|XXGobject_proto_object|11612|0|18581|0|{}6968|6970|}
{2010211001|XXGvertex_iport_iport|11613|0|18583|0|{0|in|}6970|6971|}
{2010006001|XXGobject_psameas_object|11614|0|18585|0|{metadata|in_metadata|1|0|}6971|6970|}
{2010601001|XXGgraph_vertex_vertex|11615|0|18586|0|{RFMT_Lookup_with_IDS_Archive_|}6925|6972|}
{2010212001|XXGvertex_oport_oport|11616|0|18588|0|{0|out0|}6972|6973|}
{2010213001|XXGoport_dst_flow|11617|0|18590|0|{0|}6973|6931|}
{2010212001|XXGvertex_oport_oport|11618|0|18591|0|{1|reject0|}6972|6974|}
{2010212001|XXGvertex_oport_oport|11619|0|18593|0|{2|error0|}6972|6975|}
{2010212001|XXGvertex_oport_oport|11620|0|18595|0|{3|log|}6972|6976|}
{2010211001|XXGvertex_iport_iport|11621|0|18597|0|{0|in|}6972|6977|}
{2010214001|XXGiport_src_flow|11622|0|18599|0|{0|}6977|6929|}
{2010007001|XXGobject_proto_object|11623|0|18600|0|{}6972|6978|}
{2010212001|XXGvertex_oport_oport|11624|0|18602|0|{0|out0|}6978|6979|}
{2010006001|XXGobject_psameas_object|11625|0|18604|0|{metadata|out0_metadata|1|0|}6979|6978|}
{2010006001|XXGobject_psameas_object|11626|0|18605|0|{transform0|transform0|1|0|}6979|6978|}
{2010212001|XXGvertex_oport_oport|11627|0|18606|0|{1|reject0|}6978|6980|}
{2010006001|XXGobject_psameas_object|11628|0|18608|0|{metadata|reject0_metadata|1|0|}6980|6978|}
{2010212001|XXGvertex_oport_oport|11629|0|18609|0|{2|error0|}6978|6981|}
{2010006001|XXGobject_psameas_object|11630|0|18611|0|{metadata|error0_metadata|1|0|}6981|6978|}
{2010212001|XXGvertex_oport_oport|11631|0|18612|0|{3|log|}6978|6982|}
{2010006001|XXGobject_psameas_object|11632|0|18614|0|{metadata|log_metadata|1|0|}6982|6978|}
{2010211001|XXGvertex_iport_iport|11633|0|18615|0|{0|in|}6978|6983|}
{2010006001|XXGobject_psameas_object|11634|0|18617|0|{metadata|in_metadata|1|0|}6983|6978|}
{2010601001|XXGgraph_vertex_vertex|11635|0|18618|0|{RFMT_Pass_only_Hash_Keys|}6925|6984|}
{2010212001|XXGvertex_oport_oport|11636|0|18620|0|{0|out0|}6984|6985|}
{2010213001|XXGoport_dst_flow|11637|0|18622|0|{0|}6985|6929|}
{2010212001|XXGvertex_oport_oport|11638|0|18623|0|{1|reject0|}6984|6986|}
{2010212001|XXGvertex_oport_oport|11639|0|18625|0|{2|error0|}6984|6987|}
{2010212001|XXGvertex_oport_oport|11640|0|18627|0|{3|log|}6984|6988|}
{2010211001|XXGvertex_iport_iport|11641|0|18629|0|{0|in|}6984|6989|}
{2010214001|XXGiport_src_flow|11642|0|18631|0|{0|}6989|6928|}
{2010007001|XXGobject_proto_object|11643|0|18632|0|{}6984|6990|}
{2010212001|XXGvertex_oport_oport|11644|0|18634|0|{0|out0|}6990|6991|}
{2010006001|XXGobject_psameas_object|11645|0|18636|0|{metadata|out0_metadata|1|0|}6991|6990|}
{2010006001|XXGobject_psameas_object|11646|0|18637|0|{transform0|transform0|1|0|}6991|6990|}
{2010212001|XXGvertex_oport_oport|11647|0|18638|0|{1|reject0|}6990|6992|}
{2010006001|XXGobject_psameas_object|11648|0|18640|0|{metadata|reject0_metadata|1|0|}6992|6990|}
{2010212001|XXGvertex_oport_oport|11649|0|18641|0|{2|error0|}6990|6993|}
{2010006001|XXGobject_psameas_object|11650|0|18643|0|{metadata|error0_metadata|1|0|}6993|6990|}
{2010212001|XXGvertex_oport_oport|11651|0|18644|0|{3|log|}6990|6994|}
{2010006001|XXGobject_psameas_object|11652|0|18646|0|{metadata|log_metadata|1|0|}6994|6990|}
{2010211001|XXGvertex_iport_iport|11653|0|18647|0|{0|in|}6990|6995|}
{2010006001|XXGobject_psameas_object|11654|0|18649|0|{metadata|in_metadata|1|0|}6995|6990|}
{2010212001|XXGvertex_oport_oport|11655|0|18650|0|{0|out0|}6925|6996|}
{2010216002|XXGoport_binding_oport|11656|0|18652|0|{.5|.5|{0|}15500|}6996|6963|}
{2010213001|XXGoport_dst_flow|11657|0|18653|0|{0|}6996|6797|}
{2010211001|XXGvertex_iport_iport|11658|0|18654|0|{0|in0|}6925|6997|}
{2010215002|XXGiport_binding_iport|11659|0|18656|0|{.5|.5|{0|}15499|}6997|6954|}
{2010214001|XXGiport_src_flow|11660|0|18657|0|{0|}6997|6796|}
{2010212001|XXGvertex_oport_oport|11661|0|18658|0|{0|out0|}6784|6998|}
{2010216002|XXGoport_binding_oport|11662|0|18660|0|{.5|.5|{0|}15515|}6998|6803|}
{2010213001|XXGoport_dst_flow|11663|0|18661|0|{0|}6998|6604|}
{2010211001|XXGvertex_iport_iport|11664|0|18662|0|{0|in1|}6784|6999|}
{2010215002|XXGiport_binding_iport|11665|0|18664|0|{.5|.5|{0|}15514|}6999|6835|}
{2010214001|XXGiport_src_flow|11666|0|18665|0|{0|}6999|6602|}
{2010601001|XXGgraph_vertex_vertex|11667|0|18666|0|{Merge|}6596|7000|}
{2010212001|XXGvertex_oport_oport|11668|0|18668|0|{0|out|}7000|7001|}
{2010211001|XXGvertex_iport_iport|11669|0|18670|0|{0|in|}7000|7002|}
{2010214001|XXGiport_src_flow|11670|0|18672|0|{0|}7002|6605|}
{2010007001|XXGobject_proto_object|11671|0|18673|0|{}7000|7003|}
{2010212001|XXGvertex_oport_oport|11672|0|18675|0|{0|out|}7003|7004|}
{2010006001|XXGobject_psameas_object|11673|0|18677|0|{metadata|out_metadata|1|0|}7004|7003|}
{2010211001|XXGvertex_iport_iport|11674|0|18678|0|{0|in|}7003|7005|}
{2010006001|XXGobject_psameas_object|11675|0|18680|0|{metadata|in_metadata|1|0|}7005|7003|}
{2010601001|XXGgraph_vertex_vertex|11676|0|18681|0|{Replicate|}6596|7006|}
{2010212001|XXGvertex_oport_oport|11677|0|18683|0|{0|out|}7006|7007|}
{2010213001|XXGoport_dst_flow|11678|0|18685|0|{0|}7007|6601|}
{2010213001|XXGoport_dst_flow|11679|0|18686|0|{1|}7007|6602|}
{2010211001|XXGvertex_iport_iport|11680|0|18687|0|{0|in|}7006|7008|}
{2010007001|XXGobject_proto_object|11681|0|18689|0|{}7006|7009|}
{2010212001|XXGvertex_oport_oport|11682|0|18691|0|{0|out|}7009|7010|}
{2010006001|XXGobject_psameas_object|11683|0|18693|0|{metadata|out_metadata|1|0|}7010|7009|}
{2010211001|XXGvertex_iport_iport|11684|0|18694|0|{0|in|}7009|7011|}
{2010006001|XXGobject_psameas_object|11685|0|18696|0|{metadata|in_metadata|1|0|}7011|7009|}
{2010601001|XXGgraph_vertex_vertex|11686|0|18697|0|{Replicate_1|}6596|7012|}
{2010212001|XXGvertex_oport_oport|11687|0|18699|0|{0|out|}7012|7013|}
{2010213001|XXGoport_dst_flow|11688|0|18701|0|{0|}7013|6605|}
{2010211001|XXGvertex_iport_iport|11689|0|18702|0|{0|in|}7012|7014|}
{2010214001|XXGiport_src_flow|11690|0|18704|0|{0|}7014|6603|}
{2010214001|XXGiport_src_flow|11691|0|18705|0|{1|}7014|6604|}
{2010007001|XXGobject_proto_object|11692|0|18706|0|{}7012|7015|}
{2010212001|XXGvertex_oport_oport|11693|0|18708|0|{0|out|}7015|7016|}
{2010006001|XXGobject_psameas_object|11694|0|18710|0|{metadata|out_metadata|1|0|}7016|7015|}
{2010211001|XXGvertex_iport_iport|11695|0|18711|0|{0|in|}7015|7017|}
{2010006001|XXGobject_psameas_object|11696|0|18713|0|{metadata|in_metadata|1|0|}7017|7015|}
{2010212001|XXGvertex_oport_oport|11697|0|18714|0|{0|out0|}6596|7018|}
{2010216002|XXGoport_binding_oport|11698|0|18716|0|{.5|.5|{0|}7797|}7018|7001|}
{2010211001|XXGvertex_iport_iport|11699|0|18717|0|{0|in0|}6596|7019|}
{2010215002|XXGiport_binding_iport|11700|0|18719|0|{.5|.5|{0|}7796|}7019|7008|}
{2010211001|XXGvertex_iport_iport|11701|0|18720|0|{0|in0|}123|7020|}
{2010215002|XXGiport_binding_iport|11702|0|18722|0|{.5|.5|{0|}8626|}7020|274|}
{2010214001|XXGiport_src_flow|11703|0|18723|0|{0|}7020|10|}
{2010601001|XXGgraph_vertex_vertex|11704|0|18724|0|{Replicate|}1|7021|}
{2010212001|XXGvertex_oport_oport|11705|0|18726|0|{0|out|}7021|7022|}
{2010213001|XXGoport_dst_flow|11706|0|18728|0|{0|}7022|14|}
{2010211001|XXGvertex_iport_iport|11707|0|18729|0|{0|in|}7021|7023|}
{2010214001|XXGiport_src_flow|11708|0|18731|0|{0|}7023|11|}
{2010007001|XXGobject_proto_object|11709|0|18732|0|{}7021|7024|}
{2010212001|XXGvertex_oport_oport|11710|0|18734|0|{0|out|}7024|7025|}
{2010006001|XXGobject_psameas_object|11711|0|18736|0|{metadata|out_metadata|1|0|}7025|7024|}
{2010211001|XXGvertex_iport_iport|11712|0|18737|0|{0|in|}7024|7026|}
{2010006001|XXGobject_psameas_object|11713|0|18739|0|{metadata|in_metadata|1|0|}7026|7024|}
{2010006001|XXGobject_psameas_object|11714|0|18740|0|{Layout|Layout|0|0|}7021|54|}
{2010006001|XXGobject_psameas_object|11715|0|18741|0|{in_metadata|write_metadata|0|0|}7021|19|}
{2010006001|XXGobject_psameas_object|11716|0|18742|0|{out_metadata|write_metadata|0|0|}7021|19|}
{2010601001|XXGgraph_vertex_vertex|11717|0|18743|0|{Version_Log|}1|7027|}
{2010605001|XXGgraph_legend_legend|11718|0|18745|0|{0|}7027|7028|}
{2010241001|XXGlegend_face_face|11719|0|18747|0|{}7028|7029|}
{2010605001|XXGgraph_legend_legend|11720|0|18749|0|{1|}7027|7030|}
{2010241001|XXGlegend_face_face|11721|0|18751|0|{}7030|7031|}
{2010605001|XXGgraph_legend_legend|11722|0|18753|0|{2|}7027|7032|}
{2010241001|XXGlegend_face_face|11723|0|18755|0|{}7032|7033|}
{2010605001|XXGgraph_legend_legend|11724|0|18757|0|{3|}7027|7034|}
{2010241001|XXGlegend_face_face|11725|0|18759|0|{}7034|7035|}
{2010605001|XXGgraph_legend_legend|11726|0|18761|0|{4|}7027|7036|}
{2010241001|XXGlegend_face_face|11727|0|18763|0|{}7036|7037|}
{2010605001|XXGgraph_legend_legend|11728|0|18765|0|{5|}7027|7038|}
{2010241001|XXGlegend_face_face|11729|0|18767|0|{}7038|7039|}
{2010605001|XXGgraph_legend_legend|11730|0|18769|0|{6|}7027|7040|}
{2010241001|XXGlegend_face_face|11731|0|18771|0|{}7040|7041|}
{2010605001|XXGgraph_legend_legend|11732|0|18773|0|{7|}7027|7042|}
{2010241001|XXGlegend_face_face|11733|0|18775|0|{}7042|7043|}
{2010605001|XXGgraph_legend_legend|11734|0|18777|0|{8|}7027|7044|}
{2010241001|XXGlegend_face_face|11735|0|18779|0|{}7044|7045|}
{2010605001|XXGgraph_legend_legend|11736|0|18781|0|{9|}7027|7046|}
{2010241001|XXGlegend_face_face|11737|0|18783|0|{}7046|7047|}
{2010605001|XXGgraph_legend_legend|11738|0|18785|0|{10|}7027|7048|}
{2010241001|XXGlegend_face_face|11739|0|18787|0|{}7048|7049|}
{2010605001|XXGgraph_legend_legend|11740|0|18789|0|{11|}7027|7050|}
{2010241001|XXGlegend_face_face|11741|0|18791|0|{}7050|7051|}
{2010605001|XXGgraph_legend_legend|11742|0|18793|0|{12|}7027|7052|}
{2010241001|XXGlegend_face_face|11743|0|18795|0|{}7052|7053|}
{2010605001|XXGgraph_legend_legend|11744|0|18797|0|{13|}7027|7054|}
{2010241001|XXGlegend_face_face|11745|0|18799|0|{}7054|7055|}
{2010605001|XXGgraph_legend_legend|11746|0|18801|0|{14|}7027|7056|}
{2010241001|XXGlegend_face_face|11747|0|18803|0|{}7056|7057|}
{2010605001|XXGgraph_legend_legend|11748|0|18805|0|{15|}7027|7058|}
{2010241001|XXGlegend_face_face|11749|0|18807|0|{}7058|7059|}
{2010605001|XXGgraph_legend_legend|11750|0|18809|0|{16|}7027|7060|}
{2010241001|XXGlegend_face_face|11751|0|18811|0|{}7060|7061|}
{2010605001|XXGgraph_legend_legend|11752|0|18813|0|{17|}7027|7062|}
{2010241001|XXGlegend_face_face|11753|0|18815|0|{}7062|7063|}
{2010605001|XXGgraph_legend_legend|11754|0|18817|0|{18|}7027|7064|}
{2010241001|XXGlegend_face_face|11755|0|18819|0|{}7064|7065|}
{2010605001|XXGgraph_legend_legend|11756|0|18821|0|{19|}7027|7066|}
{2010241001|XXGlegend_face_face|11757|0|18823|0|{}7066|7067|}
{2010605001|XXGgraph_legend_legend|11758|0|18825|0|{20|}7027|7068|}
{2010241001|XXGlegend_face_face|11759|0|18827|0|{}7068|7069|}
{2010605001|XXGgraph_legend_legend|11760|0|18829|0|{21|}7027|7070|}
{2010241001|XXGlegend_face_face|11761|0|18831|0|{}7070|7071|}
{2010605001|XXGgraph_legend_legend|11762|0|18833|0|{22|}7027|7072|}
{2010241001|XXGlegend_face_face|11763|0|18835|0|{}7072|7073|}
{2010605001|XXGgraph_legend_legend|11764|0|18837|0|{23|}7027|7074|}
{2010241001|XXGlegend_face_face|11765|0|18839|0|{}7074|7075|}
{2010605001|XXGgraph_legend_legend|11766|0|18841|0|{24|}7027|7076|}
{2010241001|XXGlegend_face_face|11767|0|18843|0|{}7076|7077|}
{2010605001|XXGgraph_legend_legend|11768|0|18845|0|{25|}7027|7078|}
{2010241001|XXGlegend_face_face|11769|0|18847|0|{}7078|7079|}
{2010605001|XXGgraph_legend_legend|11770|0|18849|0|{26|}7027|7080|}
{2010241001|XXGlegend_face_face|11771|0|18851|0|{}7080|7081|}
{2010605001|XXGgraph_legend_legend|11772|0|18853|0|{27|}7027|7082|}
{2010241001|XXGlegend_face_face|11773|0|18855|0|{}7082|7083|}
{2010605001|XXGgraph_legend_legend|11774|0|18857|0|{28|}7027|7084|}
{2010241001|XXGlegend_face_face|11775|0|18859|0|{}7084|7085|}
{2010605001|XXGgraph_legend_legend|11776|0|18861|0|{29|}7027|7086|}
{2010241001|XXGlegend_face_face|11777|0|18863|0|{}7086|7087|}
{2010109001|XXGobject_property_value|11778|0|18865|0|{0|TrackingThumbprint|72|}1|7088|}
