components:
  schemas:
    BasicRequest:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
      required:
      - client_id
      - request_id
      title: BasicRequest
      type: object
    GetSKStreamRequest:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        consumer:
          description: Consumer name within group. Requests made multiple times with
            the same consumer and group name will only get new results.
          title: Consumer
          type: string
        detailed:
          default: false
          description: Return complex SurrogateKey objects if True
          title: Detailed
          type: boolean
        generated_only:
          default: true
          description: Only return generated SKs.
          title: Generated Only
          type: boolean
        group:
          description: Consumer group name
          title: Group
          type: string
        maxrows:
          default: 50
          description: Number of SKStream Items to fetch at a time. May return less
            if end of stream.
          title: Maxrows
          type: integer
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
        start_id:
          description: ID to start at within stream. Use '0' to restart consumer/group
            progress within stream.
          title: Start Id
          type: string
      required:
      - group
      - consumer
      - client_id
      - request_id
      title: GetSKStreamRequest
      type: object
    GetSKStreamResponse:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        error:
          description: Any error that has occurred (optional)
          title: Error
          type: string
        items:
          description: List of SKStreamItems
          items:
            $ref: '#/components/schemas/SKStreamItem'
          title: Items
          type: array
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
      required:
      - items
      - client_id
      - request_id
      title: GetSKStreamResponse
      type: object
    GetSKsRequest:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        create_sks:
          default: true
          description: Should new SKs be generated.
          title: Create Sks
          type: boolean
        detailed:
          default: false
          description: Return detailed SK objects if True
          title: Detailed
          type: boolean
        pks:
          description: Which PKs to fetch
          items:
            type: string
          title: Pks
          type: array
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
      required:
      - pks
      - client_id
      - request_id
      title: GetSKsRequest
      type: object
    GetSKsResponse:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        error:
          description: Any error that has occurred (optional)
          title: Error
          type: string
        pks_sks:
          additionalProperties:
            anyOf:
            - $ref: '#/components/schemas/SurrogateKey'
            - type: integer
          description: Map of PK->SK. SK can be either an int or a complex object.
          title: Pks Sks
          type: object
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
        skipped:
          description: Any PKs that were skipped due to error. Safe to retry.
          items:
            type: string
          title: Skipped
          type: array
      required:
      - pks_sks
      - client_id
      - request_id
      title: GetSKsResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HeloResponse:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        error:
          description: Any error that has occurred (optional)
          title: Error
          type: string
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
        status:
          description: Status text, if any
          title: Status
          type: string
        version:
          title: Version
          type: string
      required:
      - client_id
      - request_id
      - status
      - version
      title: HeloResponse
      type: object
    SKReqBase:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
      required:
      - client_id
      - request_id
      title: SKReqBase
      type: object
    SKStreamItem:
      properties:
        created_by:
          description: Which client_id created this SK
          title: Created By
          type: string
        partition_id:
          description: Partition within cluster where this record was created
          title: Partition Id
          type: string
        pk:
          description: The Primary Key
          title: Pk
          type: string
        sk:
          anyOf:
          - $ref: '#/components/schemas/SurrogateKey'
          - type: integer
          description: Surrogate Key. Can be either an Int or a complex object
          title: Sk
        ts:
          description: Timestamp when this record was created
          title: Ts
          type: string
      required:
      - ts
      - partition_id
      - pk
      - sk
      - created_by
      title: SKStreamItem
      type: object
    SetNextIdRequest:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        force:
          default: false
          description: Force set the next ID, even if it is less than the current
            ID
          title: Force
          type: boolean
        next_id:
          description: Set the next ID for a given table
          title: Next Id
          type: integer
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
      required:
      - next_id
      - client_id
      - request_id
      title: SetNextIdRequest
      type: object
    SetSKConflict:
      properties:
        existing_sk:
          allOf:
          - $ref: '#/components/schemas/SurrogateKey'
          description: The SK that already exists for this PK
          title: Existing Sk
        new_sk:
          allOf:
          - $ref: '#/components/schemas/SurrogateKey'
          description: The new SK you were trying to write
          title: New Sk
      required:
      - new_sk
      - existing_sk
      title: SetSKConflict
      type: object
    SetSKsRequest:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        force:
          default: false
          description: Force overwrite even if new SK < Existing SK
          title: Force
          type: boolean
        overwrite:
          default: true
          description: Overwrite existing PKs
          title: Overwrite
          type: boolean
        pks_sks:
          additionalProperties:
            type: integer
          description: Map of PK->SK. Set PKs to new SKs.
          title: Pks Sks
          type: object
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
      required:
      - pks_sks
      - client_id
      - request_id
      title: SetSKsRequest
      type: object
    SetSKsResponse:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        conflicts:
          additionalProperties:
            $ref: '#/components/schemas/SetSKConflict'
          description: Fields that were not updated because a more recent value was
            already found
          title: Conflicts
          type: object
        error:
          description: Any error that has occurred (optional)
          title: Error
          type: string
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
        skipped:
          additionalProperties:
            type: integer
          default: PKs that were skipped due to error. Safe to retry.
          title: Skipped
          type: object
        updated:
          additionalProperties:
            $ref: '#/components/schemas/SurrogateKey'
          description: Map of PK->SK that were updated.
          title: Updated
          type: object
      required:
      - updated
      - conflicts
      - client_id
      - request_id
      title: SetSKsResponse
      type: object
    StatusResponse:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        error:
          description: Any error that has occurred (optional)
          title: Error
          type: string
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
        status:
          description: Status text, if any
          title: Status
          type: string
      required:
      - client_id
      - request_id
      - status
      title: StatusResponse
      type: object
    SurrogateKey:
      properties:
        created_by:
          description: The client ID of the process that created this SK
          title: Created By
          type: string
        generated:
          description: Was this SK generated as part of get_sks or set by an external
            client (i.e during initial load)
          title: Generated
          type: boolean
        value:
          description: SK Value
          title: Value
          type: integer
      required:
      - value
      - generated
      - created_by
      title: SurrogateKey
      type: object
    TableListResponse:
      properties:
        client_id:
          description: Client ID making this request.
          title: Client ID
          type: string
        error:
          description: Any error that has occurred (optional)
          title: Error
          type: string
        request_id:
          description: Individual request ID.
          title: Request ID
          type: string
        tables:
          description: List of tables seen by the service
          items:
            type: string
          title: Tables
          type: array
      required:
      - client_id
      - request_id
      title: TableListResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: SKService
  version: 0.4.0
openapi: 3.0.2
paths:
  /api/{table_name}/delete:
    post:
      description: Delete a given table, or clear all tables if SKSVC_ENABLE_DELETE_ALL
        is true
      operationId: delete_table
      parameters:
      - in: path
        name: table_name
        required: true
        schema:
          title: Table Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Successful Response
        '206':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Partial Content
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '423':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Locked
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Internal Server Error
      summary: Delete Table
      tags:
      - admin
  /api/{table_name}/next_id:
    post:
      description: Set the next ID that should be used for a given table
      operationId: next_id
      parameters:
      - in: path
        name: table_name
        required: true
        schema:
          title: Table Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNextIdRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '423':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Locked
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Internal Server Error
      summary: Next Id
      tags:
      - admin
  /api/{table_name}/set_sks:
    post:
      description: Set known SKs for a given PKs. Should only be used to set/cache
        known SKs
      operationId: set_sks
      parameters:
      - in: path
        name: table_name
        required: true
        schema:
          title: Table Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSKsRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetSKsResponse'
          description: Successful Response
        '206':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetSKsResponse'
          description: Partial Content
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetSKsResponse'
          description: Conflict
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '423':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetSKsResponse'
          description: Locked
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetSKsResponse'
          description: Internal Server Error
      summary: Set Sks
      tags:
      - admin
