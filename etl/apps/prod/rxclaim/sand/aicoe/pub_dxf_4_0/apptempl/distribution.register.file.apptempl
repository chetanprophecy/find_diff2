<AppConfTempl name="Register Distribution File Targets (Distribution IDS Events)" version="5" xsi:noNamespaceSchemaLocation="appconf_template.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ProjectRPath client_projects="all"/>
  <TemplateExpressionPackage>include "$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "$PUB_DXF_DML/event/file_event_registration.dml";

out :: get_name(str)=
begin
  let string("\x01")[] words = string_split_no_empty(str, ".");
  let string("\x01") answer = "";
  if(length_of(words) == 3 and words[0] == "register" and words[1] == "file" and re_replace(words[2], "[A-Za-z0-9_]+", "") == "")
    answer = words[2];
  out :: answer;
end;

out :: get_all_table_mappings(grid)=
begin
  let string("\x01") result_string = "";
  for(let map in grid)
  begin
    result_string = result_string + map.target_system + "[" + map.target_entity + "] -- " + map.source_name + "\n";
  end
  
  out :: result_string;
end;

out :: get_registration_header()=
begin
  let fields = record_info_item(expand_type(read_type($PUB_DXF_DML + "/event/file_event_registration.dml")), "name");
  let string("") header = "#" + string_join(fields, "|");
  out :: header;
end;

out :: get_record_representations(grid)=
begin
  let string("") content = "";
  let file_event_registration_type registration;
  let string("") publish_freq = ""; 
  for(let reg in grid)
  begin
    publish_freq = switch(reg.publish_frequency) 
          case "Daily" : "D"; 
          case "Monthly" : "M"; 
          case "Weekly" : "W";
          case "On-Demand" : "O"; 
    end;
    registration = [record
                     target_system reg.target_system,
                     target_entity reg.target_entity,
                     target_layout reg.target_layout,
                     publish_server_type reg.publish_server_type,
                     target_is_compressed (reg.target_is_compressed == "True" ? 1 : 0),
                     source_name reg.source_name,
                     publish_sequence reg.publish_sequence,
                     publish_frequency publish_freq,
                     channel_id reg.channel_id,
                     combine_strategy reg.combine_strategy
                   ];
    content = content + reinterpret_as(string("\n"), registration) + "\n";
  end

  out :: content;
end;</TemplateExpressionPackage>
  <Metadata>
    <Project name="proj">
      <Pset name="empty" prototype_path="${PUB_DXF_MP}/empty.mp">
        <PdlExpression name="AI_DML" expression="$AI_DML"/>
        <PdlExpression name="AI_META" expression="$AI_META"/>
      </Pset>
    </Project>
    <Variables name="vars">
      <Variable name="target_system" type="string"/>
      <Variable name="target_system_description" type="string"/>
      <ListVariable name="event_registration_grid" type="compound">
        <Variable name="target_system" type="string"/>
        <Variable name="target_entity" type="string"/>
        <Variable name="target_layout" type="string"/>
        <Variable name="publish_server_type" type="string"/>
        <Variable name="target_is_compressed" type="string"/>
        <Variable name="source_name" type="string"/>
        <Variable name="publish_sequence" type="integer"/>
        <Variable name="publish_frequency" type="string"/>
        <Variable name="channel_id" type="integer"/>
        <Variable name="combine_strategy" type="string"/>
      </ListVariable>
      <Variable name="error" type="string"/>
    </Variables>
    <SharedFile name="event_registration" path="" is_appconf_owned="true"/>
  </Metadata>
  <AutomaticAssignments>
    <Assignment name="Get data mart name from config name">
      <SourceValue is_expression="true">get_name(built_in)</SourceValue>
      <TargetValue reference="vars.target_system"/>
    </Assignment>
    <Assignment on_load_only="true">
      <SourceValue is_expression="true">proj.empty.AI_META + "/file_event_registration." + vars.target_system + ".dat"</SourceValue>
      <TargetValue reference="event_registration" property="path"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">get_registration_header() + "\n" + first_defined(get_record_representations(vars.event_registration_grid),"")</SourceValue>
      <TargetValue reference="event_registration"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">0</SourceValue>
      <TargetValue reference="proj.empty" property="save_pset"/>
    </Assignment>
    <Assignment name="Configuration Name Check">
      <SourceValue is_expression="true"><![CDATA[if(length_of(string_split_no_empty(built_in.configuration_name,".")) != 3)
  "Configuration should be named like <i>register.file.target_system</i>\n" +
  "Close and recreate configuration"
else if(not starts_with(built_in, "register.file"))
  "Configuration should be named like <i>register.file.target_system</i>\n" +
  "Close and recreate configuration"
else if(re_replace(string_split_no_empty(built_in.configuration_name,".")[2], "[A-Za-z0-9_]", "") != "" )
  "Please remove invalid characters from datamart name\n" +
  "Close and recreate configuration"
else
  ""]]></SourceValue>
      <TargetValue reference="vars.error"/>
    </Assignment>
  </AutomaticAssignments>
  <UserInterface>
    <Canvas>
      <Label>Settings</Label>
      <Column>
        <Box>
          <Label reference="vars.error"/>
          <UIElements/>
          <Style>mainSource</Style>
          <Visible is_expression="true">vars.error != ""</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label is_expression="true">"&lt;b&gt;Target System: &lt;/b&gt;" + vars.target_system</Label>
          <UIElements>
            <TextLabel>
              <Label is_expression="true">"&lt;b&gt;Target System Description:\n&lt;/b&gt;" + vars.target_system_description</Label>
            </TextLabel>
            <Popup>
              <Label>Edit target system description...</Label>
              <Title/>
              <UIElements>
                <TextArea>
                  <Label>Edit target system description</Label>
                  <SourceTargetValue reference="vars.target_system_description"/>
                </TextArea>
              </UIElements>
            </Popup>
          </UIElements>
          <Style>mainSource</Style>
          <Visible is_expression="true">vars.error == ""</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label>IDS to Target Table Mapping</Label>
          <UIElements>
            <TextLabel>
              <Label>To edit mapping information, go to "Edit Mappings" tab</Label>
            </TextLabel>
            <TextLabel>
              <Label is_expression="true"><![CDATA["<b>Mappings:</b>\n" +
if(length_of(vars.event_registration_grid))
  string_replace(get_all_table_mappings(vars.event_registration_grid), "--", "<--")
else
  "<None>"]]></Label>
            </TextLabel>
          </UIElements>
          <Style>mainSource</Style>
          <Visible is_expression="true">vars.error == ""</Visible>
        </Box>
      </Column>
    </Canvas>
    <Tab>
      <Label>Edit Mappings</Label>
      <UIElements>
        <TextLabel>
          <Label><![CDATA[<font color="#0000FF"><b>HINT:</b> If copying and pasting from <b>Excel</b>, select the right number of columns in ONE row of the grid, and then paste. All copied excel rows will be pasted from that row down. To insert additional rows while pasting, add a new row, then select appropriate colimns in that row before pasting.</font>]]></Label>
        </TextLabel>
        <DataGrid>
          <ColumnMetadata>
            <Column data_field="target_system">
              <HeaderText>Target System</HeaderText>
            </Column>
            <Column data_field="target_entity">
              <HeaderText>Target Entity</HeaderText>
            </Column>
            <Column data_field="target_layout">
              <HeaderText>Target Layout</HeaderText>
              <Choices>
                <ConstantValue>mfs</ConstantValue>
                <ConstantValue>serial</ConstantValue>
              </Choices>
            </Column>
            <Column data_field="publish_server_type">
              <Choices>
                <ConstantValue>localhost</ConstantValue>
                <ConstantValue>remote</ConstantValue>
              </Choices>
              <HeaderText>Publish Server Type</HeaderText>
            </Column>
            <Column data_field="target_is_compressed">
              <Choices>
                <ConstantValue>True</ConstantValue>
                <ConstantValue>False</ConstantValue>
              </Choices>
              <HeaderText>Compression</HeaderText>
            </Column>
            <Column data_field="source_name">
              <HeaderText>IDS Source Name</HeaderText>
              <Choices is_expression="true">get_ids_table_list_sorted()</Choices>
            </Column>
            <Column data_field="publish_sequence">
              <HeaderText>Publish Sequence</HeaderText>
              <DefaultValue>1</DefaultValue>
            </Column>
            <Column data_field="publish_frequency">
              <Choices>
                <ConstantValue>Daily</ConstantValue>
                <ConstantValue>Monthly</ConstantValue>
                <ConstantValue>Weekly</ConstantValue>
                <ConstantValue>On-Demand</ConstantValue>
              </Choices>
              <HeaderText>Publish Frequency</HeaderText>
              <DefaultValue>Daily</DefaultValue>
            </Column>
            <Column data_field="channel_id">
              <HeaderText>Channel ID</HeaderText>
              <DefaultValue>1</DefaultValue>
              <ReadOnly>true</ReadOnly>
            </Column>
            <Column data_field="combine_strategy">
              <Choices>
                <ConstantValue>Keep Latest Changes</ConstantValue>
                <ConstantValue>Keep All Changes</ConstantValue>
              </Choices>
              <HeaderText>Combine Strategy</HeaderText>
            </Column>
          </ColumnMetadata>
          <Label>Data Grid</Label>
          <SourceTargetValue reference="vars.event_registration_grid"/>
        </DataGrid>
      </UIElements>
    </Tab>
    <Tab>
      <Label>Mappings File</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true"><![CDATA["<b>" + event_registration.path + "</b>"]]></Label>
        </TextLabel>
        <TextLabel>
          <Label reference="event_registration"/>
        </TextLabel>
      </UIElements>
    </Tab>
  </UserInterface>
</AppConfTempl>