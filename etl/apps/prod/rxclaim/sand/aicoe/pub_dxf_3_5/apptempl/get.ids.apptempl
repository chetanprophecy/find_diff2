<AppConfTempl name="Get from IDS (Integration)" version="5" execution_model_version="2" xsi:noNamespaceSchemaLocation="appconf_template.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ProjectRPath template_project="false" client_projects="all"/>
  <TemplateExpressionPackage><![CDATA[include "/~$PUB_DXF_XFR/ace_format.xfr";

/* Checks the given Application Configuration Name and returns an error message if there is a problem.
If there is no problem, an empty string is returned instead. */
out :: check_appconf(appconf_name) =
begin
  out :1: if ( not starts_with(appconf_name, "get.") )
    "This application configuration must be named: get.<i>something</i>.\n" +
    "Please close and rename it.";
  out :2: if ( (not (string_filter(appconf_name, ".") == ".." || string_filter(appconf_name, ".") == "...")) || 
               (string_filter(appconf_name, ".") == "..." && string_split(appconf_name, ".")[3] != "reduced") )
    "This application configuration must be named:\n" +
    "get.<i>source_system</i>.<i>file_identifier</i> or get.<i>source_system</i>.<i>file_identifier</i>.reduced,\n" +
    "where <i>source_system</i> and <i>file_identifier</i>\n" +
    "must not contain periods (.).\n" +
    "Please close and rename it.";
  out :: "";
end;


out :: highlight_matching_files(path, matching_files)=
begin
  let string("\x01")[] file_list = directory_listing(path);
  file_list = for(let file in file_list): if(file not member [vector ".", ".."] and not starts_with(file, ".") and not ends_with(file, ".idx")) file;
  file_list = for(let file in file_list): if(file member matching_files) "<b><font color='#00ff00'>" + file + "</font></b>" else file;
  out :: string_join(file_list, "\n");
end;

out :: get_file_list_with_matches(path, pattern)=
begin
  out :: highlight_matching_files(path, directory_listing(path, pattern));
end;]]></TemplateExpressionPackage>
  <Metadata>
    <Project name="proj">
      <Pset name="get" prototype_path="$AI_PSET/get.ids.interim.pset">
        <PdlExpression name="PROJECT_DIR" expression="$PROJECT_DIR"/>
        <PdlExpression name="PUB_DATAHUB_DML" expression="$PUB_DATAHUB_DML"/>
      </Pset>
    </Project>
    <Variables name="vars">
      <Variable name="errors" type="string"/>
      <Variable name="mapping_ruleset" type="ruleset"/>
      <Variable name="source_system" type="string"/>
      <Variable name="get_dml_present" type="boolean"/>
      <ListVariable name="matching_files" type="string"/>
      <Variable name="lkp_flds" type="string"/>
      <Variable name="event_file_option_error" type="string"/>
    </Variables>
    <SharedFile name="get_dml_file" path="" is_appconf_owned="true"/>
    <SharedFile name="clean_dml_file" path="" is_appconf_owned="true"/>
    <SharedFile name="source_dml_file" path="" is_appconf_owned="true"/>
    <SharedFile name="lookup_dml_file" path="" is_appconf_owned="true"/>
  </Metadata>
  <AutomaticAssignments>
    <Assignment>
      <SourceValue is_expression="true">check_appconf(built_in)</SourceValue>
      <TargetValue reference="vars.errors"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">string_split_no_empty(built_in, ".")[1]</SourceValue>
      <TargetValue reference="vars.source_system"/>
      <Condition is_expression="true">vars.errors == ""</Condition>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">"pset/get." + vars.source_system + "/" + built_in + ".pset"</SourceValue>
      <TargetValue reference="proj.get" property="relative_path"/>
      <Condition is_expression="true">vars.errors == "" and vars.source_system != ""</Condition>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">proj.get.GET_DML_FILE</SourceValue>
      <TargetValue reference="get_dml_file" property="path"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">length_of(get_dml_file.contents) &gt; 0</SourceValue>
      <TargetValue reference="vars.get_dml_present"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">re_replace(built_in, "^get[.]", "")</SourceValue>
      <TargetValue reference="proj.get.SOURCE_NAME"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">for(let file in string_split(proj.get.ACE_SOURCE_FILE_LIST, ",")):
  string_substring(file, string_rindex(file, "/")+1, 9999)</SourceValue>
      <TargetValue reference="vars.matching_files"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">proj.get.CLEAN_DML_FILE</SourceValue>
      <TargetValue reference="clean_dml_file" property="path"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">proj.get.CLEAN_DML</SourceValue>
      <TargetValue reference="clean_dml_file" property="contents"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">proj.get.SOURCE_DML_FILE</SourceValue>
      <TargetValue reference="source_dml_file" property="path"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">proj.get.SOURCE_DML</SourceValue>
      <TargetValue reference="source_dml_file" property="contents"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">proj.get.LOOKUP_DML_FILE</SourceValue>
      <TargetValue reference="lookup_dml_file" property="path"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">proj.get.LOOKUP_DML</SourceValue>
      <TargetValue reference="lookup_dml_file" property="contents"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">"{" + re_replace(vars.lkp_flds, ",", ";") + "}"</SourceValue>
      <TargetValue reference="proj.get.LOOKUP_FIELDS_KEY"/>
    </Assignment>
    <Assignment>
      <SourceValue reference="proj.get.RMF_OUTPUT_DML"/>
      <TargetValue reference="vars.mapping_ruleset" property="input_record_format"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">join_types(proj.get.ADDITIONAL_FIELDS_DML, proj.get.RMF_OUTPUT_DML)</SourceValue>
      <TargetValue reference="vars.mapping_ruleset" property="output_record_format"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">"$AI_XFR/bre_helper.map.xfr"</SourceValue>
      <TargetValue reference="vars.mapping_ruleset" property="included_packages"/>
    </Assignment>
    <Assignment>
      <SourceValue reference="vars.mapping_ruleset"/>
      <TargetValue reference="proj.get.TRANSFORM_XFR"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">[vector "proj.get.START_DATE", "proj.get.END_DATE"]</SourceValue>
      <TargetValue reference="vars.mapping_ruleset" property="parameter_metadata_references"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">"start date"</SourceValue>
      <TargetValue reference="proj.get.START_DATE" property="business_name"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">"number"</SourceValue>
      <TargetValue reference="proj.get.START_DATE" property="business_type"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">if(!is_blank(proj.get.START_DATE)) (date("YYYYMMDD"))proj.get.START_DATE else (date("YYYYMMDD"))"19000101"</SourceValue>
      <TargetValue reference="proj.get.START_DATE" property="business_test_value"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">"end date"</SourceValue>
      <TargetValue reference="proj.get.END_DATE" property="business_name"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">"number"</SourceValue>
      <TargetValue reference="proj.get.END_DATE" property="business_type"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">if(!is_blank(proj.get.END_DATE)) (date("YYYYMMDD"))proj.get.END_DATE else (date("YYYYMMDD"))now1()</SourceValue>
      <TargetValue reference="proj.get.END_DATE" property="business_test_value"/>
    </Assignment>
  </AutomaticAssignments>
  <UserInterface>
    <Toolbar>
      <ToolbarExecuteButton>
        <ExecutionTarget reference="proj.get"/>
        <UseOpConsoleIfAvailable>false</UseOpConsoleIfAvailable>
        <ErrorMessage>You must save this configuration before running it.</ErrorMessage>
      </ToolbarExecuteButton>
    </Toolbar>
    <Canvas>
      <Label>Main</Label>
      <Column>
        <Box>
          <Visible is_expression="true"><![CDATA[ vars.errors != "" ]]></Visible>
          <Style>mainSource</Style>
          <Label>Appconf Naming Error</Label>
          <UIElements>
            <TextLabel>
              <Label is_expression="true">"&lt;b&gt;" + vars.errors + "&lt;/b&gt;\n" +
(string(""))(decimal(""))(string_filter(built_in, ".") != "..") + "\n" + 
(string(""))(decimal(""))(string_filter(built_in, ".") == "..." &amp;&amp; string_split(built_in, ".")[3] != "reduced") +
"\n" + string_filter(built_in, ".") + 
"\n" + string_split(built_in, ".")[3]</Label>
            </TextLabel>
          </UIElements>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label>IDS File Pattern</Label>
          <UIElements>
            <Spacer>
              <Width>100%</Width>
              <Height>25</Height>
            </Spacer>
            <TextInput>
              <Label>Source Logical Name</Label>
              <SourceTargetValue reference="proj.get.SUBJECT_AREA"/>
              <Description>This is the value which is used to evaluate dxf_source_sys_id. Please edit if required!</Description>
            </TextInput>
            <Spacer>
              <Width>100%</Width>
              <Height>5</Height>
            </Spacer>
            <CheckBox>
              <Label>Read Event Files</Label>
              <SourceTargetValue reference="proj.get.DO_READ_IDS_EVENT_FILE"/>
              <Description>Instead of reading the IDS file, you can also read the event files. Ticking this option allows you to read event files based on pattern. You can chose only insert event files or update event files or both by chosing the appropriate file format. Thirdly you can read event file based on watermark file.</Description>
            </CheckBox>
            <VerticalLayoutContainer>
              <UIElements>
                <TextLabel>
                  <Label>&lt;font color="#800080"&gt;&lt;b&gt;Pick only one option from below: &lt;/b&gt;&lt;/font&gt;</Label>
                  <Visible reference="proj.get.DO_READ_IDS_EVENT_FILE"/>
                </TextLabel>
                <CheckBox>
                  <Label>Pick Latest Event</Label>
                  <SourceTargetValue reference="proj.get.PICK_LATEST_EVENT_FILE"/>
                  <Visible reference="proj.get.DO_READ_IDS_EVENT_FILE"/>
                  <Description>This will only to read only the latest published event file based on the timestamp. If need to pick the event files on the basis of RUN_ID, parameter value for PICK_LATEST_EVENT_FILE will be false and adjust file pattern</Description>
                </CheckBox>
                <CheckBox>
                  <Label>Use Watermark File</Label>
                  <SourceTargetValue reference="proj.get.WATERMARK_REQUIRED"/>
                  <Visible reference="proj.get.DO_READ_IDS_EVENT_FILE"/>
                  <Description>This will pick all the files after the watermark timestamp till current time.</Description>
                </CheckBox>
              </UIElements>
            </VerticalLayoutContainer>
            <Spacer>
              <Width>100%</Width>
              <Height>10</Height>
            </Spacer>
            <TextLabel>
              <Label is_expression="true">"&lt;b&gt;File Pattern:&lt;/b&gt;\n" + proj.get.SOURCE_FILE_PATTERN</Label>
            </TextLabel>
            <Popup>
              <Label>Edit pattern...</Label>
              <Title/>
              <UIElements>
                <TextInput>
                  <Label>Edit the pattern</Label>
                  <SourceTargetValue reference="proj.get.SOURCE_FILE_PATTERN"/>
                </TextInput>
                <TextLabel>
                  <Label is_expression="true">"File listing: (The entries in green are the ones that match the entered pattern)"</Label>
                </TextLabel>
                <TextLabel>
                  <Label is_expression="true">highlight_matching_files(proj.get.IDS_DATA_PATH, vars.matching_files)</Label>
                </TextLabel>
                <TextLabel>
                  <Label>&lt;b&gt;Note:&lt;/b&gt; Archive files will also be read, because two-step lookup is enabled for this file.</Label>
                  <Visible reference="proj.get.READ_ARCHIVE_FILE"/>
                </TextLabel>
              </UIElements>
            </Popup>
            <Spacer>
              <Width>100%</Width>
              <Height>25</Height>
            </Spacer>
            <Popup>
              <Label>Define Input Record Format</Label>
              <Title/>
              <UIElements>
                <RecordFormat>
                  <Label>Input Record Format</Label>
                  <SourceTargetValue reference="get_dml_file"/>
                  <CanModifyBusinessAttributes>none</CanModifyBusinessAttributes>
                  <CanRemoveFields>false</CanRemoveFields>
                  <CanReorderFields>false</CanReorderFields>
                  <ShowSampleDataArea>False</ShowSampleDataArea>
                  <SourceIsCompressed>False</SourceIsCompressed>
                  <CanModifyFields>false</CanModifyFields>
                  <CanDiscover>false</CanDiscover>
                  <CanCreate>false</CanCreate>
                  <Style>mapping</Style>
                  <!--<CanEnterDMLMode>True</CanEnterDMLMode>-->
                  <AssociatedSharedFile reference="get_dml_file"/>
                  <SampleDataPath is_expression="true">proj.get.IDS_DATA_PATH + "/" + vars.matching_files[0]</SampleDataPath>
                </RecordFormat>
              </UIElements>
              <Style>mainSource</Style>
            </Popup>
            <Popup>
              <Label>Additional Fields DML (Optional)</Label>
              <Title/>
              <UIElements>
                <TextArea>
                  <Label>Additional Fields DML (Optional)</Label>
                  <SourceTargetValue reference="proj.get.ADDITIONAL_FIELDS_DML"/>
                </TextArea>
              </UIElements>
            </Popup>
            <Popup>
              <Label>Pick output fields (Optional)</Label>
              <Title/>
              <UIElements>
                <FieldPicker>
                  <IsKey>false</IsKey>
                  <Label>Field Picker</Label>
                  <RecordFormat reference="proj.get.GET_DML"/>
                  <SourceTargetValue reference="proj.get.USER_DEFINED_OUTPUT_FIELDS"/>
                </FieldPicker>
              </UIElements>
            </Popup>
          </UIElements>
          <Style>mainSource</Style>
          <Visible is_expression="true">vars.errors == ""</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label>Event File Option Error</Label>
          <UIElements>
            <TextLabel>
              <Label>&lt;font color="#C70039"&gt;&lt;b&gt;
Event File Option can either of the following and not both

1. Pick Latest Event
2. Use Watermark File

Use either of them.
&lt;/b&gt;&lt;/font&gt;</Label>
            </TextLabel>
          </UIElements>
          <Style>changes</Style>
          <Visible is_expression="true">if( proj.get.PICK_LATEST_EVENT_FILE member [vector "1", "True", "true"] and proj.get.WATERMARK_REQUIRED member [vector "1", "True", "true"] ) 
  1
else
  0</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label>Filter Records</Label>
          <UIElements>
            <Spacer>
              <Width>100%</Width>
              <Height>25</Height>
            </Spacer>
            <TextLabel>
              <Label is_expression="true">"&lt;b&gt;Filter Expression:&lt;/b&gt;\n" + proj.get.FILTER_EXPRESSION.pdl_expression</Label>
            </TextLabel>
            <Popup>
              <Label>Edit filter expression...</Label>
              <Title/>
              <UIElements>
                <ExpressionEditor>
                  <Label>Filter Expression</Label>
                  <RecordFormat reference="get_dml_file"/>
                  <SourceTargetValue reference="proj.get.FILTER_EXPRESSION" source_property="expression"/>
                  <Style>expressionEditor</Style>
                </ExpressionEditor>
              </UIElements>
            </Popup>
          </UIElements>
          <Style>reduction</Style>
          <Visible is_expression="true">vars.get_dml_present and not (proj.get.PICK_LATEST_EVENT_FILE member [vector "1", "True", "true"] and proj.get.WATERMARK_REQUIRED member [vector "1", "True", "true"] )</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label>Optional Transform</Label>
          <Visible is_expression="true">vars.get_dml_present and not (proj.get.PICK_LATEST_EVENT_FILE member [vector "1", "True", "true"] and proj.get.WATERMARK_REQUIRED member [vector "1", "True", "true"] )</Visible>
          <Style>mapping</Style>
          <UIElements>
            <BusinessRulesPopup>
              <Label>Option Transform BRE</Label>
              <Title>Optional Transform</Title>
              <SourceTargetValue reference="vars.mapping_ruleset"/>
            </BusinessRulesPopup>
            <Popup>
              <Label>Optional: Edit post filter expression...</Label>
              <Title/>
              <UIElements>
                <TextLabel>
                  <Label>This Filter Expression will be applied after dedup operation to pick latest records.</Label>
                </TextLabel>
                <ExpressionEditor>
                  <Label>Filter Expression</Label>
                  <RecordFormat is_expression="true">join_types(proj.get.ADDITIONAL_FIELDS_DML, proj.get.RMF_OUTPUT_DML)</RecordFormat>
                  <SourceTargetValue reference="proj.get.FILTER_AFTER_DEDUP_EXPR" source_property="expression"/>
                  <Style>expressionEditor</Style>
                </ExpressionEditor>
              </UIElements>
            </Popup>
            <TextLabel>
              <Label is_expression="true">"&lt;b&gt;Filter Expression:&lt;/b&gt;\n" + proj.get.FILTER_AFTER_DEDUP_EXPR.pdl_expression</Label>
            </TextLabel>
          </UIElements>
        </Box>
      </Column>
      <Column>
        <Box>
          <Visible is_expression="true">vars.errors == "" and vars.get_dml_present and not (proj.get.PICK_LATEST_EVENT_FILE member [vector "1", "True", "true"] and proj.get.WATERMARK_REQUIRED member [vector "1", "True", "true"] )</Visible>
          <Style>recval</Style>
          <Label>Output</Label>
          <UIElements>
            <CheckBox>
              <Label>Produce a Source File for Cleansing</Label>
              <SourceTargetValue reference="proj.get.DO_SOURCE"/>
              <TrueValue>1</TrueValue>
              <FalseValue>0</FalseValue>
            </CheckBox>
            <CheckBox>
              <Label>Skip Cleansing, and Produce a Clean File</Label>
              <SourceTargetValue reference="proj.get.DO_CLEAN"/>
              <TrueValue>1</TrueValue>
              <FalseValue>0</FalseValue>
            </CheckBox>
            <CheckBox>
              <Label>Skip Cleansing, and Produce a Lookup</Label>
              <SourceTargetValue reference="proj.get.DO_LOOKUP"/>
              <TrueValue>1</TrueValue>
              <FalseValue>0</FalseValue>
            </CheckBox>
            <TextLabel>
              <Visible is_expression="true">(decimal(""))proj.get.DO_SOURCE + (decimal(""))proj.get.DO_CLEAN + (decimal(""))proj.get.DO_LOOKUP != 1</Visible>
              <Label is_expression="true">bold("Note: Typically, only one of these should be selected.")</Label>
            </TextLabel>
          </UIElements>
        </Box>
        <Box>
          <Label>Lookup Fields and Key</Label>
          <UIElements>
            <TextLabel>
              <Label is_expression="true">"&lt;b&gt;Lookup Fields (Optional):&lt;/b&gt;\n" + proj.get.LOOKUP_FIELDS_KEY + "\n" +
"&lt;b&gt;Lookup Key:&lt;/b&gt;\n" + proj.get.LOOKUP_KEY</Label>
            </TextLabel>
            <Popup>
              <Label>Edit lookup fields(Optional)...</Label>
              <Title/>
              <UIElements>
                <FieldPicker>
                  <IsKey>false</IsKey>
                  <Label>Lookup Fields Picker</Label>
                  <RecordFormat is_expression="true">join_types(proj.get.ADDITIONAL_FIELDS_DML, proj.get.GET_DML)</RecordFormat>
                  <SourceTargetValue reference="vars.lkp_flds"/>
                </FieldPicker>
              </UIElements>
            </Popup>
            <Popup>
              <Label>Edit lookup key...</Label>
              <Title/>
              <UIElements>
                <KeyPicker>
                  <Label>Lookup Key</Label>
                  <RecordFormat reference="lookup_dml_file"/>
                  <SourceTargetValue reference="proj.get.LOOKUP_KEY"/>
                  <ShowOrderColumn>false</ShowOrderColumn>
                  <ShowSpecialColumn>true</ShowSpecialColumn>
                </KeyPicker>
              </UIElements>
            </Popup>
            <Popup>
              <Label>Edit Dedup Key (Optional)</Label>
              <Title/>
              <UIElements>
                <KeyPicker>
                  <Label>Select Dedup Keys</Label>
                  <RecordFormat reference="lookup_dml_file"/>
                  <SourceTargetValue reference="proj.get.EXTRA_DEDUP_SORT_KEY"/>
                </KeyPicker>
              </UIElements>
              <Style>key</Style>
            </Popup>
          </UIElements>
          <Style>sort</Style>
          <Visible is_expression="true">(decimal(""))proj.get.DO_LOOKUP and vars.get_dml_present and not (proj.get.PICK_LATEST_EVENT_FILE member [vector "1", "True", "true"] and proj.get.WATERMARK_REQUIRED member [vector "1", "True", "true"] )</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Visible is_expression="true">vars.get_dml_present and not (proj.get.PICK_LATEST_EVENT_FILE member [vector "1", "True", "true"] and proj.get.WATERMARK_REQUIRED member [vector "1", "True", "true"] )</Visible>
          <Style>mapping</Style>
          <Label>Testing</Label>
          <UIElements>
            <ExecuteButton>
              <Label>Remember: Save before you run.</Label>
              <ButtonLabel>Run Get</ButtonLabel>
              <SourceValue reference="proj.get"/>
            </ExecuteButton>
            <Popup>
              <Visible is_expression="true">proj.get.DO_CLEAN</Visible>
              <Label>View Clean File...</Label>
              <Style>validation</Style>
              <Title>View Output File</Title>
              <UIElements>
                <ViewData>
                  <RecordFormat is_expression="true">expand_type(read_type(proj.get.CLEAN_DML_FILE))</RecordFormat>
                  <SourceValue is_expression="true">proj.get.CLEAN_FILE_URL</SourceValue>
                  <SourceIsCompressed is_expression="true">ends_with(proj.get.CLEAN_FILE_URL, ".gz")</SourceIsCompressed>
                </ViewData>
              </UIElements>
            </Popup>
            <Popup>
              <Visible is_expression="true">proj.get.DO_LOOKUP</Visible>
              <Label>View Lookup File...</Label>
              <Style>validation</Style>
              <Title>View Lookup File</Title>
              <UIElements>
                <ViewData>
                  <RecordFormat is_expression="true">expand_type(read_type(proj.get.LOOKUP_DML_FILE))</RecordFormat>
                  <SourceValue is_expression="true">proj.get.LOOKUP_FILE_URL</SourceValue>
                </ViewData>
              </UIElements>
            </Popup>
            <Popup>
              <Visible is_expression="true">proj.get.DO_SOURCE</Visible>
              <Label>View Source File...</Label>
              <Style>validation</Style>
              <Title>View Source File</Title>
              <UIElements>
                <ViewData>
                  <RecordFormat is_expression="true">expand_type(read_type(proj.get.SOURCE_DML_FILE))</RecordFormat>
                  <SourceValue is_expression="true">proj.get.SOURCE_FILE_URL</SourceValue>
                  <SourceIsCompressed is_expression="true">ends_with(proj.get.SOURCE_FILE_URL, ".gz")</SourceIsCompressed>
                </ViewData>
              </UIElements>
            </Popup>
          </UIElements>
        </Box>
      </Column>
    </Canvas>
    <Tab>
      <Label>Get PSET</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true">"&lt;b&gt;" + proj.get.PROJECT_DIR + "/" + proj.get.relative_path + "&lt;/b&gt;"</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
        <TextLabel>
          <Label is_expression="true">read_file(proj.get.PROJECT_DIR + "/" + proj.get.relative_path)</Label>
        </TextLabel>
      </UIElements>
    </Tab>
    <Tab>
      <Label>Get DML</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true">"&lt;b&gt;" + proj.get.GET_DML_FILE + "&lt;/b&gt;"</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
        <TextLabel>
          <Width>1000</Width>
          <Label is_expression="true">proj.get.GET_DML</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
      </UIElements>
    </Tab>
    <Tab>
      <Visible is_expression="true">proj.get.DO_SOURCE != "0" and source_dml_file.path != ""</Visible>
      <Label>Source DML</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true">bold(source_dml_file.resolved_path)</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
        <TextLabel>
          <Width>1000</Width>
          <Label is_expression="true">fixed_font(source_dml_file.contents)</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
      </UIElements>
    </Tab>
    <Tab>
      <Visible is_expression="true">proj.get.DO_CLEAN != "0" and clean_dml_file.path != ""</Visible>
      <Label>Clean DML</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true">bold(clean_dml_file.resolved_path)</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
        <TextLabel>
          <Width>1000</Width>
          <Label is_expression="true">fixed_font(clean_dml_file.contents)</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
      </UIElements>
    </Tab>
    <Tab>
      <Visible is_expression="true">proj.get.DO_LOOKUP != "0" and lookup_dml_file.path != ""</Visible>
      <Label>Lookup DML</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true">bold(lookup_dml_file.resolved_path)</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
        <TextLabel>
          <Width>1000</Width>
          <Label is_expression="true">fixed_font(lookup_dml_file.contents)</Label>
          <ReadOnly>true</ReadOnly>
        </TextLabel>
      </UIElements>
    </Tab>
    <Tab>
      <Label>Help</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true">'&lt;font size="14 pt"&gt;&lt;b&gt;Source:&lt;/b&gt;\n' + '
Get.ids is a step in integration layer using which, you can read files present in IDS layer. Using this users can create source, clean or lookup file as output.

Users can read IDS, Reduced IDS &amp; Event files which are created in LOAD.IDS step.

To read reduced file, the configuration must be simply created with the name &lt;i&gt;get.source_system&gt;.&lt;source_entity.reduced&lt;/i&gt;. Doing so will allow the graph to read from reduced IDS file which is created by the load step.

For picking latest event files&lt;i&gt;Tick Pick Latest Event&lt;/i&gt;, This will only to read only the latest published event file based on the timestamp. If need to pick the event files on the basis of RUN_ID, parameter value for PICK_LATEST_EVENT_FILE will be false and adjust file pattern.

For picking event files based on watermark file, please store the timestamp in watermark in format YYYYMMDDHH24MISS and it will pick all the files till current timestamp.

&lt;i&gt;Note: Reduced files are often very large, please get your design reviewed by AICOE before proceeding with development.&lt;/i&gt;

' + '&lt;/font&gt;'</Label>
        </TextLabel>
      </UIElements>
    </Tab>
  </UserInterface>
</AppConfTempl>