<AppConfTempl name="zz[DEPRECATED] Register Distribution Database Targets (Distribution ILM Events)" version="5" xsi:noNamespaceSchemaLocation="appconf_template.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ProjectRPath client_projects="all">/Projects/aicoe/pub_dxf</ProjectRPath>
  <TemplateExpressionPackage>include "$PUB_DXF_XFR/ids/ids_table_properties.xfr";
include "$PUB_DXF_DML/event/event_registration.dml";

out :: get_name(str)=
begin
  let string("\x01")[] words = string_split_no_empty(str, ".");
  let string("\x01") answer = "";
  if(length_of(words) == 3 and words[0] == "register" and words[1] == "ilm" and re_replace(words[1], "[A-Za-z0-9_]", "") == "")
    answer = words[2];
  out :: answer;
end;

out :: get_all_table_mappings(grid)=
begin
  let string("\x01") result_string = "";
  for(let map in grid)
  begin
    result_string = result_string + map.mart + "[" + map.table + "] -- " + map.ids_table + "\n";
  end
  
  out :: result_string;
end;

out :: get_registration_header()=
begin
  let fields = record_info_item(expand_type(read_type($PUB_DXF_DML + "/event/event_registration.dml")), "name");
  let string("") header = "#" + string_join(fields, "|");
  out :: header;
end;

out :: get_record_representations(grid)=
begin
  let event_registration_type registration;
  let string("") content = "";
  for(let reg in grid)
  begin
    registration = [record
                     data_mart reg.mart,
                     table_name reg.table,
                     load_sequence reg.sequence,
                     load_frequency reg.load_frequency,
                     channel_id reg.channel_id,
                     ids_table_name reg.ids_table,
                     combine_strategy reg.combine_strategy
                   ];
    content = content + reinterpret_as(string("\n"), registration) + "\n";
  end

  out :: content;
end;</TemplateExpressionPackage>
  <Metadata>
    <Project name="proj">
      <Pset name="empty" prototype_path="${PUB_DXF_MP}/empty.mp">
        <PdlExpression name="AI_DML" expression="$AI_DML"/>
        <PdlExpression name="AI_META" expression="$AI_META"/>
      </Pset>
    </Project>
    <Variables name="vars">
      <Variable name="data_mart_name" type="string"/>
      <Variable name="data_mart_description" type="string"/>
      <ListVariable name="event_registration_grid" type="compound">
        <Variable name="mart" type="string"/>
        <Variable name="table" type="string"/>
        <Variable name="sequence" type="integer"/>
        <Variable name="load_frequency" type="string"/>
        <Variable name="channel_id" type="integer"/>
        <Variable name="ids_table" type="string"/>
        <Variable name="combine_strategy" type="string"/>
      </ListVariable>
      <Variable name="error" type="string"/>
    </Variables>
    <SharedFile name="event_registration" path="" is_appconf_owned="true"/>
  </Metadata>
  <AutomaticAssignments>
    <Assignment name="Get data mart name from config name">
      <SourceValue is_expression="true">get_name(built_in)</SourceValue>
      <TargetValue reference="vars.data_mart_name"/>
    </Assignment>
    <Assignment on_load_only="true">
      <SourceValue is_expression="true">proj.empty.AI_META + "/event_registration.ilm." + vars.data_mart_name + ".dat"</SourceValue>
      <TargetValue reference="event_registration" property="path"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">get_registration_header() + "\n" +
get_record_representations(vars.event_registration_grid)</SourceValue>
      <TargetValue reference="event_registration"/>
    </Assignment>
    <Assignment>
      <SourceValue is_expression="true">0</SourceValue>
      <TargetValue reference="proj.empty" property="save_pset"/>
    </Assignment>
    <Assignment name="Configuration Name Check">
      <SourceValue is_expression="true"><![CDATA[if(length_of(string_split_no_empty(built_in.configuration_name,".")) != 3)
  "Configuration should be named like <i>register.ilm.datamartname</i>\n" +
  "Close and recreate configuration"
else if(!starts_with(built_in.configuration_name,"register.ilm."))
  "Configuration should begin with <i>register.ilm</i>\n" +
  "Close and recreate configuration"
else if(re_replace(string_split_no_empty(built_in.configuration_name,".")[2], "[A-Za-z0-9_]", "") != "" )
  "Please remove invalid characters from datamart name\n" +
  "Close and recreate configuration"
else
  ""]]></SourceValue>
      <TargetValue reference="vars.error"/>
    </Assignment>
  </AutomaticAssignments>
  <UserInterface>
    <Canvas>
      <Label>Settings</Label>
      <Column>
        <Box>
          <Label reference="vars.error"/>
          <UIElements/>
          <Style>mainSource</Style>
          <Visible is_expression="true">vars.error != ""</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label is_expression="true"><![CDATA["<b>Data Mart Name: </b>" + vars.data_mart_name]]></Label>
          <UIElements>
            <TextLabel>
              <Label is_expression="true"><![CDATA["<b>Data Mart Description:\n</b>" + vars.data_mart_description]]></Label>
            </TextLabel>
            <Popup>
              <Label>Edit data mart description...</Label>
              <Title/>
              <UIElements>
                <TextArea>
                  <Label>Edit data mart description</Label>
                  <SourceTargetValue reference="vars.data_mart_description"/>
                </TextArea>
              </UIElements>
            </Popup>
          </UIElements>
          <Style>mainSource</Style>
          <Visible is_expression="true">vars.error == ""</Visible>
        </Box>
      </Column>
      <Column>
        <Box>
          <Label>IDS to Target Table Mapping</Label>
          <UIElements>
            <TextLabel>
              <Label>To edit mapping information, go to "Edit Table Mappings" tab</Label>
            </TextLabel>
            <TextLabel>
              <Label is_expression="true"><![CDATA["<b>Mappings:</b>\n" +
if(length_of(vars.event_registration_grid))
  string_replace(get_all_table_mappings(vars.event_registration_grid), "--", "<--")
else
  "<None>"]]></Label>
            </TextLabel>
          </UIElements>
          <Style>mainSource</Style>
          <Visible is_expression="true">vars.error == ""</Visible>
        </Box>
      </Column>
    </Canvas>
    <Tab>
      <Label>Edit Table Mappings</Label>
      <UIElements>
        <TextLabel>
          <Label><![CDATA[<font color="#0000FF"><b>HINT:</b> If copying and pasting from <b>Excel</b>, select the right number of columns in ONE row of the grid, and then paste. All copied excel rows will be pasted from that row down. To insert additional rows while pasting, add a new row, then select appropriate colimns in that row before pasting.</font>]]></Label>
        </TextLabel>
        <DataGrid>
          <ColumnMetadata>
            <Column data_field="mart">
              <HeaderText>Data Mart</HeaderText>
            </Column>
            <Column data_field="table">
              <HeaderText>Target Table</HeaderText>
            </Column>
            <Column data_field="sequence">
              <HeaderText>Load Sequence</HeaderText>
              <DefaultValue>1</DefaultValue>
            </Column>
            <Column data_field="load_frequency">
              <HeaderText>Load Frequency</HeaderText>
              <DefaultValue>D</DefaultValue>
              <Choices>
                <ConstantValue>D</ConstantValue>
                <ConstantValue>M</ConstantValue>
                <ConstantValue>O</ConstantValue>
              </Choices>
              <ChoiceDisplayNames>
                <ConstantValue>Daily</ConstantValue>
                <ConstantValue>Monthly</ConstantValue>
                <ConstantValue>OnDemand</ConstantValue>
              </ChoiceDisplayNames>
            </Column>
            <Column data_field="channel_id">
              <HeaderText>Channel ID</HeaderText>
              <DefaultValue>1</DefaultValue>
              <ReadOnly>true</ReadOnly>
            </Column>
            <Column data_field="ids_table">
              <HeaderText>Source Name</HeaderText>
              <BlankValueDisplayName><![CDATA[<Select>]]></BlankValueDisplayName>
            </Column>
            <Column data_field="combine_strategy">
              <HeaderText>Combine Strategy</HeaderText>
              <Choices>
                <ConstantValue>Keep all changes</ConstantValue>
                <ConstantValue>Keep latest change</ConstantValue>
              </Choices>
              <DefaultValue>Keep all changes</DefaultValue>
            </Column>
          </ColumnMetadata>
          <Label>Data Grid</Label>
          <SourceTargetValue reference="vars.event_registration_grid"/>
        </DataGrid>
      </UIElements>
    </Tab>
    <Tab>
      <Label>Table Mappings File</Label>
      <UIElements>
        <TextLabel>
          <Label is_expression="true"><![CDATA["<b>" + event_registration.path + "</b>"]]></Label>
        </TextLabel>
        <TextLabel>
          <Label reference="event_registration"/>
        </TextLabel>
      </UIElements>
    </Tab>
  </UserInterface>
</AppConfTempl>
